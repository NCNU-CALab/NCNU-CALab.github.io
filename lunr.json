{"index":{"version":"2.1.0","fields":["title","body"],"fieldVectors":[["title/index.html",[0,3.236]],["body/index.html",[0,4.937,1,5.219]],["title/index.html#Index-Page",[0,2.404,1,2.541]],["body/index.html#Index-Page",[]],["title/c/c-intro.html",[2,0.641,3,0.029]],["body/c/c-intro.html",[2,1.524,3,0.077,4,0.244,5,0.283,6,0.262,7,0.307,8,0.281,9,0.329,10,0.362,11,0.401,12,0.419,13,0.347,14,0.408,15,0.467,16,0.467,17,0.497,18,0.528,19,0.693,20,4.019,21,3.876,22,0.656,23,1.788,24,0.789,25,2.733,26,3.867,27,5.523,28,3.867,29,4.084,30,3.867,31,1.039,32,0.761,33,7.956,34,5.148,35,3.867,36,2.571,37,2.856,38,2.116,39,2.678,40,3.121,41,3.867,42,2.241,43,4.457,44,3.867,45,3.121,46,1.403,47,5.523,48,3.867,49,0.98,50,2.241,51,3.095,52,2.575,53,2.432,54,1.932,55,2.678,56,0.415,57,3.867,58,2.241,59,3.417,60,0.463,61,0.451,62,0.451,63,0.439,64,0.541,65,0.554,66,0.61,67,0.625,68,0.655,69,0.64,70,0.686,71,0.702,72,0.702,73,0.735,74,0.77,75,0.77,76,0.805,77,0.805,78,0.824,79,1.578,80,1.371,81,3.867,82,1.999,83,3.867,84,2.899,85,3.867,86,2.339,87,2.899,88,3.867,89,3.867,90,1.703,91,2.722,92,4.457,93,3.867,94,2.339,95,1.755,96,1.755,97,1.932,98,1.443,99,1.305,100,1.305,101,1.305,102,3.867,103,1.608,104,1.443,105,1.608,106,1.81,107,1.703,108,2.233,109,1.999,110,3.888,111,2.073,112,2.727,113,2.241,114,0.408,115,3.867,116,2.314,117,1.032,118,2.339,119,3.417,120,4.282,121,2.722,122,1.124,123,3.867,124,2.241,125,3.984,126,2.556,127,3.867,128,1.543,129,3.867,130,3.498,131,3.417,132,4.081,133,2.899,134,3.121,135,3.867,136,5.693,137,5.693,138,2.925,139,5.693,140,2.314,141,5.693,142,2.623,143,4.88,144,4.88,145,3.417,146,3.417,147,3.417,148,3.417,149,3.417,150,3.417,151,3.404,152,1.819,153,4.88,154,3.417,155,4.88,156,5.795,157,2.575,158,4.88,159,3.417,160,4.457,161,4.88,162,2.278,163,2.759,164,4.88,165,3.417,166,2.722,167,2.073,168,2.153,169,3.417,170,2.722,171,3.417,172,3.417,173,3.417,174,3.417,175,3.417,176,3.417]],["title/c/c-intro.html#常用的-IO-函數",[130,1.819,177,2.871,178,2.153]],["body/c/c-intro.html#常用的-IO-函數",[2,1.372,3,0.076,4,0.208,5,0.299,6,0.276,7,0.266,8,0.281,9,0.329,10,0.362,11,0.417,12,0.442,13,0.298,19,0.693,20,3.289,21,3.289,22,0.598,23,1.573,24,0.652,29,4.134,32,0.749,114,0.408,120,4.566,125,4.361,126,2.812,130,3.498,131,4.879,132,4.895,133,4.14,136,6.829,137,6.829,138,3.306,139,6.829,140,2.515,141,6.829,142,3.037,143,6.209,144,6.209,145,4.879,146,4.879,147,4.879,148,4.879,149,4.879,150,4.879,151,3.782,152,2.314,153,6.209,154,4.879,155,6.209,156,6.438,157,3.678,158,6.209,159,4.879,160,5.67,161,6.209,162,2.575,163,3.51,164,6.209,165,4.879,166,3.888,167,2.96,168,3.074,169,4.879,170,3.888,171,4.879,172,4.879,173,4.879,174,4.879,175,4.879,176,4.879,178,4.14,179,5.522,180,5.522,181,5.522,182,5.522,183,2.765,184,5.522,185,5.522,186,5.522,187,5.522,188,5.522,189,5.522,190,5.522,191,5.522,192,3.888,193,5.522,194,5.522,195,5.522,196,5.522,197,4.143,198,5.522,199,7.027,200,5.522,201,5.522,202,5.522,203,5.522,204,5.522,205,4.456,206,4.14,207,7.729,208,7.027,209,7.027,210,5.522,211,5.522,212,5.522,213,5.522,214,5.522,215,5.522,216,7.027,217,5.522,218,5.522,219,5.522,220,8.4,221,5.522,222,7.027,223,7.729,224,5.522,225,7.729,226,5.522,227,5.522,228,5.522,229,5.522,230,7.027,231,5.522,232,5.522,233,5.522,234,5.522,235,5.522,236,5.522,237,5.522,238,5.522,239,7.027,240,5.522,241,5.522,242,5.522,243,5.522,244,5.522,245,7.041,246,5.522]],["title/c/system-intro.html",[3,0.039]],["body/c/system-intro.html",[2,0.971,3,0.077,4,0.252,5,0.335,6,0.28,7,0.338,8,0.361,9,0.396,10,0.451,11,0.475,12,0.428,13,0.494,14,0.59,15,0.614,16,0.559,17,0.492,18,0.523,19,0.74,23,1.754,24,0.272,25,2.525,32,0.808,38,2.351,42,1.697,49,0.971,50,4.994,51,1.98,62,0.342,63,0.333,69,0.485,72,1.363,79,0.837,87,2.196,103,1.218,105,1.218,117,1.199,118,1.772,119,2.588,122,0.596,130,1.855,138,1.153,140,0.877,152,1.48,162,1.88,247,2.588,248,3.164,249,2.929,250,2.363,251,1.57,252,4.414,253,4.048,254,1.951,255,2.588,256,2.196,257,2.062,258,3.627,259,2.363,260,2.588,261,3.164,262,3.886,263,2.929,264,1.57,265,2.062,266,2.929,267,2.929,268,3.972,269,1.697,270,2.409,271,2.588,272,2.196,273,2.929,274,2.588,275,2.363,276,2.588,277,0.652,278,2.588,279,2.929,280,2.929,281,1.39,282,0.988,283,1.065,284,1.635,285,2.847,286,2.588,287,3.972,288,2.192,289,1.772,290,1.631,291,2.929,292,2.932,293,2.588,294,2.588,295,2.588,296,2.588,297,1.564,298,2.588,299,1.594,300,2.588,301,0.61,302,2.588,303,3.972,304,2.363,305,2.588,306,2.363,307,5.847,308,3.972,309,1.631,310,0.682,311,2.588,312,2.588,313,2.588,314,3.627,315,2.588,316,2.588,317,3.972,318,2.588,319,3.627,320,2.588,321,3.972,322,3.627,323,2.588,324,2.588,325,2.588,326,2.588,327,2.588,328,2.588,329,2.588,330,3.972,331,0.898,332,1.631,333,5.421,334,3.972,335,2.588,336,2.588,337,2.588,338,1.855,339,2.588,340,2.847,341,4.414,342,3.972,343,4.407,344,2.363,345,2.196,346,2.588,347,2.588,348,2.588,349,2.588,350,3.972,351,2.588,352,2.588,353,2.588,354,2.588,355,2.588,356,2.588,357,2.588,358,3.972,359,1.951,360,2.588,361,3.972,362,3.972,363,2.588,364,2.062,365,2.363,366,2.588,367,2.588,368,0.532,369,2.588,370,2.588,371,2.929,372,2.588,373,1.855,374,2.588,375,2.929,376,3.972,377,1.227,378,1.637,379,2.245,380,2.929,381,2.588,382,3.627,383,2.104,384,5.847,385,2.588,386,4.659,387,6.135,388,5.421,389,2.929,390,2.929,391,2.929,392,2.929,393,2.929,394,2.929,395,2.588,396,2.929,397,2.929,398,2.929,399,3.37,400,1.329,401,2.588,402,2.588,403,1.631,404,1.951,405,2.588,406,2.588,407,1.122,408,2.588,409,2.588,410,2.588,411,2.588,412,2.929,413,2.588,414,2.588,415,2.588,416,2.588,417,2.588,418,2.588,419,2.588,420,2.588,421,0.988,422,3.972,423,3.972,424,2.588,425,2.588,426,2.588,427,2.929,428,2.062,429,2.588,430,2.929,431,2.929,432,4.833,433,2.588,434,2.588,435,2.588,436,2.929,437,3.972,438,2.196,439,1.98,440,2.588,441,3.972,442,1.892,443,2.929,444,3.045,445,1.678,446,2.588,447,1.631,448,2.588,449,2.062,450,1.772,451,2.588,452,2.588,453,2.588]],["title/c/system-intro.html#硬體元件",[454,4.859]],["body/c/system-intro.html#硬體元件",[3,0.056,24,0.654,87,5.279,197,3.774,250,5.682,251,3.774,252,6.935,253,5.21,254,4.689,255,6.221,256,5.279,257,4.957,258,5.682,259,5.682,260,6.221,261,4.957,262,4.459,264,3.774,265,4.957,268,6.221,455,7.04,456,7.04,457,7.04,458,7.04,459,7.04,460,7.04,461,7.04,462,7.04,463,7.04,464,7.04,465,7.04,466,7.04,467,7.04,468,7.04,469,7.04,470,7.04,471,7.04,472,7.04,473,7.04,474,7.04,475,7.04,476,7.04,477,7.04]],["title/c/system-intro.html#軟體元件",[478,4.859]],["body/c/system-intro.html#軟體元件",[42,4.202,79,2.072,118,4.385,183,2.853,261,5.104,262,5.246,269,4.202,270,3.193,271,6.406,272,5.436,274,6.406,275,5.851,276,6.406,479,7.25,480,7.25,481,7.25,482,7.25,483,7.25,484,7.25,485,7.25,486,7.25]],["title/c/system-intro.html#數字系統",[487,4.859]],["body/c/system-intro.html#數字系統",[2,0.979,3,0.077,4,0.254,5,0.337,6,0.283,7,0.347,8,0.369,9,0.414,10,0.464,11,0.49,12,0.426,13,0.497,14,0.627,15,0.672,16,0.627,17,0.579,18,0.616,19,0.784,23,1.429,32,0.813,38,2.69,49,0.685,50,4.866,62,0.45,63,0.438,69,0.639,103,1.604,105,1.604,117,1.471,122,0.785,130,2.444,183,1.518,197,2.068,253,2.236,270,1.699,278,3.409,281,0.768,282,1.302,283,1.403,284,2.006,285,3.492,286,3.409,287,3.409,288,2.424,289,2.334,290,2.148,292,3.449,293,3.409,294,3.409,295,3.409,296,3.409,297,1.406,298,3.409,299,1.955,300,3.409,301,0.803,302,3.409,303,4.872,304,3.113,305,3.409,306,3.113,307,6.562,308,4.872,309,2.148,310,0.899,311,3.409,312,3.409,313,3.409,314,3.113,315,3.409,316,3.409,317,4.872,318,3.409,319,3.113,320,3.409,321,4.872,322,3.113,323,3.409,324,3.409,325,3.409,326,3.409,327,3.409,328,3.409,329,3.409,330,4.872,331,1.183,332,2.148,333,6.203,334,4.872,335,3.409,336,3.409,337,3.409,338,2.444,339,3.409,340,3.492,341,4.449,342,3.409,343,4.285,344,3.113,345,2.892,346,3.409,347,3.409,348,3.409,349,3.409,350,4.872,351,3.409,352,3.409,353,3.409,354,3.409,355,3.409,356,3.409,357,3.409,358,4.872,359,2.569,360,3.409,361,4.872,362,4.872,363,3.409,364,2.716,365,3.113,366,3.409,367,3.409,368,0.701,369,3.409,370,3.409,372,3.409,374,3.409,488,3.858,489,3.858,490,3.858,491,3.858,492,3.858,493,3.858,494,3.858,495,3.858,496,3.858,497,3.858,498,3.409,499,3.858,500,3.858,501,3.858,502,3.858,503,3.858,504,3.858,505,3.858,506,5.513,507,3.858,508,3.858,509,3.858,510,3.858,511,3.858,512,5.665,513,3.858,514,3.858,515,5.513,516,3.858,517,3.858,518,3.858,519,3.858,520,3.409,521,5.513,522,3.858,523,3.858,524,3.858,525,3.858,526,3.858,527,3.858,528,3.409,529,3.858,530,3.858,531,3.409,532,3.858,533,3.858,534,3.858,535,3.858,536,3.409,537,3.858,538,3.858,539,3.858,540,3.858,541,3.858,542,3.858,543,1.751,544,3.858,545,5.513,546,3.858,547,3.858,548,2.716,549,3.858,550,6.434,551,3.409,552,3.858,553,3.858,554,3.409,555,3.858,556,3.858,557,5.513,558,3.858,559,3.858,560,3.858,561,3.858,562,3.858,563,3.858,564,3.858,565,3.858,566,3.858,567,2.569,568,3.858,569,5.513,570,3.858,571,3.858,572,3.858,573,3.858,574,3.858,575,3.858,576,2.569,577,3.858,578,3.858,579,3.858,580,3.858,581,3.858,582,1.604,583,3.858,584,3.858,585,3.858,586,3.858,587,3.858,588,3.858,589,3.858,590,3.858,591,3.858,592,3.858,593,3.858,594,3.858,595,3.858,596,3.858,597,3.858]],["title/c/system-intro.html#如何表示整數資料",[598,4.859]],["body/c/system-intro.html#如何表示整數資料",[3,0.076,4,0.246,5,0.253,6,0.264,12,0.435,13,0.489,23,1.871,25,2.85,32,0.68,50,5.079,72,1.611,183,3.069,281,1.631,314,4.544,319,4.544,376,6.286,377,1.942,378,2.081,379,2.507,381,4.975,382,5.741,384,6.891,385,4.975,386,5.491,388,4.975,395,4.975,399,5.334,400,2.555,401,4.975,402,4.975,403,3.135,404,3.75,405,4.975,406,4.975,407,2.157,408,4.975,409,4.975,410,4.975,411,4.975,413,4.975,414,4.975,415,4.975,548,3.964,582,3.243,599,5.63,600,5.63,601,5.63,602,5.63,603,5.63,604,5.63,605,5.63,606,5.63,607,4.975,608,5.63,609,5.63,610,5.63,611,4.975,612,5.63,613,7.799,614,5.63,615,7.114,616,5.63,617,5.63,618,5.63,619,5.63,620,5.63,621,5.63,622,5.63,623,5.63,624,5.63,625,5.63,626,5.63,627,5.63,628,5.63,629,5.63,630,5.63,631,5.63,632,5.63,633,5.63,634,5.63,635,5.63,636,5.63,637,5.63,638,5.63,639,5.63,640,5.63,641,5.63,642,6.286,643,5.63,644,5.63,645,5.63,646,5.63,647,5.63,648,7.114,649,5.63,650,7.114,651,5.63,652,7.799,653,5.63,654,5.63,655,5.63,656,5.63,657,5.63,658,5.63,659,7.114,660,8.193,661,5.63,662,7.114,663,8.866,664,5.63,665,5.63,666,5.63,667,5.63,668,5.63,669,5.63,670,5.63,671,7.114,672,5.63,673,5.63,674,5.63,675,5.63,676,5.63,677,5.63,678,5.63,679,5.63,680,5.63,681,5.63,682,5.63,683,5.63,684,4.975,685,5.63,686,5.63,687,5.63,688,5.63,689,5.63,690,5.63,691,5.63,692,5.63,693,5.63,694,5.63,695,4.975,696,5.63,697,7.114,698,5.63,699,5.63,700,5.63,701,5.63,702,5.63]],["title/c/system-intro.html#浮點數表示法",[703,4.859]],["body/c/system-intro.html#浮點數表示法",[2,1.113,3,0.074,4,0.205,5,0.315,6,0.196,13,0.338,32,0.795,49,1.35,138,2.467,140,1.877,152,2.504,162,1.922,183,2.992,197,3.36,205,5.059,297,1.939,322,5.059,383,2.934,416,5.539,417,5.539,418,5.539,419,5.539,420,5.539,421,2.116,422,6.718,423,6.718,424,5.539,425,5.539,426,5.539,428,4.414,429,5.539,432,7.231,433,5.539,434,5.539,435,5.539,437,6.718,438,4.7,440,5.539,441,6.718,442,2.831,444,4.556,445,2.838,446,5.539,447,3.49,448,5.539,449,4.414,450,3.792,451,5.539,452,5.539,453,5.539,642,7.518,704,6.269,705,6.269,706,6.269,707,6.269,708,6.269,709,6.269,710,6.269,711,6.269,712,6.269,713,6.269,714,6.269,715,6.269,716,6.269,717,6.269,718,6.269,719,6.269,720,6.269,721,6.269,722,6.269,723,6.269,724,6.269,725,6.269,726,6.269,727,6.269,728,6.269,729,6.269,730,6.269,731,6.269,732,6.269,733,6.269,734,6.269,735,6.269,736,6.269,737,6.269,738,6.269,739,6.269,740,6.269,741,6.269,742,5.539,743,6.269,744,6.269,745,7.603,746,8.86,747,7.603,748,7.603,749,6.269,750,6.269,751,6.269,752,6.269,753,6.269,754,6.269,755,6.269,756,7.603,757,6.269,758,6.269,759,6.269,760,6.269,761,6.269,762,6.269,763,5.539]],["title/c/system-operation.html",[3,0.039]],["body/c/system-operation.html",[0,2.974,2,1.518,3,0.077,4,0.235,6,0.191,7,0.231,8,0.244,12,0.359,24,0.646,25,1.435,31,0.624,32,0.533,36,2.71,37,3.869,38,3.315,39,2.894,40,3.603,42,2.588,43,6.529,45,5.617,53,1.967,54,3.051,79,2.688,87,3.348,90,2.69,104,1.667,109,2.309,157,2.974,250,3.603,251,3.731,252,6.684,253,4.689,254,4.984,257,4.3,258,3.603,259,6.529,262,4.963,264,4.44,265,5.268,270,2.69,281,0.889,364,3.144,379,2.808,764,1.91,765,4.465,766,4.465,767,4.465,768,6.844,769,3.946,770,3.603,771,2.309,772,4.465,773,4.465,774,4.465,775,4.465,776,4.465,777,4.465,778,2.828,779,4.465,780,2.828,781,3.946,782,3.946,783,5.696,784,5.218,785,4.465,786,7.781,787,4.465,788,4.465,789,4.465,790,4.465,791,4.465,792,8.124,793,3.946,794,4.465,795,4.465,796,4.465,797,4.465,798,4.465,799,3.158,800,3.158,801,3.946,802,1.806,803,4.465,804,4.465,805,4.465,806,3.946,807,6.15,808,3.946,809,2.886,810,3.274,811,3.946,812,3.946,813,3.946,814,4.465,815,4.465,816,5.396,817,3.946,818,4.3,819,4.984,820,3.738,821,6.15,822,3.946,823,3.946,824,4.579,825,3.946,826,3.946,827,2.394,828,1.91,829,3.946,830,2.701,831,2.026,832,5.396,833,6.15,834,6.612,835,2.09,836,2.701,837,3.946,838,5.396,839,3.946,840,3.946,841,5.396,842,3.946,843,3.946,844,3.946,845,6.15,846,4.465,847,3.946,848,3.946,849,3.946,850,4.465]],["title/c/system-operation.html#虛擬機器的指令集",[851,4.859]],["body/c/system-operation.html#虛擬機器的指令集",[3,0.062,4,0.226,6,0.17,7,0.206,8,0.218,12,0.359,24,0.647,25,1.755,31,0.763,32,0.476,53,2.404,54,3.484,79,2.663,90,3.072,109,2.822,253,4.042,262,4.418,264,4.589,265,5.412,379,2.902,684,4.823,768,6.888,781,4.823,782,4.823,783,5.893,784,5.763,786,7.977,792,8.219,793,4.823,799,2.822,800,2.822,801,4.823,802,2.207,806,4.823,807,6.792,808,4.823,809,3.003,810,3.739,811,4.823,812,4.823,813,4.823,816,6.163,852,5.458,853,5.458,854,5.458,855,5.458,856,5.458,857,5.458,858,5.458,859,5.458,860,5.458,861,5.458,862,5.458,863,5.458,864,5.458,865,5.458,866,5.458,867,5.458,868,5.458,869,5.458,870,5.458,871,5.458,872,9.076,873,5.458,874,8.37,875,5.458,876,7.158,877,5.458,878,5.458,879,5.458,880,5.458,881,8.1,882,5.458,883,5.458,884,5.458,885,5.458,886,6.974,887,5.458,888,5.458,889,5.458,890,5.458,891,5.458,892,5.458,893,5.458,894,5.458,895,5.458,896,5.458,897,5.458,898,5.458,899,5.458,900,5.458,901,5.458,902,5.458,903,5.458,904,5.458,905,5.458,906,7.686,907,5.458,908,5.458,909,5.458,910,5.458,911,5.458,912,5.458,913,5.458,914,5.458,915,5.458,916,5.458,917,5.458,918,5.458,919,5.458,920,5.458,921,5.458,922,5.458,923,5.458,924,7.579,925,8.56,926,8.37,927,7.686,928,5.458,929,5.458,930,5.458,931,6.974,932,6.974,933,5.458,934,4.404,935,5.458,936,4.823,937,5.458,938,5.458,939,5.458,940,5.458,941,6.974,942,6.974,943,5.458,944,5.458,945,5.458,946,5.458,947,5.458,948,5.458,949,5.458,950,5.458,951,5.458,952,5.458,953,5.458,954,5.458]],["title/c/system-operation.html#Software-development-process",[251,1.539,817,2.537,818,2.022]],["body/c/system-operation.html#Software-development-process",[2,1.617,3,0.071,4,0.229,36,3.013,37,4.395,38,3.49,39,3.156,40,5.045,42,3.623,43,7.145,45,6.596,157,4.163,183,2.46,270,3.343,364,4.401,512,5.045,567,4.163,576,4.163,818,4.401,819,5.661,820,4.246,821,7.222,822,5.524,823,5.524,824,4.687,825,5.524,826,5.524,827,3.351,828,2.123,829,5.524,830,3.781,831,2.837,832,5.524,833,7.222,834,7.511,835,2.926,836,3.781,837,5.524,838,6.707,839,5.524,840,5.524,841,6.707,842,5.524,843,5.524,844,5.524,845,7.222,847,5.524,848,5.524,849,5.524,955,6.251,956,6.251,957,6.251,958,6.251,959,6.251,960,6.251,961,6.707,962,6.251,963,6.251,964,6.251,965,6.251,966,6.251,967,5.524,968,6.251,969,6.251,970,6.251,971,6.251,972,6.251,973,6.251,974,6.251,975,6.251,976,6.251,977,6.251,978,6.251,979,6.251,980,6.251,981,6.251,982,5.045,983,6.251,984,6.251,985,6.251,986,6.251,987,6.251,988,6.251,989,6.251,990,6.251,991,6.251,992,6.251,993,6.251,994,6.251,995,6.251,996,6.251,997,6.251,998,6.251,999,6.251,1000,6.251,1001,6.251,1002,6.251,1003,6.251,1004,6.251,1005,6.251,1006,6.251,1007,6.251,1008,6.251,1009,6.251,1010,6.251]],["title/c/writing-intro.html",[3,0.039]],["body/c/writing-intro.html",[2,0.905,3,0.077,4,0.231,5,0.281,6,0.246,7,0.335,8,0.298,9,0.349,10,0.383,11,0.401,12,0.383,13,0.401,14,0.549,15,0.629,16,0.629,17,0.67,18,0.638,19,0.658,20,3.124,21,3.124,22,0.584,24,0.691,29,4.15,31,1.04,32,0.784,38,1.954,52,4.445,55,3.093,56,0.548,58,3.868,60,0.8,61,0.779,62,0.595,63,0.579,64,0.713,65,0.731,80,2.367,92,5.386,114,0.376,117,1.781,125,3.577,126,2.428,128,1.864,264,3.988,281,1.705,368,1.212,1011,3.277,1012,5.897,1013,5.918,1014,3.084,1015,4.501,1016,2.12,1017,3.084,1018,4.505,1019,0.442,1020,1.639,1021,6.421,1022,1.72,1023,4.505,1024,4.505,1025,7.01,1026,4.713,1027,5.897,1028,7.44,1029,7.44,1030,1.3,1031,2.314,1032,0.546,1033,4.505,1034,0.532,1035,0.824,1036,2.181,1037,1.563,1038,4.505,1039,1.59,1040,3.822,1041,0.548,1042,3.822,1043,3.822,1044,3.822,1045,5.897,1046,5.098,1047,5.098,1048,5.098,1049,5.098,1050,5.098,1051,5.098,1052,5.098,1053,5.098,1054,3.277,1055,4.505,1056,4.505,1057,4.505,1058,4.505,1059,4.505,1060,4.505,1061,5.098,1062,5.098,1063,5.098,1064,5.098,1065,5.098,1066,6.575,1067,4.505,1068,4.505,1069,5.897,1070,4.505,1071,4.505,1072,4.505,1073,4.505,1074,4.505]],["title/c/writing-intro.html#文章的組成",[1075,4.859]],["body/c/writing-intro.html#文章的組成",[1076,7.274,1077,7.274,1078,8.298,1079,7.274,1080,7.274,1081,8.298,1082,8.298,1083,8.298,1084,8.298,1085,7.274,1086,7.274,1087,7.274,1088,7.274,1089,7.274]],["title/c/writing-intro.html#句子的組成",[1090,4.859]],["body/c/writing-intro.html#句子的組成",[3,0.067,1091,7.372,1092,7.372,1093,7.372,1094,7.372,1095,7.372]],["title/c/writing-intro.html#程式語言",[1096,4.293]],["body/c/writing-intro.html#程式語言",[3,0.074,4,0.187,5,0.248,6,0.217,52,5.387,55,3.556,58,4.688,80,2.869,178,5.217,368,1.264,1011,3.767,1012,7.148,1013,6.601,1014,4.209,1015,5.173,1016,2.893,1017,4.209,1018,6.149,1019,0.46,1020,2.237,1097,6.958,1098,8.089,1099,8.089,1100,8.089,1101,8.089,1102,8.089,1103,8.089,1104,6.958,1105,6.958,1106,6.958,1107,6.149,1108,6.149,1109,6.958]],["title/c/writing-intro.html#範例",[1110,3.643]],["body/c/writing-intro.html#範例",[3,0.077,4,0.229,5,0.27,6,0.237,7,0.335,8,0.304,9,0.356,10,0.392,11,0.41,12,0.392,13,0.41,14,0.561,15,0.642,16,0.642,17,0.684,18,0.657,19,0.677,20,3.215,21,3.215,22,0.592,24,0.706,29,4.181,31,1.063,32,0.789,38,2.042,56,0.573,60,0.823,61,0.801,62,0.622,63,0.605,64,0.745,65,0.764,114,0.393,125,3.682,126,2.499,128,1.919,264,4.074,281,1.654,528,4.709,1019,0.353,1021,6.019,1022,1.799,1023,4.709,1024,4.709,1025,7.014,1026,4.814,1027,6.07,1030,1.359,1031,2.419,1032,0.562,1033,4.709,1034,0.557,1035,0.862,1036,2.28,1037,1.634,1038,4.709,1039,1.637,1040,3.996,1041,0.573,1042,3.996,1043,3.996,1044,3.996,1045,6.07,1054,3.347,1055,4.709,1056,4.709,1057,4.709,1058,4.709,1059,4.709,1060,4.709,1066,6.716,1067,4.709,1068,4.709,1069,6.07,1070,4.709,1071,4.709,1072,4.709,1073,4.709,1074,4.709,1111,5.329,1112,5.329,1113,5.329,1114,5.329,1115,5.329,1116,5.329,1117,5.329,1118,7.601,1119,5.329,1120,5.329,1121,5.329,1122,5.329,1123,5.329,1124,6.869,1125,6.869,1126,6.869,1127,7.601,1128,7.601,1129,5.329,1130,5.329,1131,5.329,1132,5.329,1133,5.329,1134,5.329,1135,5.329,1136,5.329,1137,5.329,1138,5.329,1139,5.329,1140,5.329,1141,5.329,1142,5.329,1143,5.329,1144,5.329,1145,5.329,1146,5.329]],["title/java/array.html",[3,0.039]],["body/java/array.html",[2,1.248,3,0.077,4,0.252,5,0.316,6,0.279,7,0.336,8,0.352,9,0.414,10,0.443,11,0.454,12,0.424,13,0.478,14,0.576,15,0.647,16,0.659,17,0.673,18,0.758,19,0.717,22,0.666,23,1.765,24,0.777,25,1.657,31,0.982,32,0.782,36,0.923,46,0.708,49,0.742,54,2.575,55,1.738,56,0.927,60,0.872,61,0.82,62,0.82,63,0.869,64,0.982,65,0.963,66,1,67,1.025,68,0.708,69,0.692,70,0.742,71,0.759,72,0.759,73,0.795,74,0.832,75,0.531,79,0.762,80,0.946,96,1.211,98,0.996,99,0.9,100,0.9,101,0.9,103,1.109,104,0.996,105,1.109,106,1.249,107,1.175,108,1.69,112,0.878,113,2.988,114,0.634,116,2.899,117,2.333,120,3.277,121,1.878,124,1.546,128,0.745,138,1.05,140,0.799,142,1.924,168,2.328,281,1.026,368,1.221,407,1.975,771,1.379,799,1.379,800,1.379,828,1.865,1011,1.175,1019,0.538,1032,0.739,1034,0.839,1035,1.282,1037,0.818,1039,1.391,1041,0.912,1054,1.175,1147,1.332,1148,2.357,1149,2.241,1150,3.134,1151,2.667,1152,3.694,1153,3.694,1154,2.943,1155,2.988,1156,4.845,1157,3.694,1158,2.788,1159,4.751,1160,0.858,1161,2.82,1162,1.485,1163,1.878,1164,2,1165,1.69,1166,0.594,1167,2.357,1168,2.357,1169,2.357,1170,3.694,1171,4.16,1172,2.357,1173,2,1174,2.153,1175,2,1176,2.357,1177,3.694,1178,3.694,1179,1.05,1180,2.357,1181,2.357,1182,1.289,1183,1.69,1184,2.357,1185,1.878,1186,1.412,1187,2.328,1188,0.68,1189,0.837,1190,2.943,1191,3.694,1192,2.943,1193,5.156,1194,2.357,1195,2.357,1196,1.69,1197,5.94,1198,2.357,1199,2.233,1200,3.694,1201,4.099,1202,3.694,1203,1.878,1204,2.357,1205,2.357,1206,5.156,1207,6.429,1208,2.357,1209,5.425,1210,5.976,1211,2.777,1212,2.943,1213,2.357,1214,5.6,1215,2.153,1216,2.153,1217,1.878,1218,2,1219,2.153,1220,5.6,1221,5.156,1222,2.357,1223,1.249,1224,2.357,1225,0.858,1226,1.019,1227,2,1228,0.568,1229,2.357,1230,1.546,1231,2.357,1232,2.153,1233,3.694,1234,2.143,1235,3.694,1236,4.555,1237,2.357,1238,6.893,1239,2.667,1240,4.555,1241,3.374,1242,2.667,1243,3.694,1244,4.555,1245,2,1246,2.357,1247,2.357,1248,2.667,1249,2.357,1250,2.357,1251,1.546,1252,0.97,1253,3.017,1254,null,1255,2.357,1256,3.694,1257,2.357,1258,2.357,1259,2.943,1260,2]],["title/java/array.html#C-語言陣列回顧",[2,0.641,1261,3.61]],["body/java/array.html#C-語言陣列回顧",[2,1.169,3,0.076,4,0.211,5,0.279,6,0.244,7,0.296,8,0.313,9,0.367,10,0.403,11,0.422,12,0.403,13,0.422,14,0.486,15,0.556,16,0.556,22,0.664,23,1.798,24,0.727,25,2.517,31,0.92,32,0.729,168,3.665,281,1.663,407,3.202,1147,3.288,1148,5.817,1149,4.197,1150,5.87,1152,6.918,1153,6.918,1154,5.512,1155,4.843,1156,4.384,1262,6.582,1263,6.582,1264,6.582,1265,6.582,1266,6.582,1267,6.582,1268,6.582,1269,6.582,1270,6.582,1271,6.582,1272,6.582,1273,6.582,1274,6.582,1275,6.582]],["title/java/array.html#Java-陣列的特性",[368,0.656,1276,3.61]],["body/java/array.html#Java-陣列的特性",[2,1.327,3,0.077,4,0.233,5,0.3,6,0.263,7,0.318,8,0.337,9,0.379,10,0.417,11,0.403,12,0.385,13,0.436,22,0.65,23,1.832,24,0.75,32,0.532,36,2.108,55,3.107,56,0.868,96,2.766,113,4.331,114,0.597,120,3.151,138,2.398,140,1.825,168,3.393,368,1.107,828,1.97,1011,2.684,1019,0.535,1032,0.72,1034,0.844,1035,1.208,1041,0.974,1156,4.059,1157,6.604,1158,3.097,1159,5.603,1160,1.959,1161,2.945,1162,3.393,1163,4.291,1164,4.57,1165,3.86,1166,1.358,1167,5.386,1168,5.386,1277,6.095,1278,6.095,1279,7.474,1280,6.095,1281,6.095,1282,6.095,1283,6.095,1284,6.095,1285,6.095,1286,6.095,1287,6.095,1288,6.095,1289,4.918,1290,6.095,1291,6.095,1292,6.095,1293,6.095,1294,6.095,1295,6.095,1296,6.095,1297,6.095]],["title/java/array.html#多維陣列",[1298,4.859]],["body/java/array.html#多維陣列",[3,0.077,4,0.205,5,0.271,6,0.237,7,0.287,8,0.304,9,0.356,10,0.392,11,0.41,12,0.392,13,0.459,14,0.561,15,0.53,16,0.53,17,0.564,22,0.656,23,1.774,24,0.706,32,0.773,56,0.817,63,0.712,114,0.561,116,3.001,368,1.381,1019,0.503,1032,0.696,1034,0.794,1035,1.229,1041,0.879,1156,5.45,1158,3.34,1159,6.136,1169,5.539,1170,6.718,1171,6.604,1172,5.539,1299,6.269,1300,6.269,1301,6.269,1302,6.269,1303,5.059,1304,6.269,1305,6.269,1306,6.269,1307,6.269,1308,6.269,1309,6.269,1310,6.269,1311,6.269,1312,6.269,1313,6.269,1314,6.269]],["title/java/array.html#陣列索引的檢查",[1315,4.859]],["body/java/array.html#陣列索引的檢查",[2,1.392,3,0.076,4,0.225,5,0.298,6,0.261,7,0.296,8,0.314,9,0.367,10,0.404,11,0.356,13,0.488,22,0.639,23,1.596,24,0.776,32,0.684,56,0.709,114,0.487,368,1.424,1019,0.436,1032,0.641,1034,0.689,1035,1.066,1037,2.022,1041,0.709,1156,5.221,1173,4.945,1175,4.945,1176,5.828,1177,6.927,1178,6.927,1179,2.596,1180,5.828,1181,5.828,1182,3.187,1183,4.178,1184,5.828,1316,6.596,1317,6.596,1318,6.596,1319,6.596,1320,6.596,1321,6.596,1322,6.596,1323,6.596,1324,6.596,1325,6.596,1326,6.596,1327,6.596,1328,6.596,1329,6.596,1330,6.596,1331,6.596,1332,6.596,1333,6.596,1334,5.323]],["title/java/array.html#陣列範例",[1335,4.859]],["body/java/array.html#陣列範例",[3,0.077,4,0.252,5,0.31,6,0.274,7,0.331,8,0.346,9,0.41,10,0.427,11,0.441,12,0.408,13,0.452,14,0.572,15,0.654,16,0.669,17,0.697,18,0.793,19,0.763,22,0.656,23,0.659,24,0.699,25,1.041,31,1.015,32,0.773,46,0.822,49,0.861,54,2.905,56,0.923,60,0.928,61,0.878,62,0.878,63,0.899,64,1.052,65,1.04,66,1.092,67,1.118,68,0.822,69,0.803,70,0.861,71,0.881,72,0.881,73,0.923,74,0.965,75,0.645,79,0.926,80,1.149,98,1.209,99,1.093,100,1.093,101,1.093,103,1.347,104,1.209,105,1.347,106,1.516,107,1.426,108,1.962,112,1.067,114,0.63,116,2.865,117,2.388,120,3.339,121,2.28,124,1.877,128,0.905,142,2.171,567,2.157,771,1.675,799,1.675,800,1.675,828,1.77,1019,0.512,1032,0.734,1034,0.786,1035,1.217,1039,1.539,1041,0.694,1054,1.426,1161,2.811,1185,2.28,1186,1.541,1187,2.701,1188,0.826,1189,1.017,1190,3.415,1191,4.286,1192,3.415,1193,5.707,1194,2.862,1195,2.862,1196,2.051,1197,6.415,1198,2.862,1199,2.308,1200,4.286,1201,4.286,1202,4.286,1203,2.28,1204,2.862,1205,2.862,1206,5.707,1207,6.84,1208,2.862,1209,5.859,1210,6.158,1211,2.865,1212,3.415,1213,2.862,1214,6.112,1215,2.614,1216,2.614,1217,2.28,1218,2.428,1219,2.614,1220,6.112,1221,5.707,1222,2.862,1223,1.516,1224,2.862,1225,1.041,1226,1.182,1227,2.428,1228,0.69,1229,2.862,1230,1.877,1231,2.862,1232,2.614,1233,4.286,1234,2.418,1235,4.286,1236,5.139,1237,2.862,1238,7.232,1240,5.139,1241,3.915,1243,4.286,1244,5.139,1245,2.428,1246,2.862,1247,2.862,1249,2.862,1250,2.862,1251,1.877,1252,1.178,1253,3.339,1254,null,1255,2.862,1256,4.286,1257,2.862,1258,2.862,1259,3.415,1260,2.428,1336,3.239,1337,3.239,1338,3.239,1339,3.239,1340,3.239,1341,3.239,1342,3.239,1343,3.239,1344,3.239,1345,3.239,1346,3.239,1347,3.239,1348,3.239,1349,4.851,1350,3.239,1351,3.239,1352,3.239,1353,3.239,1354,3.239,1355,3.239,1356,3.239,1357,3.239,1358,3.239,1359,3.239,1360,3.239,1361,3.239,1362,3.239]],["title/java/class-and-obj.html",[3,0.039]],["body/java/class-and-obj.html",[2,1.084,3,0.077,4,0.214,5,0.293,6,0.257,7,0.283,8,0.299,9,0.351,10,0.385,11,0.403,12,0.385,13,0.417,14,0.451,15,0.436,16,0.436,17,0.464,18,0.493,19,0.508,22,0.624,23,0.716,24,0.763,31,0.853,32,0.653,36,2.476,46,0.596,49,0.624,53,3.294,55,3.62,56,0.954,58,3.896,60,0.618,61,0.601,62,0.41,63,0.399,64,0.491,65,0.504,66,0.555,67,0.568,68,0.596,69,0.582,70,0.624,71,0.639,72,0.936,73,0.669,74,0.7,75,0.7,76,0.732,77,0.732,78,0.749,96,2.77,108,3.025,114,0.639,117,1.375,122,1.049,133,3.865,138,2.029,140,1.053,152,2.214,248,4.733,277,0.783,281,1.215,290,1.957,301,0.732,310,0.819,368,1.56,439,1.548,810,1.885,828,2.26,1019,0.62,1020,2.844,1032,0.752,1034,0.88,1035,1.282,1039,1.706,1041,0.852,1158,3.099,1160,2.6,1166,0.783,1182,3.615,1183,2.227,1186,1.498,1199,2.224,1228,0.749,1234,2.976,1245,2.636,1251,2.988,1254,null,1363,2.475,1364,1.595,1365,2.127,1366,2.636,1367,4.16,1368,4.974,1369,5.94,1370,1.818,1371,4.065,1372,0.766,1373,0.766,1374,0.783,1375,0.801,1376,0.766,1377,0.819,1378,0.857,1379,7.265,1380,7.265,1381,4.48,1382,5.94,1383,4.555,1384,4.16,1385,3.629,1386,6.325,1387,5.387,1388,2.413,1389,1.957,1390,2.837,1391,3.106,1392,3.629,1393,3.106,1394,3.106,1395,3.106,1396,1.885,1397,1.756,1398,5.393,1399,5.393,1400,3.106,1401,4.555,1402,3.106,1403,3.106,1404,3.106,1405,3.106,1406,6.61,1407,3.106,1408,5.94,1409,3.106,1410,3.106,1411,4.555,1412,4.555,1413,3.106,1414,4.555,1415,3.398,1416,5.393,1417,2.837,1418,3.106,1419,3.106,1420,3.106,1421,2.672,1422,3.516,1423,3.106,1424,3.106,1425,3.118,1426,2.837,1427,1.548,1428,2.636,1429,3.516,1430,2.475,1431,3.106,1432,3.106,1433,3.106,1434,4.297,1435,3.106,1436,1.13,1437,1.247,1438,1.422,1439,6.325,1440,3.106,1441,2.341,1442,4.477,1443,3.106,1444,2.475,1445,3.106,1446,3.106,1447,3.106,1448,3.106,1449,3.106,1450,2.636,1451,3.865,1452,3.106,1453,3.106]],["title/java/class-and-obj.html#類別與物件的基本概念",[1454,4.859]],["body/java/class-and-obj.html#類別與物件的基本概念",[55,2.833,543,3.092,582,3.322,810,3.653,828,2.286,1019,0.62,1020,2.191,1254,null,1363,4.798,1364,3.092,1365,4.122,1366,5.109,1367,5.499,1368,4.834,1455,6.814,1456,6.814,1457,6.814,1458,6.814,1459,6.814,1460,6.814,1461,6.814,1462,6.814,1463,6.814,1464,6.814,1465,6.814,1466,6.814,1467,6.814,1468,6.814,1469,4.798,1470,6.814,1471,6.814,1472,6.814,1473,6.814,1474,6.814,1475,6.814,1476,6.814,1477,6.814,1478,6.814,1479,6.814,1480,6.814,1481,6.814,1482,6.814,1483,7.991,1484,6.449,1485,6.814,1486,6.814,1487,6.814,1488,6.814,1489,6.814,1490,6.814]],["title/java/class-and-obj.html#如何以Java撰寫類別",[1491,4.859]],["body/java/class-and-obj.html#如何以Java撰寫類別",[2,1.093,3,0.076,4,0.189,5,0.249,6,0.192,7,0.171,8,0.181,9,0.212,10,0.233,11,0.244,12,0.233,13,0.244,14,0.334,15,0.382,16,0.382,17,0.407,18,0.432,19,0.445,22,0.578,24,0.571,31,0.979,32,0.537,36,2.129,46,0.766,49,0.802,53,3.312,55,3.516,56,0.908,58,3.568,60,0.541,61,0.527,62,0.527,63,0.513,64,0.631,65,0.647,66,0.713,67,0.73,68,0.766,69,0.748,70,0.802,71,0.821,72,1.118,73,0.859,74,0.899,75,0.899,76,0.941,77,0.941,78,0.962,114,0.613,117,1.642,122,1.253,133,4.615,138,1.778,152,2.306,206,3.387,248,5.294,277,1.006,301,0.941,310,1.053,368,1.536,543,2.05,548,3.18,567,4.1,582,2.559,828,2.252,1019,0.616,1020,2.814,1032,0.737,1034,0.868,1035,1.216,1039,1.875,1041,0.872,1158,3.24,1160,2.251,1166,1.006,1182,3.384,1183,2.861,1186,1.675,1228,0.962,1234,3.271,1245,3.387,1251,3.568,1254,null,1334,3.645,1367,3.645,1368,5.025,1369,6.644,1370,2.336,1371,4.663,1372,0.984,1373,0.984,1374,1.006,1375,1.029,1376,0.984,1377,1.053,1378,1.101,1379,7.663,1380,7.663,1381,4.815,1382,6.644,1383,5.439,1384,4.968,1385,3.18,1386,6.952,1387,3.008,1388,2.881,1389,2.515,1390,3.645,1391,3.992,1392,3.18,1393,3.992,1394,3.992,1395,3.992,1396,2.421,1397,2.256,1398,6.187,1399,6.187,1400,3.992,1401,5.439,1402,3.992,1403,3.992,1404,3.992,1405,3.992,1406,7.174,1407,3.992,1408,6.644,1409,3.992,1410,3.992,1411,5.439,1412,5.439,1413,3.992,1414,5.439,1415,3.899,1416,6.187,1417,3.645,1418,3.992,1419,3.992,1420,3.992,1421,2.807,1423,3.992,1424,3.992,1425,3.724,1426,3.645,1427,1.989,1430,3.18,1469,3.18,1484,3.645,1492,4.517,1493,4.517,1494,4.517,1495,4.517,1496,4.517,1497,4.517,1498,4.517,1499,4.517,1500,4.93,1501,4.517,1502,4.517,1503,4.517,1504,4.517,1505,3.992,1506,4.517,1507,4.517,1508,4.517,1509,4.517,1510,4.517,1511,4.517,1512,4.517,1513,3.992,1514,4.517,1515,4.517,1516,4.517,1517,7.002,1518,4.517,1519,4.517,1520,4.517,1521,4.517,1522,4.517,1523,4.517,1524,4.517,1525,4.517,1526,4.517,1527,4.517,1528,4.517,1529,4.517,1530,4.517,1531,4.517,1532,4.517,1533,4.517,1534,4.517,1535,4.517,1536,3.645,1537,4.517,1538,4.517,1539,4.517,1540,4.517,1541,4.517,1542,4.517,1543,4.517,1544,6.156,1545,6.156,1546,6.156,1547,6.156,1548,4.517,1549,4.517,1550,3.992,1551,4.517,1552,4.517,1553,4.517,1554,4.517,1555,4.517,1556,4.517,1557,4.517,1558,4.517,1559,4.517,1560,4.517,1561,4.517,1562,4.517,1563,4.517,1564,4.517,1565,4.517,1566,4.517,1567,3.992,1568,4.517,1569,4.517,1570,4.517,1571,4.517,1572,4.517,1573,4.517,1574,4.517,1575,4.517,1576,4.517,1577,4.517,1578,3.992,1579,4.517]],["title/java/class-and-obj.html#Overloading",[1387,3.236]],["body/java/class-and-obj.html#Overloading",[3,0.076,4,0.178,5,0.235,6,0.206,7,0.249,8,0.264,9,0.309,10,0.34,11,0.356,12,0.34,13,0.356,14,0.487,15,0.557,16,0.557,17,0.594,18,0.631,19,0.65,22,0.63,32,0.684,53,3.452,60,0.79,61,0.769,108,3.625,114,0.639,138,2.596,543,2.993,1019,0.519,1020,2.782,1032,0.747,1034,0.689,1199,2.309,1254,null,1387,5.971,1431,5.828,1432,5.828,1433,5.828,1434,5.889,1435,5.828,1500,4.644,1580,4.945,1581,6.596,1582,6.596,1583,6.596,1584,6.596,1585,6.596,1586,6.596,1587,6.596,1588,6.596,1589,6.596,1590,6.596,1591,6.596]],["title/java/class-and-obj.html#初始化的執行順序",[1592,4.859]],["body/java/class-and-obj.html#初始化的執行順序",[2,1.079,3,0.076,4,0.218,5,0.307,6,0.27,7,0.305,8,0.323,9,0.378,10,0.416,11,0.435,12,0.416,13,0.328,22,0.6,24,0.781,32,0.53,55,3.5,56,0.98,114,0.596,152,2.002,281,1.21,368,1.467,582,2.527,828,1.968,1019,0.603,1032,0.729,1034,0.843,1035,1.305,1041,0.653,1158,2.329,1182,3.605,1199,2.377,1254,null,1437,2.156,1439,7.635,1440,5.371,1441,4.048,1442,5.377,1443,5.371,1444,4.279,1445,5.371,1446,5.371,1447,5.371,1448,5.371,1449,5.371,1450,4.557,1593,6.078,1594,6.078,1595,6.078,1596,6.078,1597,6.078,1598,6.078,1599,5.371,1600,5.371,1601,6.593,1602,6.078,1603,6.078,1604,6.593,1605,6.593,1606,5.371,1607,6.593,1608,6.078,1609,6.078,1610,6.078,1611,6.078,1612,6.078,1613,6.078,1614,6.078,1615,6.078,1616,6.078,1617,6.078,1618,6.078,1619,6.078,1620,6.078,1621,6.078,1622,6.078,1623,6.078,1624,6.078,1625,6.078,1626,6.078,1627,6.078,1628,6.078,1629,6.078,1630,6.078,1631,6.078]],["title/java/class-and-obj.html#final-關鍵字",[1160,1.16,1632,3.61]],["body/java/class-and-obj.html#final-關鍵字",[3,0.076,4,0.184,5,0.243,6,0.213,7,0.258,8,0.274,9,0.32,10,0.352,11,0.368,12,0.352,13,0.472,14,0.505,22,0.57,23,1.392,24,0.813,36,2.937,55,2.842,56,0.86,58,4.64,96,3.853,114,0.505,140,2.047,281,1.593,439,3.01,1019,0.452,1032,0.716,1034,0.714,1035,1.105,1041,0.734,1160,2.868,1385,4.813,1392,4.813,1451,6.002,1452,6.04,1453,6.04,1633,6.835]],["title/java/container.html",[3,0.039]],["body/java/container.html",[3,0.077,4,0.218,5,0.194,6,0.17,7,0.206,8,0.218,9,0.256,10,0.281,11,0.294,12,0.281,13,0.437,14,0.403,15,0.461,16,0.461,17,0.491,18,0.522,19,0.538,22,0.652,23,1.743,24,0.647,25,2.242,32,0.799,34,3.635,46,0.925,49,0.969,54,2.726,56,0.826,60,0.654,61,0.637,62,0.637,63,0.62,64,0.763,65,0.782,66,0.862,67,0.882,68,0.925,69,0.903,70,0.969,71,0.991,72,0.991,73,1.038,74,1.086,75,1.086,76,1.136,77,1.136,78,1.162,114,0.568,122,1.111,138,2.745,277,1.216,281,1.53,297,1.392,301,1.136,310,1.272,368,0.991,377,1.49,378,1.456,799,2.822,800,2.822,1019,0.461,1020,1.755,1030,1.778,1031,3.488,1032,0.685,1034,0.894,1035,1.128,1041,0.963,1165,5.131,1166,1.216,1188,1.392,1190,3.843,1211,1.797,1217,3.843,1226,1.33,1228,1.162,1372,1.189,1373,1.189,1374,1.216,1375,1.243,1376,1.189,1377,1.272,1378,1.33,1634,3.635,1635,5.043,1636,5.703,1637,3.163,1638,4.404,1639,5.229,1640,1.456,1641,1.456,1642,1.456,1643,1.524,1644,1.56,1645,1.56,1646,1.56,1647,1.56,1648,1.56,1649,1.56,1650,1.56,1651,1.56,1652,1.56,1653,1.56,1654,1.56,1655,1.56,1656,4.823,1657,6.203,1658,6.792,1659,5.703,1660,4.823,1661,7.689,1662,4.823,1663,6.163,1664,6.792,1665,4.404,1666,4.823,1667,4.823,1668,4.823,1669,4.823,1670,4.092,1671,4.823,1672,4.823,1673,5.763,1674,4.823,1675,4.823,1676,4.092,1677,4.823,1678,4.092,1679,4.823,1680,4.823,1681,4.823,1682,4.823,1683,4.092,1684,4.823,1685,4.823]],["title/java/container.html#範例程式",[1686,4.859]],["body/java/container.html#範例程式",[3,0.077,4,0.217,5,0.192,6,0.169,7,0.204,8,0.216,9,0.253,10,0.278,11,0.291,12,0.278,13,0.435,14,0.399,15,0.456,16,0.456,17,0.486,18,0.517,19,0.532,22,0.651,23,1.738,24,0.643,25,2.227,32,0.798,34,3.596,46,0.915,49,0.959,56,0.822,60,0.647,61,0.63,62,0.63,63,0.613,64,0.755,65,0.774,66,0.852,67,0.873,68,0.915,69,0.894,70,0.959,71,0.981,72,0.981,73,1.027,74,1.075,75,1.075,76,1.124,77,1.124,78,1.15,114,0.565,122,1.099,138,2.726,277,1.203,281,1.522,297,1.377,301,1.124,310,1.258,377,1.474,378,1.441,1019,0.458,1030,1.766,1031,3.143,1032,0.682,1034,0.891,1035,1.12,1041,0.962,1165,5.11,1166,1.203,1188,1.377,1211,1.778,1217,3.802,1226,1.316,1228,1.15,1372,1.176,1373,1.176,1374,1.203,1375,1.23,1376,1.176,1377,1.258,1378,1.316,1635,4.947,1636,4.877,1639,4.048,1640,1.441,1641,1.441,1642,1.441,1643,1.508,1644,1.543,1645,1.543,1646,1.543,1647,1.543,1648,1.543,1649,1.543,1650,1.543,1651,1.543,1652,1.543,1653,1.543,1654,1.543,1655,1.543,1656,4.771,1657,6.172,1658,6.758,1659,5.68,1660,4.771,1661,7.67,1662,4.771,1663,6.121,1664,6.758,1665,4.357,1666,4.771,1667,4.771,1668,4.771,1669,4.771,1670,4.048,1671,4.771,1672,4.771,1673,5.734,1674,4.771,1675,4.771,1676,4.048,1677,4.771,1678,4.048,1679,4.771,1680,4.771,1681,4.771,1682,4.771,1683,4.048,1684,4.771,1685,4.771]],["title/java/easy-print.html",[3,0.039]],["body/java/easy-print.html",[1,4.117,2,0.867,3,0.077,4,0.234,5,0.254,6,0.22,7,0.24,8,0.241,9,0.304,10,0.266,11,0.279,12,0.319,13,0.325,14,0.361,15,0.318,16,0.276,17,0.294,18,0.313,19,0.371,22,0.664,23,1.433,25,2.262,31,1.179,32,0.766,46,0.554,49,0.58,52,0.729,56,0.45,60,0.392,61,0.381,62,0.381,63,0.428,64,0.457,65,0.468,66,0.516,67,0.528,68,0.554,69,0.541,70,0.58,71,0.594,72,0.594,73,0.622,74,0.65,75,0.65,76,0.681,77,0.681,78,0.696,79,0.934,80,1.618,82,1.69,90,0.482,91,1.385,95,1.483,97,1.632,98,0.409,99,1.103,100,1.103,101,1.103,103,1.113,104,0.999,105,1.113,106,0.512,107,1.179,108,2.506,109,0.566,110,0.771,111,3.403,112,0.648,114,0.526,116,1.502,117,1.005,121,1.885,122,0.665,126,1.189,128,0.913,140,1.942,142,2.37,151,2.486,152,2.486,162,1.002,163,3.304,167,1.435,277,0.728,281,0.75,282,1.103,283,1.189,284,1.189,288,0.84,292,1.054,297,0.833,299,1.159,301,0.681,309,1.095,310,0.762,331,1.002,332,1.095,338,1.246,340,1.246,359,1.31,377,1.028,378,1.005,379,1.051,383,0.512,400,1.215,403,1.095,407,1.026,421,1.103,442,1.13,444,1.095,445,1.22,447,1.095,450,1.19,802,1.322,809,1.103,810,2.248,820,1.338,827,1.752,828,0.479,831,0.893,835,0.512,1017,0.662,1019,0.373,1020,0.352,1022,1.103,1025,4.063,1030,1.619,1031,1.215,1032,0.693,1034,0.913,1037,0.603,1039,0.638,1041,0.897,1054,1.179,1147,3.241,1154,3.438,1155,2.995,1166,0.728,1186,1.016,1187,1.095,1188,0.833,1189,1.026,1196,3.273,1199,2.137,1211,1.608,1223,0.512,1225,0.632,1226,0.797,1228,0.802,1252,0.715,1364,0.893,1372,0.712,1373,0.712,1374,0.728,1375,0.745,1376,0.712,1377,0.762,1378,0.797,1388,0.512,1396,0.587,1397,3.559,1415,2.719,1421,0.999,1436,2.51,1437,1.833,1438,2.283,1634,0.729,1635,3.76,1640,0.872,1641,0.872,1642,0.872,1643,0.913,1644,0.934,1645,0.934,1646,0.934,1647,0.934,1648,0.934,1649,0.934,1650,0.934,1651,0.934,1652,0.934,1653,0.934,1654,0.934,1655,0.934,1676,0.821,1687,0.693,1688,3.42,1689,1.738,1690,1.095,1691,1.095,1692,1.095,1693,2.83,1694,1.095,1695,1.587,1696,1.623,1697,0.979,1698,0.979,1699,1.002,1700,1.002,1701,1.002,1702,1.051,1703,1.051,1704,1.051,1705,1.051,1706,1.051,1707,1.076,1708,1.076,1709,1.076,1710,1.076,1711,1.076,1712,1.076,1713,1.076,1714,1.076,1715,1.159,1716,1.159,1717,1.159,1718,1.13,1719,1.159,1720,1.159,1721,1.159,1722,1.159,1723,1.159,1724,1.252,1725,1.252,1726,1.252,1727,1.252,1728,1.252,1729,1.252,1730,1.252,1731,1.252,1732,1.252,1733,1.252,1734,1.252,1735,1.252,1736,1.252,1737,1.13,1738,1.22,1739,1.286,1740,1.286,1741,1.22,1742,1.322,1743,1.322,1744,1.322,1745,1.322,1746,1.322,1747,1.359,1748,1.359,1749,1.359,1750,1.359,1751,1.359,1752,1.359,1753,1.359,1754,1.359,1755,1.743,1756,1.359,1757,1.359,1758,1.398,1759,1.398,1760,1.398,1761,1.398,1762,1.398,1763,1.398,1764,1.398,1765,1.439,1766,1.439,1767,1.439,1768,1.439,1769,1.439,1770,1.439,1771,1.439,1772,1.53,1773,1.53,1774,1.53,1775,1.53,1776,1.53,1777,1.53,1778,1.53,1779,1.53,1780,1.294,1781,1.294,1782,1.294,1783,1.294,1784,1.294,1785,1.294,1786,1.294,1787,1.384,1788,1.384,1789,1.384,1790,1.384,1791,1.384,1792,1.384,1793,1.384,1794,1.384,1795,1.384,1796,1.384,1797,1.384,1798,1.384,1799,1.384,1800,1.384,1801,1.384,1802,1.384,1803,1.384,1804,1.384,1805,1.384,1806,1.384,1807,1.384,1808,1.435,1809,1.435,1810,1.435,1811,1.435,1812,1.435,1813,1.435,1814,1.435,1815,1.435,1816,1.435,1817,1.435,1818,1.435,1819,1.435,1820,1.435,1821,1.435,1822,1.435,1823,1.435,1824,1.435,1825,1.435,1826,1.491,1827,1.491,1828,1.552,1829,1.552,1830,1.552,1831,1.552,1832,1.552,1833,1.552,1834,1.552,1835,1.552,1836,1.552,1837,1.552,1838,1.552,1839,1.552,1840,1.552,1841,1.552,1842,1.552,1843,1.552,1844,1.552,1845,1.552,1846,1.552,1847,1.552,1848,1.19,1849,1.19,1850,1.19,1851,1.19,1852,1.19,1853,1.19,1854,1.19,1855,1.19,1856,1.19,1857,1.19,1858,1.19,1859,1.19,1860,1.19,1861,1.19,1862,1.19,1863,1.19,1864,1.19,1865,1.19,1866,1.19,1867,1.19,1868,1.19,1869,1.19,1870,1.19,1871,1.19,1872,1.19,1873,1.19,1874,1.19,1875,1.19,1876,1.19,1877,1.19,1878,1.19,1879,1.19,1880,2.301,1881,1.953,1882,2.008,1883,1.253,1884,2.008,1885,1.095,1886,1.696,1887,1.385,1888,1.439,1889,0.529,1890,1.475,1891,0.866,1892,2.008,1893,1.738,1894,2.508,1895,2.824,1896,1.738,1897,1.738,1898,0.967,1899,1.19,1900,2.301,1901,1.823,1902,4.031,1903,2.637,1904,2.366,1905,4.063,1906,3.038,1907,2.888,1908,3.328,1909,1.738,1910,2.637,1911,3.705,1912,1.738,1913,2.637,1914,1.587,1915,0.967,1916,1.738,1917,2.161,1918,2.888,1919,5.329,1920,1.738,1921,3.941,1922,2.888,1923,1.738,1924,2.888,1925,2.366,1926,1.738,1927,2.888,1928,0.967,1929,0.635,1930,1.475,1931,0.967,1932,1.31,1933,1.31,1934,1.587,1935,1.587,1936,1.738,1937,1.738,1938,2.366,1939,0.967,1940,0.967,1941,2.888,1942,2.637,1943,0.967,1944,2.637,1945,0.967,1946,3.253,1947,0.967,1948,2.301,1949,0.967,1950,0.967,1951,0.967,1952,1.738,1953,0.967,1954,0.967,1955,0.967,1956,0.967,1957,1.738,1958,2.888,1959,0.967,1960,0.967,1961,0.967,1962,0.967,1963,0.982,1964,0.921,1965,1.587,1966,4.17,1967,2.366,1968,1.054,1969,4.315,1970,2.366,1971,1.054,1972,0.967,1973,0.967,1974,0.852,1975,0.635,1976,0.635,1977,2.644,1978,1.587,1979,0.587,1980,0.967,1981,0.967,1982,0.967,1983,3.384,1984,2.888,1985,3.495,1986,1.552,1987,0.967,1988,0.967,1989,0.967,1990,1.738,1991,1.738,1992,1.738,1993,1.738,1994,0.729,1995,0.967,1996,0.967,1997,0.884,1998,0.662,1999,0.821,2000,1.475,2001,0.967,2002,0.967,2003,0.693,2004,1.31,2005,1.31,2006,0.967,2007,0.662,2008,0.967,2009,0.693,2010,0.967,2011,2.183,2012,0.967,2013,0.967,2014,0.967,2015,0.967,2016,2.888,2017,2.366,2018,2.888,2019,0.821,2020,0.821,2021,0.967,2022,1.738,2023,1.738,2024,1.738,2025,1.738,2026,1.738,2027,0.967,2028,1.738,2029,1.738,2030,0.967,2031,0.967,2032,1.587,2033,1.475,2034,1.566,2035,0.967,2036,0.821,2037,4.031,2038,7.393,2039,4.315,2040,2.366,2041,1.738,2042,0.821,2043,2.888,2044,0.967,2045,0.967,2046,0.967,2047,0.967,2048,0.967,2049,0.967,2050,0.967,2051,1.738,2052,0.967,2053,2.366,2054,2.888,2055,0.967,2056,1.587,2057,1.587,2058,0.884,2059,1.587,2060,2.888,2061,1.435,2062,1.587,2063,0.967,2064,2.366,2065,0.967,2066,0.967,2067,0.967,2068,0.967,2069,0.967,2070,0.967,2071,0.967,2072,2.888,2073,2.888,2074,3.384,2075,1.738,2076,2.888,2077,1.738,2078,1.738,2079,1.738,2080,1.738,2081,0.967,2082,1.587,2083,1.587,2084,0.967,2085,0.967,2086,0.967,2087,0.967,2088,1.738,2089,0.547,2090,0.967,2091,0.967,2092,0.967,2093,0.967,2094,0.967,2095,4.232,2096,4.063,2097,2.637,2098,2.637,2099,1.095,2100,0.967,2101,3.04,2102,0.884,2103,2.637,2104,3.328,2105,3.679,2106,4.363,2107,3.478,2108,5.167,2109,4.789,2110,4.031,2111,4.988,2112,2.637,2113,0.61,2114,3.328,2115,0.967,2116,2.183,2117,2.301,2118,1.738,2119,0.967,2120,0.967,2121,0.967,2122,0.967,2123,1.752,2124,0.967,2125,0.967,2126,0.967,2127,0.967,2128,0.967,2129,3.705,2130,1.31,2131,2.888,2132,0.821,2133,0.967,2134,4.232,2135,0.967,2136,0.967,2137,6.135,2138,2.888,2139,2.888,2140,2.888,2141,1.738,2142,1.738,2143,0.967,2144,0.967,2145,0.967,2146,0.967,2147,0.967,2148,0.967,2149,2.888,2150,1.738,2151,1.246,2152,1.475,2153,0.967,2154,2.888,2155,0.967,2156,3.328,2157,2.366,2158,1.738,2159,2.366,2160,0.967,2161,0.967,2162,0.967,2163,0.967,2164,0.967,2165,1.738,2166,0.967,2167,0.967,2168,0.967,2169,0.967,2170,0.967,2171,1.738,2172,0.967,2173,0.967,2174,0.967,2175,1.738,2176,0.693,2177,0.693,2178,0.693,2179,0.693,2180,0.693,2181,0.693,2182,0.693,2183,0.693,2184,0.693,2185,0.693,2186,0.693,2187,0.693,2188,0.693,2189,0.693,2190,0.693,2191,0.693,2192,0.693,2193,0.693,2194,0.693,2195,0.693,2196,0.693,2197,0.693,2198,0.693,2199,0.693,2200,0.693,2201,0.693,2202,0.693,2203,0.693,2204,0.693,2205,0.693,2206,0.693,2207,0.693,2208,0.693,2209,0.729,2210,0.729,2211,0.729,2212,0.729,2213,0.729,2214,0.729,2215,0.729,2216,0.729,2217,0.729,2218,0.729,2219,0.729,2220,0.729,2221,0.729,2222,0.662,2223,0.729,2224,0.729,2225,0.729,2226,0.729,2227,0.729,2228,0.729,2229,0.729,2230,0.729,2231,0.729,2232,0.729,2233,0.729,2234,0.729,2235,0.729,2236,0.729,2237,0.729,2238,0.729,2239,0.729,2240,0.729,2241,0.729,2242,0.729,2243,0.729,2244,0.729,2245,0.729,2246,0.729,2247,0.967,2248,0.967,2249,0.967,2250,0.967,2251,0.884,2252,0.967,2253,1.738,2254,2.366,2255,1.967,2256,1.967,2257,1.967,2258,1.967,2259,0.967,2260,0.967,2261,1.095,2262,3.42,2263,0.967,2264,0.967,2265,0.967,2266,0.967,2267,0.967,2268,1.738,2269,0.967,2270,4.315,2271,4.031,2272,4.031,2273,4.789,2274,2.888,2275,2.888,2276,2.888,2277,0.967,2278,1.738,2279,1.587,2280,0.884,2281,4.17,2282,4.315,2283,5.434,2284,1.738,2285,0.884,2286,0.866,2287,0.497,2288,2.366,2289,0.967,2290,0.967,2291,0.967,2292,0.967,2293,0.967,2294,0.967,2295,0.967,2296,1.738,2297,0.967,2298,0.967,2299,1.095,2300,0.967,2301,2.248,2302,0.967,2303,0.967,2304,1.095,2305,0.967,2306,1.095,2307,0.967,2308,1.095,2309,1.738,2310,0.967,2311,0.967,2312,0.662,2313,5.845,2314,3.941,2315,2.637,2316,4.719,2317,1.587,2318,0.967,2319,1.738,2320,1.738,2321,1.738,2322,1.967,2323,1.738,2324,1.738,2325,0.967,2326,2.888,2327,0.967,2328,3.941,2329,0.967,2330,5.167,2331,0.967,2332,3.328,2333,1.738,2334,4.566,2335,0.967,2336,0.967,2337,0.635,2338,2.888,2339,0.967,2340,0.967,2341,0.967,2342,0.967,2343,1.095,2344,1.095,2345,1.738,2346,0.967,2347,0.967,2348,0.967,2349,1.738,2350,0.967,2351,5.329,2352,2.366,2353,1.587,2354,3.705,2355,0.967,2356,1.587,2357,0.967,2358,0.967,2359,0.967,2360,0.967,2361,0.967,2362,1.738,2363,4.988,2364,0.967,2365,0.967,2366,2.366,2367,3.328,2368,3.705,2369,2.366,2370,3.705,2371,0.967,2372,2.366,2373,1.738,2374,0.967,2375,1.738,2376,3.038,2377,0.967,2378,1.738,2379,0.967,2380,0.884,2381,0.884,2382,0.664,2383,0.967,2384,0.967,2385,0.771,2386,0.967,2387,0.967,2388,2.366,2389,2.366,2390,2.888,2391,1.738,2392,1.738,2393,0.967,2394,0.967,2395,0.967,2396,0.967,2397,0.967,2398,1.738,2399,0.967,2400,0.967,2401,0.967,2402,0.967,2403,0.967,2404,0.821,2405,1.738,2406,0.635,2407,2.888,2408,0.967,2409,0.967,2410,0.967,2411,2.366,2412,5.61,2413,2.652,2414,2.366,2415,0.967,2416,3.126,2417,1.738,2418,2.888,2419,1.738,2420,2.888,2421,3.144,2422,1.738,2423,1.738,2424,2.888,2425,2.177,2426,1.62,2427,3.705,2428,0.967,2429,1.587,2430,0.967,2431,5.434,2432,2.366,2433,1.246,2434,1.738,2435,1.738,2436,2.888,2437,0.967,2438,0.967,2439,0.967,2440,2.888,2441,0.967,2442,2.888,2443,2.888,2444,1.738,2445,1.738,2446,1.738,2447,2.366,2448,2.366,2449,2.366,2450,1.738,2451,0.967,2452,0.967,2453,2.366,2454,0.967,2455,0.967,2456,0.967,2457,0.967,2458,0.967,2459,0.967,2460,2.45,2461,0.967,2462,0.967,2463,3.144,2464,0.967,2465,0.967,2466,0.967,2467,0.967,2468,2.366,2469,1.475,2470,1.738,2471,1.738,2472,0.967,2473,0.967,2474,0.967,2475,0.967,2476,1.738,2477,0.967,2478,0.967,2479,1.31,2480,0.967,2481,0.967,2482,0.967,2483,0.967,2484,0.821,2485,0.967,2486,0.967]],["title/java/easy-print.html#Print-java",[1695,3.921]],["body/java/easy-print.html#Print-java",[1,4.131,2,1.296,3,0.077,4,0.224,5,0.117,6,0.103,7,0.124,8,0.196,9,0.154,10,0.169,11,0.177,12,0.169,13,0.177,14,0.243,15,0.278,16,0.278,17,0.296,18,0.314,19,0.483,22,0.418,23,0.669,31,1.131,32,0.746,46,0.557,49,0.584,60,0.394,61,0.384,62,0.384,63,0.557,64,0.46,65,0.471,66,0.519,67,0.531,68,0.557,69,0.544,70,0.584,71,0.597,72,0.597,73,0.625,74,0.654,75,0.654,76,0.685,77,0.685,78,0.7,79,0.94,80,1.166,82,1.7,97,1.642,99,1.109,100,1.109,101,1.109,103,1.367,104,1.227,105,1.367,106,1.539,107,1.448,108,3.144,114,0.574,122,0.669,151,2.16,162,1.504,277,0.732,281,0.654,282,1.109,283,1.196,284,1.196,292,1.762,297,0.838,299,1.166,301,0.685,309,1.83,310,0.766,331,1.008,332,1.83,377,0.897,378,0.877,379,1.057,400,1.492,403,1.83,407,1.26,421,1.109,442,1.137,444,1.83,445,1.227,447,1.83,809,1.109,820,1.642,827,1.762,835,1.539,1019,0.324,1022,1.109,1030,1.775,1031,1.492,1032,0.636,1034,0.845,1039,1.398,1041,0.937,1166,0.732,1187,1.83,1188,0.838,1189,1.032,1199,2.018,1223,1.539,1226,0.801,1228,1.045,1252,1.784,1372,0.716,1373,0.716,1374,0.732,1375,0.749,1376,0.716,1377,0.766,1378,0.801,1397,4.154,1421,1.227,1436,2.818,1437,2.081,1438,3.144,1635,4.034,1640,0.877,1641,0.877,1642,0.877,1643,0.918,1644,0.94,1645,0.94,1646,0.94,1647,0.94,1648,0.94,1649,0.94,1650,0.94,1651,0.94,1652,0.94,1653,0.94,1654,0.94,1655,0.94,1688,3.364,1693,3.771,1695,2.653,1696,2.186,1697,0.984,1698,0.984,1699,1.008,1700,1.008,1701,1.008,1702,1.057,1703,1.057,1704,1.057,1705,1.057,1706,1.057,1707,1.083,1708,1.083,1709,1.083,1710,1.083,1711,1.083,1712,1.083,1713,1.083,1714,1.083,1715,1.166,1716,1.166,1717,1.166,1718,1.137,1719,1.166,1720,1.166,1721,1.166,1722,1.166,1723,1.166,1724,1.26,1725,1.26,1726,1.26,1727,1.26,1728,1.26,1729,1.26,1730,1.26,1731,1.26,1732,1.26,1733,1.26,1734,1.26,1735,1.26,1736,1.26,1737,1.137,1738,1.227,1739,1.294,1740,1.294,1741,1.227,1742,1.329,1743,1.329,1744,1.329,1745,1.329,1746,1.329,1747,1.367,1748,1.367,1749,1.367,1750,1.367,1751,1.367,1752,1.367,1753,1.367,1754,1.367,1755,2.44,1756,1.367,1757,1.367,1758,1.406,1759,1.406,1760,1.406,1761,1.406,1762,1.406,1763,1.406,1764,1.406,1765,1.448,1766,1.448,1767,1.448,1768,1.448,1769,1.448,1770,1.448,1771,1.448,1772,1.539,1773,1.539,1774,1.539,1775,1.539,1776,1.539,1777,1.539,1778,1.539,1779,1.539,1780,1.589,1781,1.589,1782,1.589,1783,1.589,1784,1.589,1785,1.589,1786,1.589,1787,1.7,1788,1.7,1789,1.7,1790,1.7,1791,1.7,1792,1.7,1793,1.7,1794,1.7,1795,1.7,1796,1.7,1797,1.7,1798,1.7,1799,1.7,1800,1.7,1801,1.7,1802,1.7,1803,1.7,1804,1.7,1805,1.7,1806,1.7,1807,1.7,1808,1.762,1809,1.762,1810,1.762,1811,1.762,1812,1.762,1813,1.762,1814,1.762,1815,1.762,1816,1.762,1817,1.762,1818,1.762,1819,1.762,1820,1.762,1821,1.762,1822,1.762,1823,1.762,1824,1.762,1825,1.762,1826,1.83,1827,1.83,1828,1.905,1829,1.905,1830,1.905,1831,1.905,1832,1.905,1833,1.905,1834,1.905,1835,1.905,1836,1.905,1837,1.905,1838,1.905,1839,1.905,1840,1.905,1841,1.905,1842,1.905,1843,1.905,1844,1.905,1845,1.905,1846,1.905,1847,1.905,1848,1.988,1849,1.988,1850,1.988,1851,1.988,1852,1.988,1853,1.988,1854,1.988,1855,1.988,1856,1.988,1857,1.988,1858,1.988,1859,1.988,1860,1.988,1861,1.988,1862,1.988,1863,1.988,1864,1.988,1865,1.988,1866,1.988,1867,1.988,1868,1.988,1869,1.988,1870,1.988,1871,1.988,1872,1.988,1873,1.988,1874,1.988,1875,1.988,1876,1.988,1877,1.988,1878,1.988,1879,1.988,1880,2.314,1881,2.03,1882,2.465,1883,2.296,1884,2.465,1886,2.082,1887,2.314,1888,1.448,1889,1.589,1890,2.465,1891,2.16,1892,4.399,1893,4.334,1894,4.333,1895,4.399,1896,4.334,1897,4.334,1898,2.905,1899,1.988,1900,4.581,1901,2.598,1902,6.684,1903,5.25,1904,5.185,1905,5.474,1906,4.862,1907,5.749,1908,6.151,1909,4.334,1910,4.735,1911,6.451,1912,4.334,1913,4.735,1914,2.653,1915,2.905,1916,4.334,1917,3.958,1918,5.749,1919,7.427,1920,4.334,1921,5.25,1922,5.749,1923,4.334,1924,5.749,1925,5.185,1926,4.334,1927,5.749,1928,2.905,1929,1.905,1930,3.678,1931,2.905,1932,2.189,1933,2.189,1934,2.653,1935,2.653,1936,4.334,1937,4.334,1938,5.185,1939,2.905,1940,2.905,1941,5.749,1942,2.653,1943,2.905,1944,2.653,1945,2.905,1946,2.189,1947,2.905,1948,2.314,1949,2.905,1950,2.905,1951,2.905,1952,4.334,1953,2.905,1954,2.905,1955,2.905,1956,2.905,1957,4.334,1958,5.749,1959,2.905,1960,2.905,1961,2.905,1962,2.905,1963,2.45,1964,2.296,1965,2.653,1966,2.653,1967,5.185,1968,2.629,1969,6.87,1970,5.185,1971,1.762,1972,2.905,1973,2.905,1974,0.857,1975,1.905,1976,1.905,1977,4.384,1978,2.653,1979,1.762,1980,2.905,1981,2.905,1982,2.905,1983,5.25,1984,5.749,1985,2.843,1986,1.905,1987,2.905,1988,2.905,1989,2.905,1990,4.334,1991,4.334,1992,4.334,1993,4.334,1994,2.189,1995,2.905,1996,2.905,1997,2.653,1998,1.988,1999,2.465,2000,3.678,2001,2.905,2002,2.905,2003,2.082,2004,3.267,2005,3.267,2006,2.905,2007,1.988,2008,2.905,2009,2.082,2010,2.905,2011,4.034,2012,2.905,2013,2.905,2014,2.905,2015,2.905,2016,5.749,2017,5.185,2018,5.749,2019,2.465,2020,2.465,2021,2.905,2022,4.334,2023,4.334,2024,4.334,2025,4.334,2026,4.334,2027,2.905,2028,4.334,2029,4.334,2030,2.905,2031,2.905,2487,3.287,2488,2.314,2489,3.287,2490,4.905,2491,4.334,2492,4.905,2493,5.868,2494,5.868,2495,5.868,2496,4.905,2497,4.905,2498,4.905,2499,4.905,2500,2.905]],["title/java/easy-print.html#PrintCanvas-java",[2032,3.921]],["body/java/easy-print.html#PrintCanvas-java",[1,5.847,3,0.077,4,0.201,5,0.139,6,0.122,7,0.148,8,0.157,9,0.183,10,0.202,11,0.3,12,0.202,13,0.211,14,0.479,15,0.331,16,0.331,17,0.352,18,0.375,19,0.386,22,0.663,31,1.272,32,0.768,46,0.663,49,0.695,60,0.469,61,0.457,62,0.457,63,0.445,64,0.547,65,0.561,66,0.618,67,0.633,68,0.663,69,0.648,70,0.695,71,0.711,72,0.711,73,0.745,74,0.779,75,0.779,76,0.815,77,0.815,78,0.834,79,1.119,80,1.389,82,2.024,91,3.923,97,1.956,99,1.321,100,1.321,101,1.321,103,1.628,104,1.461,105,1.628,107,1.724,108,3.02,109,2.024,111,3.788,112,1.289,114,0.411,116,2.136,122,0.797,126,1.424,163,2.783,277,0.872,281,0.779,282,1.321,283,1.424,284,1.424,297,0.998,299,1.389,301,0.815,310,0.912,331,1.2,359,2.607,377,1.069,378,1.045,379,1.259,421,1.321,442,1.354,445,1.461,450,2.368,802,1.583,809,1.321,810,4.16,820,1.956,827,2.099,828,0.954,1019,0.369,1022,1.321,1030,1.421,1031,1.777,1032,0.72,1034,0.582,1041,0.925,1155,4.813,1166,0.872,1186,0.872,1187,2.18,1188,0.998,1189,1.229,1199,2.401,1226,0.954,1228,0.834,1372,0.853,1373,0.853,1374,0.872,1375,0.892,1376,0.853,1377,0.912,1378,0.954,1396,2.099,1397,3.877,1421,1.461,1436,2.401,1437,2.506,1438,2.253,1635,3.229,1640,1.045,1641,1.045,1642,1.045,1643,1.094,1644,1.119,1645,1.119,1646,1.119,1647,1.119,1648,1.119,1649,1.119,1650,1.119,1651,1.119,1652,1.119,1653,1.119,1654,1.119,1655,1.119,1688,3.354,1689,3.46,1693,3.759,1696,1.668,1697,1.172,1698,1.172,1699,1.2,1700,1.2,1701,1.2,1702,1.259,1703,1.259,1704,1.259,1705,1.259,1706,1.259,1707,1.289,1708,1.289,1709,1.289,1710,1.289,1711,1.289,1712,1.289,1713,1.289,1714,1.289,1715,1.389,1716,1.389,1717,1.389,1718,1.354,1719,1.389,1720,1.389,1721,1.389,1722,1.389,1723,1.389,1724,1.5,1725,1.5,1726,1.5,1727,1.5,1728,1.5,1729,1.5,1730,1.5,1731,1.5,1732,1.5,1733,1.5,1734,1.5,1735,1.5,1736,1.5,1737,1.354,1738,1.461,1739,1.541,1740,1.541,1741,1.461,1742,1.583,1743,1.583,1744,1.583,1745,1.583,1746,1.583,1747,1.628,1748,1.628,1749,1.628,1750,1.628,1751,1.628,1752,1.628,1753,1.628,1754,1.628,1755,1.628,1756,1.628,1757,1.628,1758,1.675,1759,1.675,1760,1.675,1761,1.675,1762,1.675,1763,1.675,1764,1.675,1765,1.724,1766,1.724,1767,1.724,1768,1.724,1769,1.724,1770,1.724,1771,1.724,1772,1.833,1773,1.833,1774,1.833,1775,1.833,1776,1.833,1777,1.833,1778,1.833,1779,1.833,1880,2.756,1881,1.927,1882,2.935,1884,2.935,1888,1.724,1901,2.08,1905,4.177,1906,2.607,1917,3.16,1921,5.703,1942,5.235,1944,5.235,1946,4.973,1948,4.567,1974,1.021,1978,3.16,1985,4.939,1986,3.229,2032,3.16,2033,2.935,2034,2.317,2035,3.46,2036,2.935,2037,7.056,2038,7.262,2039,7.212,2040,5.732,2041,4.923,2042,2.935,2043,6.245,2044,3.46,2045,3.46,2046,3.46,2047,3.46,2048,3.46,2049,3.46,2050,3.46,2051,4.923,2052,3.46,2053,5.732,2054,6.245,2055,3.46,2056,3.16,2057,3.16,2058,3.16,2059,4.496,2060,6.245,2061,2.099,2062,3.16,2063,3.46,2064,5.732,2065,3.46,2066,3.46,2067,3.46,2068,3.46,2069,3.46,2070,3.46,2071,3.46,2072,6.245,2073,6.245,2074,6.026,2075,4.923,2076,6.245,2077,4.923,2078,4.923,2079,4.923,2080,4.923,2081,3.46,2082,3.16,2083,3.16,2084,3.46,2085,3.46,2086,3.46,2087,3.46,2088,4.923,2089,1.956,2090,3.46,2091,3.46,2092,3.46,2093,3.46,2488,2.756,2501,3.915,2502,7.468,2503,7.067]],["title/java/easy-print.html#圖形與字型公用程式",[2504,4.859]],["body/java/easy-print.html#圖形與字型公用程式",[3,0.077,4,0.242,5,0.287,6,0.101,7,0.122,8,0.13,9,0.152,10,0.167,11,0.175,12,0.167,13,0.175,14,0.239,15,0.274,16,0.274,17,0.292,18,0.31,19,0.319,22,0.654,23,1.781,25,2.825,31,1.107,32,0.776,46,0.549,49,0.575,56,0.625,60,0.388,61,0.378,62,0.378,63,0.368,64,0.453,65,0.464,66,0.511,67,0.524,68,0.549,69,0.536,70,0.575,71,0.588,72,0.588,73,0.616,74,0.645,75,0.645,76,0.674,77,0.674,78,0.69,79,0.926,80,1.149,82,1.675,97,1.618,99,1.093,100,1.093,101,1.093,103,1.347,104,1.209,105,1.347,107,1.426,110,2.28,111,4.387,112,1.067,114,0.584,121,4.095,122,0.659,140,2.071,142,3.184,151,3.486,152,2.786,163,4.088,192,2.28,277,0.722,281,0.645,282,1.093,283,1.178,284,1.178,297,0.826,299,1.149,301,0.674,310,0.755,331,0.993,340,3.073,359,2.157,377,0.884,378,0.864,379,1.041,400,1.47,407,1.241,421,1.093,442,1.12,445,1.209,450,1.959,802,1.31,809,1.093,820,1.618,827,1.736,1017,1.959,1019,0.321,1022,1.093,1030,0.826,1032,0.698,1034,0.898,1041,0.694,1054,2.561,1147,4.293,1154,5.45,1166,0.722,1186,1.541,1188,0.826,1189,1.017,1226,0.789,1228,0.69,1372,0.705,1373,0.705,1374,0.722,1375,0.738,1376,0.705,1377,0.755,1378,0.789,1388,1.516,1415,4.31,1421,1.209,1436,2.42,1437,1.72,1438,1.31,1640,0.864,1641,0.864,1642,0.864,1643,0.905,1644,0.926,1645,0.926,1646,0.926,1647,0.926,1648,0.926,1649,0.926,1650,0.926,1651,0.926,1652,0.926,1653,0.926,1654,0.926,1655,0.926,1688,4.002,1696,0.97,1697,0.97,1698,0.97,1699,0.993,1700,0.993,1701,0.993,1702,1.041,1703,1.041,1704,1.041,1705,1.041,1706,1.041,1707,1.067,1708,1.067,1709,1.067,1710,1.067,1711,1.067,1712,1.067,1713,1.067,1714,1.067,1715,1.149,1716,1.149,1717,1.149,1718,1.12,1719,1.149,1720,1.149,1721,1.149,1722,1.149,1723,1.149,1724,1.241,1725,1.241,1726,1.241,1727,1.241,1728,1.241,1729,1.241,1730,1.241,1731,1.241,1732,1.241,1733,1.241,1734,1.241,1735,1.241,1736,1.241,1737,1.12,1738,1.209,1739,1.275,1740,1.275,1741,1.209,1742,1.31,1743,1.31,1744,1.31,1745,1.31,1746,1.31,1747,1.347,1748,1.347,1749,1.347,1750,1.347,1751,1.347,1752,1.347,1753,1.347,1754,1.347,1755,1.347,1756,1.347,1757,1.347,1758,1.385,1759,1.385,1760,1.385,1761,1.385,1762,1.385,1763,1.385,1764,1.385,1765,1.426,1766,1.426,1767,1.426,1768,1.426,1769,1.426,1770,1.426,1771,1.426,1772,1.516,1773,1.516,1774,1.516,1775,1.516,1776,1.516,1777,1.516,1778,1.516,1779,1.516,1780,1.565,1781,1.565,1782,1.565,1783,1.565,1784,1.565,1785,1.565,1786,1.565,1787,1.675,1788,1.675,1789,1.675,1790,1.675,1791,1.675,1792,1.675,1793,1.675,1794,1.675,1795,1.675,1796,1.675,1797,1.675,1798,1.675,1799,1.675,1800,1.675,1801,1.675,1802,1.675,1803,1.675,1804,1.675,1805,1.675,1806,1.675,1807,1.675,1808,1.736,1809,1.736,1810,1.736,1811,1.736,1812,1.736,1813,1.736,1814,1.736,1815,1.736,1816,1.736,1817,1.736,1818,1.736,1819,1.736,1820,1.736,1821,1.736,1822,1.736,1823,1.736,1824,1.736,1825,1.736,1826,1.803,1827,1.803,1828,1.877,1829,1.877,1830,1.877,1831,1.877,1832,1.877,1833,1.877,1834,1.877,1835,1.877,1836,1.877,1837,1.877,1838,1.877,1839,1.877,1840,1.877,1841,1.877,1842,1.877,1843,1.877,1844,1.877,1845,1.877,1846,1.877,1847,1.877,1880,2.28,1881,1.678,1882,2.428,1884,2.428,1886,2.051,1888,1.426,1932,2.157,1933,2.157,1934,2.614,1935,2.614,1971,1.736,2033,2.428,2034,1.347,2061,2.6,2094,2.862,2095,6.136,2096,6.044,2097,5.212,2098,5.212,2100,2.862,2101,5.582,2102,2.614,2103,4.693,2104,6.112,2105,4.944,2106,5.957,2107,4.573,2108,7.325,2109,7.123,2110,6.651,2111,7.232,2112,5.212,2113,1.803,2114,6.112,2115,2.862,2116,1.877,2117,3.415,2118,4.286,2119,2.862,2120,2.862,2121,2.862,2122,2.862,2123,1.736,2124,2.862,2125,2.862,2126,2.862,2127,2.862,2128,2.862,2129,6.415,2130,3.231,2131,5.707,2132,2.428,2133,2.862,2134,6.136,2135,2.862,2136,2.862,2137,7.765,2138,5.707,2139,5.707,2140,5.707,2141,4.286,2142,4.286,2143,2.862,2144,2.862,2145,2.862,2146,2.862,2147,2.862,2148,2.862,2149,5.707,2150,4.286,2151,3.073,2152,3.637,2153,2.862,2154,5.707,2155,2.862,2156,6.112,2157,5.139,2158,4.286,2159,5.139,2160,2.862,2161,2.862,2162,2.862,2163,2.862,2164,2.862,2165,4.286,2166,2.862,2167,2.862,2168,2.862,2169,2.862,2170,2.862,2171,4.286,2172,2.862,2173,2.862,2174,2.862,2488,2.28,2505,3.239,2506,3.239,2507,4.851]],["title/java/easy-print.html#印表範例",[2508,4.859]],["body/java/easy-print.html#印表範例",[2,0.358,3,0.077,4,0.228,5,0.249,6,0.249,7,0.278,8,0.272,9,0.351,10,0.305,11,0.296,12,0.37,13,0.378,14,0.315,15,0.282,16,0.171,17,0.182,18,0.193,19,0.199,22,0.669,23,0.411,25,0.649,31,1.005,32,0.732,46,0.342,49,0.358,52,1.344,56,0.459,60,0.242,61,0.235,62,0.235,63,0.229,64,0.282,65,0.289,66,0.319,67,0.326,68,0.342,69,0.334,70,0.358,71,0.367,72,0.367,73,0.384,74,0.402,75,0.402,76,0.42,77,0.42,78,0.43,79,0.577,80,1.76,82,1.044,90,0.889,95,2.252,97,1.008,98,0.753,99,0.681,100,0.681,101,0.681,108,0.816,114,0.315,116,1.634,122,0.411,126,1.215,128,1.386,140,2.152,152,2.504,162,0.619,163,2.479,167,2.289,277,0.45,281,0.665,282,0.681,283,0.734,284,0.734,288,1.048,292,1.082,297,0.515,299,0.716,301,0.42,309,1.124,310,0.47,331,0.619,332,1.124,338,2.115,377,0.912,378,0.891,379,0.649,383,0.945,400,0.916,403,1.124,407,0.773,421,0.681,442,0.698,444,1.124,445,0.753,447,1.124,802,1.35,809,0.681,827,1.082,828,0.492,831,1.515,1019,0.364,1022,0.681,1025,5.098,1030,1.599,1031,0.916,1032,0.653,1034,0.934,1037,1.024,1041,0.839,1166,0.45,1186,0.45,1188,0.515,1189,0.634,1196,4.307,1199,1.917,1211,2.159,1225,1.073,1226,0.492,1228,0.43,1364,1.515,1372,0.44,1373,0.44,1374,0.45,1375,0.46,1376,0.44,1377,0.47,1378,0.492,1397,2.479,1436,1.073,1635,3.941,1640,0.539,1641,0.539,1642,0.539,1643,0.564,1644,0.577,1645,0.577,1646,0.577,1647,0.577,1648,0.577,1649,0.577,1650,0.577,1651,0.577,1652,0.577,1653,0.577,1654,0.577,1655,0.577,1676,1.513,1688,1.044,1696,0.604,1697,0.604,1698,0.604,1699,0.619,1700,0.619,1701,0.619,1702,0.649,1703,0.649,1704,0.649,1705,0.649,1706,0.649,1707,0.665,1708,0.665,1709,0.665,1710,0.665,1711,0.665,1712,0.665,1713,0.665,1714,0.665,1715,0.716,1716,0.716,1717,0.716,1718,0.698,1719,0.716,1720,0.716,1721,0.716,1722,0.716,1723,0.716,1724,0.773,1725,0.773,1726,0.773,1727,0.773,1728,0.773,1729,0.773,1730,0.773,1731,0.773,1732,0.773,1733,0.773,1734,0.773,1735,0.773,1736,0.773,1737,0.698,1738,0.753,1739,0.794,1740,0.794,1741,0.753,1742,0.816,1743,0.816,1744,0.816,1745,0.816,1746,0.816,1747,0.839,1748,0.839,1749,0.839,1750,0.839,1751,0.839,1752,0.839,1753,0.839,1754,0.839,1755,0.839,1756,0.839,1757,0.839,1758,0.863,1759,0.863,1760,0.863,1761,0.863,1762,0.863,1763,0.863,1764,0.863,1765,0.889,1766,0.889,1767,0.889,1768,0.889,1769,0.889,1770,0.889,1771,0.889,1772,0.945,1773,0.945,1774,0.945,1775,0.945,1776,0.945,1777,0.945,1778,0.945,1779,0.945,1780,0.975,1781,0.975,1782,0.975,1783,0.975,1784,0.975,1785,0.975,1786,0.975,1787,1.044,1788,1.044,1789,1.044,1790,1.044,1791,1.044,1792,1.044,1793,1.044,1794,1.044,1795,1.044,1796,1.044,1797,1.044,1798,1.044,1799,1.044,1800,1.044,1801,1.044,1802,1.044,1803,1.044,1804,1.044,1805,1.044,1806,1.044,1807,1.044,1808,1.082,1809,1.082,1810,1.082,1811,1.082,1812,1.082,1813,1.082,1814,1.082,1815,1.082,1816,1.082,1817,1.082,1818,1.082,1819,1.082,1820,1.082,1821,1.082,1822,1.082,1823,1.082,1824,1.082,1825,1.082,1826,1.124,1827,1.124,1828,1.17,1829,1.17,1830,1.17,1831,1.17,1832,1.17,1833,1.17,1834,1.17,1835,1.17,1836,1.17,1837,1.17,1838,1.17,1839,1.17,1840,1.17,1841,1.17,1842,1.17,1843,1.17,1844,1.17,1845,1.17,1846,1.17,1847,1.17,1848,1.221,1849,1.221,1850,1.221,1851,1.221,1852,1.221,1853,1.221,1854,1.221,1855,1.221,1856,1.221,1857,1.221,1858,1.221,1859,1.221,1860,1.221,1861,1.221,1862,1.221,1863,1.221,1864,1.221,1865,1.221,1866,1.221,1867,1.221,1868,1.221,1869,1.221,1870,1.221,1871,1.221,1872,1.221,1873,1.221,1874,1.221,1875,1.221,1876,1.221,1877,1.221,1878,1.221,1879,1.221,1880,1.421,1881,1.717,1883,0.945,1886,1.279,1887,1.421,1888,0.889,1890,1.513,1894,1.344,1895,2.504,1899,1.221,1901,0.753,1905,2.504,1910,1.629,1913,1.629,1914,1.629,1946,1.344,1965,1.629,1966,5.291,1974,0.871,1983,2.695,2034,1.388,2038,7.564,2056,1.629,2057,1.629,2062,1.629,2074,1.629,2082,1.629,2083,1.629,2103,1.629,2107,1.082,2116,2.876,2117,2.351,2123,2.289,2175,2.951,2176,1.279,2177,1.279,2178,1.279,2179,1.279,2180,1.279,2181,1.279,2182,1.279,2183,1.279,2184,1.279,2185,1.279,2186,1.279,2187,1.279,2188,1.279,2189,1.279,2190,1.279,2191,1.279,2192,1.279,2193,1.279,2194,1.279,2195,1.279,2196,1.279,2197,1.279,2198,1.279,2199,1.279,2200,1.279,2201,1.279,2202,1.279,2203,1.279,2204,1.279,2205,1.279,2206,1.279,2207,1.279,2208,1.279,2209,1.344,2210,1.344,2211,1.344,2212,1.344,2213,1.344,2214,1.344,2215,1.344,2216,1.344,2217,1.344,2218,1.344,2219,1.344,2220,1.344,2221,1.344,2222,1.221,2223,1.344,2224,1.344,2225,1.344,2226,1.344,2227,1.344,2228,1.344,2229,1.344,2230,1.344,2231,1.344,2232,1.344,2233,1.344,2234,1.344,2235,1.344,2236,1.344,2237,1.344,2238,1.344,2239,1.344,2240,1.344,2241,1.344,2242,1.344,2243,1.344,2244,1.344,2245,1.344,2246,1.344,2247,1.784,2248,1.784,2249,1.784,2250,1.784,2251,1.629,2252,1.784,2253,2.951,2254,3.774,2259,1.784,2260,1.784,2262,4.7,2263,1.784,2264,1.784,2265,1.784,2266,1.784,2267,1.784,2268,2.951,2269,1.784,2270,5.794,2271,5.54,2272,5.54,2273,5.54,2274,4.385,2275,4.385,2276,4.385,2277,1.784,2278,2.951,2279,2.695,2280,1.629,2281,5.487,2282,5.794,2283,6.44,2284,2.951,2285,1.629,2286,1.471,2287,0.916,2288,1.784,2289,1.784,2290,1.784,2291,1.784,2292,1.784,2293,1.784,2294,1.784,2295,1.784,2296,2.951,2297,1.784,2298,1.784,2300,1.784,2301,3.175,2302,1.784,2303,1.784,2305,1.784,2307,1.784,2309,2.951,2310,1.784,2311,1.784,2312,1.221,2313,6.981,2314,5.291,2315,4.005,2316,5.926,2317,2.695,2318,1.784,2319,2.951,2320,2.951,2321,2.951,2323,2.951,2324,2.951,2325,1.784,2326,4.385,2327,1.784,2328,5.291,2329,1.784,2330,6.488,2331,1.784,2332,4.858,2333,2.951,2334,6.008,2335,1.784,2336,1.784,2337,1.17,2338,4.385,2339,1.784,2340,1.784,2341,1.784,2342,1.784,2345,2.951,2346,1.784,2347,1.784,2348,1.784,2349,2.951,2350,1.784,2351,6.61,2352,3.774,2353,2.695,2354,5.233,2355,1.784,2356,2.695,2357,1.784,2358,1.784,2359,1.784,2360,1.784,2361,1.784,2362,2.951,2363,6.35,2364,1.784,2365,1.784,2366,3.774,2367,2.951,2368,5.233,2369,3.774,2370,5.233,2371,1.784,2373,2.951,2374,1.784,2375,2.951,2376,4.175,2377,1.784,2378,2.951,2379,1.784,2380,1.629,2381,1.629,2382,1.127,2383,1.784,2384,1.784,2385,1.421,2386,1.784,2387,1.784,2388,3.774,2389,3.774,2390,4.385,2391,2.951,2392,2.951,2393,1.784,2394,1.784,2395,1.784,2396,1.784,2397,1.784,2398,2.951,2399,1.784,2400,1.784,2401,1.784,2402,1.784,2403,1.784,2404,1.513,2405,2.951,2406,1.17,2407,4.385,2408,1.784,2409,1.784,2410,1.784,2411,3.774,2412,6.815,2413,3.87,2414,3.774,2415,1.784,2416,4.113,2417,2.951,2418,4.385,2419,2.951,2420,4.385,2421,4.441,2422,2.951,2423,2.951,2424,4.385,2425,3.305,2426,2.583,2427,5.233,2428,1.784,2429,2.695,2430,1.784,2431,6.44,2432,3.774,2433,2.115,2434,2.951,2435,2.951,2436,4.385,2437,1.784,2438,1.784,2439,1.784,2440,4.385,2441,1.784,2442,4.385,2443,4.385,2444,2.951,2445,2.951,2446,2.951,2447,3.774,2448,3.774,2449,3.774,2450,2.951,2451,1.784,2452,1.784,2453,3.774,2454,1.784,2455,1.784,2456,1.784,2457,1.784,2458,1.784,2459,1.784,2460,3.721,2461,1.784,2462,1.784,2463,4.441,2464,1.784,2465,1.784,2466,1.784,2467,1.784,2468,3.774,2469,2.504,2470,2.951,2471,2.951,2472,1.784,2473,1.784,2474,1.784,2475,1.784,2476,2.951,2477,1.784,2478,1.784,2479,2.224,2480,1.784,2481,1.784,2482,1.784,2483,1.784,2484,1.513,2485,1.784,2486,1.784,2509,2.019,2510,2.019,2511,4.271,2512,2.019,2513,4.271,2514,3.339,2515,3.339,2516,3.339,2517,3.339,2518,2.019,2519,2.019,2520,2.019,2521,2.019,2522,2.019,2523,2.019,2524,3.339,2525,3.339,2526,4.271,2527,2.019,2528,4.963,2529,2.019,2530,2.019,2531,2.019,2532,2.019,2533,3.339,2534,5.923,2535,2.019,2536,2.019,2537,2.019,2538,4.271,2539,2.019,2540,3.339,2541,2.019,2542,2.019,2543,2.019,2544,2.019,2545,2.019,2546,2.019,2547,2.019,2548,2.019,2549,2.019,2550,4.271,2551,4.271,2552,4.271,2553,2.019,2554,4.271,2555,2.019,2556,3.339,2557,2.019,2558,2.019,2559,2.019,2560,2.019,2561,2.019,2562,2.019,2563,3.339,2564,3.339,2565,2.019,2566,2.019,2567,2.019,2568,2.019,2569,2.019,2570,2.019,2571,2.019,2572,2.019,2573,2.019,2574,2.019,2575,2.019,2576,2.019,2577,2.019,2578,2.019,2579,2.019,2580,2.019,2581,2.019,2582,2.019,2583,2.019,2584,2.019,2585,2.019,2586,2.019,2587,2.019,2588,2.019,2589,2.019,2590,1.784,2591,2.019,2592,2.019,2593,2.019]],["title/java/encapsulation.html",[3,0.039]],["body/java/encapsulation.html",[3,0.077,4,0.235,5,0.304,6,0.267,7,0.316,8,0.331,9,0.374,10,0.388,11,0.406,12,0.388,13,0.389,14,0.501,15,0.574,16,0.574,17,0.611,18,0.591,19,0.609,22,0.614,23,1.066,24,0.767,31,0.732,36,2.607,37,3.732,38,2.981,39,2.569,42,2.081,46,0.887,49,0.637,54,4.127,56,0.953,60,0.74,61,0.721,62,0.721,63,0.701,64,0.864,65,0.75,66,0.826,67,0.846,68,0.887,69,0.867,70,0.929,71,0.652,72,0.652,73,0.683,74,0.715,75,0.715,76,0.748,77,0.748,78,0.765,79,1.026,112,2.482,114,0.649,122,0.731,132,4.773,134,4.986,152,2.236,254,2.391,261,4.35,277,0.8,288,2.593,301,0.748,368,1.553,764,1.536,799,3.511,800,2.707,824,2.692,828,2.041,830,4.919,1019,0.619,1030,2.107,1032,0.761,1034,0.863,1035,1.354,1039,1.248,1041,0.81,1166,0.8,1182,2.53,1186,1.886,1199,1.397,1211,2.721,1234,1.493,1368,3.167,1371,2.391,1372,0.782,1373,0.782,1374,0.8,1375,0.818,1376,0.782,1377,0.837,1397,3.983,1421,3.439,1425,3.167,1436,1.986,1450,2.692,1634,4.115,1637,2.081,1670,2.692,1737,1.242,1974,1.365,1979,2.806,2117,3.686,2413,2.528,2594,2.391,2595,3.59,2596,5.091,2597,3.173,2598,3.173,2599,3.173,2600,3.173,2601,3.173,2602,3.173,2603,3.173,2604,3.173,2605,3.173,2606,3.173,2607,3.173,2608,3.173,2609,3.173,2610,4.986,2611,3.173,2612,3.173,2613,3.173,2614,5.459,2615,3.173,2616,6.379,2617,3.59,2618,4.626,2619,3.173,2620,3.173,2621,3.173,2622,3.59,2623,5.459,2624,4.626,2625,3.173,2626,3.173,2627,3.173,2628,4.626,2629,2.391,2630,3.173,2631,1.999,2632,3.173,2633,3.173,2634,6.082,2635,4.986,2636,3.173,2637,3.173,2638,3.173,2639,3.173,2640,3.173,2641,3.173,2642,6.379,2643,3.173,2644,6,2645,6,2646,6,2647,2.692,2648,3.173,2649,3.173,2650,3.59,2651,2.692,2652,4.626,2653,5.459,2654,3.173,2655,2.391,2656,2.528,2657,4.773,2658,6.195,2659,4.44,2660,2.692,2661,3.316,2662,3.925,2663,3.925,2664,4.986,2665,2.692,2666,2.692,2667,3.925,2668,2.692,2669,2.692,2670,3.925,2671,2.528,2672,2.707,2673,3.78,2674,2.692]],["title/java/encapsulation.html#封裝的意義",[2675,4.859]],["body/java/encapsulation.html#封裝的意義",[2676,7.413,2677,7.413]],["title/java/encapsulation.html#類別成員的存取",[2678,4.859]],["body/java/encapsulation.html#類別成員的存取",[3,0.076,4,0.176,5,0.232,6,0.204,7,0.247,8,0.261,9,0.306,10,0.337,11,0.352,12,0.337,13,0.352,14,0.482,15,0.552,16,0.552,17,0.588,22,0.662,56,0.927,543,2.964,582,2.715,1019,0.583,1032,0.739,1186,1.993,1368,4.713,1397,4.468,1421,3.22,1580,4.896,2594,4.349,2596,6.467,2597,5.77,2598,5.77,2599,5.77,2600,5.77,2601,5.77,2602,5.77,2603,5.77,2604,5.77,2605,5.77,2606,5.77,2607,5.77,2608,5.77,2609,5.77,2679,6.53,2680,6.53,2681,6.53,2682,6.53,2683,6.53,2684,6.53,2685,6.53,2686,6.53,2687,6.53,2688,6.53,2689,6.53,2690,6.53,2691,6.53,2692,6.53,2693,6.53,2694,6.53,2695,4.598,2696,6.53,2697,6.53,2698,6.53,2699,6.53]],["title/java/encapsulation.html#Package-的定義",[1421,1.347,2700,3.61]],["body/java/encapsulation.html#Package-的定義",[3,0.075,4,0.233,5,0.288,6,0.253,7,0.284,8,0.246,9,0.287,10,0.316,11,0.331,12,0.316,23,1.249,24,0.569,39,3.12,56,0.659,79,1.753,114,0.453,183,2.953,197,3.288,288,1.926,368,1.534,582,3.12,764,2.624,824,4.599,961,5.421,1019,0.623,1032,0.747,1034,0.641,1035,0.992,1041,0.659,1182,2.964,1421,3.472,1450,4.599,1484,4.951,1500,4.319,1580,4.599,2610,4.951,2611,5.421,2612,5.421,2613,5.421,2614,7.163,2615,5.421,2616,7.655,2618,5.421,2619,5.421,2620,5.421,2621,5.421,2624,6.63,2625,5.421,2626,5.421,2627,5.421,2628,5.421,2629,4.086,2701,4.599,2702,6.134,2703,6.134,2704,6.134,2705,6.134,2706,6.134,2707,6.134,2708,6.134,2709,6.134,2710,6.134,2711,6.134,2712,6.134,2713,6.134,2714,6.134,2715,6.134,2716,6.134,2717,6.134,2718,6.134,2719,6.134,2720,6.134,2721,6.134,2722,6.134,2723,6.134,2724,6.134,2725,6.134,2726,6.134,2727,6.134,2728,6.134,2729,6.134,2730,6.134,2731,6.134,2732,6.134,2733,7.503,2734,6.134,2735,6.134,2736,6.134,2737,6.134,2738,6.134,2739,6.134,2740,6.134,2741,6.134,2742,6.134,2743,6.134,2744,6.134,2745,6.134,2746,6.134,2747,6.134,2748,6.134,2749,6.134,2750,6.134]],["title/java/encapsulation.html#Package-的引用",[1421,1.347,2751,3.61]],["body/java/encapsulation.html#Package-的引用",[3,0.076,4,0.233,5,0.3,6,0.263,7,0.319,8,0.338,9,0.351,23,1.244,24,0.783,36,2.799,56,0.906,114,0.623,132,5.578,134,6.531,183,2.946,288,2.764,368,1.36,576,4.07,1019,0.612,1030,2.296,1032,0.736,1034,0.881,1035,1.364,1039,1.784,1041,0.657,1421,3.361,1425,4.528,1500,4.303,1634,5.39,2117,4.303,2610,6.041,2623,5.401,2630,5.401,2631,3.403,2632,5.401,2633,5.401,2634,4.932,2635,4.932,2636,5.401,2637,5.401,2752,6.112,2753,6.112,2754,6.112,2755,6.112,2756,6.112,2757,6.112,2758,6.112,2759,6.112,2760,6.112,2761,6.112,2762,6.112,2763,6.112,2764,6.112,2765,6.112,2766,6.112,2767,6.112,2768,6.112,2769,6.112,2770,6.112,2771,6.112,2772,5.401,2773,6.112,2774,6.112,2775,6.112,2776,6.112,2777,6.112,2778,6.112,2779,6.112,2780,4.303,2781,6.112,2782,6.112,2783,6.112,2784,6.112,2785,6.112,2786,6.112,2787,6.112,2788,6.112,2789,5.401,2790,6.112,2791,6.112,2792,6.112,2793,6.112,2794,6.112]],["title/java/encapsulation.html#下面的程式碼哪裡有錯",[2795,4.859]],["body/java/encapsulation.html#下面的程式碼哪裡有錯",[3,0.076,4,0.169,5,0.223,6,0.196,7,0.237,8,0.251,9,0.294,10,0.323,11,0.338,12,0.323,13,0.338,14,0.463,15,0.53,16,0.53,17,0.565,18,0.6,19,0.618,24,0.79,46,1.063,49,1.114,56,0.972,60,0.752,61,0.732,62,0.732,63,0.712,64,0.877,65,0.899,66,0.991,67,1.014,68,1.063,69,1.039,70,1.114,71,1.14,72,1.14,73,1.193,74,1.249,75,1.249,76,1.307,77,1.307,78,1.336,114,0.668,122,1.277,261,5.764,277,1.398,301,1.307,1019,0.577,1030,1.94,1032,0.749,1034,0.889,1035,1.376,1166,1.398,1186,1.398,1372,1.367,1373,1.367,1374,1.398,1375,1.43,1376,1.367,1377,1.462,1397,3.134,1421,3.254,1670,4.705,1974,1.984,2634,7.036,2635,6.139,2638,5.545,2639,5.545,2640,5.545,2641,5.545,2642,7.704,2643,5.545,2644,7.521,2645,7.521,2646,7.521,2647,4.705,2648,5.545]],["title/java/encapsulation.html#Java-檔和-Class-檔的相依性",[368,0.433,1019,0.158,2796,2.384,2797,2.384]],["body/java/encapsulation.html#Java-檔和-Class-檔的相依性",[3,0.076,4,0.216,5,0.285,6,0.25,7,0.287,8,0.304,9,0.356,10,0.391,11,0.409,12,0.391,13,0.409,14,0.506,15,0.579,16,0.579,17,0.617,18,0.656,19,0.676,22,0.489,24,0.494,31,0.959,36,2.372,37,4.293,38,3.258,39,2.21,42,3.081,46,0.901,54,4.461,56,0.737,60,0.822,61,0.8,62,0.8,63,0.779,64,0.959,65,0.762,66,0.839,67,0.86,68,0.901,69,0.88,70,0.944,112,2.8,114,0.592,152,2.642,183,2.699,245,5.535,254,3.541,288,2.383,368,1.457,582,2.21,799,4.147,800,3.546,828,2.191,830,5.357,967,4.698,1019,0.572,1032,0.724,1034,0.555,1035,1.109,1041,0.862,1186,1.787,1199,1.83,1211,2.941,1234,2.21,1371,3.541,1436,2.441,1637,3.081,1737,1.839,1979,3.676,2649,4.698,2651,3.986,2652,6.06,2653,6.709,2654,4.698,2655,3.541,2656,3.743,2657,5.385,2658,6.695,2659,4.88,2660,3.986,2661,4.344,2662,5.142,2663,5.142,2664,6.127,2665,3.986,2666,3.986,2667,5.142,2668,3.986,2669,3.986,2670,5.142,2671,3.743,2672,3.546,2673,4.466,2674,3.986,2798,5.317,2799,5.317,2800,5.317,2801,5.317,2802,5.317,2803,5.317,2804,5.317,2805,5.317,2806,5.317,2807,5.317,2808,5.317,2809,5.317,2810,5.317,2811,5.317,2812,5.317,2813,5.317,2814,5.317,2815,5.317,2816,5.317,2817,5.317,2818,5.317,2819,5.317,2820,5.317,2821,5.317,2822,5.317,2823,5.317,2824,5.317,2825,5.317,2826,5.317,2827,5.317,2828,5.317,2829,5.317,2830,5.317,2831,5.317,2832,5.317,2833,5.317,2834,5.317,2835,5.317,2836,5.317,2837,5.142]],["title/java/exception.html",[3,0.039]],["body/java/exception.html",[2,0.656,3,0.077,4,0.227,5,0.3,6,0.263,7,0.31,8,0.328,9,0.384,10,0.404,11,0.423,12,0.404,13,0.433,14,0.562,15,0.531,16,0.531,17,0.565,18,0.601,19,0.619,20,2.502,21,2.502,22,0.542,23,1.088,24,0.707,29,1.73,31,1.021,32,0.466,36,1.278,38,1.416,39,3.165,46,0.906,49,0.656,54,4.154,56,0.739,60,0.753,61,0.733,62,0.733,63,0.713,64,0.878,65,0.9,66,0.844,67,0.864,68,0.906,69,0.885,70,0.949,71,0.971,72,0.971,73,1.017,74,0.735,75,0.735,76,0.769,77,0.769,78,0.787,96,3.314,112,2.507,114,0.58,122,0.752,126,1.945,138,1.454,151,3.607,152,2.405,162,1.133,269,3.098,277,0.823,281,0.735,290,2.976,301,0.769,310,0.861,368,0.671,450,3.233,770,5.554,778,3.978,799,1.911,800,1.911,828,2.027,830,3.233,836,2.235,1019,0.55,1020,2.019,1026,2.341,1030,0.942,1032,0.718,1034,0.719,1035,1.113,1036,3.603,1037,2.84,1039,2.029,1041,0.937,1160,2.633,1166,0.823,1173,4.709,1174,5.068,1175,4.008,1182,3.035,1186,1.533,1199,1.836,1211,2.739,1225,2.803,1228,0.787,1234,1.536,1372,0.805,1373,0.805,1374,0.823,1375,0.842,1376,0.805,1377,0.861,1378,0.901,1396,1.981,1421,1.379,1425,2.235,1427,1.627,1436,2.633,1442,4.183,1637,2.142,1737,1.849,1974,1.638,1979,2.865,2089,3.438,2130,3.56,2337,4.411,2382,2.991,2647,2.771,2657,3.386,2658,6.235,2659,4.63,2660,2.771,2661,3.386,2662,4.008,2663,4.008,2665,4.008,2666,4.008,2667,5.16,2668,4.008,2669,4.008,2670,5.16,2671,3.763,2672,2.764,2673,3.832,2674,2.771,2838,2.341,2839,6.452,2840,6.726,2841,5.554,2842,4.723,2843,4.314,2844,4.008,2845,2.982,2846,2.602,2847,3.265,2848,3.265,2849,5.554,2850,3.265,2851,2.771,2852,3.695,2853,6.452,2854,3.265,2855,5.55,2856,3.265,2857,3.695,2858,2.602,2859,6.609,2860,6.081,2861,7.592,2862,6.936,2863,4.723,2864,3.695,2865,3.265,2866,1.911,2867,4.723,2868,4.709,2869,4.723,2870,4.422,2871,3.265,2872,3.265,2873,3.265,2874,3.695,2875,3.265,2876,3.265,2877,2.982,2878,3.265,2879,2.771,2880,2.982,2881,3.265,2882,3.265,2883,3.265,2884,3.265,2885,3.265,2886,4.723]],["title/java/exception.html#簡介",[2887,4.293]],["body/java/exception.html#簡介",[2,1.14,3,0.076,4,0.208,5,0.275,6,0.241,7,0.292,8,0.309,9,0.362,10,0.331,11,0.346,12,0.331,13,0.346,20,3.611,21,3.611,22,0.55,24,0.716,29,3.006,31,1.156,32,0.56,39,3.438,126,2.806,138,2.527,151,3.864,290,4.295,450,4.667,543,3.501,1026,4.068,1037,2.365,1173,6.2,1174,6.226,1199,2.058,1436,2.658,2337,3.722,2838,4.068,2839,7.753,2840,7.873,2841,6.673,2842,6.817,2843,6.226,2844,5.784,2846,4.521,2847,5.675,2848,5.675,2849,6.922,2850,5.675,2851,4.815,2888,6.422,2889,6.422,2890,6.422,2891,6.422,2892,6.422,2893,6.422,2894,6.422,2895,5.675,2896,6.422,2897,6.422,2898,5.182,2899,6.422,2900,6.422,2901,6.422,2902,6.422,2903,6.422,2904,6.422,2905,6.422,2906,6.422,2907,6.422,2908,6.422,2909,6.422,2910,6.422]],["title/java/exception.html#相關語法",[2911,4.859]],["body/java/exception.html#相關語法",[3,0.077,4,0.226,5,0.299,6,0.262,7,0.302,8,0.32,9,0.374,10,0.394,11,0.412,12,0.394,13,0.43,14,0.565,15,0.398,16,0.398,17,0.424,18,0.451,19,0.464,22,0.451,23,1.289,24,0.588,32,0.411,36,1.63,38,1.805,39,2.975,56,0.68,60,0.565,61,0.55,62,0.55,63,0.535,64,0.659,65,0.675,96,3.472,114,0.528,151,3.369,152,1.552,197,2.525,269,3.671,281,0.938,368,0.856,531,4.163,543,3.472,567,4.218,576,3.138,770,6.174,778,4.532,828,1.544,836,2.85,1019,0.473,1020,2.3,1030,1.201,1032,0.672,1034,0.661,1035,1.024,1036,3.516,1037,2.854,1039,2.117,1041,0.902,1107,5.596,1160,2.781,1175,4.748,1182,3.061,1225,2.888,1289,3.802,1421,1.759,1425,2.85,1427,2.075,1442,4.765,1974,1.866,2089,3.822,2130,4.218,2337,4.626,2382,3.07,2500,4.163,2701,3.532,2841,3.802,2853,7.053,2854,4.163,2855,6.322,2856,4.163,2858,3.317,2859,6.98,2860,6.76,2861,7.897,2862,7.422,2863,5.596,2865,4.163,2866,2.436,2867,5.596,2868,5.364,2869,5.596,2870,5.037,2871,4.163,2872,4.163,2873,4.163,2875,4.163,2876,4.163,2877,3.802,2878,4.163,2879,3.532,2880,3.802,2881,4.163,2882,4.163,2883,4.163,2884,4.163,2885,4.163,2912,4.711,2913,4.711,2914,5.364,2915,4.711,2916,4.163,2917,4.711,2918,4.711,2919,4.711,2920,4.711,2921,4.711,2922,4.711,2923,4.711,2924,4.711,2925,4.711,2926,3.802,2927,4.711,2928,4.711,2929,3.317,2930,4.711,2931,4.163,2932,4.711,2933,4.711,2934,4.711,2935,4.711,2936,4.711,2937,4.711,2938,4.711,2939,4.711,2940,4.711,2941,4.711,2942,4.711,2943,4.711,2944,4.711,2945,4.711,2946,4.711,2947,4.711,2948,4.711,2949,4.711,2950,4.711,2951,4.711,2952,4.711,2953,4.711,2954,4.711,2955,4.711,2956,4.711,2957,4.711,2958,4.711,2959,4.711,2960,4.711,2961,4.711,2962,4.711,2963,4.711,2964,4.711,2965,4.711,2966,4.711,2967,4.711,2968,4.711,2969,4.711,2970,4.711,2971,4.711,2972,4.711,2973,4.711,2974,4.711,2975,4.711,2976,4.711,2977,4.711,2978,4.711,2979,4.711,2980,4.711,2981,4.711,2982,4.711,2983,5.596,2984,4.711,2985,4.711,2986,4.711,2987,4.711,2988,4.711,2989,4.711,2990,4.163,2991,4.711,2992,4.711,2993,4.711]],["title/java/exception.html#範例",[1110,3.643]],["body/java/exception.html#範例",[3,0.077,4,0.187,5,0.247,6,0.217,7,0.262,8,0.278,9,0.325,10,0.357,11,0.374,12,0.357,13,0.374,14,0.512,15,0.586,16,0.586,17,0.624,18,0.663,19,0.683,22,0.494,24,0.644,31,0.969,46,1.175,49,0.96,54,4.473,56,0.745,60,0.831,61,0.809,62,0.809,63,0.787,64,0.969,65,0.994,66,1.095,67,1.121,68,1.175,69,1.148,70,1.231,71,1.26,72,1.26,73,1.319,74,1.076,75,1.076,76,1.126,77,1.126,78,1.152,112,2.813,114,0.596,122,1.101,152,2.659,162,1.658,245,5.596,277,1.205,301,1.126,310,1.26,799,2.796,800,2.796,828,2.144,830,4.194,1019,0.565,1032,0.732,1034,0.724,1035,1.121,1036,3.57,1037,2.618,1041,0.945,1166,1.205,1186,1.798,1199,1.85,1211,2.949,1225,1.739,1228,1.152,1234,2.249,1372,1.178,1373,1.178,1374,1.205,1375,1.232,1376,1.178,1377,1.26,1378,1.318,1436,2.683,1637,3.134,1737,2.399,1979,3.717,2382,1.825,2647,4.055,2657,4.392,2658,6.714,2659,4.986,2660,4.055,2661,4.392,2662,5.199,2663,5.199,2665,5.199,2666,5.199,2667,6.053,2668,5.199,2669,5.199,2670,6.053,2671,4.882,2672,3.585,2673,4.495,2674,4.055,2837,5.199,2886,6.127]],["title/java/extends.html",[3,0.039]],["body/java/extends.html",[2,0.523,3,0.077,4,0.231,5,0.305,6,0.264,7,0.314,8,0.329,9,0.369,10,0.405,11,0.416,12,0.397,13,0.405,14,0.555,15,0.616,16,0.616,17,0.656,18,0.697,19,0.718,22,0.519,24,0.716,31,1.182,32,0.794,36,2.601,37,1.524,38,1.129,46,0.765,49,0.523,53,3.084,56,0.883,60,0.795,61,0.774,62,0.774,63,0.754,64,0.86,65,0.882,66,0.867,67,0.888,68,0.93,69,0.748,70,0.523,71,0.535,72,0.535,73,0.56,74,0.587,75,0.587,76,0.614,77,0.614,78,0.628,90,1.298,94,4.014,95,2.492,96,3.012,108,2.489,109,3.182,110,5.131,113,3.182,114,0.581,122,0.6,126,2.239,140,2.55,151,1.989,277,0.657,288,2.654,290,2.514,301,0.614,310,0.687,368,1.118,769,2.604,778,3.898,810,2.421,828,1.879,1011,3.395,1019,0.598,1020,2.529,1032,0.756,1034,0.89,1035,1.178,1039,1.076,1041,0.957,1149,3.299,1155,4.357,1158,3.111,1160,1.979,1161,2.974,1163,5.634,1164,4.615,1166,0.657,1182,1.424,1186,1.56,1188,0.751,1199,2.217,1226,0.718,1228,0.628,1234,1.225,1251,1.708,1252,1.072,1253,2.839,1254,null,1363,3.18,1364,3.012,1365,1.783,1370,3.986,1372,0.642,1373,0.642,1374,0.657,1375,0.671,1376,0.642,1377,0.687,1378,0.718,1385,4.333,1388,2.114,1389,2.514,1397,2.256,1421,2.05,1436,0.947,1437,1.045,1438,1.192,1441,1.963,1640,0.786,1641,0.786,1642,0.786,1883,1.379,1901,1.1,1929,2.617,1946,1.963,1948,2.075,1974,2.187,2089,3.074,2095,5.249,2105,3.182,2106,3.866,2421,3.386,2463,3.386,2469,3.386,2594,1.963,2629,3.008,2845,3.645,2994,1.472,2995,1.783,2996,1.867,2997,2.947,2998,5.443,2999,6.229,3000,5.637,3001,5.43,3002,4.976,3003,5.355,3004,1.225,3005,4.967,3006,2.604,3007,2.604,3008,6.644,3009,6.44,3010,3.18,3011,2.604,3012,5.355,3013,2.21,3014,2.604,3015,4.672,3016,3.645,3017,5.355,3018,2.604,3019,2.604,3020,2.604,3021,3.991,3022,2.604,3023,2.604,3024,2.604,3025,4.055,3026,4.516,3027,3.991,3028,2.604,3029,2.947,3030,2.075,3031,7.471,3032,3.008,3033,3.991,3034,4.854,3035,5.439,3036,2.604,3037,5.864,3038,3.182,3039,2.335,3040,3.991,3041,2.604,3042,2.604,3043,3.991,3044,3.991,3045,2.604,3046,2.604,3047,2.604,3048,1.867,3049,2.604,3050,3.991,3051,3.991,3052,3.991,3053,3.991,3054,3.991,3055,3.991,3056,3.991,3057,4.852,3058,2.604,3059,2.604,3060,2.604,3061,2.604,3062,2.604,3063,6.187,3064,4.929,3065,5.439,3066,5.864,3067,5.864,3068,5.864,3069,2.947,3070,3.991,3071,5.439,3072,2.617,3073,2.604,3074,4.852,3075,3.991,3076,2.604]],["title/java/extends.html#基本觀念",[3077,4.859]],["body/java/extends.html#基本觀念",[3,0.076,4,0.223,5,0.294,6,0.201,7,0.243,8,0.257,9,0.301,10,0.331,11,0.347,12,0.331,13,0.347,14,0.475,15,0.543,16,0.543,17,0.579,18,0.615,19,0.634,31,1.2,60,0.77,61,0.75,62,0.75,63,0.73,368,1.503,543,2.917,810,3.446,828,2.016,934,5.188,982,5.188,1019,0.596,1032,0.752,1034,0.896,1363,4.526,1364,2.917,1365,3.888,1441,4.281,1974,2.351,2594,4.281,2994,3.211,2995,3.888,2996,4.072,2998,5.19,2999,6.433,3000,4.82,3001,3.888,3002,4.82,3003,5.188,3004,2.673,3005,5.188,3006,5.68,3007,5.68,3078,5.188,3079,6.428,3080,6.428,3081,6.428,3082,6.428,3083,6.428,3084,5.188,3085,6.428,3086,6.428,3087,6.428,3088,6.428,3089,6.428,3090,6.428,3091,6.428,3092,6.428,3093,6.428,3094,6.428]],["title/java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型",[183,1.13,3095,2.871,3096,2.871]],["body/java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型",[3,0.076,4,0.225,5,0.297,6,0.261,7,0.278,8,0.295,9,0.279,10,0.307,11,0.321,12,0.307,13,0.321,14,0.44,15,0.503,16,0.503,17,0.536,18,0.57,19,0.587,24,0.553,36,3.027,53,3.245,56,0.64,60,0.714,61,0.695,62,0.695,63,0.676,64,0.833,65,0.854,94,5.197,95,3.344,96,3.794,114,0.44,126,3.041,151,3.245,288,2.882,543,2.703,576,3.967,582,2.477,1019,0.394,1032,0.603,1034,0.622,1035,0.963,1041,0.94,1158,3.292,1163,5.886,1164,6.268,1182,2.879,1901,2.223,1946,3.967,1948,4.194,2089,2.976,2701,4.466,2998,5.421,3001,5.53,3003,6.746,3005,6.457,3008,7.734,3009,7.591,3010,5.188,3011,5.264,3013,4.466,3014,5.264,3015,5.633,3016,4.807,3017,4.807,3018,5.264,3019,5.264,3020,5.264,3021,6.511,3022,5.264,3023,5.264,3024,5.264,3097,5.957,3098,5.957,3099,5.957,3100,5.957,3101,5.957,3102,5.957,3103,5.264,3104,5.957,3105,5.957,3106,5.957,3107,5.957,3108,5.957,3109,5.957,3110,5.957,3111,5.957,3112,5.957,3113,5.957,3114,5.957,3115,5.957,3116,5.957,3117,5.957,3118,5.957]],["title/java/extends.html#Override-覆寫",[3119,4.859]],["body/java/extends.html#Override-覆寫",[3,0.076,4,0.212,5,0.28,6,0.246,7,0.298,8,0.315,9,0.369,10,0.406,11,0.358,12,0.343,13,0.358,14,0.491,31,1.101,36,2.3,56,0.714,114,0.582,1019,0.574,1020,2.532,1032,0.748,1034,0.823,1186,1.481,1397,3.934,1421,3.133,1974,2.054,2998,4.764,2999,6.292,3000,4.985,3001,4.022,3002,4.985,3025,4.192,3027,6.96,3028,5.875,3120,6.649,3121,6.649,3122,6.649,3123,6.649,3124,6.649,3125,5.875,3126,5.875,3127,6.649,3128,6.649,3129,6.649,3130,6.649,3131,6.649,3132,6.649,3133,6.649,3134,6.649,3135,6.649,3136,6.649,3137,6.649]],["title/java/extends.html#Virtual-Function-虛擬函數",[1370,1.866,3138,3.61]],["body/java/extends.html#Virtual-Function-虛擬函數",[3,0.076,4,0.213,5,0.282,6,0.247,7,0.299,8,0.317,9,0.371,10,0.408,11,0.427,12,0.408,13,0.392,14,0.537,15,0.614,16,0.614,17,0.654,18,0.695,19,0.716,24,0.735,31,1.159,56,0.948,95,2.643,108,3.354,109,4.288,114,0.585,368,1.058,543,2.643,582,2.422,828,1.42,1011,3.489,1019,0.565,1020,1.873,1032,0.722,1034,0.922,1035,1.281,1041,0.891,1158,3.178,1163,6.216,1186,1.619,1303,4.701,1370,4.288,1567,5.147,1974,1.895,2629,3.879,2898,5.865,2998,5.444,2999,6.619,3000,6.526,3001,5.265,3002,5.939,3012,4.701,3015,5.116,3016,4.701,3017,6.693,3025,3.957,3030,4.101,3126,5.147,3139,5.825,3140,5.825,3141,5.825,3142,5.825,3143,5.825,3144,5.825,3145,5.825,3146,5.825,3147,5.825,3148,7.267,3149,5.825,3150,5.825,3151,5.825,3152,5.825,3153,5.825,3154,5.825,3155,5.825,3156,5.825,3157,5.825,3158,5.825,3159,5.825,3160,5.147,3161,5.825,3162,5.147,3163,5.825,3164,5.825,3165,5.825,3166,5.825,3167,5.825,3168,5.825,3169,5.825]],["title/java/extends.html#本章觀念整理範例",[3170,4.859]],["body/java/extends.html#本章觀念整理範例",[3,0.077,4,0.207,5,0.274,6,0.24,7,0.291,8,0.308,9,0.299,10,0.329,11,0.344,12,0.329,13,0.344,14,0.471,15,0.54,16,0.54,17,0.575,18,0.611,19,0.629,22,0.455,24,0.714,31,1.153,32,0.747,37,2.466,38,1.827,46,0.808,49,0.847,56,0.773,60,0.765,61,0.745,62,0.745,63,0.725,64,0.893,65,0.915,66,1.008,67,1.032,68,1.082,69,0.789,70,0.847,71,0.866,72,0.866,73,0.907,74,0.949,75,0.949,76,0.993,77,0.993,78,1.016,110,5.932,113,4.172,114,0.471,122,0.971,140,2.728,277,1.063,288,2.004,290,3.555,301,0.993,310,1.111,810,2.557,828,1.556,1011,3.386,1019,0.557,1032,0.742,1034,0.667,1035,1.032,1039,1.522,1041,0.962,1149,4.121,1155,4.962,1158,2.447,1161,3.715,1166,1.063,1186,1.604,1188,1.216,1199,2.401,1226,1.162,1228,1.016,1234,1.983,1251,2.764,1252,1.735,1253,3.722,1254,null,1364,2.164,1370,3.975,1372,1.039,1373,1.039,1374,1.063,1375,1.087,1376,1.039,1377,1.111,1378,1.162,1388,2.989,1389,2.655,1640,1.273,1641,1.273,1642,1.273,1883,2.232,1929,3.701,1974,1.878,2089,3.596,2095,6.185,2105,4.172,2106,5.068,2421,4.788,2463,4.788,2469,4.788,2629,3.176,3012,5.153,3025,3.596,3031,8.021,3032,4.253,3033,5.643,3034,5.611,3035,6.794,3036,4.214,3037,7.083,3038,4.172,3039,3.302,3040,5.643,3041,4.214,3042,4.214,3043,5.643,3044,5.643,3045,4.214,3046,4.214,3047,4.214,3048,3.021,3049,4.214,3050,5.643,3051,5.643,3052,5.643,3053,5.643,3054,5.643,3055,5.643,3056,5.643,3057,6.361,3058,4.214,3059,4.214,3060,4.214,3171,4.769,3172,4.769]],["title/java/extends.html#final-修飾字",[1160,1.16,3173,3.61]],["body/java/extends.html#final-修飾字",[3,0.072,4,0.193,5,0.255,6,0.224,7,0.271,114,0.529,183,2.819,828,2.005,1019,0.588,1020,2.644,1032,0.673,1160,2.782,3061,6.329,3062,6.329,3125,6.329,3174,7.163,3175,7.163,3176,7.163,3177,7.163,3178,7.163,3179,7.163]],["title/java/extends.html#繼承關係下的-Constructor-執行順序",[1254,null,3180,2.871,3181,2.871]],["body/java/extends.html#繼承關係下的-Constructor-執行順序",[3,0.076,4,0.159,5,0.21,6,0.185,7,0.224,8,0.237,9,0.277,10,0.305,11,0.319,12,0.305,13,0.319,14,0.437,15,0.5,16,0.5,17,0.532,18,0.566,19,0.583,22,0.611,24,0.549,32,0.824,36,2.046,46,1.002,53,3.673,56,0.635,60,0.709,61,0.69,62,0.69,63,0.671,64,0.827,65,0.847,66,0.934,67,0.956,68,1.002,69,0.979,90,2.605,114,0.437,288,2.303,543,2.684,778,5.282,1019,0.485,1032,0.714,1034,0.618,1035,0.956,1041,0.896,1158,2.266,1254,null,1364,3.619,1385,5.871,1389,3.293,1436,1.901,1437,2.097,1438,2.391,1599,5.226,1600,5.226,1601,6.482,1604,5.226,1605,6.482,1606,5.226,1607,5.226,1974,1.543,2998,5.414,3001,5.525,3063,7.72,3064,6.151,3065,7.368,3066,7.575,3067,7.575,3068,7.575,3070,6.482,3071,7.368,3072,4.252,3073,5.226,3074,7.047,3075,6.482,3076,5.226,3182,5.914,3183,5.914,3184,5.914,3185,5.914,3186,5.914,3187,5.914,3188,5.914,3189,5.914,3190,5.914,3191,7.336,3192,7.336,3193,7.336]],["title/java/interface.html",[3,0.039]],["body/java/interface.html",[2,1.23,3,0.077,4,0.21,5,0.278,6,0.244,7,0.295,8,0.323,9,0.349,10,0.357,11,0.373,12,0.357,13,0.421,14,0.511,15,0.585,16,0.585,17,0.623,18,0.663,19,0.683,22,0.589,23,1.41,24,0.563,36,2.396,46,0.75,53,1.948,55,1.839,56,0.801,60,0.83,61,0.808,62,0.808,63,0.846,64,0.848,65,0.869,66,0.958,67,0.715,68,0.75,69,0.732,70,0.785,71,0.804,94,3.67,96,2.754,114,0.654,126,2.935,140,1.324,288,2.174,368,1.529,764,3.97,828,1.817,1011,2.672,1013,3.316,1019,0.619,1020,2.863,1032,0.759,1034,0.462,1035,0.715,1039,1.054,1041,0.917,1158,1.695,1160,1.422,1252,2.711,1370,3.137,1387,4.041,1415,2.463,1451,3.316,1693,5.324,1891,1.948,1901,2.915,1974,1.944,2089,4.127,2262,5.588,2845,3.569,2998,4.19,3001,4.19,3004,3.549,3013,5.193,3025,3.46,3194,6.19,3195,2.802,3196,4.423,3197,6.068,3198,3.316,3199,6.12,3200,5.47,3201,3.908,3202,5.362,3203,6.901,3204,5.362,3205,4.526,3206,4.423,3207,4.423,3208,3.908,3209,3.908,3210,3.908,3211,6.901,3212,6.12,3213,3.908,3214,4.423]],["title/java/interface.html#為什麼-Java-提供-Interface",[368,0.433,764,1.02,3215,2.384,3216,2.384]],["body/java/interface.html#為什麼-Java-提供-Interface",[2,1.177,3,0.071,4,0.179,5,0.236,6,0.207,7,0.251,8,0.265,94,4.01,126,2.411,183,2.609,288,2.468,368,1.428,582,3.485,764,3.585,828,2.043,934,5.35,1011,2.919,1019,0.608,1039,1.58,1041,0.712,1158,2.54,1370,3.428,1415,3.691,2089,3.927,2695,4.667,2780,4.667,2998,5.07,3001,5.07,3084,6.345,3194,6.319,3195,4.199,3198,4.97,3199,6.947,3217,6.629,3218,6.629,3219,7.862,3220,6.629,3221,6.629,3222,6.629,3223,6.629,3224,6.629,3225,5.858,3226,6.629,3227,6.629,3228,6.629,3229,6.629,3230,6.629,3231,6.629,3232,6.629,3233,6.629,3234,6.629,3235,6.629,3236,6.629,3237,6.629,3238,6.629,3239,6.629,3240,6.629,3241,6.629,3242,6.629,3243,6.629,3244,6.629,3245,6.629,3246,5.858,3247,6.629,3248,6.629,3249,6.629,3250,5.858,3251,6.629,3252,6.629,3253,6.629,3254,6.629,3255,6.629,3256,6.629,3257,6.629]],["title/java/interface.html#Java-有關-Interface-的語法",[368,0.433,764,1.02,2926,1.924,3258,2.384]],["body/java/interface.html#Java-有關-Interface-的語法",[2,0.945,3,0.077,4,0.205,5,0.27,6,0.237,7,0.287,8,0.304,9,0.356,10,0.354,11,0.37,12,0.354,13,0.41,14,0.507,15,0.58,16,0.58,17,0.618,18,0.657,19,0.677,22,0.606,36,1.842,46,0.902,55,2.214,56,0.738,60,0.823,61,0.801,62,0.801,63,0.863,64,0.96,65,0.984,66,1.084,67,0.861,68,0.902,69,0.882,70,0.945,71,0.967,114,0.659,126,3.022,140,1.594,183,2.702,288,1.671,368,1.247,764,3.962,1019,0.586,1020,2.443,1032,0.754,1041,0.572,1160,1.712,1252,2.92,1387,3.547,1451,3.993,1693,4.403,1891,2.345,1901,3.101,1974,1.982,2089,4.149,2262,6.018,2837,3.993,2914,3.993,2929,3.749,3004,3.645,3103,4.706,3194,5.988,3200,5.658,3201,4.706,3202,6.066,3203,7.34,3204,6.066,3205,4.814,3208,4.706,3209,4.706,3210,4.706,3250,4.706,3259,4.706,3260,6.865,3261,5.325,3262,5.325,3263,5.325,3264,5.325,3265,5.325,3266,5.325,3267,5.325,3268,5.325,3269,5.325,3270,5.325,3271,5.325,3272,5.325,3273,5.325,3274,5.325,3275,5.325,3276,5.325,3277,5.325,3278,5.325,3279,4.706,3280,5.325,3281,5.325,3282,5.325,3283,5.325,3284,5.325,3285,5.325,3286,5.325,3287,5.325,3288,5.325,3289,5.325,3290,5.325,3291,5.325,3292,5.325,3293,5.325,3294,5.325,3295,5.325,3296,5.325,3297,5.325,3298,5.325,3299,5.325,3300,5.325,3301,5.325,3302,5.325,3303,5.325,3304,5.325,3305,5.325,3306,5.325,3307,5.325,3308,5.325,3309,5.325,3310,5.325,3311,5.325,3312,5.325,3313,5.325,3314,5.325,3315,5.325]],["title/java/interface.html#Abstract-Class-and-Method",[1019,0.19,1020,0.923,1693,1.664]],["body/java/interface.html#Abstract-Class-and-Method",[3,0.076,4,0.166,5,0.219,6,0.192,7,0.233,8,0.301,9,0.289,10,0.318,11,0.332,12,0.318,13,0.406,14,0.455,15,0.521,16,0.521,17,0.555,18,0.59,19,0.607,22,0.439,23,1.654,24,0.698,36,2.132,53,2.714,56,0.662,60,0.739,61,0.719,62,0.719,63,0.7,94,3.728,96,2.797,114,0.6,543,4.005,548,4.339,582,3.129,764,3.219,1011,2.714,1013,4.621,1019,0.617,1020,2.9,1032,0.731,1034,0.644,1035,0.996,1041,0.96,1370,3.187,1693,5.417,1974,1.608,2695,4.339,2772,5.446,2837,4.621,2898,4.974,2983,5.446,3013,6.09,3025,4.058,3084,4.974,3211,7.665,3212,7.178,3213,5.446,3316,6.163,3317,6.163,3318,6.163,3319,6.163,3320,6.163,3321,6.163,3322,7.525,3323,6.163,3324,6.163,3325,6.163,3326,6.163,3327,6.163,3328,6.163,3329,6.163,3330,6.163,3331,6.163,3332,6.163,3333,6.163,3334,6.163,3335,6.163,3336,6.163,3337,6.163,3338,6.163,3339,6.163,3340,6.163]],["title/java/io.html",[130,3.078]],["body/java/io.html",[2,1.595,3,0.077,4,0.206,5,0.225,6,0.147,7,0.178,8,0.189,9,0.221,10,0.243,11,0.254,12,0.243,13,0.254,14,0.348,15,0.398,16,0.398,17,0.424,18,0.451,19,0.465,22,0.586,23,1.29,24,0.438,25,2.037,31,1,32,0.697,39,3.182,46,0.799,49,0.837,51,3.516,56,0.769,60,0.565,61,0.55,62,0.55,63,0.535,64,0.659,65,0.676,66,0.744,67,0.762,68,0.799,69,0.78,70,0.837,71,0.857,72,0.857,73,0.897,74,0.938,75,0.938,76,0.982,77,0.982,78,1.004,79,1.348,84,3.535,98,1.76,99,1.591,100,1.591,101,1.591,114,0.348,116,2.087,117,1.691,122,0.96,128,2.137,130,4.533,138,2.494,140,2.291,142,3.188,162,1.942,264,3.397,277,1.05,281,0.938,282,1.591,288,1.989,290,3.528,297,1.202,301,0.982,310,1.099,331,1.445,343,4.22,368,1.151,373,4.014,377,1.287,378,1.258,379,1.516,421,1.591,802,1.907,809,1.591,828,1.544,1016,1.96,1019,0.312,1022,1.591,1030,1.616,1031,2.14,1032,0.518,1034,0.799,1036,3.517,1037,1.445,1039,2.035,1041,0.929,1161,3.062,1162,2.625,1166,1.05,1186,1.412,1188,1.202,1189,1.48,1199,1.91,1225,2.567,1226,1.149,1228,1.004,1234,1.96,1372,1.027,1373,1.027,1374,1.05,1375,1.074,1376,1.027,1377,1.099,1378,1.149,1426,3.805,1427,2.076,1428,4.751,1437,2.247,1640,1.258,1641,1.258,1642,1.258,1643,1.317,1644,1.348,1645,1.348,1646,1.348,1647,1.348,1648,1.348,1649,1.348,1650,1.348,1651,1.348,1652,1.348,1653,1.348,1654,1.348,1655,1.348,1696,1.412,1697,1.412,1698,1.412,1699,1.445,1700,1.445,1701,1.445,1702,1.516,1703,1.516,1704,1.516,1705,1.516,1706,1.516,1707,1.553,1708,1.553,1709,1.553,1710,1.553,1711,1.553,1712,1.553,1713,1.553,1714,1.553,1715,1.672,1716,1.672,1717,1.672,1718,1.631,1719,1.672,1720,1.672,1721,1.672,1722,1.672,1723,1.672,1881,2.192,2034,1.96,2286,2.791,2287,2.14,2301,2.527,2382,2.694,2859,3.805,3039,3.276,3048,4.014,3341,6.762,3342,4.715,3343,4.715,3344,4.715,3345,6.762,3346,4.715,3347,4.166,3348,4.715,3349,4.715,3350,4.28,3351,4.715,3352,4.166,3353,4.715,3354,4.22,3355,4.715,3356,4.715,3357,4.715,3358,3.535,3359,3.805,3360,3.805,3361,3.805,3362,5.113,3363,3.805,3364,6.176,3365,3.833,3366,5.113,3367,3.805,3368,3.535,3369,2.986,3370,6.091,3371,3.805,3372,5.986,3373,5.738,3374,6.176,3375,3.805,3376,5.113,3377,4.533,3378,5.776,3379,3.535,3380,3.805,3381,3.805,3382,3.535,3383,3.805,3384,3.805,3385,3.805,3386,3.535,3387,5.113,3388,2.278,3389,2.966,3390,3.805,3391,3.805,3392,3.805,3393,5.776,3394,6.443,3395,6.176,3396,3.805,3397,5.113,3398,3.805,3399,3.805,3400,3.805,3401,3.535]],["title/java/io.html#範例",[1110,3.643]],["body/java/io.html#範例",[2,1.606,3,0.077,4,0.21,5,0.233,6,0.155,7,0.187,8,0.198,9,0.232,10,0.255,11,0.267,12,0.255,13,0.267,14,0.366,15,0.419,16,0.419,17,0.446,18,0.474,19,0.488,22,0.556,23,1.334,24,0.46,25,2.106,31,1.026,32,0.708,39,2.061,46,0.84,49,0.88,56,0.788,60,0.594,61,0.578,62,0.578,63,0.563,64,0.693,65,0.71,66,0.782,67,0.801,68,0.84,69,0.82,70,0.88,71,0.9,72,0.9,73,0.943,74,0.986,75,0.986,76,1.032,77,1.032,78,1.056,79,1.417,84,3.716,98,1.85,99,1.673,100,1.673,101,1.673,114,0.366,116,2.157,122,1.009,128,2.181,140,1.961,142,1.85,162,2.008,192,4.612,277,1.104,281,0.986,282,1.673,288,2.056,297,1.264,301,1.032,310,1.155,331,1.519,368,0.9,377,1.353,378,1.322,379,1.593,421,1.673,802,2.004,809,1.673,1016,2.061,1019,0.328,1022,1.673,1030,1.67,1031,2.249,1032,0.536,1034,0.815,1036,3.567,1037,1.519,1039,2.058,1041,0.939,1162,2.759,1166,1.104,1186,1.459,1188,1.264,1189,1.556,1199,1.958,1225,2.61,1226,1.208,1228,1.056,1234,2.061,1372,1.08,1373,1.08,1374,1.104,1375,1.129,1376,1.08,1377,1.155,1378,1.208,1427,2.183,1640,1.322,1641,1.322,1642,1.322,1643,1.384,1644,1.417,1645,1.417,1646,1.417,1647,1.417,1648,1.417,1649,1.417,1650,1.417,1651,1.417,1652,1.417,1653,1.417,1654,1.417,1655,1.417,1696,1.484,1697,1.484,1698,1.484,1699,1.519,1700,1.519,1701,1.519,1702,1.593,1703,1.593,1704,1.593,1705,1.593,1706,1.593,1707,1.632,1708,1.632,1709,1.632,1710,1.632,1711,1.632,1712,1.632,1713,1.632,1714,1.632,1715,1.758,1716,1.758,1717,1.758,1718,1.714,1719,1.758,1720,1.758,1721,1.758,1722,1.758,1723,1.758,1881,2.266,2034,2.061,2286,2.885,2287,2.249,2301,2.657,2382,2.74,2534,5.853,3048,4.149,3350,4.185,3359,4,3360,4,3361,4,3362,5.287,3363,4,3364,6.3,3365,3.963,3366,5.287,3367,4,3368,3.716,3369,3.139,3370,6.152,3371,4,3372,6.087,3373,5.853,3374,6.3,3375,4,3376,5.287,3377,4.648,3378,5.922,3379,3.716,3380,4,3381,4,3382,3.716,3383,4,3384,4,3385,4,3386,3.716,3387,5.287,3388,2.395,3389,3.066,3390,4,3391,4,3392,4,3393,5.922,3394,6.551,3395,6.3,3396,4,3397,5.287,3398,4,3399,4,3400,4,3401,3.716,3402,6.551,3403,5.287]],["title/java/java-vs-c.html",[2,0.423,3,0.031,368,0.433]],["body/java/java-vs-c.html",[2,1.52,3,0.077,4,0.249,5,0.32,6,0.274,7,0.313,8,0.346,9,0.388,10,0.416,11,0.426,12,0.412,13,0.431,14,0.547,15,0.576,16,0.49,17,0.522,18,0.555,19,0.571,20,1.044,21,1.044,22,0.643,23,1.697,24,0.774,25,2.712,29,1.044,31,1.075,32,0.722,36,2.264,37,1.153,38,2.38,42,2.653,49,0.643,50,3.793,51,2.321,55,0.927,56,0.931,60,0.267,61,0.423,62,0.26,63,0.253,80,2.056,86,1.349,95,2.077,108,0.902,111,2.454,112,2.633,114,0.619,116,2.633,117,2.392,120,1.874,126,0.811,128,1.472,132,4.146,138,2.576,140,1.736,142,2.164,151,0.982,152,2.246,156,1.672,166,1.571,168,2.549,170,2.552,256,1.672,257,4.373,269,2.653,270,2.016,281,1.303,288,1.654,297,0.924,299,0.791,338,2.296,340,1.413,343,4.137,364,1.571,368,1.613,428,1.571,439,2.016,442,0.772,818,1.571,819,1.486,820,1.114,828,1.514,1014,1.349,1015,2.192,1016,2.41,1017,2.192,1019,0.558,1020,1.472,1030,0.569,1032,0.738,1034,0.898,1035,1.348,1036,0.954,1037,0.684,1039,1.68,1040,1.672,1041,0.703,1042,1.672,1043,1.672,1044,1.672,1054,3.59,1149,4.183,1150,1.672,1155,2.653,1158,2.946,1161,1.078,1162,1.242,1182,1.078,1183,4.466,1185,2.552,1211,2.156,1218,3.952,1226,0.544,1228,1.123,1230,2.101,1234,3.144,1365,1.349,1370,3.645,1371,1.486,1376,0.486,1437,1.624,1438,1.851,1673,2.717,1738,1.709,1901,1.709,2089,2.633,2222,1.349,2286,1.596,2376,1.486,2404,1.672,2460,2.717,2479,2.414,2651,3.432,2996,1.413,3010,2.552,3072,1.293,3350,1.943,3404,2.231,3405,1.971,3406,2.231,3407,1.971,3408,1.971,3409,1.971,3410,1.971,3411,1.971,3412,1.971,3413,2.231,3414,4.045,3415,3.203,3416,1.971,3417,3.203,3418,1.971,3419,1.971,3420,1.971,3421,1.971,3422,1.971,3423,1.971,3424,1.971,3425,1.971,3426,1.971,3427,1.971,3428,1.971,3429,1.971,3430,1.971,3431,1.971,3432,2.925,3433,1.971,3434,1.971,3435,3.51,3436,3.694,3437,1.971,3438,1.971,3439,1.971,3440,1.971,3441,1.971,3442,1.8,3443,3.624,3444,4.538,3445,1.971,3446,1.971,3447,1.971,3448,1.672,3449,5.282,3450,1.971,3451,1.971,3452,1.971,3453,1.971,3454,1.971,3455,1.971,3456,4.045,3457,1.971,3458,1.971,3459,1.8,3460,1.971,3461,1.971,3462,4.045,3463,1.971,3464,1.971,3465,3.203,3466,1.971,3467,1.971,3468,2.231,3469,1.971,3470,1.971,3471,2.231,3472,2.231,3473,1.971,3474,1.971,3475,2.925,3476,1.971,3477,1.971,3478,1.971,3479,1.971,3480,3.203,3481,1.971,3482,1.971,3483,1.971,3484,1.8,3485,1.8,3486,1.971,3487,1.971,3488,1.971,3489,2.925,3490,3.203,3491,1.971,3492,2.231,3493,2.231,3494,1.8,3495,1.971,3496,1.971,3497,1.8,3498,1.971,3499,5.504,3500,2.925,3501,6.23,3502,5.489,3503,2.925,3504,2.231,3505,2.231,3506,1.672,3507,3.694,3508,1.971,3509,1.8,3510,1.971,3511,1.971,3512,1.971,3513,1.971,3514,3.432,3515,3.203,3516,1.971,3517,4.658]],["title/java/java-vs-c.html#Java-Virtual-Machine",[368,0.522,1183,1.819,1370,1.485]],["body/java/java-vs-c.html#Java-Virtual-Machine",[2,1.516,3,0.076,4,0.196,5,0.259,6,0.227,7,0.275,8,0.291,9,0.341,10,0.375,11,0.392,12,0.375,13,0.447,14,0.431,20,2.731,21,2.731,22,0.62,23,1.69,24,0.675,25,2.339,29,2.731,32,0.635,36,2.517,37,3.017,38,3.038,42,4.594,51,3.204,56,0.892,114,0.613,132,5.516,138,2.863,142,2.716,152,2.611,206,4.375,270,3.204,368,1.647,582,3.025,818,4.108,819,3.886,820,2.915,828,1.773,1019,0.524,1032,0.712,1034,0.76,1035,1.282,1182,2.82,1183,5.257,1334,4.709,1370,4.567,1371,3.886,2651,5.944,3405,5.156,3407,5.156,3408,5.156,3409,5.156,3410,5.156,3411,5.156,3412,5.156,3414,7.005,3415,6.429,3416,5.156,3417,6.429,3418,5.156,3419,5.156,3420,5.156,3421,5.156,3518,5.835,3519,5.835,3520,5.835,3521,5.835,3522,5.835,3523,5.835,3524,5.835,3525,5.835,3526,5.835,3527,5.835,3528,5.835,3529,5.835,3530,5.835,3531,5.835,3532,5.835,3533,5.835,3534,5.835,3535,5.835,3536,5.835,3537,5.835,3538,5.835,3539,5.835,3540,5.835,3541,5.835,3542,5.835,3543,5.835,3544,5.835,3545,5.835,3546,5.835,3547,5.835,3548,5.835,3549,5.835,3550,5.835,3551,5.835,3552,5.835,3553,5.835,3554,5.835,3555,5.835,3556,5.835,3557,5.835,3558,5.835,3559,5.835,3560,5.835,3561,5.835,3562,5.835,3563,5.835,3564,5.835,3565,5.835,3566,5.835,3567,5.835,3568,5.835,3569,5.835,3570,5.835,3571,5.835,3572,5.835,3573,5.835,3574,5.835,3575,5.835,3576,5.835,3577,5.835,3578,5.835,3579,5.835,3580,5.835,3581,5.835]],["title/java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言",[368,0.37,828,0.497,1096,1.801,1365,1.233,3582,2.038]],["body/java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言",[2,1.658,183,2.837,368,1.576,3583,6.371,3584,7.21,3585,7.21,3586,7.21,3587,7.21,3588,7.21,3589,7.21,3590,7.21,3591,7.21,3592,7.21,3593,7.21,3594,7.21,3595,7.21]],["title/java/java-vs-c.html#資料型別",[3596,4.859]],["body/java/java-vs-c.html#資料型別",[2,1.429,3,0.075,4,0.217,5,0.299,6,0.232,7,0.228,8,0.241,9,0.283,10,0.311,11,0.325,19,0.793,22,0.529,24,0.56,49,1.319,50,3.497,51,3.271,56,0.648,95,2.738,114,0.445,120,3.84,126,2.195,138,2.923,140,2.409,142,3.004,151,2.657,152,2.84,168,4.135,170,5.229,197,3.234,270,2.657,297,1.894,299,2.14,340,3.821,343,5.593,368,1.566,442,2.087,543,2.738,576,4.018,582,2.508,924,6.958,1019,0.491,1032,0.607,1034,0.9,1041,0.648,1158,3.364,1162,3.359,1303,4.869,1376,1.314,1437,2.14,1438,2.44,1505,5.331,1536,4.869,1901,2.252,2222,3.649,2780,4.248,3010,4.248,3259,5.331,3422,5.331,3423,5.331,3424,5.331,3425,5.331,3426,5.331,3427,5.331,3428,5.331,3429,5.331,3430,5.331,3431,5.331,3432,4.869,3433,5.331,3434,5.331,3435,4.018,3436,4.869,3437,5.331,3438,5.331,3439,5.331,3440,5.331,3597,6.033,3598,6.033,3599,6.033,3600,6.033,3601,6.033,3602,6.033,3603,6.033,3604,6.033,3605,6.033,3606,6.033,3607,6.033,3608,6.033,3609,6.033,3610,6.033,3611,6.033,3612,6.033,3613,6.033,3614,6.033,3615,6.033,3616,6.033,3617,5.331,3618,6.033,3619,6.033,3620,6.033,3621,6.033,3622,6.033,3623,6.033,3624,6.033,3625,6.033,3626,6.033,3627,6.033,3628,6.033,3629,6.033,3630,6.033,3631,6.033,3632,6.033,3633,6.033,3634,6.033,3635,6.033,3636,6.033,3637,6.033,3638,6.033,3639,6.033,3640,8.895,3641,8.779,3642,6.033,3643,6.033,3644,6.033,3645,6.033,3646,6.033,3647,6.033,3648,6.033,3649,6.033,3650,6.033]],["title/java/java-vs-c.html#運算符號-Operator",[269,2.092,3651,3.19]],["body/java/java-vs-c.html#運算符號-Operator",[2,1.469,3,0.077,4,0.156,32,0.505,50,5.036,95,3.283,111,3.1,128,2.021,168,3.22,183,3.107,197,3.1,205,4.668,256,4.337,257,6.117,368,1.503,428,4.072,498,5.111,520,5.111,554,5.111,607,5.111,611,5.111,876,5.111,924,4.668,982,4.668,1041,0.777,1054,4.101,1158,3.025,1218,5.92,1437,2.566,1438,2.926,1469,4.072,1901,2.701,2089,4.133,2376,3.852,2996,3.664,3010,4.072,3432,4.668,3435,5.258,3436,5.839,3441,5.111,3442,4.668,3444,5.185,3445,5.111,3446,5.111,3447,5.111,3448,4.337,3449,6.874,3450,5.111,3451,5.111,3452,5.111,3453,5.111,3454,5.111,3455,5.111,3456,6.977,3457,5.111,3458,5.111,3459,4.668,3460,5.111,3651,7.875,3652,5.784,3653,5.784,3654,5.784,3655,5.784,3656,5.784,3657,5.784,3658,5.784,3659,5.784,3660,5.784,3661,5.784,3662,5.784,3663,5.784,3664,8.273,3665,5.784,3666,5.784,3667,5.784,3668,5.784,3669,5.784,3670,5.784,3671,5.784,3672,5.784,3673,5.784,3674,5.784,3675,5.111,3676,5.784,3677,5.784,3678,5.784,3679,5.784,3680,5.784,3681,5.784,3682,5.784,3683,5.784,3684,5.784,3685,5.784,3686,5.784,3687,5.784,3688,5.784,3689,5.784,3690,5.784,3691,5.784,3692,5.784,3693,5.784,3694,5.784,3695,5.784,3696,5.784,3697,5.784,3698,5.784,3699,5.784,3700,5.784,3701,5.784,3702,5.784,3703,5.784,3704,5.784,3705,5.784,3706,5.784,3707,5.784,3708,5.784,3709,5.784]],["title/java/java-vs-c.html#流程控制敘述",[3710,4.859]],["body/java/java-vs-c.html#流程控制敘述",[2,1.189,3,0.076,4,0.18,5,0.238,6,0.209,7,0.253,8,0.268,9,0.314,10,0.345,11,0.361,12,0.345,13,0.361,14,0.494,15,0.566,16,0.566,17,0.603,18,0.641,22,0.477,24,0.622,32,0.69,56,0.719,86,4.051,114,0.494,116,2.963,128,1.87,166,4.715,183,3.113,281,1.574,368,1.217,582,2.784,1016,3.689,1017,4.784,1019,0.443,1032,0.647,1034,0.699,1035,1.083,1039,1.596,1226,1.632,1228,1.852,2929,4.715,2931,5.917,3461,5.917,3462,7.438,3463,5.917,3711,6.696,3712,6.696,3713,6.696,3714,6.696,3715,6.696,3716,6.696,3717,6.696,3718,6.696,3719,6.696,3720,6.696,3721,6.696,3722,6.696,3723,6.696]],["title/java/java-vs-c.html#字串",[3724,4.293]],["body/java/java-vs-c.html#字串",[2,1.162,3,0.076,4,0.21,5,0.278,6,0.244,7,0.295,8,0.345,9,0.366,10,0.402,22,0.556,23,1.795,24,0.724,25,2.835,32,0.571,36,2.883,56,0.838,114,0.576,138,3.07,269,3.792,368,1.514,1019,0.516,1032,0.706,1034,0.921,1035,1.261,1039,1.859,1041,0.703,2286,3.436,2460,5.849,3464,5.782,3465,6.894,3466,5.782,3467,5.782,3469,5.782,3724,5.782,3725,6.543,3726,6.543,3727,6.543,3728,6.543,3729,6.543,3730,6.543,3731,6.543,3732,6.543,3733,6.543,3734,6.543,3735,6.543,3736,6.543,3737,6.543,3738,6.543,3739,6.543,3740,6.543,3741,6.543,3742,6.543,3743,6.543,3744,6.543]],["title/java/java-vs-c.html#Java-語言的寫作風格",[368,0.656,3745,3.61]],["body/java/java-vs-c.html#Java-語言的寫作風格",[3,0.076,4,0.226,5,0.236,6,0.207,7,0.251,8,0.266,9,0.311,10,0.342,11,0.358,12,0.342,13,0.358,14,0.49,15,0.561,16,0.561,17,0.597,18,0.635,19,0.654,22,0.56,24,0.616,31,0.928,32,0.579,55,2.759,56,0.713,60,0.795,61,0.774,62,0.774,63,0.753,80,2.974,111,4.217,114,0.49,132,4.203,183,2.611,281,1.566,368,1.205,828,1.617,1019,0.555,1020,2.529,1032,0.643,1034,0.822,1035,1.356,1039,1.581,1108,5.863,1149,4.648,1158,2.543,1161,3.207,3470,5.863,3473,5.863,3474,5.863,3746,6.636,3747,6.636,3748,6.636,3749,6.636,3750,6.636,3751,6.636,3752,6.636,3753,6.636,3754,6.636,3755,6.636,3756,6.636,3757,6.636,3758,5.863,3759,6.636,3760,6.636,3761,6.636]],["title/java/java-vs-c.html#運算符號範例",[3762,4.859]],["body/java/java-vs-c.html#運算符號範例",[3,0.077,4,0.238,5,0.327,6,0.255,7,0.308,8,0.326,9,0.382,10,0.321,11,0.335,12,0.321,13,0.335,22,0.605,23,1.541,24,0.757,25,2.433,31,0.87,56,0.912,114,0.602,117,2.389,138,2.448,140,2.266,269,3.606,281,1.238,338,4.794,368,1.13,512,5.021,1019,0.54,1032,0.723,1034,0.852,1035,1.319,1039,1.804,1234,3.391,1673,5.674,2404,4.665,2479,4.144,3475,6.107,3476,5.498,3477,5.498,3478,5.498,3479,5.498,3480,6.687,3481,5.498,3482,5.498,3483,5.498,3484,5.021,3763,6.221,3764,6.221,3765,6.221,3766,6.221,3767,6.221,3768,6.221,3769,6.221,3770,6.221,3771,6.221,3772,6.221,3773,6.221,3774,6.221,3775,6.221,3776,5.021,3777,6.221,3778,6.221,3779,7.568]],["title/java/java-vs-c.html#迴圈範例",[3780,4.859]],["body/java/java-vs-c.html#迴圈範例",[3,0.077,4,0.25,5,0.319,6,0.28,7,0.302,8,0.35,9,0.374,10,0.412,11,0.431,12,0.43,13,0.431,14,0.57,15,0.675,16,0.576,17,0.613,18,0.652,19,0.423,22,0.651,23,1.726,24,0.742,25,2.85,31,1.028,32,0.715,56,0.922,61,0.5,108,1.734,112,2.95,114,0.605,116,2.827,117,2.39,128,1.198,206,3.215,281,0.853,536,5.248,548,3.019,936,3.789,1019,0.529,1030,1.093,1032,0.733,1034,0.834,1035,1.292,1036,1.834,1037,1.314,1039,1.624,1040,3.215,1041,0.732,1042,3.215,1043,3.215,1044,3.215,1149,4.545,1155,3.949,1185,3.019,1211,2.698,1230,3.442,1234,3.322,2479,2.856,2895,5.248,2929,3.019,3078,3.46,3350,3.184,3485,3.46,3486,3.789,3487,3.789,3488,3.789,3489,3.46,3490,5.248,3491,3.789,3494,3.46,3495,3.789,3496,3.789,3497,3.46,3499,5.936,3500,3.46,3501,7.379,3502,7.061,3503,3.46,3617,5.248,3776,5.936,3781,4.288,3782,4.288,3783,4.288,3784,4.288,3785,4.288,3786,4.288,3787,4.288,3788,4.288,3789,4.288,3790,4.288,3791,4.288,3792,4.288,3793,5.939,3794,5.939,3795,5.939,3796,4.288,3797,5.939,3798,5.939,3799,4.288,3800,4.288,3801,4.288,3802,4.288,3803,5.939,3804,4.288,3805,4.288,3806,4.288,3807,4.288,3808,5.939,3809,4.288,3810,6.814,3811,6.021,3812,5.939,3813,5.939,3814,4.288,3815,5.939,3816,4.288,3817,4.288,3818,4.288,3819,4.288,3820,4.288,3821,4.288,3822,4.288,3823,4.288,3824,4.288,3825,4.288,3826,4.288,3827,4.288,3828,4.288,3829,4.288,3830,4.288,3831,4.288,3832,4.288,3833,4.288,3834,4.288,3835,4.288,3836,4.288,3837,4.288,3838,4.288,3839,4.288,3840,4.288,3841,4.288,3842,4.288,3843,4.288,3844,4.288,3845,4.288,3846,4.288,3847,5.939,3848,4.288,3849,4.288,3850,4.288,3851,4.288,3852,4.288,3853,4.288,3854,4.288]],["title/java/java-vs-c.html#遞迴-recursion-範例",[1110,2.153,3506,2.153,3855,2.871]],["body/java/java-vs-c.html#遞迴-recursion-範例",[3,0.077,4,0.253,5,0.318,6,0.269,7,0.31,8,0.328,9,0.384,10,0.402,11,0.42,12,0.402,13,0.42,14,0.576,22,0.632,24,0.724,31,1.225,32,0.737,56,0.927,114,0.576,117,2.488,178,4.222,281,1.121,288,2.572,439,3.435,543,2.555,582,2.341,763,4.975,1014,3.406,1015,4.303,1019,0.516,1032,0.732,1034,0.814,1035,1.261,1149,3.018,1150,4.222,1185,3.964,1234,3.243,2695,5.009,3072,3.263,3489,4.544,3499,6.612,3500,4.544,3503,4.544,3507,6.294,3508,4.975,3509,4.544,3510,4.975,3511,4.975,3512,4.975,3513,4.975,3514,5.847,3515,6.286,3516,4.975,3517,7.24,3675,4.975,3776,6.294,3811,6.891,3856,5.63,3857,5.63,3858,5.63,3859,5.63,3860,5.63,3861,5.63,3862,5.63,3863,5.63,3864,5.63,3865,7.114,3866,5.63,3867,5.63,3868,5.63]],["title/java/jdbc.html",[3869,4.293]],["body/java/jdbc.html",[2,0.928,3,0.077,4,0.228,5,0.259,6,0.235,7,0.289,8,0.279,9,0.318,10,0.349,11,0.366,12,0.359,13,0.354,14,0.418,15,0.508,16,0.508,17,0.509,18,0.541,19,0.558,22,0.608,23,0.375,24,0.171,25,0.995,31,1.221,32,0.751,37,0.953,38,1.186,46,0.959,49,1.004,51,3.207,52,3.48,56,0.796,58,1.793,60,0.678,61,0.702,62,0.66,63,0.717,64,0.791,65,0.811,66,0.893,67,0.915,68,0.959,69,0.937,70,1.004,71,1.028,72,1.028,73,1.076,74,1.126,75,1.126,76,1.178,77,1.178,78,1.205,79,1.34,80,1.853,82,2.423,94,1.872,95,2.371,96,0.836,97,2.341,98,0.688,99,1.582,100,1.582,101,1.582,103,1.949,104,1.75,105,1.949,106,1.448,107,2.064,108,1.618,111,1.659,114,0.485,116,1.721,117,0.492,120,0.953,122,1.152,128,1.117,142,2.664,152,2.441,162,0.949,248,1.297,265,2.179,277,1.164,281,0.796,282,1.35,283,1.455,284,1.455,288,0.971,297,1.195,299,1.097,301,1.178,310,1.217,331,1.437,340,2.969,341,3.782,343,2.664,359,2.061,365,1.487,368,0.562,377,1.279,378,1.251,379,1.286,400,0.836,407,0.706,421,1.35,442,1.07,445,1.155,450,1.872,783,1.297,802,1.895,809,1.35,827,2.512,831,2.729,1014,1.114,1015,4.102,1019,0.418,1022,1.35,1030,1.857,1031,1.404,1032,0.671,1034,0.953,1035,0.647,1037,2.012,1039,1.766,1041,0.882,1147,3.153,1158,1.533,1160,0.592,1161,0.89,1166,1.164,1188,1.195,1189,1.256,1196,3.584,1199,1.751,1201,0.953,1210,1.297,1211,1.019,1212,3.983,1223,1.448,1225,2.18,1226,1.142,1228,0.998,1230,1.068,1251,2.319,1252,1.705,1372,1.232,1373,1.232,1374,1.164,1375,1.19,1376,1.138,1377,1.217,1378,1.142,1388,0.862,1421,1.95,1427,0.811,1430,3.983,1436,2.72,1437,1.097,1438,1.251,1635,4.425,1638,3.228,1640,1.251,1641,1.251,1642,1.251,1643,1.309,1644,1.34,1645,1.34,1646,1.34,1647,1.34,1648,1.34,1649,1.34,1650,1.34,1651,1.34,1652,1.34,1653,1.34,1654,1.34,1655,1.34,1696,1.403,1697,1.403,1698,1.403,1699,1.437,1700,1.437,1701,1.437,1702,1.507,1703,1.507,1704,1.507,1705,1.286,1706,1.286,1707,1.318,1708,1.318,1709,1.318,1710,1.318,1711,1.318,1712,1.318,1713,1.318,1714,1.318,1715,1.419,1716,1.419,1717,1.419,1718,1.384,1719,1.419,1720,1.419,1721,1.419,1722,1.419,1723,1.419,1724,1.533,1725,1.533,1726,1.533,1727,1.533,1728,1.533,1729,1.533,1730,1.533,1731,1.533,1732,1.533,1733,1.533,1734,1.533,1735,1.533,1736,1.533,1737,1.07,1738,1.155,1739,1.218,1740,1.218,1741,1.155,1742,1.251,1743,1.251,1744,1.251,1745,1.251,1746,1.251,1747,1.287,1748,1.287,1749,1.287,1750,1.287,1751,1.287,1752,1.287,1753,1.287,1754,1.287,1755,1.287,1756,1.287,1757,1.287,1758,1.324,1759,1.324,1760,1.324,1761,1.324,1762,0.788,1763,0.788,1764,0.788,1765,0.811,1766,0.811,1767,0.811,1768,0.811,1769,0.811,1770,0.811,1771,0.811,1772,0.862,1773,0.862,1774,0.862,1775,0.862,1776,0.862,1777,0.862,1778,0.862,1779,0.862,1780,0.89,1781,0.89,1782,0.89,1783,0.89,1784,0.89,1785,0.89,1786,0.89,1787,0.953,1788,0.953,1789,0.953,1790,0.953,1791,0.953,1792,0.953,1793,0.953,1794,0.953,1795,0.953,1796,0.953,1797,0.953,1798,0.953,1799,0.953,1800,0.953,1801,0.953,1802,0.953,1803,0.953,1804,0.953,1805,0.953,1806,0.953,1807,0.953,1808,0.988,1809,0.988,1810,0.988,1811,0.988,1812,0.988,1813,0.988,1814,0.988,1815,0.988,1816,0.988,1817,0.988,1818,0.988,1819,0.988,1820,0.988,1821,0.988,1822,0.988,1823,0.988,1824,0.988,1825,0.988,1881,2.183,1886,1.167,1890,2.999,1894,3.48,1895,2.32,1901,1.75,1932,1.227,1933,1.227,1971,0.988,1979,0.988,2033,2.32,2034,1.949,2058,1.487,2059,3.228,2061,0.988,2101,2.497,2107,0.988,2123,4.092,2251,4.566,2279,3.228,2280,3.782,2281,5.473,2283,3.782,2285,2.497,2286,1.363,2287,0.836,2314,5.093,2315,6.484,2316,2.497,2317,1.487,2328,5.093,2353,1.487,2356,4.217,2380,2.497,2381,4.853,2382,2.289,2385,2.179,2629,1.227,2838,1.167,2846,3.983,2870,1.297,2880,1.487,2995,2.42,3039,2.925,3048,2.534,3072,1.068,3369,1.167,3389,1.448,3401,2.32,3869,4.617,3870,1.842,3871,1.842,3872,5.225,3873,3.094,3874,1.842,3875,1.842,3876,1.842,3877,1.487,3878,3.094,3879,1.842,3880,1.842,3881,1.842,3882,1.842,3883,1.842,3884,4.001,3885,1.842,3886,2.497,3887,1.842,3888,1.842,3889,1.842,3890,4.687,3891,3.917,3892,6.161,3893,4.001,3894,4.001,3895,4.687,3896,1.487,3897,3.228,3898,1.842,3899,1.842,3900,4.687,3901,4.687,3902,6.781,3903,4.001,3904,1.842,3905,3.094,3906,4.001,3907,6.014,3908,6.014,3909,3.094,3910,3.094,3911,3.094,3912,3.094,3913,4.001,3914,1.842,3915,4.001,3916,1.842,3917,6.014,3918,6.014,3919,1.842,3920,1.842,3921,1.842,3922,1.842,3923,1.487,3924,4.001,3925,2.734,3926,3.094,3927,4.687,3928,3.094,3929,1.487,3930,3.094,3931,1.297,3932,4.687,3933,1.842,3934,1.842,3935,1.842,3936,2.734,3937,3.094,3938,1.842,3939,1.842,3940,5.658,3941,1.842,3942,3.094,3943,5.225,3944,1.487,3945,1.381,3946,3.228,3947,3.228,3948,1.842,3949,1.487,3950,1.842,3951,1.842,3952,3.094,3953,3.094,3954,3.094,3955,3.094,3956,1.842,3957,5.225,3958,1.842,3959,3.161,3960,3.094,3961,3.228,3962,1.842,3963,1.842,3964,1.628,3965,1.842,3966,3.094,3967,1.842,3968,1.842,3969,1.842,3970,1.487,3971,2.734,3972,1.842,3973,1.842,3974,4.001,3975,3.094,3976,4.687,3977,3.094,3978,3.094,3979,1.842,3980,1.842,3981,1.842,3982,1.842,3983,1.842,3984,1.842,3985,1.842,3986,3.094,3987,7.412,3988,4.687,3989,7.507,3990,4.001,3991,6.781,3992,7.282,3993,7.136,3994,1.842,3995,1.842,3996,1.842,3997,1.842,3998,1.842,3999,1.842,4000,1.842,4001,1.842,4002,1.842,4003,1.842,4004,1.842,4005,1.842,4006,8.154,4007,5.225,4008,5.225,4009,1.842,4010,4.687,4011,1.842,4012,1.842,4013,1.842,4014,1.842,4015,5.658,4016,1.842,4017,1.842,4018,1.842,4019,1.842,4020,3.094,4021,4.001,4022,3.094,4023,3.094,4024,3.094,4025,3.094,4026,1.842,4027,1.842,4028,1.842,4029,1.842,4030,6.311,4031,1.842,4032,1.842,4033,6.564,4034,1.842,4035,1.842,4036,6.311,4037,1.842,4038,1.842,4039,3.094,4040,3.094,4041,4.687,4042,3.094,4043,3.094,4044,1.842,4045,3.094,4046,1.842,4047,1.842,4048,1.842,4049,1.842,4050,1.842,4051,1.842,4052,3.094,4053,1.842,4054,1.842,4055,1.842,4056,1.842,4057,1.842,4058,3.094,4059,1.842,4060,6.781,4061,1.487,4062,3.094,4063,1.842,4064,1.842,4065,1.842,4066,1.842,4067,1.842,4068,1.842,4069,3.094,4070,1.842,4071,4.001,4072,1.842,4073,1.842,4074,4.001,4075,4.687,4076,1.842,4077,3.094,4078,1.842,4079,1.842,4080,1.842,4081,1.842,4082,1.842,4083,1.842,4084,1.842,4085,1.842,4086,1.842,4087,1.842,4088,1.842,4089,1.842,4090,1.842,4091,3.094,4092,4.001,4093,4.001,4094,3.094,4095,3.094,4096,3.535,4097,3.094,4098,4.001,4099,1.842,4100,4.001,4101,4.687,4102,4.001,4103,1.842,4104,1.842,4105,1.842,4106,3.094,4107,1.842,4108,1.842,4109,1.842,4110,1.842,4111,1.842,4112,3.094,4113,1.842,4114,1.842,4115,1.842,4116,1.842,4117,1.842,4118,1.842,4119,1.842,4120,1.842,4121,1.842,4122,1.842,4123,1.842,4124,3.094,4125,1.842,4126,1.842,4127,1.842,4128,1.487,4129,1.628,4130,1.842,4131,1.842,4132,1.842,4133,1.842,4134,1.842,4135,4.001,4136,1.842,4137,1.842,4138,1.842,4139,1.842,4140,1.842,4141,1.842,4142,1.842,4143,1.842,4144,1.842,4145,3.094,4146,1.487,4147,3.094,4148,1.842,4149,3.094,4150,2.497,4151,4.001,4152,1.842,4153,3.094,4154,1.842,4155,1.842,4156,1.842,4157,1.842,4158,1.842,4159,1.842,4160,1.842,4161,1.842,4162,1.842,4163,1.842,4164,1.842,4165,1.842,4166,1.842,4167,1.297,4168,1.842]],["title/java/message-passing.html",[3,0.039]],["body/java/message-passing.html",[3,0.077,4,0.193,5,0.254,6,0.244,7,0.27,8,0.313,9,0.335,10,0.368,11,0.385,12,0.368,13,0.443,14,0.419,15,0.479,16,0.479,17,0.511,18,0.543,19,0.559,22,0.603,24,0.527,31,0.793,32,0.495,36,2.842,46,0.962,53,2.499,55,3.254,56,0.768,60,0.68,61,0.662,62,0.662,63,0.644,64,0.793,65,0.813,66,0.896,67,0.917,68,0.962,69,0.939,70,1.007,71,1.031,72,1.299,73,1.079,96,3.244,114,0.625,126,3.146,128,1.585,368,1.031,828,2.255,830,4.324,1011,3.619,1019,0.581,1020,2.901,1032,0.733,1034,0.593,1035,0.917,1041,0.768,1158,2.739,1186,1.264,1199,2.088,1228,1.208,1363,3.995,1365,3.432,1366,5.36,1368,4.324,1741,2.668,2594,3.779,2596,4.254,2631,4.358,2868,5.36,2870,5.033,2994,4.104,2995,4.97,3015,5.033,3877,4.579,4169,5.014,4170,5.014,4171,5.674,4172,5.674,4173,6.978,4174,7.641,4175,5.014,4176,5.014,4177,5.014,4178,5.014,4179,5.014,4180,5.014,4181,5.014,4182,5.014,4183,5.014,4184,5.014,4185,6.317,4186,5.014]],["title/java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點",[53,0.696,1011,0.696,2994,0.789,2995,0.955,4187,1.579,4188,1.579,4189,1.579]],["body/java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點",[36,2.788,55,3.351,183,3.172,197,4.32,582,2.875,828,2.243,830,4.875,1011,3.55,1019,0.533,1020,2.912,1365,4.183,1366,6.043,1368,4.183,1469,4.868,2594,4.605,2631,4.749,3015,5.674,3160,6.11,3877,5.58,4169,6.11,4190,6.914,4191,6.914,4192,6.914,4193,6.914,4194,6.914,4195,6.914,4196,6.914,4197,6.914,4198,6.914,4199,6.914,4200,6.914,4201,6.914,4202,6.914,4203,6.914,4204,6.914,4205,6.914,4206,6.914,4207,6.914,4208,6.914,4209,6.914,4210,6.914,4211,6.914,4212,6.914]],["title/java/message-passing.html#Message-Passing-的語法",[2926,2.317,2994,1.434,2995,1.737]],["body/java/message-passing.html#Message-Passing-的語法",[3,0.077,4,0.198,5,0.262,6,0.25,7,0.278,8,0.32,9,0.345,10,0.38,11,0.397,12,0.38,13,0.451,14,0.439,15,0.503,16,0.503,17,0.536,18,0.569,19,0.587,22,0.612,24,0.552,31,0.832,32,0.519,36,2.548,46,1.009,55,2.474,56,0.791,60,0.713,61,0.694,62,0.694,63,0.676,64,0.832,65,0.853,66,0.94,67,0.962,68,1.009,69,0.985,70,1.057,71,1.081,72,1.338,73,1.132,96,3.342,114,0.634,126,3.183,128,1.662,368,1.081,828,2.162,1019,0.529,1020,2.571,1032,0.739,1034,0.622,1035,0.962,1041,0.791,1158,2.822,1186,1.326,1199,2.134,1228,1.268,1368,3.6,1536,4.803,1741,2.749,2596,4.462,2780,5.185,2868,5.522,2870,5.185,2916,5.259,2994,3.679,2995,4.455,4170,5.259,4173,7.061,4174,7.732,4175,5.259,4176,5.259,4177,5.259,4178,5.259,4179,5.259,4180,5.259,4181,5.259,4182,5.259,4183,5.259,4184,5.259,4185,6.508,4186,5.259,4213,5.951,4214,5.951,4215,5.951,4216,5.951,4217,7.365,4218,5.951,4219,5.951,4220,5.951,4221,5.951,4222,5.951,4223,5.951,4224,5.951,4225,5.951,4226,5.951,4227,5.951,4228,5.951,4229,5.951]],["title/java/net.html",[4230,4.859]],["body/java/net.html",[2,1.107,3,0.077,4,0.209,5,0.164,6,0.174,7,0.174,8,0.25,9,0.216,10,0.237,11,0.301,12,0.237,13,0.248,14,0.34,15,0.389,16,0.389,17,0.414,18,0.441,19,0.454,22,0.582,31,0.872,32,0.677,39,1.914,46,0.78,49,0.817,51,2.747,53,1.331,56,0.67,60,0.552,61,0.537,62,0.537,63,0.523,64,0.644,65,0.66,66,0.727,67,0.744,68,0.945,69,0.762,70,0.817,71,0.837,72,0.837,73,0.876,74,0.916,75,0.916,76,0.959,77,0.959,78,0.981,79,0.864,80,1.072,82,3.919,86,2.785,95,2.83,97,1.51,98,1.128,99,1.554,100,1.554,101,1.554,103,1.914,104,1.719,105,1.914,106,2.155,107,2.028,109,2.381,111,3.343,112,2.721,113,1.752,114,0.56,117,1.229,118,2.785,120,2.884,122,0.937,128,1.286,152,1.516,162,0.927,251,1.62,277,1.026,281,1.11,282,1.554,283,1.675,284,1.675,297,1.174,299,1.633,301,0.959,310,1.073,331,1.412,345,3.452,377,1.257,378,1.229,379,1.48,400,1.372,407,1.158,421,1.554,438,2.266,442,1.593,445,1.719,771,1.563,802,1.222,809,1.554,820,1.51,827,1.62,831,3.209,1016,2.319,1019,0.501,1020,0.972,1022,1.554,1030,1.875,1031,1.372,1032,0.704,1034,0.899,1037,2.38,1039,0.72,1041,0.935,1161,2.225,1166,1.026,1179,2.641,1186,1.73,1188,1.174,1189,1.445,1199,2.266,1201,3.656,1211,2.422,1223,2.155,1225,2.546,1226,1.122,1228,0.981,1234,1.257,1372,1.003,1373,1.003,1374,1.026,1375,1.049,1376,1.003,1377,1.073,1378,1.122,1421,1.128,1427,2.028,1428,2.266,1436,2.364,1437,1.072,1444,2.128,1636,3.242,1637,1.752,1639,2.266,1640,1.229,1641,1.229,1642,1.229,1643,1.286,1644,1.316,1645,1.316,1646,1.316,1647,1.316,1648,1.316,1649,1.316,1650,1.316,1651,1.316,1652,1.316,1653,1.316,1654,1.316,1655,1.316,1678,2.266,1683,2.266,1696,1.379,1697,1.379,1698,1.379,1699,1.412,1700,1.412,1701,1.412,1702,1.48,1703,1.48,1704,1.48,1705,1.48,1706,1.48,1707,1.516,1708,1.516,1709,1.516,1710,1.516,1711,1.516,1712,1.516,1713,1.516,1714,1.516,1715,1.633,1716,1.633,1717,1.633,1718,1.593,1719,1.633,1720,1.633,1721,1.633,1722,1.633,1723,1.633,1724,1.764,1725,1.764,1726,1.764,1727,1.764,1728,1.764,1729,1.764,1730,1.764,1731,1.764,1732,1.764,1733,1.764,1734,1.764,1735,1.764,1736,1.764,1737,1.593,1738,1.719,1739,1.812,1740,1.812,1741,1.719,1742,1.862,1743,1.862,1744,1.862,1745,1.862,1746,1.862,1747,1.914,1748,1.914,1749,1.914,1750,1.914,1751,1.914,1752,1.914,1753,1.914,1754,1.914,1755,1.914,1756,1.914,1757,1.914,1758,1.97,1759,1.97,1760,1.97,1761,1.97,1762,1.97,1763,1.97,1764,1.97,1765,2.028,1766,2.028,1767,2.028,1768,2.028,1769,2.028,1770,2.028,1771,2.028,1772,1.415,1773,1.415,1774,1.415,1775,1.415,1776,1.415,1777,1.415,1778,1.415,1779,1.415,1780,1.461,1781,1.461,1782,1.461,1783,1.461,1784,1.461,1785,1.461,1786,1.461,1881,2.686,1883,3.31,1886,1.915,1894,2.013,1971,1.62,1974,1.627,2034,1.914,2042,3.452,2113,1.683,2130,2.013,2287,1.372,2382,2.673,2385,2.128,2433,1.915,2484,2.266,2631,3.472,2655,4.153,2656,3.242,2659,4.22,2661,2.917,2672,4.273,2673,3.937,2851,2.266,2858,3.927,2866,2.381,3004,2.593,3200,2.917,3350,3.343,3448,2.266,3892,2.44,3896,5.934,3897,2.44,3923,2.44,3931,3.242,3946,2.44,3947,4.501,3949,2.44,3959,3.772,3961,2.44,4231,4.501,4232,2.671,4233,4.069,4234,2.671,4235,4.069,4236,5.177,4237,2.671,4238,3.023,4239,2.671,4240,2.671,4241,3.023,4242,3.023,4243,2.671,4244,3.452,4245,2.671,4246,5.822,4247,6.249,4248,5.511,4249,4.069,4250,2.917,4251,3.772,4252,4.153,4253,4.153,4254,3.95,4255,2.917,4256,3.067,4257,2.671,4258,4.929,4259,2.671,4260,4.069,4261,2.671,4262,2.671,4263,2.44,4264,2.671,4265,5.931,4266,5.511,4267,2.671,4268,3.023,4269,4.069,4270,2.671,4271,2.671,4272,2.671,4273,2.671,4274,2.671,4275,2.671,4276,2.671,4277,2.671,4278,2.671,4279,2.671,4280,2.671,4281,2.671,4282,3.716,4283,2.671,4284,2.671,4285,2.671,4286,5.822,4287,2.671,4288,2.671,4289,2.671,4290,2.671,4291,2.671,4292,5.511,4293,7.115,4294,2.671,4295,7.115,4296,4.069,4297,2.671,4298,3.023,4299,2.013,4300,2.671,4301,2.671,4302,2.671,4303,2.671,4304,2.671,4305,2.671,4306,2.671,4307,2.671,4308,2.671,4309,2.671,4310,2.671,4311,2.671,4312,5.033,4313,2.671,4314,2.671,4315,2.671,4316,2.671,4317,3.023,4318,5.511,4319,2.671,4320,1.915,4321,2.671,4322,4.069,4323,2.671,4324,5.511,4325,2.671,4326,2.671,4327,2.671,4328,2.671,4329,1.829,4330,4.069,4331,3.715,4332,2.671,4333,4.069,4334,3.452,4335,2.671,4336,2.671,4337,5.511,4338,2.671,4339,2.671,4340,2.671,4341,2.671,4342,2.671,4343,4.069,4344,2.671,4345,2.671,4346,4.069,4347,2.671,4348,2.671,4349,2.671,4350,2.671,4351,6.249,4352,4.069,4353,5.511,4354,3.716,4355,2.671,4356,2.671,4357,4.069,4358,2.671,4359,2.671,4360,2.671,4361,2.671,4362,2.671,4363,2.671,4364,2.44,4365,2.671,4366,6.497,4367,4.069,4368,2.671,4369,2.671,4370,2.671,4371,3.452,4372,2.671,4373,2.671,4374,2.671,4375,2.671,4376,2.44,4377,2.44,4378,2.44,4379,4.069,4380,4.897,4381,4.069,4382,2.671,4383,2.128,4384,2.671,4385,2.671,4386,2.671,4387,3.716,4388,2.671,4389,2.671,4390,2.671,4391,2.671,4392,2.671,4393,2.671,4394,2.671,4395,2.671,4396,2.671,4397,2.671]],["title/java/net.html#SMTP-Client",[2655,2.404,4231,2.913]],["body/java/net.html#SMTP-Client",[2,1.054,3,0.077,4,0.198,5,0.152,6,0.134,7,0.162,8,0.238,9,0.201,10,0.221,11,0.231,12,0.221,13,0.231,14,0.316,15,0.362,16,0.362,17,0.386,18,0.41,19,0.422,22,0.584,31,0.83,32,0.697,46,0.726,49,0.761,53,1.887,56,0.79,60,0.513,61,0.5,62,0.5,63,0.487,64,0.599,65,0.614,66,0.676,67,0.693,68,1.006,69,0.709,70,0.761,71,0.778,72,0.778,73,0.815,74,0.853,75,0.853,76,0.892,77,0.892,78,0.913,79,1.225,80,1.52,82,4.317,95,2.694,97,2.14,99,1.446,100,1.446,101,1.446,103,1.781,104,1.599,105,1.781,106,2.006,107,1.887,111,3.942,112,2.698,114,0.543,122,0.872,128,1.197,277,0.955,281,0.853,282,1.446,283,1.559,284,1.559,297,1.093,299,1.52,301,0.892,310,0.998,331,1.313,377,1.17,378,1.143,379,1.377,421,1.446,438,3.213,442,1.482,445,1.599,802,1.733,809,1.446,820,2.14,827,2.297,831,2.694,1016,2.468,1019,0.451,1020,1.377,1022,1.446,1030,1.875,1032,0.683,1034,0.896,1037,2.254,1039,1.021,1041,0.911,1161,2.869,1166,0.955,1179,1.686,1186,1.72,1188,1.093,1189,1.345,1199,2.186,1201,3.522,1211,2.243,1223,2.006,1225,2.364,1226,1.044,1228,0.913,1372,0.933,1373,0.933,1374,0.955,1375,0.976,1376,0.933,1377,0.998,1378,1.044,1421,1.599,1427,1.887,1428,3.213,1436,1.377,1437,1.52,1640,1.143,1641,1.143,1642,1.143,1643,1.197,1644,1.225,1645,1.225,1646,1.225,1647,1.225,1648,1.225,1649,1.225,1650,1.225,1651,1.225,1652,1.225,1653,1.225,1654,1.225,1655,1.225,1696,1.283,1697,1.283,1698,1.283,1699,1.313,1700,1.313,1701,1.313,1702,1.377,1703,1.377,1704,1.377,1705,1.377,1706,1.377,1707,1.411,1708,1.411,1709,1.411,1710,1.411,1711,1.411,1712,1.411,1713,1.411,1714,1.411,1715,1.52,1716,1.52,1717,1.52,1718,1.482,1719,1.52,1720,1.52,1721,1.52,1722,1.52,1723,1.52,1724,1.642,1725,1.642,1726,1.642,1727,1.642,1728,1.642,1729,1.642,1730,1.642,1731,1.642,1732,1.642,1733,1.642,1734,1.642,1735,1.642,1736,1.642,1737,1.482,1738,1.599,1739,1.686,1740,1.686,1741,1.599,1742,1.733,1743,1.733,1744,1.733,1745,1.733,1746,1.733,1747,1.781,1748,1.781,1749,1.781,1750,1.781,1751,1.781,1752,1.781,1753,1.781,1754,1.781,1755,1.781,1756,1.781,1757,1.781,1758,1.833,1759,1.833,1760,1.833,1761,1.833,1762,1.833,1763,1.833,1764,1.833,1765,1.887,1766,1.887,1767,1.887,1768,1.887,1769,1.887,1770,1.887,1771,1.887,1881,2.763,1883,3.442,1886,2.714,1971,2.297,1974,1.118,2034,1.781,2287,1.945,2382,2.481,2433,2.714,2488,3.017,2590,3.786,2659,4.094,2661,2.714,2672,3.993,2673,3.792,2866,2.215,3004,1.781,3350,3.182,3448,3.213,3897,3.458,3923,3.458,3931,4.179,3946,3.458,3947,4.791,3949,3.458,3959,3.591,4231,4.791,4232,3.786,4233,5.245,4234,3.786,4235,3.786,4236,5.177,4237,3.786,4239,3.786,4240,3.786,4243,3.786,4244,3.213,4245,3.786,4246,6.356,4247,7.059,4248,6.019,4249,5.245,4250,2.714,4251,3.591,4252,3.954,4253,3.954,4254,3.76,4255,2.714,4256,2.854,4257,3.786,4258,6.019,4259,3.786,4260,5.245,4261,3.786,4262,3.786,4263,3.458,4264,3.786,4265,6.823,4266,6.498,4267,3.786,4269,5.245,4270,3.786,4271,3.786,4272,3.786,4273,3.786,4274,3.786,4275,3.786,4276,3.786,4277,3.786,4278,3.786,4279,3.786,4280,3.786,4281,3.786,4282,3.458,4283,3.786,4284,3.786,4285,3.786,4286,3.213,4287,3.786,4288,3.786,4289,3.786,4290,3.786,4291,3.786,4292,6.498,4293,7.661,4294,3.786,4295,7.661,4296,5.245,4297,3.786,4299,2.854,4300,3.786,4301,3.786,4302,3.786,4303,3.786,4304,3.786,4305,3.786,4306,3.786,4307,3.786,4308,3.786,4309,3.786,4310,3.786,4311,3.786,4398,4.285,4399,4.285,4400,4.285,4401,4.285,4402,4.285,4403,4.285,4404,4.285,4405,5.936,4406,4.285,4407,4.285,4408,5.936,4409,5.936,4410,4.285,4411,4.285,4412,4.285,4413,4.285,4414,5.245,4415,4.285,4416,4.285]],["title/java/net.html#HTTP-Server",[2656,2.541,4312,2.913]],["body/java/net.html#HTTP-Server",[2,1,3,0.077,4,0.202,5,0.141,6,0.176,7,0.15,8,0.159,9,0.186,10,0.205,11,0.214,12,0.205,13,0.214,14,0.294,15,0.336,16,0.336,17,0.358,18,0.38,19,0.392,22,0.535,31,0.788,32,0.571,39,2.342,46,0.674,49,0.706,51,3.134,60,0.477,61,0.464,62,0.464,63,0.452,64,0.556,65,0.57,66,0.628,67,0.643,68,0.674,69,0.658,70,0.706,71,0.722,72,0.722,73,0.756,74,0.791,75,0.791,76,0.828,77,0.828,78,0.847,86,3.408,95,2.557,98,1.484,99,1.342,100,1.342,101,1.342,103,1.653,104,1.484,105,1.653,106,1.861,107,1.751,109,2.913,112,2.569,113,2.305,114,0.525,117,1.061,118,3.408,120,3.383,122,0.81,128,1.111,152,1.855,162,1.219,251,2.132,277,0.886,281,1.121,282,1.342,283,1.447,284,1.447,297,1.014,299,1.41,301,0.828,310,0.927,331,1.219,345,2.982,377,1.086,378,1.061,379,1.278,400,1.805,407,1.524,421,1.342,442,1.376,445,1.484,771,2.056,809,1.342,831,3.23,1016,1.653,1019,0.497,1022,1.342,1030,1.668,1031,1.805,1032,0.691,1034,0.856,1037,2.303,1041,0.918,1166,0.886,1179,2.801,1186,1.585,1188,1.014,1189,1.248,1199,2.224,1201,3.383,1211,2.344,1223,1.861,1225,2.508,1226,0.969,1228,0.847,1234,1.653,1372,0.866,1373,0.866,1374,0.886,1375,0.906,1376,0.866,1377,0.927,1378,0.969,1427,1.751,1436,2.508,1444,2.8,1636,3.966,1637,2.305,1639,2.982,1640,1.061,1641,1.061,1642,1.061,1643,1.111,1644,1.137,1645,1.137,1646,1.137,1647,1.137,1648,1.137,1649,1.137,1650,1.137,1651,1.137,1652,1.137,1653,1.137,1654,1.137,1655,1.137,1678,2.982,1683,2.982,1696,1.191,1697,1.191,1698,1.191,1699,1.219,1700,1.219,1701,1.219,1702,1.278,1703,1.278,1704,1.278,1705,1.278,1706,1.278,1707,1.31,1708,1.31,1709,1.31,1710,1.31,1711,1.31,1712,1.31,1713,1.31,1714,1.31,1715,1.41,1716,1.41,1717,1.41,1718,1.376,1719,1.41,1720,1.41,1721,1.41,1722,1.41,1723,1.41,1724,1.524,1725,1.524,1726,1.524,1727,1.524,1728,1.524,1729,1.524,1730,1.524,1731,1.524,1732,1.524,1733,1.524,1734,1.524,1735,1.524,1736,1.524,1737,1.376,1738,1.484,1739,1.565,1740,1.565,1741,1.484,1742,1.608,1743,1.608,1744,1.608,1745,1.608,1746,1.608,1747,1.653,1748,1.653,1749,1.653,1750,1.653,1751,1.653,1752,1.653,1753,1.653,1754,1.653,1755,1.653,1756,1.653,1757,1.653,1758,1.701,1759,1.701,1760,1.701,1761,1.701,1762,1.701,1763,1.701,1764,1.701,1765,1.751,1766,1.751,1767,1.751,1768,1.751,1769,1.751,1770,1.751,1771,1.751,1772,1.861,1773,1.861,1774,1.861,1775,1.861,1776,1.861,1777,1.861,1778,1.861,1779,1.861,1780,1.922,1781,1.922,1782,1.922,1783,1.922,1784,1.922,1785,1.922,1786,1.922,1881,2.263,1883,2.637,1894,2.648,1974,1.706,2034,1.653,2042,4.224,2113,2.214,2130,2.648,2382,2.633,2385,2.8,2484,2.982,2631,3.962,2655,3.752,2656,2.8,2659,3.962,2661,2.519,2672,4.237,2673,3.643,2851,2.982,2858,4.606,2866,2.056,3004,2.72,3200,3.568,3350,3.02,3892,3.209,3896,6.473,3959,3.408,3961,3.209,4236,4.606,4244,2.982,4250,2.519,4251,3.408,4252,3.752,4253,3.752,4254,3.568,4255,2.519,4256,2.648,4282,3.209,4286,6.144,4312,5.28,4313,3.514,4314,3.514,4315,3.514,4316,3.514,4318,6.289,4319,3.514,4320,2.519,4321,3.514,4322,4.978,4323,3.514,4324,6.289,4325,3.514,4326,3.514,4327,3.514,4328,3.514,4329,2.405,4330,4.978,4331,4.357,4332,3.514,4333,4.978,4334,4.224,4335,3.514,4336,3.514,4337,6.289,4338,3.514,4339,3.514,4340,3.514,4341,3.514,4342,3.514,4343,3.514,4344,3.514,4345,3.514,4346,4.978,4347,3.514,4348,3.514,4349,3.514,4350,3.514,4351,6.893,4352,4.978,4353,6.289,4354,3.209,4355,3.514,4356,3.514,4357,3.514,4358,3.514,4359,3.514,4360,3.514,4361,3.514,4362,3.514,4363,3.514,4364,3.209,4365,3.514,4366,7.088,4367,4.978,4368,3.514,4369,3.514,4370,3.514,4371,4.224,4372,3.514,4373,3.514,4374,3.514,4375,3.514,4376,3.209,4377,3.209,4378,3.209,4379,4.978,4380,5.342,4381,4.978,4382,3.514,4383,2.8,4384,3.514,4385,3.514,4386,3.514,4387,4.546,4388,3.514,4389,3.514,4390,3.514,4391,3.514,4392,3.514,4393,3.514,4394,3.514,4395,3.514,4396,3.514,4397,3.514,4417,3.977,4418,3.977,4419,3.977,4420,3.977,4421,3.977,4422,3.977,4423,3.977,4424,3.977,4425,3.977,4426,3.977,4427,3.977,4428,3.977,4429,3.977]],["title/java/thread.html",[3,0.039]],["body/java/thread.html",[0,2.143,2,1.029,3,0.077,4,0.239,5,0.296,6,0.251,7,0.295,8,0.319,9,0.362,10,0.398,11,0.416,12,0.398,13,0.426,14,0.57,15,0.653,16,0.644,17,0.686,18,0.729,19,0.728,22,0.636,23,1.251,24,0.726,31,0.578,32,0.749,46,1.091,49,1.091,54,1.608,55,1.721,56,0.849,58,1.119,60,0.885,61,0.845,62,0.845,63,0.822,64,0.99,65,0.988,66,1.089,67,1.081,68,1.091,69,1.066,70,1.091,71,1.116,72,1.116,73,1.169,74,1.068,75,0.961,76,1.005,77,1.005,78,1.028,79,1.756,86,2.503,90,1.417,108,1.673,112,2.432,114,0.654,117,1.64,118,3.894,122,0.842,162,1.48,168,1.075,251,3.584,253,4.105,262,3.058,272,1.448,277,0.922,281,0.961,285,3.058,288,2.273,297,0.492,301,1.005,310,0.964,368,0.752,373,4.678,377,0.527,378,0.515,383,1.506,386,2.266,407,2.22,449,2.913,764,1.377,768,1.448,778,2.039,780,4.369,783,4.079,784,3.62,810,2.218,828,2.04,831,1.461,1019,0.544,1020,1.035,1032,0.756,1034,0.771,1035,1.041,1036,3.213,1037,2.049,1039,1.644,1041,0.925,1158,0.74,1160,1.863,1162,1.075,1166,0.922,1179,3.683,1182,0.933,1186,1.699,1188,0.821,1199,1.718,1201,2.996,1211,2.12,1212,2.266,1225,2.149,1226,0.784,1228,0.685,1252,1.171,1254,null,1372,1.052,1373,0.901,1374,0.922,1375,0.943,1376,0.901,1377,0.964,1378,0.784,1389,3.722,1396,4.087,1415,2.304,1425,1.168,1436,1.552,1442,2.143,1640,0.859,1641,0.859,1642,0.859,1643,0.899,1644,0.552,1645,0.552,1646,0.552,1647,0.552,1648,0.552,1649,0.552,1650,0.552,1651,0.552,1652,0.552,1653,0.552,1654,0.552,1655,0.552,1659,1.359,1696,0.578,1697,0.578,1698,0.578,1699,0.592,1700,0.592,1701,0.592,1900,3.399,1929,3.109,1930,2.413,1971,3.294,1974,1.799,1979,1.725,2123,2.218,2152,3.62,2312,2.92,2382,2.074,2631,1.792,2659,3.722,2672,4.328,2673,3.226,2838,1.223,2866,0.998,2879,1.448,2994,2.067,2996,1.223,3004,3.398,3025,0.965,3039,2.14,3194,1.359,3195,4.369,3198,3.103,3205,3.998,3354,3.859,3459,1.558,3959,5.112,4246,1.448,4250,3.058,4251,5.112,4252,3.859,4253,2.143,4254,4.486,4255,3.058,4256,2.756,4299,3.215,4320,4.369,4329,4.467,4331,5.003,4334,1.448,4430,1.931,4431,1.706,4432,1.931,4433,1.706,4434,2.844,4435,1.706,4436,3.896,4437,4.828,4438,3.339,4439,3.218,4440,2.844,4441,1.931,4442,1.706,4443,1.706,4444,1.706,4445,1.706,4446,4.266,4447,1.706,4448,1.706,4449,1.558,4450,1.931,4451,2.844,4452,1.706,4453,1.706,4454,4.266,4455,4.266,4456,2.844,4457,4.676,4458,4.676,4459,3.339,4460,3.218,4461,3.339,4462,1.706,4463,1.706,4464,4.266,4465,2.597,4466,2.844,4467,1.931,4468,1.931,4469,1.706,4470,1.931,4471,1.931,4472,1.931,4473,1.706,4474,1.931,4475,1.706,4476,1.931,4477,1.931,4478,1.706,4479,5.689,4480,4.74,4481,1.931,4482,1.931,4483,1.931,4484,1.931,4485,1.706,4486,3.896,4487,3.339,4488,1.706,4489,4.266,4490,2.597,4491,2.597,4492,2.844,4493,2.844,4494,2.844,4495,4.266,4496,1.706,4497,3.896,4498,2.844,4499,3.896,4500,3.896,4501,2.844,4502,3.896,4503,1.706,4504,1.706,4505,1.706,4506,1.706,4507,4.894,4508,1.931,4509,1.931,4510,3.058,4511,2.597,4512,3.657,4513,2.597,4514,2.597,4515,3.339,4516,1.558,4517,1.558,4518,1.558,4519,4.266,4520,2.597,4521,2.597,4522,1.558,4523,3.896,4524,1.558,4525,1.558,4526,1.558,4527,1.706,4528,1.706,4529,5.43,4530,5.12,4531,5.12,4532,4.74,4533,5.12,4534,1.931,4535,2.844,4536,5.908,4537,1.706,4538,2.844,4539,2.844,4540,1.706,4541,2.844,4542,2.844,4543,1.706,4544,7.05,4545,6.095,4546,5.908,4547,6.258,4548,3.218,4549,1.931,4550,1.706,4551,1.931,4552,1.706,4553,1.931,4554,1.706,4555,1.931,4556,1.706,4557,4.74,4558,2.844,4559,1.706,4560,4.266,4561,1.706,4562,1.706,4563,1.706,4564,1.931,4565,3.657,4566,1.706,4567,2.844,4568,1.931,4569,1.706,4570,1.706,4571,3.657,4572,1.706,4573,1.706,4574,4.74,4575,4.266]],["title/java/thread.html#Program-Process-Thread",[79,0.821,251,1.539,1179,1.13]],["body/java/thread.html#Program-Process-Thread",[24,0.628,54,3.379,55,2.813,58,3.921,79,2.543,168,3.767,183,2.662,251,4.77,253,4.612,262,5.527,272,5.072,551,5.978,582,3.308,742,7.031,768,5.072,828,1.649,1158,2.592,1179,3.608,1513,5.978,1580,5.072,2152,5.072,2914,5.966,3162,5.978,3279,5.978,4431,5.978,4576,6.765,4577,6.765,4578,6.765,4579,6.765,4580,6.765,4581,6.765,4582,6.765,4583,6.765,4584,6.765,4585,6.765,4586,6.765,4587,6.765,4588,6.765,4589,6.765,4590,6.765,4591,6.765,4592,6.765,4593,6.765,4594,6.765,4595,6.765,4596,6.765,4597,6.765,4598,6.765,4599,6.765,4600,6.765,4601,6.765,4602,5.46,4603,6.765,4604,6.765,4605,6.765,4606,6.765,4607,6.765,4608,6.765,4609,6.765,4610,6.765,4611,6.765,4612,6.765,4613,6.765,4614,6.765,4615,6.765]],["title/java/thread.html#如何產生-Thread",[1179,1.421,4616,3.61]],["body/java/thread.html#如何產生-Thread",[3,0.076,4,0.215,5,0.284,6,0.25,7,0.278,8,0.295,9,0.345,10,0.379,11,0.397,12,0.379,13,0.397,14,0.543,15,0.622,16,0.622,17,0.663,18,0.704,24,0.812,56,0.791,86,4.452,108,2.977,114,0.634,197,3.187,368,1.08,449,5.182,543,2.698,764,2.543,1019,0.529,1032,0.733,1034,0.769,1035,1.19,1039,2.085,1041,0.859,1179,3.666,1252,2.678,1289,4.798,1389,4.098,1415,4.098,1425,3.597,1469,4.186,1500,4.186,1578,5.254,1929,4.633,1971,4.286,1974,1.551,2123,3.946,2929,4.186,2994,3.677,3004,3.725,3025,2.97,3039,3.806,3205,5.139,3758,5.254,4433,5.254,4434,6.504,4435,5.254,4436,5.94,4438,5.94,4440,6.504,4602,4.798,4617,5.946,4618,5.946,4619,5.946,4620,5.946,4621,5.946,4622,5.946,4623,5.946,4624,7.361,4625,7.361,4626,5.946,4627,5.254,4628,5.946,4629,5.946,4630,5.946,4631,5.254,4632,6.504,4633,5.254,4634,5.946,4635,5.946,4636,5.946,4637,5.946,4638,5.946]],["title/java/thread.html#Thread-的優先權與影響資源的相關方法",[1179,1.421,4639,3.61]],["body/java/thread.html#Thread-的優先權與影響資源的相關方法",[3,0.077,4,0.223,5,0.285,6,0.259,7,0.286,8,0.332,9,0.355,10,0.39,11,0.408,12,0.39,13,0.431,14,0.559,15,0.639,16,0.639,17,0.681,18,0.724,19,0.746,22,0.605,24,0.769,32,0.66,56,0.928,60,0.907,61,0.796,62,0.796,63,0.775,64,0.738,65,0.756,66,0.833,67,0.853,86,3.193,108,2.134,114,0.626,162,2.092,253,3.059,281,1.051,386,4.806,449,3.716,1019,0.501,1032,0.746,1034,0.902,1035,1.223,1039,1.906,1041,0.89,1160,2.572,1179,3.642,1225,2.194,1389,2.939,1415,2.939,1929,3.059,1971,2.829,1974,1.973,2123,2.829,2312,4.839,2382,2.304,2631,3.801,2994,2.637,3004,3.528,3039,2.729,3198,5.672,4320,4.324,4329,4.129,4436,5.509,4438,4.26,4442,4.664,4443,4.664,4444,4.664,4445,4.664,4446,7.068,4447,4.664,4448,4.664,4449,4.26,4451,6.032,4452,4.664,4453,4.664,4454,7.068,4455,7.068,4456,6.032,4457,6.455,4458,6.455,4459,5.509,4461,5.509,4462,4.664,4463,4.664,4464,7.068,4631,6.685,4632,7.32,4633,4.664,4640,4.664,4641,5.278,4642,5.278,4643,5.278,4644,5.278,4645,5.278,4646,5.278,4647,5.278,4648,5.278,4649,5.278,4650,5.278,4651,5.278,4652,5.278,4653,5.278,4654,5.278,4655,5.278,4656,5.278,4657,7.566,4658,6.826,4659,6.826,4660,5.278,4661,5.278]],["title/java/thread.html#Critical-Section-關鍵時刻-的保護措施",[4465,1.924,4466,2.107,4662,2.384,4663,2.384]],["body/java/thread.html#Critical-Section-關鍵時刻-的保護措施",[2,1.285,3,0.077,4,0.238,5,0.294,6,0.234,7,0.284,8,0.301,9,0.339,10,0.373,11,0.39,12,0.373,13,0.405,14,0.535,15,0.612,16,0.583,17,0.621,18,0.66,19,0.68,22,0.628,23,1.529,24,0.597,31,0.809,32,0.632,46,0.981,49,0.856,56,0.83,60,0.826,61,0.804,62,0.804,63,0.783,64,0.964,65,0.922,66,1.016,67,0.936,68,0.981,69,0.958,70,0.856,71,0.876,72,0.876,73,0.917,74,0.96,75,0.96,76,1.005,77,1.005,78,1.027,90,2.125,112,2.756,114,0.594,122,0.982,162,1.479,251,1.723,253,3.996,277,1.075,281,1.152,285,4.076,288,2.598,297,0.82,301,1.005,310,1.124,368,0.584,373,2.036,377,0.878,378,0.858,383,1.505,407,2.774,778,3.056,783,5.097,784,4.824,810,3.104,828,2.158,831,2.189,1019,0.511,1020,1.034,1032,0.745,1034,0.605,1035,0.78,1036,2.752,1037,2.421,1041,0.939,1160,1.551,1162,1.79,1166,1.075,1179,3.615,1186,1.898,1188,0.82,1199,2.061,1201,3.744,1211,2.384,1225,2.414,1226,0.784,1228,0.685,1372,1.051,1373,1.051,1374,1.075,1375,1.099,1376,1.051,1377,1.124,1378,0.784,1389,3.583,1436,2.069,1442,3.213,1640,0.858,1641,0.858,1642,0.858,1643,0.898,1644,0.919,1645,0.919,1646,0.919,1647,0.919,1648,0.919,1649,0.919,1650,0.919,1651,0.919,1652,0.919,1653,0.919,1654,0.919,1655,0.919,1659,2.263,1696,0.963,1697,0.963,1698,0.963,1699,0.985,1700,0.985,1701,0.985,1900,4.53,1971,3.104,1974,1.678,2382,2.327,2659,4.398,2672,4.609,2673,4.031,2701,2.41,2789,2.841,2838,2.036,2866,1.662,2990,2.841,3004,3.01,3194,2.263,3195,3.056,3205,3.356,3225,2.841,3246,4.263,3354,2.141,3959,4.542,4246,2.41,4250,3.668,4251,5.006,4252,4.822,4253,3.213,4254,3.668,4255,3.668,4256,3.856,4299,4.285,4320,4.892,4329,1.945,4331,5.627,4457,2.594,4458,2.594,4459,2.594,4461,2.594,4465,2.594,4469,2.841,4473,2.841,4475,2.841,4478,2.841,4479,6.635,4480,6.093,4485,2.841,4486,5.193,4487,4.673,4488,2.841,4489,5.686,4490,3.893,4491,3.893,4492,4.263,4493,4.263,4494,4.263,4495,5.686,4496,2.841,4497,5.193,4498,4.263,4499,5.193,4500,5.193,4501,4.263,4502,5.193,4503,2.841,4504,2.841,4505,2.841,4506,2.841,4507,5.301,4510,2.036,4511,3.893,4512,5.117,4513,3.893,4514,3.893,4515,4.673,4516,2.594,4517,2.594,4518,2.594,4519,5.686,4520,3.893,4521,3.893,4522,2.594,4523,5.193,4524,2.594,4525,2.594,4526,2.594,4602,2.594,4664,3.215,4665,3.215,4666,3.215,4667,3.215,4668,3.215,4669,3.215,4670,3.215,4671,3.215,4672,3.215,4673,3.215,4674,3.215,4675,3.215,4676,3.215,4677,3.215,4678,3.215,4679,3.215,4680,3.215,4681,3.215,4682,3.215,4683,3.215,4684,3.215,4685,3.215,4686,3.215,4687,3.215,4688,3.215,4689,3.215,4690,3.215,4691,3.215,4692,3.215,4693,3.215,4694,3.215,4695,3.215,4696,3.215,4697,3.215,4698,3.215,4699,3.215,4700,3.215,4701,3.215,4702,3.215,4703,3.215,4704,3.215,4705,3.215,4706,3.215,4707,3.215,4708,3.215,4709,3.215,4710,3.215,4711,3.215,4712,3.215,4713,3.215,4714,3.215,4715,3.215,4716,3.215,4717,3.215,4718,3.215,4719,3.215,4720,3.215,4721,3.215,4722,3.215,4723,3.215,4724,3.215,4725,3.215,4726,3.215,4727,3.215,4728,3.215,4729,3.215,4730,3.215,4731,3.215,4732,3.215,4733,3.215,4734,3.215,4735,3.215,4736,3.215,4737,3.215,4738,3.215,4739,3.215,4740,3.215,4741,3.215,4742,3.215,4743,3.215,4744,3.215,4745,5.79,4746,3.215,4747,3.215,4748,3.215,4749,3.215,4750,3.215,4751,3.215,4752,3.215,4753,3.215,4754,4.824,4755,3.215,4756,4.824,4757,3.215,4758,3.215,4759,3.215,4760,3.215,4761,3.215,4762,3.215,4763,3.215,4764,3.215,4765,3.215]],["title/java/thread.html#Multiple-Reader-Writer-Monitors",[373,1.51,2996,1.51,3354,1.588,4527,2.107]],["body/java/thread.html#Multiple-Reader-Writer-Monitors",[0,3.5,3,0.077,4,0.237,5,0.269,6,0.226,7,0.273,8,0.29,9,0.339,10,0.373,11,0.39,12,0.373,13,0.39,14,0.534,15,0.611,16,0.611,17,0.651,18,0.692,19,0.713,22,0.639,24,0.335,32,0.785,46,1.226,49,1.284,56,0.388,60,0.867,61,0.844,62,0.844,63,0.821,64,1.011,65,1.037,66,1.142,67,1.17,68,1.226,69,1.198,70,1.284,71,1.314,72,1.314,73,1.376,74,1.233,75,1.046,76,1.094,77,1.094,78,1.119,114,0.665,117,2.079,118,4.831,122,0.735,183,1.421,197,1.935,277,0.804,301,1.094,310,0.841,373,4.936,780,5.158,1019,0.528,1032,0.752,1034,0.377,1035,0.584,1036,3.539,1041,0.811,1166,0.804,1179,3.46,1188,0.921,1211,1.731,1212,3.7,1226,0.88,1228,0.769,1372,1.145,1373,0.786,1374,0.804,1375,0.823,1376,0.786,1377,0.841,1378,0.88,1389,2.926,1396,4.657,1640,0.963,1641,0.963,1642,0.963,1643,1.008,1929,2.092,1930,3.941,1974,1.371,1979,2.817,2672,2.718,2879,2.707,3004,2.185,3195,5.059,3354,4.128,3959,5.391,4250,2.287,4251,5.289,4254,5.059,4255,2.287,4329,5.004,4334,2.707,4510,3.926,4528,3.19,4529,6.887,4530,6.672,4531,6.672,4532,6.393,4533,6.672,4535,4.644,4536,7.195,4537,3.19,4538,4.644,4539,4.644,4540,3.19,4541,4.644,4542,4.644,4543,3.19,4544,7.843,4545,7.31,4546,7.195,4547,7.407,4550,3.19,4552,3.19,4554,3.19,4556,3.19,4557,6.393,4558,4.644,4559,3.19,4560,6.015,4561,3.19,4562,3.19,4563,3.19,4565,5.476,4566,3.19,4567,4.644,4569,3.19,4570,3.19,4571,5.476,4572,3.19,4573,3.19,4574,6.393,4575,6.015,4766,3.61,4767,3.61,4768,3.61,4769,3.61,4770,3.61,4771,3.61,4772,3.61,4773,3.61,4774,3.61,4775,5.256,4776,5.256,4777,3.61,4778,3.61,4779,5.256,4780,5.256,4781,3.61,4782,5.256,4783,5.256,4784,3.61,4785,5.256,4786,5.256,4787,5.256,4788,3.61,4789,3.61,4790,3.61,4791,3.61,4792,3.61,4793,3.61,4794,3.61,4795,3.61,4796,3.61,4797,3.61,4798,5.256,4799,3.61,4800,5.256,4801,3.61,4802,3.61]],["title/java/gui.html",[1899,2.939]],["body/java/gui.html",[2,1.052,3,0.077,4,0.219,5,0.239,6,0.261,7,0.248,8,0.262,9,0.289,10,0.318,11,0.343,12,0.305,13,0.215,14,0.295,15,0.337,16,0.337,17,0.359,18,0.382,19,0.446,22,0.627,23,0.512,24,0.31,31,1.162,32,0.787,37,0.748,38,1.28,39,1.881,46,0.677,49,0.709,51,3.027,56,0.766,60,0.479,61,0.466,62,0.466,63,0.606,64,0.558,65,0.764,66,0.631,67,0.862,68,1.208,69,0.661,70,0.709,71,0.726,72,0.726,73,0.76,74,0.795,75,0.795,76,0.832,77,0.832,78,0.851,79,0.719,80,0.893,82,0.748,90,1.759,95,1.812,97,1.257,98,0.54,99,0.488,100,0.488,101,0.488,103,0.602,104,1.247,105,0.602,106,0.677,107,0.637,112,0.829,114,0.609,116,2.845,117,1.207,122,0.813,124,1.459,128,1.957,140,1.196,142,0.94,152,2.029,162,2.354,163,1.257,167,2.141,270,2.714,277,0.89,281,1.654,282,1.127,283,1.215,284,1.215,288,0.79,289,3.227,292,0.776,297,1.018,299,1.185,301,0.832,309,0.806,310,0.931,331,1.224,332,0.806,368,0.607,377,1.09,378,1.066,379,1.074,383,3.147,400,1.142,403,0.806,404,0.964,407,2.361,421,1.127,439,1.471,442,1.381,444,0.806,445,1.247,447,0.806,764,2.282,771,0.748,780,0.917,802,0.585,809,1.127,819,0.964,820,1.669,828,0.353,831,0.657,835,1.869,1011,1.109,1014,1.523,1015,4.499,1016,2.649,1019,0.422,1022,1.127,1030,1.787,1032,0.722,1034,0.786,1035,0.54,1036,0.619,1037,1.224,1039,0.345,1041,0.955,1054,1.109,1147,3.276,1160,1.817,1166,0.89,1179,0.57,1186,1.657,1188,1.018,1189,1.254,1192,1.772,1196,0.917,1199,0.672,1203,1.772,1223,0.677,1225,1.284,1226,0.973,1228,1.397,1252,2.5,1253,1.302,1364,1.812,1372,0.87,1373,0.87,1374,0.89,1375,0.91,1376,0.87,1377,0.931,1378,0.973,1381,1.459,1388,2.118,1397,1.257,1421,0.54,1427,0.637,1430,1.019,1434,1.772,1436,1.284,1437,1.892,1438,1.615,1634,2.225,1640,1.066,1641,1.066,1642,1.066,1643,1.115,1644,1.141,1645,1.141,1646,1.141,1647,1.141,1648,1.141,1649,1.141,1650,1.141,1651,1.141,1652,1.141,1653,1.141,1654,1.141,1655,1.141,1657,1.168,1687,4.587,1688,1.302,1693,0.839,1696,1.196,1697,1.196,1698,1.196,1699,2.01,1700,1.224,1701,1.224,1702,1.284,1703,1.284,1704,1.454,1705,1.284,1706,1.284,1707,1.315,1708,1.315,1709,1.315,1710,1.315,1711,1.315,1712,1.315,1713,1.315,1714,1.315,1715,1.185,1716,1.185,1717,1.185,1718,1.155,1719,1.185,1720,1.185,1721,1.185,1722,1.185,1723,1.185,1724,1.28,1725,1.28,1726,1.28,1727,1.28,1728,1.28,1729,1.28,1730,1.28,1731,1.28,1732,1.28,1733,1.28,1734,1.28,1735,1.28,1736,1.28,1737,1.155,1738,1.247,1739,1.315,1740,1.315,1741,1.247,1742,1.351,1743,1.351,1744,1.351,1745,1.351,1746,1.351,1747,1.389,1748,1.389,1749,1.389,1750,1.389,1751,1.389,1752,1.389,1753,1.389,1754,1.389,1755,1.389,1756,1.389,1757,1.389,1758,1.077,1759,1.077,1760,1.077,1761,1.077,1762,1.077,1763,1.077,1764,1.077,1765,1.109,1766,1.109,1767,1.109,1768,1.109,1769,1.109,1770,1.109,1771,1.109,1772,1.178,1773,1.178,1774,1.178,1775,1.178,1776,1.178,1777,1.178,1778,1.178,1779,1.178,1780,1.216,1781,1.216,1782,1.216,1783,1.216,1784,1.216,1785,1.216,1786,1.216,1787,1.302,1788,1.302,1789,1.302,1790,1.302,1791,1.302,1792,1.302,1793,1.302,1794,1.302,1795,1.302,1796,1.302,1797,1.302,1798,1.302,1799,1.302,1800,1.302,1801,1.302,1802,1.302,1803,1.302,1804,1.302,1805,1.302,1806,1.302,1807,1.302,1808,1.349,1809,1.349,1810,1.349,1811,1.349,1812,1.349,1813,1.349,1814,1.349,1815,1.349,1816,1.349,1817,1.349,1818,1.349,1819,1.349,1820,1.349,1821,1.349,1822,1.349,1823,1.349,1824,1.349,1825,1.349,1826,1.401,1827,1.401,1828,0.839,1829,0.839,1830,0.839,1831,0.839,1832,0.839,1833,0.839,1834,0.839,1835,0.839,1836,0.839,1837,0.839,1838,0.839,1839,0.839,1840,0.839,1841,0.839,1842,0.839,1843,0.839,1844,0.839,1845,0.839,1846,0.839,1847,0.839,1848,0.875,1849,0.875,1850,0.875,1851,0.875,1852,0.875,1853,0.875,1854,0.875,1855,0.875,1856,0.875,1857,0.875,1858,0.875,1859,0.875,1860,0.875,1861,0.875,1862,0.875,1863,0.875,1864,0.875,1865,0.875,1866,0.875,1867,0.875,1868,0.875,1869,0.875,1870,0.875,1871,0.875,1872,0.875,1873,0.875,1874,0.875,1875,0.875,1876,0.875,1877,0.875,1878,0.875,1879,0.875,1881,0.871,1883,0.677,1887,1.019,1888,1.993,1889,2.186,1891,2.806,1892,1.085,1899,2.737,1901,2.378,1906,0.964,1932,0.964,1933,0.964,1963,2.48,1964,2.773,1968,1.791,1974,1.607,1975,3.092,1976,3.433,1977,2.877,1979,0.776,1985,2.877,1986,2.315,1994,0.964,1998,1.523,2003,0.917,2004,0.964,2005,0.964,2007,1.523,2009,0.917,2011,2.315,2034,0.602,2036,1.887,2061,2.141,2105,3.571,2107,3.822,2113,1.401,2116,2.622,2134,2.994,2151,1.594,2176,0.917,2177,0.917,2178,0.917,2179,0.917,2180,0.917,2181,0.917,2182,0.917,2183,0.917,2184,0.917,2185,0.917,2186,0.917,2187,0.917,2188,0.917,2189,0.917,2190,0.917,2191,0.917,2192,0.917,2193,0.917,2194,0.917,2195,0.917,2196,0.917,2197,0.917,2198,0.917,2199,0.917,2200,0.917,2201,0.917,2202,0.917,2203,0.917,2204,0.917,2205,0.917,2206,0.917,2207,0.917,2208,0.917,2209,0.964,2210,0.964,2211,0.964,2212,0.964,2213,0.964,2214,0.964,2215,0.964,2216,0.964,2217,0.964,2218,0.964,2219,0.964,2220,0.964,2221,0.964,2222,0.875,2223,0.964,2224,0.964,2225,0.964,2226,0.964,2227,0.964,2228,0.964,2229,0.964,2230,0.964,2231,0.964,2232,0.964,2233,0.964,2234,0.964,2235,0.964,2236,0.964,2237,0.964,2238,0.964,2239,0.964,2240,0.964,2241,0.964,2242,0.964,2243,0.964,2244,0.964,2245,0.964,2246,0.964,2286,2.349,2287,3.051,2301,1.349,2312,0.875,2337,1.459,2382,1.348,2406,2.315,2413,1.019,2416,3.967,2425,0.964,2426,1.523,2433,0.917,2657,0.917,2838,1.594,2866,1.302,2994,1.669,3004,0.602,3025,1.995,3034,4.104,3038,1.459,3039,2.567,3064,1.019,3072,0.839,3200,2.116,3205,0.839,3350,1.349,3358,1.085,3365,0.875,3369,0.917,3388,3.079,3389,2.118,3444,1.401,3929,4.56,3931,1.019,3944,1.168,3945,1.887,3970,2.696,4061,1.168,4128,1.168,4146,1.168,4150,5.292,4167,1.772,4236,1.019,4299,2.225,4491,1.168,4507,2.53,4510,1.594,4803,1.447,4804,4.275,4805,2.696,4806,1.447,4807,4.56,4808,1.279,4809,1.279,4810,1.447,4811,1.447,4812,1.279,4813,1.279,4814,1.279,4815,2.225,4816,4.237,4817,2.224,4818,1.279,4819,1.279,4820,1.279,4821,1.279,4822,1.279,4823,1.279,4824,2.66,4825,1.279,4826,3.763,4827,1.168,4828,1.279,4829,1.279,4830,1.168,4831,1.279,4832,1.279,4833,2.116,4834,1.772,4835,1.279,4836,2.952,4837,1.085,4838,2.031,4839,1.887,4840,1.279,4841,1.279,4842,1.279,4843,1.279,4844,1.168,4845,1.279,4846,1.279,4847,1.279,4848,1.279,4849,1.279,4850,1.447,4851,1.279,4852,1.279,4853,1.279,4854,3.223,4855,4.036,4856,1.279,4857,2.416,4858,1.279,4859,1.279,4860,1.279,4861,1.279,4862,1.279,4863,1.279,4864,1.279,4865,1.279,4866,1.447,4867,1.279,4868,2.696,4869,3.978,4870,2.812,4871,2.225,4872,1.523,4873,1.085,4874,4.617,4875,1.887,4876,1.085,4877,1.594,4878,2.225,4879,1.772,4880,1.887,4881,1.772,4882,1.887,4883,2.352,4884,2.505,4885,3.092,4886,3.722,4887,1.772,4888,2.66,4889,3.495,4890,3.722,4891,1.523,4892,4.617,4893,2.812,4894,4.439,4895,1.676,4896,1.772,4897,1.676,4898,1.676,4899,1.676,4900,1.676,4901,1.676,4902,1.676,4903,1.676,4904,2.994,4905,2.53,4906,1.887,4907,1.887,4908,2.031,4909,1.887,4910,3.223,4911,2.812,4912,1.772,4913,3.003,4914,1.887,4915,1.887,4916,1.887,4917,4.839,4918,3.967,4919,2.116,4920,2.812,4921,2.53,4922,2.53,4923,2.53,4924,2.53,4925,2.53,4926,2.53,4927,2.53,4928,2.53,4929,2.53,4930,1.594,4931,1.594,4932,1.594,4933,1.594,4934,1.594,4935,1.594,4936,1.594,4937,1.594,4938,1.594,4939,1.594,4940,1.594,4941,1.594,4942,1.279,4943,1.168,4944,1.168,4945,2.031,4946,1.019,4947,1.168,4948,1.279,4949,1.168,4950,2.031,4951,1.168,4952,1.168,4953,1.168,4954,1.887,4955,1.085,4956,1.168,4957,1.168,4958,1.168,4959,1.168,4960,1.279,4961,0.964,4962,1.279,4963,2.952,4964,3.392,4965,2.994,4966,1.279,4967,1.279,4968,4,4969,1.279,4970,1.085,4971,1.085,4972,1.085,4973,1.085,4974,1.085,4975,1.085,4976,1.085,4977,1.085,4978,1.085,4979,1.085,4980,1.279,4981,1.279,4982,1.279,4983,1.279,4984,1.279,4985,1.279,4986,1.279,4987,1.447,4988,1.279,4989,1.279,4990,1.279,4991,2.224,4992,1.279,4993,1.279,4994,3.529,4995,3.998,4996,1.279,4997,2.952,4998,1.279,4999,1.279,5000,2.224,5001,1.279,5002,1.279,5003,1.279,5004,3.529,5005,1.279,5006,2.224,5007,2.952,5008,2.224,5009,4.993,5010,2.224,5011,1.279,5012,1.279,5013,1.279,5014,2.224,5015,1.279,5016,1.279,5017,1.279,5018,1.279,5019,1.279,5020,1.279,5021,1.279,5022,1.279,5023,5.795,5024,1.279,5025,1.279,5026,1.279,5027,2.224,5028,1.279,5029,1.279,5030,1.279,5031,1.279,5032,1.279,5033,1.279,5034,1.279,5035,1.279,5036,1.279,5037,1.279,5038,1.279,5039,2.952,5040,3.998,5041,5.041,5042,4.387,5043,3.998,5044,3.998,5045,3.529,5046,4.993,5047,3.998,5048,3.529,5049,3.529,5050,4.387,5051,4.714,5052,4.387,5053,2.952,5054,1.279,5055,3.998,5056,2.224,5057,2.224,5058,3.529,5059,1.279,5060,1.279,5061,5.235,5062,1.279,5063,1.279,5064,1.279,5065,1.279,5066,1.279,5067,1.279,5068,1.279,5069,1.279,5070,1.279,5071,1.279,5072,1.279,5073,2.224,5074,1.279,5075,2.224,5076,1.279,5077,1.279,5078,1.279,5079,1.279,5080,1.279,5081,1.279,5082,1.279,5083,1.279,5084,1.279,5085,1.279,5086,2.224,5087,1.279,5088,1.279,5089,2.224,5090,1.279,5091,1.279,5092,2.952,5093,1.279,5094,1.279,5095,1.279,5096,1.168,5097,2.031,5098,2.031,5099,2.031,5100,3.223,5101,2.031,5102,1.168,5103,3.223,5104,1.168,5105,2.031,5106,2.031,5107,1.168,5108,1.168,5109,1.168,5110,1.168,5111,1.168,5112,1.168,5113,2.031,5114,1.168,5115,1.168,5116,1.168,5117,1.168,5118,1.168,5119,1.168,5120,1.168,5121,1.168,5122,1.168,5123,1.168,5124,1.168,5125,1.168,5126,1.168,5127,1.168,5128,1.168,5129,1.168,5130,1.168,5131,1.168,5132,1.168,5133,2.505,5134,2.696,5135,2.505,5136,2.505,5137,1.168,5138,1.168,5139,1.168,5140,1.168,5141,1.085,5142,1.168,5143,1.168,5144,1.168,5145,1.168,5146,1.168,5147,1.168,5148,1.168]],["title/java/gui.html#GUI-簡介",[1899,2.183,2887,3.19]],["body/java/gui.html#GUI-簡介",[3,0.05,37,3.226,38,2.391,97,3.117,116,2.497,183,2.455,270,2.748,368,1.484,543,3.44,567,4.155,582,2.594,695,5.513,1550,6.699,1634,5.049,1687,5.674,1693,3.616,1888,2.748,1891,3.339,1899,5.139,1964,2.92,1977,4.733,2036,5.684,2413,4.393,2433,3.952,2695,4.393,2780,4.393,2838,4.802,2914,6.826,3078,5.035,3200,3.952,3388,3.664,3583,5.513,3945,4.678,4804,4.846,4805,6.118,4807,6.855,4808,5.513,4809,5.513,4812,5.513,4813,5.513,4814,5.513,4815,4.155,4816,6.636,4817,6.699,4818,5.513,4819,5.513,4820,5.513,4821,5.513,4822,5.513,4823,5.513,4824,4.155,4825,5.513,4826,4.155,4827,5.035,4828,5.513,4829,5.513,4830,5.035,5149,6.239,5150,6.239,5151,6.239,5152,6.239,5153,6.239,5154,6.239,5155,6.239,5156,6.239,5157,6.239,5158,6.239,5159,6.239,5160,6.239,5161,6.239,5162,6.239,5163,6.239,5164,6.239,5165,6.239,5166,6.239,5167,6.239,5168,6.239,5169,6.239,5170,6.239,5171,6.239,5172,6.239,5173,6.239,5174,6.239,5175,6.239,5176,6.239,5177,6.239,5178,6.239,5179,6.239,5180,6.239,5181,6.239,5182,6.239,5183,6.239,5184,6.239,5185,6.239,5186,6.239,5187,6.239,5188,6.239,5189,6.239,5190,6.239,5191,6.239,5192,6.239,5193,6.239,5194,6.239,5195,6.239,5196,6.239,5197,6.239,5198,6.239,5199,6.239,5200,6.239,5201,6.239,5202,6.239,5203,6.239,5204,6.239,5205,7.581,5206,6.239,5207,6.239,5208,6.239,5209,6.239,5210,6.239,5211,6.239,5212,6.239,5213,6.239,5214,6.239,5215,6.239,5216,6.239]],["title/java/gui.html#AWT",[1687,3.078]],["body/java/gui.html#AWT",[270,2.879,764,2.796,819,4.353,1179,2.572,1196,4.14,1388,3.06,1687,5.584,1889,3.159,1891,2.879,1892,4.901,1906,4.353,1964,3.649,1976,4.519,1977,3.788,1998,3.954,2005,4.353,2007,3.954,2657,4.14,3004,2.718,3200,4.14,3205,3.788,3388,3.159,4627,5.776,4640,5.776,4804,3.639,4805,5.275,4807,6.724,4824,4.353,4831,5.776,4832,5.776,4833,4.14,4834,4.602,4835,5.776,4836,6.89,4837,4.901,4838,5.275,4839,4.901,4840,5.776,4841,5.776,4842,5.776,4843,5.776,4844,5.275,4845,5.776,4846,5.776,4847,5.776,4848,5.776,4849,5.776,4851,5.776,4852,5.776,4853,5.776,4854,5.275,4855,4.14,4856,5.776,4857,3.954,4858,5.776,4859,5.776,4860,5.776,4861,5.776,4862,5.776,4863,5.776,4864,5.776,4865,5.776,4867,5.776,5217,6.537,5218,6.537,5219,6.537,5220,6.537,5221,6.537,5222,6.537,5223,6.537,5224,6.537,5225,6.537,5226,6.537,5227,6.537,5228,6.537,5229,6.537,5230,6.537,5231,6.537,5232,6.537,5233,6.537,5234,6.537,5235,6.537,5236,6.537,5237,6.537,5238,6.537,5239,6.537,5240,6.537,5241,6.537,5242,6.537,5243,6.537,5244,6.537,5245,6.537,5246,6.537,5247,6.537,5248,6.537,5249,6.537,5250,6.537,5251,6.537,5252,6.537,5253,6.537,5254,6.537,5255,6.537,5256,6.537,5257,6.537,5258,6.537,5259,7.797,5260,6.537,5261,6.537,5262,6.537,5263,6.537,5264,6.537]],["title/java/gui.html#井字遊戲",[5265,3.921]],["body/java/gui.html#井字遊戲",[2,1.325,3,0.077,4,0.222,5,0.256,6,0.267,7,0.259,8,0.288,9,0.299,10,0.353,11,0.344,12,0.245,13,0.17,14,0.233,15,0.267,16,0.267,17,0.284,18,0.302,19,0.469,22,0.624,24,0.293,31,0.801,32,0.794,38,1.209,46,0.535,49,0.56,51,3.287,56,0.735,60,0.378,61,0.368,62,0.368,63,0.65,64,0.441,65,0.452,66,0.498,67,0.926,68,1.265,69,0.522,70,0.56,71,0.573,72,0.573,73,0.6,74,0.628,75,0.628,76,0.657,77,0.657,78,0.672,90,2.095,104,1.178,112,1.039,114,0.616,116,2.87,122,0.643,124,1.829,128,0.882,140,1.425,142,1.178,162,2.354,163,1.577,167,2.55,192,4.032,270,2.808,277,0.703,281,1.715,282,1.065,283,1.148,284,1.148,288,1.493,297,0.805,299,1.119,301,0.657,310,0.735,331,0.968,377,0.862,378,0.842,379,1.015,383,3.365,400,1.432,407,2.621,421,1.065,439,1.39,442,1.092,445,1.178,764,2.45,809,1.065,835,1.477,1011,1.39,1019,0.453,1022,1.065,1030,1.213,1032,0.725,1034,0.779,1035,0.51,1041,0.949,1054,1.39,1147,4.001,1160,1.841,1166,0.703,1186,1.784,1188,0.805,1189,0.991,1226,0.769,1228,1.457,1252,2.616,1253,1.632,1364,2.599,1372,0.688,1373,0.688,1374,0.703,1375,0.719,1376,0.688,1377,0.735,1378,0.769,1381,1.829,1388,2.227,1434,3.35,1436,1.53,1437,1.687,1438,1.276,1640,0.842,1641,0.842,1642,0.842,1643,0.882,1644,0.902,1645,0.902,1646,0.902,1647,0.902,1648,0.902,1649,0.902,1650,0.902,1651,0.902,1652,0.902,1653,0.902,1654,0.902,1655,0.902,1688,1.632,1696,0.945,1697,0.945,1698,0.945,1699,2.097,1700,0.968,1701,0.968,1702,1.015,1703,1.015,1704,1.015,1705,1.015,1706,1.015,1707,1.039,1708,1.039,1709,1.039,1710,1.039,1711,1.039,1712,1.039,1713,1.039,1714,1.039,1715,1.119,1716,1.119,1717,1.119,1718,1.092,1719,1.119,1720,1.119,1721,1.119,1722,1.119,1723,1.119,1724,1.209,1725,1.209,1726,1.209,1727,1.209,1728,1.209,1729,1.209,1730,1.209,1731,1.209,1732,1.209,1733,1.209,1734,1.209,1735,1.209,1736,1.209,1737,1.092,1738,1.178,1739,1.242,1740,1.242,1741,1.178,1742,1.276,1743,1.276,1744,1.276,1745,1.276,1746,1.276,1747,1.312,1748,1.312,1749,1.312,1750,1.312,1751,1.312,1752,1.312,1753,1.312,1754,1.312,1755,1.312,1756,1.312,1757,1.312,1758,1.35,1759,1.35,1760,1.35,1761,1.35,1762,1.35,1763,1.35,1764,1.35,1765,1.39,1766,1.39,1767,1.39,1768,1.39,1769,1.39,1770,1.39,1771,1.39,1772,1.477,1773,1.477,1774,1.477,1775,1.477,1776,1.477,1777,1.477,1778,1.477,1779,1.477,1780,1.525,1781,1.525,1782,1.525,1783,1.525,1784,1.525,1785,1.525,1786,1.525,1787,1.632,1788,1.632,1789,1.632,1790,1.632,1791,1.632,1792,1.632,1793,1.632,1794,1.632,1795,1.632,1796,1.632,1797,1.632,1798,1.632,1799,1.632,1800,1.632,1801,1.632,1802,1.632,1803,1.632,1804,1.632,1805,1.632,1806,1.632,1807,1.632,1808,1.692,1809,1.692,1810,1.692,1811,1.692,1812,1.692,1813,1.692,1814,1.692,1815,1.692,1816,1.692,1817,1.692,1818,1.692,1819,1.692,1820,1.692,1821,1.692,1822,1.692,1823,1.692,1824,1.692,1825,1.692,1826,1.757,1827,1.757,1888,1.39,1889,1.525,1891,2.522,1901,2.553,1963,2.377,1964,2.227,1968,1.692,1974,1.784,1975,3.319,1976,4.325,1977,2.758,1985,3.319,1986,2.758,1998,1.909,2003,1.999,2004,2.102,2009,1.999,2011,2.758,2061,2.55,2105,4.642,2107,4.419,2113,1.757,2116,3.319,2151,1.999,2286,2.095,2287,1.432,2301,1.692,2406,2.758,2416,4.349,2425,2.102,2426,1.909,2491,2.789,2534,3.567,2994,2.86,3025,2.377,3034,4.556,3038,1.829,3064,2.222,3369,1.999,3388,2.299,3389,2.227,3403,2.547,3444,1.757,4167,2.222,4510,1.999,4804,4.003,4833,3.014,4834,2.222,4839,2.366,4855,4.333,4857,1.909,4868,4.621,4869,4.489,4870,3.35,4871,3.814,4872,1.909,4873,2.366,4874,5.254,4875,2.366,4876,2.366,4877,1.999,4878,3.814,4879,2.222,4880,2.366,4881,2.222,4882,2.366,4883,3.35,4884,3.567,4885,2.758,4886,5.129,4887,2.222,4888,3.169,4889,4.032,4890,4.293,4891,1.909,4892,5.062,4893,3.35,4894,4.978,4895,2.102,4896,2.222,4897,2.102,4898,2.102,4899,2.102,4900,2.102,4901,2.102,4902,2.102,4903,2.102,4904,3.567,4905,3.014,4906,2.366,4907,2.366,4908,2.547,4909,2.366,4910,3.84,4911,3.35,4912,2.222,4913,3.464,4914,2.366,4915,2.366,4916,2.366,4917,5.254,4918,4.349,4919,1.999,4920,3.35,4921,3.014,4922,3.014,4923,3.014,4924,3.014,4925,3.014,4926,3.014,4927,3.014,4928,3.014,4929,3.014,4930,1.999,4931,1.999,4932,1.999,4933,1.999,4934,1.999,4935,1.999,4936,1.999,4937,1.999,4938,1.999,4939,1.999,4940,1.999,4941,1.999,4942,2.789,4943,2.547,4944,2.547,4945,3.84,4946,2.222,4947,2.547,4948,2.789,4949,2.547,4950,3.84,4951,2.547,4952,2.547,4953,2.547,4954,3.567,4955,2.366,4956,2.547,4957,2.547,4958,2.547,4959,2.547,5265,2.547,5266,2.789,5267,4.204,5268,2.789,5269,2.789,5270,4.204,5271,2.789,5272,2.789,5273,2.789,5274,2.789,5275,2.789,5276,3.156]],["title/java/gui.html#井字遊戲的-Swing-版本",[4816,2.153,5277,2.871,5278,2.871]],["body/java/gui.html#井字遊戲的-Swing-版本",[2,0.666,3,0.077,4,0.187,5,0.261,6,0.275,7,0.278,8,0.277,9,0.325,10,0.326,11,0.374,12,0.279,13,0.202,14,0.277,15,0.317,16,0.317,17,0.338,18,0.359,19,0.37,22,0.633,24,0.348,31,0.886,32,0.767,38,1.438,46,0.636,49,0.666,51,3.473,56,0.789,60,0.45,61,0.438,62,0.438,63,0.426,64,0.525,65,0.538,66,0.592,67,0.607,68,1.336,69,0.621,70,0.666,71,0.682,72,0.682,73,0.714,74,0.747,75,0.747,76,0.781,77,0.781,78,0.799,79,1.072,80,1.331,90,2.38,104,1.401,112,1.236,114,0.63,116,2.938,122,0.764,124,2.175,128,1.048,140,1.618,162,2.474,163,1.874,167,2.897,270,3.053,277,0.836,281,1.759,282,1.266,283,1.365,284,1.365,297,0.957,299,1.331,301,0.781,310,0.874,331,1.15,377,1.024,378,1.001,379,1.206,383,3.581,407,2.656,421,1.266,439,1.653,442,1.298,445,1.401,764,2.71,771,1.94,780,2.377,809,1.266,835,1.756,1011,1.653,1019,0.459,1022,1.266,1030,1.615,1032,0.732,1034,0.564,1035,0.607,1041,0.945,1054,1.653,1147,2.7,1160,2.036,1166,0.836,1186,1.831,1188,0.957,1189,1.178,1226,0.915,1228,1.565,1252,2.783,1253,1.94,1364,1.703,1372,0.817,1373,0.817,1374,0.836,1375,0.855,1376,0.817,1377,0.874,1378,0.915,1381,2.175,1388,2.53,1437,1.917,1640,1.001,1641,1.001,1642,1.001,1643,1.048,1644,1.072,1645,1.072,1646,1.072,1647,1.072,1648,1.072,1649,1.072,1650,1.072,1651,1.072,1652,1.072,1653,1.072,1654,1.072,1655,1.072,1688,1.94,1696,1.123,1697,1.123,1698,1.123,1699,2.252,1700,1.15,1701,1.15,1702,1.206,1703,1.206,1704,1.206,1705,1.206,1706,1.206,1707,1.236,1708,1.236,1709,1.236,1710,1.236,1711,1.236,1712,1.236,1713,1.236,1714,1.236,1715,1.331,1716,1.331,1717,1.331,1718,1.298,1719,1.331,1720,1.331,1721,1.331,1722,1.331,1723,1.331,1724,1.438,1725,1.438,1726,1.438,1727,1.438,1728,1.438,1729,1.438,1730,1.438,1731,1.438,1732,1.438,1733,1.438,1734,1.438,1735,1.438,1736,1.438,1737,1.298,1738,1.401,1739,1.477,1740,1.477,1741,1.401,1742,1.517,1743,1.517,1744,1.517,1745,1.517,1746,1.517,1747,1.56,1748,1.56,1749,1.56,1750,1.56,1751,1.56,1752,1.56,1753,1.56,1754,1.56,1755,1.56,1756,1.56,1757,1.56,1881,1.298,1883,1.756,1888,1.653,1889,1.813,1891,2.79,1901,2.017,1963,2.7,1964,2.53,1968,2.011,1974,1.808,1975,3.671,1985,3.671,1986,3.132,2011,3.132,2061,2.897,2107,3.715,2113,2.089,2151,2.377,2406,3.132,2416,4.628,3025,2.7,3034,4.892,3038,2.175,3388,2.612,3389,2.53,3444,2.089,4167,2.642,4510,2.377,4804,4.26,4815,2.499,4816,2.813,4826,4.219,4855,4.653,4857,2.27,4869,4.88,4870,3.805,4872,2.27,4874,5.172,4875,2.813,4877,2.377,4879,2.642,4880,2.813,4881,2.642,4882,2.813,4883,2.642,4884,2.813,4885,3.132,4886,2.813,4887,2.642,4888,3.6,4889,4.46,4890,4.75,4891,2.27,4892,5.387,4893,3.805,4894,3.423,4895,2.499,4896,2.642,4897,2.499,4898,2.499,4899,2.499,4900,2.499,4901,2.499,4902,2.499,4903,2.499,4904,4.052,4905,3.423,4906,2.813,4907,2.813,4908,3.028,4909,2.813,4910,4.362,4911,3.805,4912,2.642,4913,3.832,4914,2.813,4915,2.813,4916,2.813,4917,5.552,4918,4.628,4919,2.377,4920,3.805,4921,3.423,4922,3.423,4923,3.423,4924,3.423,4925,3.423,4926,3.423,4927,3.423,4928,3.423,4929,3.423,4930,2.377,4931,2.377,4932,2.377,4933,2.377,4934,2.377,4935,2.377,4936,2.377,4937,2.377,4938,2.377,4939,2.377,4940,2.377,4941,2.377,4960,3.316,4961,2.499,4962,3.316,4963,5.598,4964,4.75,4965,4.052,4966,3.316,4967,3.316,4968,4.75,4969,3.316,5265,4.362,5266,3.316,5267,4.776,5268,3.316,5269,3.316,5270,4.776,5271,3.316,5272,3.316,5273,3.316,5274,3.316,5275,3.316]],["title/java/gui.html#鍵盤事件處理範例",[5279,4.859]],["body/java/gui.html#鍵盤事件處理範例",[3,0.077,4,0.217,5,0.108,6,0.175,7,0.115,8,0.122,9,0.143,10,0.157,11,0.25,12,0.157,13,0.164,14,0.225,15,0.258,16,0.258,17,0.274,18,0.292,19,0.3,22,0.606,31,1.256,32,0.773,46,0.517,49,0.541,56,0.724,60,0.365,61,0.356,62,0.356,63,0.346,64,0.426,65,0.897,66,0.481,67,0.493,68,0.517,69,0.505,70,0.541,71,0.554,72,0.554,73,0.58,74,0.607,75,0.607,76,0.635,77,0.635,78,0.649,79,0.871,80,1.081,82,1.576,95,2.842,97,1.523,98,1.138,99,1.029,100,1.029,101,1.029,103,1.267,104,1.138,105,1.267,106,1.427,107,1.342,114,0.497,116,2.503,122,0.621,128,2.312,142,1.138,152,2.614,162,1.92,192,2.146,277,0.679,281,0.607,282,1.029,283,1.109,284,1.109,289,4.461,292,1.634,297,0.777,299,1.081,301,0.635,309,1.697,310,0.71,331,0.934,332,1.697,377,0.832,378,0.813,379,0.98,383,1.427,400,1.383,403,1.697,404,2.03,407,1.168,421,1.029,442,1.603,444,1.697,445,1.138,447,1.697,802,1.233,809,1.029,828,0.743,831,1.383,1014,2.803,1015,5.244,1016,3.354,1019,0.202,1022,1.029,1030,1.718,1032,0.669,1034,0.77,1036,1.304,1037,1.42,1041,0.853,1160,1.49,1166,0.679,1188,0.777,1189,0.957,1192,3.263,1199,1.236,1223,1.427,1225,1.49,1226,0.743,1228,0.649,1252,1.109,1372,0.664,1373,0.664,1374,0.679,1375,0.694,1376,0.664,1377,0.71,1378,0.743,1397,2.315,1421,1.138,1430,2.146,1436,0.98,1437,1.988,1438,2.267,1640,0.813,1641,0.813,1642,0.813,1643,0.851,1644,0.871,1645,0.871,1646,0.871,1647,0.871,1648,0.871,1649,0.871,1650,0.871,1651,0.871,1652,0.871,1653,0.871,1654,0.871,1655,0.871,1696,0.913,1697,0.913,1698,0.913,1699,0.934,1700,0.934,1701,0.934,1702,0.98,1703,0.98,1704,0.98,1705,0.98,1706,0.98,1707,1.004,1708,1.004,1709,1.004,1710,1.004,1711,1.004,1712,1.004,1713,1.004,1714,1.004,1715,1.081,1716,1.081,1717,1.081,1718,1.054,1719,1.081,1720,1.081,1721,1.081,1722,1.081,1723,1.081,1724,1.168,1725,1.168,1726,1.168,1727,1.168,1728,1.168,1729,1.168,1730,1.168,1731,1.168,1732,1.168,1733,1.168,1734,1.168,1735,1.168,1736,1.168,1737,1.054,1738,1.138,1739,1.2,1740,1.2,1741,1.138,1742,1.233,1743,1.233,1744,1.233,1745,1.233,1746,1.233,1747,1.267,1748,1.267,1749,1.267,1750,1.267,1751,1.267,1752,1.267,1753,1.267,1754,1.267,1755,1.267,1756,1.267,1757,1.267,1758,1.304,1759,1.304,1760,1.304,1761,1.304,1762,1.304,1763,1.304,1764,1.304,1765,1.342,1766,1.342,1767,1.342,1768,1.342,1769,1.342,1770,1.342,1771,1.342,1772,1.427,1773,1.427,1774,1.427,1775,1.427,1776,1.427,1777,1.427,1778,1.427,1779,1.427,1780,1.473,1781,1.473,1782,1.473,1783,1.473,1784,1.473,1785,1.473,1786,1.473,1787,1.576,1788,1.576,1789,1.576,1790,1.576,1791,1.576,1792,1.576,1793,1.576,1794,1.576,1795,1.576,1796,1.576,1797,1.576,1798,1.576,1799,1.576,1800,1.576,1801,1.576,1802,1.576,1803,1.576,1804,1.576,1805,1.576,1806,1.576,1807,1.576,1808,1.634,1809,1.634,1810,1.634,1811,1.634,1812,1.634,1813,1.634,1814,1.634,1815,1.634,1816,1.634,1817,1.634,1818,1.634,1819,1.634,1820,1.634,1821,1.634,1822,1.634,1823,1.634,1824,1.634,1825,1.634,1826,1.697,1827,1.697,1828,1.767,1829,1.767,1830,1.767,1831,1.767,1832,1.767,1833,1.767,1834,1.767,1835,1.767,1836,1.767,1837,1.767,1838,1.767,1839,1.767,1840,1.767,1841,1.767,1842,1.767,1843,1.767,1844,1.767,1845,1.767,1846,1.767,1847,1.767,1848,1.844,1849,1.844,1850,1.844,1851,1.844,1852,1.844,1853,1.844,1854,1.844,1855,1.844,1856,1.844,1857,1.844,1858,1.844,1859,1.844,1860,1.844,1861,1.844,1862,1.844,1863,1.844,1864,1.844,1865,1.844,1866,1.844,1867,1.844,1868,1.844,1869,1.844,1870,1.844,1871,1.844,1872,1.844,1873,1.844,1874,1.844,1875,1.844,1876,1.844,1877,1.844,1878,1.844,1879,1.844,1881,1.054,1887,2.146,1888,1.342,1889,1.473,1891,1.342,1901,2.338,1932,2.03,1933,2.03,1963,1.523,1964,1.427,1979,1.634,2034,1.267,2134,4.696,2176,1.931,2177,1.931,2178,1.931,2179,1.931,2180,1.931,2181,1.931,2182,1.931,2183,1.931,2184,1.931,2185,1.931,2186,1.931,2187,1.931,2188,1.931,2189,1.931,2190,1.931,2191,1.931,2192,1.931,2193,1.931,2194,1.931,2195,1.931,2196,1.931,2197,1.931,2198,1.931,2199,1.931,2200,1.931,2201,1.931,2202,1.931,2203,1.931,2204,1.931,2205,1.931,2206,1.931,2207,1.931,2208,1.931,2209,2.03,2210,2.03,2211,2.03,2212,2.03,2213,2.03,2214,2.03,2215,2.03,2216,2.03,2217,2.03,2218,2.03,2219,2.03,2220,2.03,2221,2.03,2222,1.844,2223,2.03,2224,2.03,2225,2.03,2226,2.03,2227,2.03,2228,2.03,2229,2.03,2230,2.03,2231,2.03,2232,2.03,2233,2.03,2234,2.03,2235,2.03,2236,2.03,2237,2.03,2238,2.03,2239,2.03,2240,2.03,2241,2.03,2242,2.03,2243,2.03,2244,2.03,2245,2.03,2246,2.03,2286,2.469,2287,3.661,2382,1.564,2488,2.146,2534,4.696,3039,3.238,3072,1.767,3365,1.844,3403,2.46,3929,6.132,3931,2.146,3944,2.46,3945,2.285,3970,4.524,4061,2.46,4128,2.46,4146,2.46,4150,6.602,4236,2.146,4299,3.734,4414,2.693,4507,3.967,4824,3.086,4838,2.46,4854,4.524,4894,3.967,4970,2.285,4971,2.285,4972,2.285,4973,2.285,4974,2.285,4975,2.285,4976,2.285,4977,2.285,4978,2.285,4979,2.285,4980,2.693,4981,2.693,4982,2.693,4983,2.693,4984,2.693,4985,2.693,4986,2.693,4988,2.693,4989,2.693,4990,2.693,4991,4.095,4992,2.693,4993,2.693,4994,5.534,4995,5.953,4996,2.693,4997,4.954,4998,2.693,4999,2.693,5000,4.095,5001,2.693,5002,2.693,5003,2.693,5004,5.534,5005,2.693,5006,4.095,5007,4.954,5008,4.095,5009,6.715,5010,4.095,5011,2.693,5012,2.693,5013,2.693,5014,4.095,5015,2.693,5016,2.693,5017,2.693,5018,2.693,5019,2.693,5020,2.693,5021,2.693,5022,2.693,5023,7.228,5024,2.693,5025,2.693,5026,2.693,5027,4.095,5028,2.693,5029,2.693,5030,2.693,5031,2.693,5032,2.693,5033,2.693,5034,2.693,5035,2.693,5036,2.693,5037,2.693,5038,2.693,5039,4.954,5040,5.953,5041,6.206,5042,6.269,5043,5.953,5044,5.953,5045,5.534,5046,6.715,5047,5.953,5048,5.534,5049,5.534,5050,6.269,5051,6.516,5052,6.269,5053,4.954,5054,2.693,5055,5.953,5056,4.095,5057,4.095,5058,5.534,5059,2.693,5060,2.693,5061,6.878,5062,2.693,5063,2.693,5064,2.693,5065,2.693,5066,2.693,5067,2.693,5068,2.693,5069,2.693,5070,2.693,5071,2.693,5072,2.693,5073,4.095,5074,2.693,5075,4.095,5076,2.693,5077,2.693,5078,2.693,5079,2.693,5080,2.693,5081,2.693,5082,2.693,5083,2.693,5084,2.693,5085,2.693,5086,4.095,5087,2.693,5088,2.693,5089,4.095,5090,2.693,5091,2.693,5092,4.954,5093,2.693,5094,2.693,5095,2.693,5280,3.048,5281,3.048,5282,3.048,5283,3.048,5284,5.606,5285,5.606]],["title/java/gui.html#文字編輯器",[5286,4.859]],["body/java/gui.html#文字編輯器",[2,0.919,3,0.077,4,0.202,5,0.184,6,0.21,7,0.196,8,0.207,9,0.242,10,0.267,11,0.279,12,0.267,13,0.279,14,0.382,15,0.437,16,0.437,17,0.466,18,0.495,19,0.51,22,0.566,23,1.372,24,0.48,32,0.654,39,3.423,46,0.877,49,0.919,56,0.556,60,0.62,61,0.604,62,0.604,63,0.765,64,0.723,65,0.741,66,0.817,67,1.089,68,0.877,69,0.857,70,0.919,71,0.94,72,0.94,73,0.984,74,1.03,75,1.03,76,1.077,77,1.077,78,1.102,114,0.553,117,1.381,122,1.053,162,2.066,277,1.153,297,1.319,301,1.077,310,1.206,331,1.586,377,1.413,378,1.381,439,2.279,820,3.743,835,3.154,1019,0.342,1030,2.099,1032,0.673,1034,0.829,1035,0.837,1037,2.066,1039,1.233,1041,0.99,1166,1.153,1188,1.319,1189,1.624,1203,4.744,1225,2.166,1226,1.261,1228,1.102,1252,1.882,1372,1.127,1373,1.127,1374,1.153,1375,1.179,1376,1.127,1377,1.206,1378,1.261,1427,2.279,1436,1.663,1640,1.381,1641,1.381,1642,1.381,1643,1.445,1644,1.479,1645,1.479,1646,1.479,1647,1.479,1648,1.479,1649,1.479,1650,1.479,1651,1.479,1652,1.479,1653,1.479,1654,1.479,1655,1.479,1696,1.549,1697,1.549,1698,1.549,1699,1.586,1700,1.586,1701,1.586,1702,1.663,1703,1.663,1704,2.166,1705,1.663,1706,1.663,1707,1.704,1708,1.704,1709,1.704,1710,1.704,1711,1.704,1712,1.704,1713,1.704,1714,1.704,1888,2.279,1889,2.501,1891,2.279,1963,2.585,1964,2.422,1968,2.774,1974,1.35,1975,2.999,1994,3.446,2007,3.13,2116,3.906,2286,2.968,2287,2.348,2301,2.774,2312,3.13,2337,3.906,2382,2.274,2426,3.13,2866,3.484,3350,3.612,3358,3.88,3388,3.256,3389,2.422,4815,3.446,4826,4.991,4857,3.13,4885,4.343,4919,3.278,4964,5.052,4965,5.052,4968,5.952,5096,4.176,5097,5.438,5098,5.438,5099,5.438,5100,6.407,5101,5.438,5102,4.176,5103,6.407,5104,4.176,5105,5.438,5106,5.438,5107,4.176,5108,4.176,5109,4.176,5110,4.176,5111,4.176,5112,4.176,5113,5.438,5114,4.176,5115,4.176,5116,4.176,5117,4.176,5118,4.176,5119,4.176,5120,4.176,5121,4.176,5122,4.176,5123,4.176,5124,4.176,5125,4.176,5126,4.176,5127,4.176,5128,4.176,5129,4.176,5130,4.176,5131,4.176,5132,4.176,5133,5.619,5134,6.048,5135,5.619,5136,5.619,5137,4.176,5138,4.176,5139,4.176,5140,4.176,5141,3.88,5142,4.176,5143,4.176,5144,4.176,5145,4.176,5146,4.176,5147,4.176,5148,4.176,5287,5.174,5288,5.174,5289,5.174]],["title/c/examples/avg.html",[]],["body/c/examples/avg.html",[3,0.076,4,0.215,5,0.242,6,0.213,7,0.257,8,0.339,9,0.319,10,0.351,11,0.367,12,0.351,13,0.367,14,0.503,15,0.575,16,0.575,17,0.613,18,0.651,20,3.186,21,3.186,22,0.485,24,0.632,29,3.967,32,0.697,114,0.59,117,1.816,125,3.649,138,2.679,140,2.038,151,3.517,1149,4.777,1199,2.261,2479,4.534,2843,5.493,5290,8.743,5291,6.807]],["title/c/examples/fibonacci-number.html",[]],["body/c/examples/fibonacci-number.html",[3,0.077,4,0.234,5,0.281,6,0.208,7,0.252,8,0.267,9,0.312,10,0.343,11,0.359,12,0.343,13,0.359,14,0.492,15,0.563,16,0.563,17,0.6,18,0.637,19,0.657,20,3.118,21,3.118,22,0.562,23,1.768,24,0.618,25,2.7,29,4.064,32,0.688,34,5.783,60,0.798,61,0.777,62,0.777,63,0.756,64,0.931,114,0.582,117,2.397,125,3.571,126,3.056,5292,6.662,5293,8.683,5294,6.662,5295,5.377]],["title/c/examples/find-max-min.html",[]],["body/c/examples/find-max-min.html",[3,0.077,4,0.226,5,0.236,6,0.207,7,0.251,8,0.266,9,0.311,10,0.342,11,0.358,12,0.342,13,0.452,14,0.49,15,0.561,16,0.561,17,0.597,18,0.635,19,0.654,20,3.106,21,3.106,22,0.473,23,1.828,24,0.616,29,4.059,60,0.795,61,0.774,62,0.774,63,0.753,64,0.928,65,0.951,66,1.048,114,0.581,117,1.771,125,4.217,138,2.611,151,3.819,152,2.915,3032,5.896,5296,6.636,5297,7.867,5298,6.636,5299,6.636]],["title/c/examples/find-prime-numbers.html",[]],["body/c/examples/find-prime-numbers.html",[3,0.077,4,0.239,5,0.282,6,0.233,7,0.253,8,0.268,9,0.314,10,0.385,11,0.462,12,0.345,13,0.361,14,0.495,15,0.566,16,0.566,17,0.603,18,0.641,19,0.661,20,3.942,21,3.138,22,0.585,24,0.622,29,3.942,31,0.937,32,0.735,46,1.136,49,1.19,50,2.976,60,0.803,61,0.782,62,0.782,63,0.761,64,0.937,65,0.961,66,1.058,67,1.084,68,1.136,69,1.11,70,1.19,71,1.218,72,1.218,73,1.275,74,1.334,75,1.334,76,1.396,77,1.396,78,1.093,79,1.916,80,2.378,98,2.503,99,2.263,100,2.263,101,2.263,103,2.787,104,2.503,105,2.787,106,3.138,107,2.953,116,2.607,117,2.386,122,1.045,125,3.594,126,2.987,142,2.503,156,5.597,264,4.002,285,5.013,301,1.069,771,3.467,836,4.788,1016,2.135,1026,4.729,1155,4.881,1165,4.729,1215,5.41,1219,4.143,1223,3.138,1251,3.886,1372,1.118,1373,1.118,1374,1.144,1396,3.594,1436,1.65,1881,2.319,1883,3.138,2376,5.271,2657,4.247,2996,5.201,3435,3.419,3442,5.41,4383,3.615,5295,5.41,5300,5.134,5301,8.422,5302,7.915,5303,5.134,5304,5.924,5305,6.704,5306,6.704,5307,9.087,5308,6.704,5309,5.924,5310,5.134,5311,6.704,5312,5.134,5313,5.134,5314,5.134,5315,6.704,5316,6.704,5317,6.704,5318,6.704,5319,6.704,5320,6.704,5321,5.134,5322,5.134,5323,6.597,5324,5.134,5325,5.134,5326,5.134,5327,5.134,5328,5.134,5329,5.134]],["title/c/examples/input-is-prime-number-or-not.html",[]],["body/c/examples/input-is-prime-number-or-not.html",[3,0.076,4,0.213,5,0.309,6,0.271,7,0.252,8,0.267,9,0.313,10,0.344,11,0.36,12,0.344,13,0.36,14,0.492,15,0.563,16,0.563,17,0.6,18,0.638,19,0.657,20,3.693,21,3.122,22,0.562,24,0.619,29,4.149,31,0.932,32,0.688,46,1.13,60,0.799,61,0.778,62,0.778,63,0.757,64,0.932,65,0.956,66,1.053,67,1.078,68,1.13,117,2.476,120,3.448,125,3.575,160,5.382,1638,5.382,5295,5.382,5330,6.669,5331,7.89,5332,7.89]],["title/c/examples/least-common-multiple.html",[]],["body/c/examples/least-common-multiple.html",[3,0.075,4,0.188,5,0.248,6,0.218,7,0.264,8,0.279,9,0.327,10,0.359,11,0.376,12,0.359,13,0.376,14,0.515,15,0.589,16,0.589,22,0.652,23,1.864,25,2.978,31,1.132,32,0.608,1211,2.819,3497,5.627,3498,6.162,5333,6.973,5334,6.973]],["title/c/examples/open-file.html",[]],["body/c/examples/open-file.html",[3,0.076,4,0.227,5,0.238,6,0.208,7,0.252,8,0.267,9,0.313,10,0.344,11,0.36,12,0.344,13,0.36,14,0.493,15,0.564,16,0.564,17,0.601,18,0.639,19,0.658,20,3.935,21,3.125,22,0.562,24,0.62,29,3.935,32,0.582,39,2.776,60,0.8,61,0.779,62,0.779,63,0.955,64,0.933,65,0.957,66,1.054,67,1.079,94,4.038,112,2.6,125,4.232,142,2.947,152,2.6,264,4.232,304,5.388,835,3.125,1026,5.001,1388,3.125,1396,3.579,2113,3.717,2337,3.869,3030,4.7,4380,5.258,4918,4.038,5304,5.899,5335,6.676,5336,7.895,5337,5.899,5338,6.676,5339,5.899,5340,6.676,5341,6.676,5342,6.676,5343,6.676,5344,6.676,5345,6.676,5346,6.676,5347,6.676,5348,6.676,5349,6.676]],["title/c/examples/sum1toN.html",[]],["body/c/examples/sum1toN.html",[3,0.073,4,0.24,5,0.257,6,0.226,7,0.273,8,0.29,9,0.339,22,0.589,31,1.156,117,2.318,1149,3.878,3507,5.838]],["title/c/examples/taxi-fee-calculator.html",[]],["body/c/examples/taxi-fee-calculator.html",[3,0.077,4,0.213,5,0.238,6,0.208,7,0.252,8,0.336,9,0.313,10,0.344,11,0.36,12,0.344,13,0.36,14,0.493,15,0.564,16,0.564,17,0.601,18,0.639,19,0.658,20,3.125,21,3.125,22,0.562,24,0.62,29,3.935,31,0.933,32,0.689,60,0.8,61,0.779,62,0.779,63,0.758,114,0.493,117,1.781,125,3.579,126,2.872,378,2.243,386,5.919,5350,8.866,5351,8.866,5352,6.676,5353,8.688,5354,6.676]],["title/java/examples/OX-game.html",[]],["body/java/examples/OX-game.html",[2,0.733,3,0.077,4,0.195,5,0.271,6,0.278,7,0.288,8,0.29,9,0.339,10,0.344,11,0.39,12,0.298,13,0.223,14,0.305,15,0.349,16,0.349,17,0.372,18,0.395,19,0.407,22,0.64,24,0.383,31,0.933,32,0.769,46,0.7,49,0.733,51,3.571,56,0.818,60,0.495,61,0.482,62,0.482,63,0.469,64,0.577,65,0.592,66,0.652,67,0.668,68,1.374,69,0.683,70,0.733,71,0.75,72,0.75,73,0.785,74,0.822,75,0.822,76,0.86,77,0.86,78,0.879,79,1.18,80,1.464,90,2.548,104,1.541,112,1.36,114,0.629,116,2.971,122,0.841,124,2.393,128,1.153,140,1.732,162,2.42,163,2.062,167,3.101,270,1.818,277,0.92,281,1.782,282,1.393,283,1.502,284,1.502,297,1.053,301,0.86,310,0.962,331,1.266,377,1.127,378,1.102,379,1.327,383,3.696,407,2.773,421,1.393,439,1.818,764,2.475,771,2.135,780,2.615,809,1.393,835,1.933,1011,1.818,1019,0.442,1022,1.393,1030,1.475,1032,0.729,1034,0.604,1035,0.668,1041,0.925,1054,1.818,1147,2.89,1160,2.147,1166,0.92,1186,1.806,1188,1.053,1189,1.296,1226,1.006,1228,1.623,1252,2.632,1253,2.135,1364,1.874,1372,0.899,1373,0.899,1374,0.92,1375,0.941,1376,0.899,1377,0.962,1378,1.006,1381,2.393,1388,2.708,1640,1.102,1641,1.102,1642,1.102,1643,1.153,1644,1.18,1645,1.18,1646,1.18,1647,1.18,1648,1.18,1649,1.18,1650,1.18,1651,1.18,1652,1.18,1653,1.18,1654,1.18,1655,1.18,1687,2.615,1688,2.135,1696,1.236,1697,1.236,1698,1.236,1699,2.335,1700,1.266,1701,1.266,1702,1.327,1703,1.327,1704,1.327,1705,1.327,1706,1.327,1707,1.36,1708,1.36,1709,1.36,1710,1.36,1711,1.36,1712,1.36,1713,1.36,1714,1.36,1715,1.464,1716,1.464,1717,1.464,1718,1.428,1719,1.464,1720,1.464,1721,1.464,1722,1.464,1723,1.464,1724,1.582,1725,1.582,1726,1.582,1727,1.582,1728,1.582,1729,1.582,1730,1.582,1731,1.582,1732,1.582,1733,1.582,1734,1.582,1735,1.582,1736,1.582,1737,1.428,1738,1.541,1881,1.428,1883,1.933,1888,1.818,1889,1.995,1891,2.548,1963,2.062,1964,1.933,1968,2.213,1974,1.509,1976,3.87,1985,3.87,1986,3.353,2011,3.353,2061,3.101,2107,3.879,2151,2.615,2406,3.353,2416,4.776,3025,2.89,3034,5.074,3038,2.393,3388,2.796,3444,2.299,4510,2.615,4804,4.396,4833,3.664,4855,4.825,4868,5.389,4869,5.094,4870,4.073,4871,4.447,4872,2.498,4873,3.096,4876,3.096,4877,2.615,4878,3.853,4881,2.907,4883,2.907,4885,3.353,4887,2.907,4888,3.853,4889,4.701,4890,5.007,4891,2.498,4892,5.559,4893,4.073,4894,3.664,4895,2.75,4896,2.907,4897,2.75,4898,2.75,4899,2.75,4900,2.75,4901,2.75,4902,2.75,4903,2.75,4904,4.337,4905,3.664,4906,3.096,4907,3.096,4909,3.096,4911,4.073,4912,2.907,4913,4.039,4914,3.096,4921,3.664,4922,3.664,4923,3.664,4924,3.664,4925,3.664,4926,3.664,4927,3.664,4928,3.664,4929,3.664,4930,2.615,4931,2.615,4932,2.615,4933,2.615,4934,2.615,4935,2.615,4936,2.615,4937,2.615,4938,2.615,4939,2.615,4940,2.615,4941,2.615,4961,3.853,5355,4.129,5356,4.129,5357,4.129,5358,6.678,5359,6.678,5360,4.129]],["title/java/examples/bingo.html",[]],["body/java/examples/bingo.html",[3,0.077,4,0.223,5,0.303,6,0.13,7,0.253,8,0.232,9,0.195,10,0.214,11,0.224,12,0.214,13,0.313,14,0.307,15,0.351,16,0.351,17,0.374,18,0.397,19,0.409,22,0.668,23,1.61,24,0.385,25,2.543,31,1.014,32,0.8,46,0.704,49,0.737,56,0.446,60,0.498,61,0.484,62,0.484,63,0.471,64,0.58,65,0.595,66,0.656,67,0.671,68,0.704,69,0.687,70,0.737,71,0.754,72,0.754,73,0.79,74,0.826,75,0.826,76,0.865,77,0.865,78,0.884,96,2.636,108,2.349,112,3.032,114,0.536,116,3.008,122,0.845,128,1.16,275,3.351,277,0.925,281,0.826,282,1.401,283,1.511,284,1.511,297,1.059,299,1.473,301,0.865,310,0.968,331,1.273,377,1.133,378,1.108,379,1.335,421,1.401,442,1.436,445,1.55,809,1.401,835,1.944,836,2.512,1016,2.415,1019,0.275,1022,1.401,1032,0.664,1034,0.434,1035,0.671,1039,2.032,1041,0.82,1154,6.212,1161,2.007,1165,2.63,1166,0.925,1186,1.701,1188,1.059,1189,1.303,1209,4.687,1211,1.913,1216,3.351,1225,1.867,1226,1.012,1227,3.113,1228,0.884,1230,3.366,1251,2.407,1372,0.904,1373,0.904,1374,0.925,1375,0.946,1376,0.904,1377,0.968,1378,1.012,1392,2.923,1396,2.226,1437,2.376,1438,2.349,1640,1.108,1641,1.108,1642,1.108,1643,1.16,1644,1.187,1645,1.187,1646,1.187,1647,1.187,1648,1.187,1649,1.187,1650,1.187,1651,1.187,1652,1.187,1653,1.187,1654,1.187,1655,1.187,1696,1.243,1697,1.243,1698,1.243,1699,1.273,1700,1.273,1701,1.273,1702,1.335,1703,1.335,1704,1.335,1705,1.335,1706,1.335,1707,1.367,1708,1.367,1709,1.367,1710,1.367,1711,1.367,1712,1.367,1713,1.367,1714,1.367,1715,1.473,1716,1.473,1717,1.473,1718,1.436,1719,1.473,1720,1.473,1721,1.473,1722,1.473,1723,1.473,1724,1.591,1725,1.591,1726,1.591,1727,1.591,1728,1.591,1729,1.591,1730,1.591,1731,1.591,1732,1.591,1733,1.591,1734,1.591,1735,1.591,1736,1.591,1737,1.436,1738,1.55,1739,1.634,1740,1.634,1741,1.55,1742,1.679,1743,1.679,1744,1.679,1745,1.679,1746,1.679,1747,1.726,1748,1.726,1749,1.726,1750,1.726,1751,1.726,1752,1.726,1753,1.726,1754,1.726,1755,1.726,1756,1.726,1757,1.726,1758,1.776,1759,1.776,1760,1.776,1761,1.776,1762,1.776,1763,1.776,1764,1.776,1765,1.829,1766,1.829,1767,1.829,1768,1.829,1769,1.829,1770,1.829,1771,1.829,1901,2.85,2097,3.351,2098,3.351,2113,4.748,2123,2.226,2382,1.401,2631,2.312,2846,2.923,3377,2.63,3389,1.944,3475,5.405,3514,5.931,3886,3.351,3891,5.931,4891,4.052,4913,4.618,4918,4.912,5041,6.212,5339,3.669,5361,8.528,5362,4.152,5363,4.152,5364,4.152,5365,5.808,5366,5.808,5367,6.698,5368,4.687,5369,3.351,5370,5.808,5371,5.808,5372,7.254,5373,4.152,5374,6.698,5375,4.152,5376,4.152,5377,5.808,5378,4.152,5379,4.152,5380,6.698,5381,4.152,5382,4.152,5383,5.808,5384,6.41,5385,4.152,5386,4.152,5387,4.152,5388,4.152,5389,4.152,5390,4.152,5391,4.152,5392,4.152,5393,3.669,5394,4.152,5395,5.808,5396,4.152,5397,4.152,5398,4.152,5399,5.808,5400,5.808,5401,4.152,5402,3.669,5403,4.152,5404,4.152]],["title/java/examples/editor.html",[]],["body/java/examples/editor.html",[2,0.942,3,0.076,4,0.204,5,0.189,6,0.214,7,0.2,8,0.212,9,0.249,10,0.273,11,0.286,12,0.273,13,0.286,14,0.392,15,0.448,16,0.448,17,0.477,18,0.507,19,0.523,22,0.571,23,1.394,24,0.492,32,0.662,39,3.449,46,0.899,49,0.942,56,0.57,60,0.636,61,0.619,62,0.619,63,0.777,64,0.741,65,0.76,66,0.837,67,1.107,68,0.899,69,0.878,70,0.942,71,0.964,72,0.964,73,1.009,74,1.056,75,1.056,76,1.104,77,1.104,78,1.13,114,0.56,117,1.415,122,1.08,162,2.099,277,1.182,297,1.352,301,1.104,310,1.236,331,1.626,377,1.448,378,1.415,439,2.336,820,3.788,835,3.205,1019,0.351,1030,2.115,1032,0.678,1034,0.837,1035,0.857,1037,2.099,1039,1.264,1041,0.992,1166,1.182,1188,1.352,1189,1.665,1203,4.821,1225,2.201,1226,1.293,1228,1.13,1252,1.929,1372,1.155,1373,1.155,1374,1.182,1375,1.208,1376,1.155,1377,1.236,1378,1.293,1427,2.336,1436,1.705,1640,1.415,1641,1.415,1642,1.415,1643,1.481,1644,1.516,1645,1.516,1646,1.516,1647,1.516,1648,1.516,1649,1.516,1650,1.516,1651,1.516,1652,1.516,1653,1.516,1654,1.516,1655,1.516,1696,1.588,1697,1.588,1698,1.588,1699,1.626,1700,1.626,1701,1.626,1702,1.705,1703,1.705,1704,2.201,1705,1.705,1706,1.705,1707,1.747,1708,1.747,1709,1.747,1710,1.747,1711,1.747,1712,1.747,1713,1.747,1714,1.747,1888,2.336,1889,2.563,1891,2.336,1963,2.649,1964,2.482,1968,2.843,1974,1.383,1975,3.074,1994,3.532,2007,3.208,2116,3.969,2286,3.016,2287,2.407,2301,2.843,2312,3.208,2337,3.969,2382,2.311,2426,3.208,2866,3.541,3350,3.671,3358,3.977,3388,3.309,3389,2.482,4815,3.532,4826,5.337,4857,3.208,4885,4.395,4919,3.359,4964,5.134,4965,5.134,4968,6.008,5096,4.28,5097,5.526,5098,5.526,5099,5.526,5100,6.467,5101,5.526,5102,4.28,5103,6.467,5104,4.28,5105,5.526,5106,5.526,5107,4.28,5108,4.28,5109,4.28,5110,4.28,5111,4.28,5112,4.28,5113,5.526,5114,4.28,5115,4.28,5116,4.28,5117,4.28,5118,4.28,5119,4.28,5120,4.28,5121,4.28,5122,4.28,5123,4.28,5124,4.28,5125,4.28,5126,4.28,5127,4.28,5128,4.28,5129,4.28,5130,4.28,5131,4.28,5132,4.28,5133,5.686,5134,6.12,5135,5.686,5136,5.686,5137,4.28,5138,4.28,5139,4.28,5140,4.28,5141,3.977,5142,4.28,5143,4.28,5144,4.28,5145,4.28,5146,4.28,5147,4.28,5148,4.28]],["title/java/examples/eight-queens-puzzle.html",[]],["body/java/examples/eight-queens-puzzle.html",[2,1.424,3,0.077,4,0.241,5,0.312,6,0.25,7,0.303,8,0.191,9,0.224,10,0.246,11,0.415,12,0.33,13,0.258,14,0.353,15,0.54,16,0.404,17,0.43,18,0.457,19,0.471,22,0.651,23,1.302,24,0.444,31,0.894,32,0.771,46,0.81,49,0.849,56,0.687,60,0.573,61,0.558,62,0.558,63,0.543,64,0.668,65,0.685,66,0.755,67,0.773,68,0.81,69,0.791,70,0.849,71,0.868,72,0.868,73,0.909,74,0.951,75,0.951,76,0.995,77,0.995,78,1.018,79,1.366,80,1.695,98,1.784,99,1.613,100,1.613,101,1.613,112,3.026,114,0.532,116,2.718,117,2.053,122,0.973,128,1.335,142,1.784,264,2.562,277,1.065,292,2.562,297,1.219,301,0.995,310,1.114,331,1.465,377,1.305,378,1.275,771,2.471,831,2.902,1016,2.659,1017,3.868,1019,0.316,1026,3.028,1030,1.219,1032,0.675,1034,0.499,1035,0.773,1039,1.139,1041,0.827,1147,3.6,1160,1.537,1166,1.065,1186,1.605,1188,1.219,1189,1.5,1225,2.056,1226,1.165,1228,1.018,1230,2.77,1372,1.041,1373,1.041,1374,1.065,1375,1.089,1376,1.041,1377,1.114,1378,1.165,1381,4.649,1427,2.105,1640,1.275,1641,1.275,1642,1.275,1643,1.335,1644,1.366,1645,1.366,1646,1.366,1647,1.366,1648,1.366,1649,1.366,1650,1.366,1651,1.366,1652,1.366,1653,1.366,1654,1.366,1655,1.366,1696,1.431,1697,1.431,1698,1.431,1699,1.465,1700,1.465,1701,1.465,1702,1.537,1703,1.537,1704,1.537,1705,1.537,1706,1.537,1707,1.574,1708,1.574,1709,1.574,1710,1.574,1711,1.574,1712,1.574,1713,1.574,1714,1.574,1718,1.653,1881,1.653,2286,2.816,2287,2.169,2301,2.562,2382,2.158,3365,2.891,3368,3.584,3377,3.028,4891,3.868,4913,2.891,5405,4.78,5406,4.78,5407,4.78,5408,7.207,5409,7.695,5410,7.207,5411,7.207,5412,6.395,5413,4.78,5414,4.78,5415,6.395,5416,4.78,5417,4.78,5418,8.429,5419,7.207,5420,4.78,5421,4.78,5422,4.78,5423,4.78,5424,4.78,5425,4.78,5426,3.857,5427,4.78,5428,4.78,5429,4.78,5430,6.395,5431,4.78,5432,7.207,5433,4.78,5434,4.78,5435,7.207,5436,4.78,5437,6.395,5438,7.695,5439,6.395,5440,4.78]],["title/java/examples/engineering-calculator.html",[]],["body/java/examples/engineering-calculator.html",[2,0.406,3,0.077,4,0.236,5,0.224,6,0.183,7,0.222,8,0.235,9,0.275,10,0.276,11,0.288,12,0.355,13,0.251,14,0.273,15,0.193,16,0.193,17,0.206,18,0.219,19,0.365,22,0.651,24,0.212,31,1.201,32,0.793,34,1.524,46,0.388,49,0.406,56,0.94,60,0.274,61,0.267,62,0.267,63,0.26,64,0.32,65,0.328,66,0.361,67,0.37,68,0.388,69,0.379,70,0.406,71,0.416,72,0.416,73,0.435,74,0.456,75,0.456,76,0.477,77,0.477,78,0.487,90,1.008,91,1.612,95,1.679,96,1.679,98,0.854,99,0.772,100,0.772,101,0.772,109,1.183,114,0.488,122,0.753,126,1.695,128,2.193,140,2.473,151,2.052,152,1.219,162,1.64,166,2.606,269,1.327,270,1.63,277,0.51,281,0.927,282,0.772,283,0.833,284,0.833,288,0.718,292,1.227,297,0.584,299,0.812,301,0.477,309,1.274,310,0.533,331,0.702,332,1.274,377,0.625,378,0.611,379,0.736,383,1.071,399,1.716,400,1.039,403,1.274,404,1.524,407,0.877,421,0.772,439,1.008,442,0.792,444,1.274,445,0.854,447,1.274,799,3.778,800,4.661,802,0.926,809,0.772,835,1.071,1014,1.385,1015,4.002,1019,0.456,1021,1.716,1022,0.772,1030,0.944,1032,0.74,1034,0.795,1035,0.37,1041,0.967,1054,1.008,1160,2.795,1166,0.51,1186,1.665,1187,2.06,1188,0.584,1189,0.718,1190,3.768,1199,1.949,1201,1.914,1211,2.698,1217,1.612,1226,0.558,1228,0.487,1252,1.346,1253,3.421,1259,3.768,1260,2.775,1364,1.039,1372,0.499,1373,0.499,1374,0.51,1375,0.522,1376,0.499,1377,0.533,1378,0.558,1437,1.652,1438,2.164,1637,1.327,1640,0.611,1641,0.611,1642,0.611,1643,0.639,1644,0.654,1645,0.654,1646,0.654,1647,0.654,1648,0.654,1649,0.654,1650,0.654,1651,0.654,1652,0.654,1653,0.654,1654,0.654,1655,0.654,1665,4.741,1696,0.685,1697,0.685,1698,0.685,1699,0.702,1700,0.702,1701,0.702,1702,0.736,1703,0.736,1704,0.736,1705,0.736,1706,0.736,1707,0.754,1708,0.754,1709,0.754,1710,0.754,1711,0.754,1712,0.754,1713,0.754,1714,0.754,1715,0.812,1716,0.812,1717,0.812,1718,0.792,1719,0.812,1720,0.812,1721,0.812,1722,0.812,1723,0.812,1724,0.877,1725,0.877,1726,0.877,1727,0.877,1728,0.877,1729,0.877,1730,0.877,1731,0.877,1732,0.877,1733,0.877,1734,0.877,1735,0.877,1736,0.877,1737,0.792,1738,0.854,1739,0.901,1740,0.901,1741,0.854,1742,0.926,1743,0.926,1744,0.926,1745,0.926,1746,0.926,1747,0.952,1748,0.952,1749,0.952,1750,0.952,1751,0.952,1752,0.952,1753,0.952,1754,0.952,1755,0.952,1756,0.952,1757,0.952,1758,0.979,1759,0.979,1760,0.979,1761,0.979,1762,0.979,1763,0.979,1764,0.979,1765,1.008,1766,1.008,1767,1.008,1768,1.008,1769,1.008,1770,1.008,1771,1.008,1772,1.071,1773,1.071,1774,1.071,1775,1.071,1776,1.071,1777,1.071,1778,1.071,1779,1.071,1780,1.106,1781,1.106,1782,1.106,1783,1.106,1784,1.106,1785,1.106,1786,1.106,1787,1.183,1788,1.183,1789,1.183,1790,1.183,1791,1.183,1792,1.183,1793,1.183,1794,1.183,1795,1.183,1796,1.183,1797,1.183,1798,1.183,1799,1.183,1800,1.183,1801,1.183,1802,1.183,1803,1.183,1804,1.183,1805,1.183,1806,1.183,1807,1.183,1808,1.227,1809,1.227,1810,1.227,1811,1.227,1812,1.227,1813,1.227,1814,1.227,1815,1.227,1816,1.227,1817,1.227,1818,1.227,1819,1.227,1820,1.227,1821,1.227,1822,1.227,1823,1.227,1824,1.227,1825,1.227,1826,1.274,1827,1.274,1828,1.327,1829,1.327,1830,1.327,1831,1.327,1832,1.327,1833,1.327,1834,1.327,1835,1.327,1836,1.327,1837,1.327,1838,1.327,1839,1.327,1840,1.327,1841,1.327,1842,1.327,1843,1.327,1844,1.327,1845,1.327,1846,1.327,1847,1.327,1848,1.385,1849,1.385,1850,1.385,1851,1.385,1852,1.385,1853,1.385,1854,1.385,1855,1.385,1856,1.385,1857,1.385,1858,1.385,1859,1.385,1860,1.385,1861,1.385,1862,1.385,1863,1.385,1864,1.385,1865,1.385,1866,1.385,1867,1.385,1868,1.385,1869,1.385,1870,1.385,1871,1.385,1872,1.385,1873,1.385,1874,1.385,1875,1.385,1876,1.385,1877,1.385,1878,1.385,1879,1.385,1881,0.792,1883,1.071,1888,1.008,1889,1.106,1891,1.63,1901,2.727,1963,1.849,1964,1.732,1968,1.227,1974,0.597,1975,1.327,1976,2.7,1977,3.101,1997,1.847,1998,2.239,1999,1.716,2000,1.716,2003,3.39,2005,3.564,2007,2.239,2009,1.45,2011,1.327,2019,1.716,2020,1.716,2034,0.952,2061,1.984,2116,2.7,2176,1.45,2177,1.45,2178,1.45,2179,1.45,2180,1.45,2181,1.45,2182,1.45,2183,1.45,2184,1.45,2185,1.45,2186,1.45,2187,1.45,2188,1.45,2189,1.45,2190,1.45,2191,1.45,2192,1.45,2193,1.45,2194,1.45,2195,1.45,2196,1.45,2197,1.45,2198,1.45,2199,1.45,2200,1.45,2201,1.45,2202,1.45,2203,1.45,2204,1.45,2205,1.45,2206,1.45,2207,1.45,2208,1.45,2209,1.524,2210,1.524,2211,1.524,2212,1.524,2213,1.524,2214,1.524,2215,1.524,2216,1.524,2217,1.524,2218,1.524,2219,1.524,2220,1.524,2221,1.524,2222,1.385,2223,1.524,2224,1.524,2225,1.524,2226,1.524,2227,1.524,2228,1.524,2229,1.524,2230,1.524,2231,1.524,2232,1.524,2233,1.524,2234,1.524,2235,1.524,2236,1.524,2237,1.524,2238,1.524,2239,1.524,2240,1.524,2241,1.524,2242,1.524,2243,1.524,2244,1.524,2245,1.524,2246,1.524,2286,1.63,2425,1.524,2426,1.385,2849,4.741,2994,1.143,3030,1.612,3032,1.524,3038,1.327,3039,1.914,3072,1.327,3373,4.713,3388,1.788,3389,1.732,3444,1.274,3449,5.741,3484,4.741,3509,2.987,3964,5.846,3989,2.023,4364,2.987,4371,1.716,4507,2.344,4804,2.06,4824,2.465,4833,2.344,4834,1.612,4837,1.716,4857,1.385,4871,2.465,4872,1.385,4874,2.606,4877,1.45,4878,2.465,4885,2.7,4917,3.768,4918,3.802,4919,1.45,4920,2.606,4921,2.344,4922,2.344,4923,2.344,4924,2.344,4925,2.344,4926,2.344,4927,2.344,4928,2.344,4929,2.344,4930,1.45,4931,1.45,4932,1.45,4933,1.45,4934,1.45,4935,1.45,4936,1.45,4937,1.45,4938,1.45,4939,1.45,4940,1.45,4941,1.45,4955,4.405,4970,1.716,4971,1.716,4972,1.716,4973,1.716,4974,1.716,4975,1.716,4976,1.716,4977,1.716,4978,1.716,4979,1.716,5133,1.716,5135,1.716,5136,1.716,5309,4.117,5323,3.27,5337,2.023,5441,2.023,5442,2.023,5443,2.023,5444,2.023,5445,2.023,5446,2.023,5447,2.023,5448,2.023,5449,2.023,5450,2.023,5451,2.023,5452,2.023,5453,2.023,5454,2.023,5455,2.023,5456,2.023,5457,2.023,5458,2.023,5459,2.023,5460,2.023,5461,2.023,5462,2.023,5463,2.023,5464,2.023,5465,2.023,5466,2.023,5467,2.023,5468,2.023,5469,2.023,5470,2.023,5471,2.023,5472,2.023,5473,2.023,5474,2.023,5475,2.023,5476,2.023,5477,2.023,5478,2.023,5479,2.023,5480,2.023,5481,2.023,5482,2.023,5483,2.023,5484,2.023,5485,2.023,5486,2.023,5487,2.023,5488,2.023,5489,2.023,5490,2.023,5491,2.023,5492,2.023,5493,2.023,5494,2.023,5495,2.023,5496,2.023,5497,2.023,5498,2.023,5499,2.023,5500,2.023,5501,2.023,5502,2.023,5503,2.023,5504,2.023,5505,2.023,5506,2.023,5507,2.023,5508,2.023,5509,2.023,5510,2.023,5511,2.289,5512,2.289,5513,4.659,5514,2.987,5515,2.289,5516,2.023,5517,2.289,5518,2.289,5519,2.289,5520,2.289,5521,2.289,5522,2.289,5523,2.289,5524,2.289,5525,2.289,5526,5.875,5527,5.875,5528,5.875,5529,5.875,5530,5.875,5531,5.875,5532,5.875,5533,6.286,5534,5.875,5535,2.289,5536,2.289,5537,2.289,5538,2.289,5539,2.289,5540,2.289,5541,2.289,5542,2.289,5543,2.289,5544,3.701,5545,2.289,5546,3.701,5547,3.701,5548,2.289,5549,2.289,5550,2.289,5551,2.289,5552,2.289,5553,3.701,5554,3.701,5555,3.27,5556,3.701,5557,2.289,5558,3.701,5559,3.27,5560,4.659,5561,6.887,5562,4.659,5563,2.289,5564,2.289,5565,2.289,5566,2.289,5567,2.289,5568,2.023,5569,5.351,5570,2.289,5571,5.351,5572,2.289,5573,5.351,5574,2.289,5575,6.616,5576,2.289,5577,2.289,5578,2.289,5579,2.289,5580,4.659,5581,2.289,5582,3.701,5583,2.289,5584,2.289,5585,6.887,5586,3.701,5587,8.121,5588,3.701,5589,3.701,5590,3.701,5591,2.289,5592,2.289,5593,2.289,5594,2.289,5595,2.289,5596,2.289,5597,2.289,5598,2.289,5599,2.289,5600,2.289,5601,2.289,5602,2.289,5603,2.289,5604,2.289,5605,7.472,5606,7.472,5607,2.289,5608,2.289,5609,7.853,5610,7.472,5611,2.289,5612,8.319,5613,2.289,5614,2.289,5615,2.289,5616,2.289,5617,2.289,5618,2.289,5619,2.289,5620,2.289,5621,2.289,5622,6.887,5623,3.701,5624,4.659,5625,2.289,5626,2.289,5627,2.289,5628,2.023,5629,2.289,5630,3.27,5631,2.289,5632,2.289,5633,2.289,5634,2.289,5635,2.289,5636,2.289,5637,2.023,5638,2.023]],["title/java/examples/file-handler.html",[]],["body/java/examples/file-handler.html",[2,1.614,3,0.077,4,0.213,5,0.239,6,0.161,7,0.194,8,0.206,9,0.241,10,0.265,11,0.277,12,0.265,13,0.277,14,0.38,15,0.435,16,0.435,17,0.463,18,0.492,19,0.507,22,0.564,23,1.367,24,0.478,25,2.159,31,1.045,32,0.717,39,2.14,46,0.872,49,0.914,56,0.803,60,0.617,61,0.6,62,0.6,63,0.584,64,0.719,65,0.737,66,0.812,67,0.832,68,0.872,69,0.852,70,0.914,71,0.935,72,0.935,73,0.979,74,1.024,75,1.024,76,1.072,77,1.072,78,1.096,79,1.471,84,3.858,98,1.921,99,1.737,100,1.737,101,1.737,114,0.38,116,2.211,117,1.792,122,1.048,128,2.213,140,2.01,142,1.921,162,2.058,277,1.146,281,1.024,282,1.737,288,2.108,290,3.739,297,1.312,301,1.072,310,1.199,331,1.577,368,0.935,377,1.405,378,1.373,379,1.654,421,1.737,802,2.081,809,1.737,1016,2.14,1019,0.34,1022,1.737,1030,1.712,1031,2.335,1032,0.549,1034,0.827,1036,3.605,1037,1.577,1039,2.074,1041,0.946,1162,2.865,1166,1.146,1186,1.496,1188,1.312,1189,1.615,1199,1.994,1225,2.642,1226,1.254,1228,1.096,1234,2.14,1372,1.121,1373,1.121,1374,1.146,1375,1.172,1376,1.121,1377,1.199,1378,1.254,1427,2.266,1640,1.373,1641,1.373,1642,1.373,1643,1.437,1644,1.471,1645,1.471,1646,1.471,1647,1.471,1648,1.471,1649,1.471,1650,1.471,1651,1.471,1652,1.471,1653,1.471,1654,1.471,1655,1.471,1696,1.541,1697,1.541,1698,1.541,1699,1.577,1700,1.577,1701,1.577,1702,1.654,1703,1.654,1704,1.654,1705,1.654,1706,1.654,1707,1.695,1708,1.695,1709,1.695,1710,1.695,1711,1.695,1712,1.695,1713,1.695,1714,1.695,1715,1.825,1716,1.825,1717,1.825,1718,1.78,1719,1.825,1720,1.825,1721,1.825,1722,1.825,1723,1.825,1881,2.323,2034,2.14,2286,2.957,2287,2.335,2301,2.759,2382,2.773,3039,3.472,3048,4.253,3350,4.247,3359,4.153,3360,4.153,3361,4.153,3362,5.419,3363,4.153,3364,6.393,3365,4.062,3366,5.419,3367,4.153,3368,3.858,3369,3.26,3370,6.197,3371,4.153,3372,6.161,3373,5.94,3374,6.393,3375,4.153,3376,5.419,3377,4.734,3378,6.032,3379,3.858,3380,4.153,3381,4.153,3382,3.858,3383,4.153,3384,4.153,3385,4.153,3386,3.858,3387,5.419,3388,2.487,3389,3.143,3390,4.153,3391,4.153,3392,4.153,3393,6.032,3394,6.632,3395,6.393,3396,4.153,3397,5.419,3398,4.153,3399,4.153,3400,4.153,3401,3.858]],["title/java/examples/guess-sever-client.html",[]],["body/java/examples/guess-sever-client.html",[3,0.077,4,0.225,5,0.282,6,0.234,7,0.319,8,0.245,9,0.315,10,0.347,11,0.363,12,0.424,13,0.278,14,0.381,15,0.436,16,0.436,17,0.465,18,0.494,19,0.509,22,0.616,23,1.051,24,0.479,25,1.132,31,0.94,32,0.81,46,0.875,49,0.916,51,4.034,56,0.656,60,0.618,61,0.602,62,0.602,63,0.586,64,0.721,65,0.74,66,0.815,67,0.834,68,0.875,69,0.854,70,0.916,71,0.938,72,0.938,73,0.982,74,1.027,75,1.027,76,1.075,77,1.075,78,1.099,79,1.475,98,1.926,99,1.742,100,1.742,101,1.742,103,2.146,104,1.926,105,2.146,106,2.416,107,2.273,109,3.159,114,0.571,116,2.829,118,2.13,122,1.051,128,1.879,142,2.96,152,1.16,162,2.062,277,1.15,281,1.339,282,1.188,283,1.281,284,1.281,288,1.918,289,4.797,297,1.316,299,1.249,301,1.075,310,1.203,331,1.582,377,1.409,378,1.377,379,1.132,421,1.188,439,2.691,442,1.218,445,1.314,802,2.087,809,1.188,831,2.342,1016,2.797,1017,4.527,1019,0.404,1022,1.188,1030,1.715,1032,0.673,1034,0.638,1035,0.834,1037,2.195,1039,0.839,1041,0.923,1156,2.345,1160,1.132,1166,1.15,1179,1.386,1186,1.361,1187,4.505,1188,1.316,1189,1.105,1223,2.416,1225,2.406,1226,1.258,1228,1.099,1232,4.165,1372,1.124,1373,1.124,1374,1.15,1375,1.176,1376,1.124,1377,1.203,1378,1.258,1427,2.273,1437,2.167,1438,1.424,1444,2.479,1640,1.377,1641,1.377,1642,1.377,1643,1.441,1644,1.475,1645,1.475,1646,1.475,1647,1.475,1648,1.475,1649,1.475,1650,1.475,1651,1.475,1652,1.475,1653,1.475,1654,1.475,1655,1.475,1696,1.545,1697,1.545,1698,1.545,1699,1.582,1700,1.582,1701,1.582,1702,1.659,1703,1.659,1704,1.659,1705,1.659,1706,1.659,1707,1.7,1708,1.7,1709,1.7,1710,1.7,1711,1.7,1712,1.16,1713,1.16,1714,1.16,1715,1.249,1716,1.249,1717,1.249,1718,1.218,1719,1.249,1720,1.249,1721,1.249,1722,1.249,1723,1.249,1724,1.349,1725,1.349,1726,1.349,1727,1.349,1728,1.349,1729,1.349,1730,1.349,1731,1.349,1732,1.349,1733,1.349,1734,1.349,1735,1.349,1736,1.349,1737,1.218,1738,1.314,1739,1.386,1740,1.386,1741,1.314,1742,1.424,1743,1.424,1744,1.424,1745,1.424,1746,1.424,1881,1.785,1901,2.794,1974,0.918,2034,2.146,2123,1.888,2132,3.869,2372,7.367,2382,2.526,2631,1.96,2655,3.437,2846,3.634,2858,2.479,3004,2.146,3032,5.282,3341,4.56,3345,4.56,3347,3.111,3365,2.13,3389,1.648,3485,2.842,3514,5.044,4244,3.869,4286,5.044,4376,4.165,4377,4.165,4378,2.842,4387,4.165,4894,3.269,5559,3.111,5639,5.161,5640,5.161,5641,5.161,5642,6.109,5643,5.429,5644,7.162,5645,5.161,5646,5.161,5647,5.161,5648,5.161,5649,5.161,5650,7.931,5651,7.162,5652,6.727,5653,3.521,5654,5.161,5655,3.521,5656,3.521,5657,3.521,5658,6.727,5659,3.521,5660,3.521,5661,3.521,5662,5.161,5663,5.161,5664,3.521,5665,3.521,5666,7.484,5667,3.521,5668,5.161,5669,3.521,5670,3.521,5671,7.162,5672,5.161,5673,5.161,5674,3.521,5675,3.521,5676,3.521,5677,5.161,5678,5.161,5679,6.727,5680,5.161,5681,3.521,5682,3.521,5683,3.521,5684,5.161,5685,3.521,5686,6.109,5687,3.521,5688,3.521,5689,3.521,5690,3.521,5691,3.521,5692,3.521,5693,3.521,5694,3.521,5695,3.521,5696,3.521,5697,3.521]],["title/java/examples/matrix.html",[]],["body/java/examples/matrix.html",[3,0.077,4,0.23,5,0.157,6,0.138,7,0.166,8,0.176,9,0.206,10,0.227,11,0.237,12,0.227,13,0.237,14,0.325,15,0.372,16,0.372,17,0.397,18,0.421,19,0.434,22,0.63,23,1.711,25,2.392,31,1.09,32,0.815,34,4.03,46,0.747,49,0.782,60,0.528,61,0.514,62,0.514,63,0.5,64,0.616,65,0.631,66,0.696,67,0.712,68,0.747,69,0.729,70,0.782,71,0.8,72,0.8,73,0.838,74,0.877,75,0.877,76,0.917,77,0.917,78,0.938,90,2.665,91,3.102,92,3.555,98,1.644,99,1.487,100,1.487,101,1.487,108,1.781,113,5.001,114,0.325,116,2.993,117,2.375,122,0.897,140,2.609,167,3.705,277,0.981,281,0.877,282,1.487,283,1.603,284,1.603,289,5.085,297,1.123,299,1.562,301,0.917,310,1.027,331,1.35,377,1.203,378,1.175,379,1.416,421,1.487,428,4.26,439,3.549,442,1.524,445,1.644,809,1.487,828,1.074,1016,1.832,1019,0.457,1022,1.487,1032,0.697,1036,3.447,1037,1.855,1039,1.05,1041,0.903,1054,1.94,1149,2.361,1159,3.303,1161,2.924,1166,0.981,1171,3.555,1186,1.348,1187,4.143,1188,1.123,1189,1.383,1199,2.276,1201,4.166,1211,2.654,1226,1.074,1228,0.938,1254,null,1364,2.746,1372,0.96,1373,0.96,1374,0.981,1375,1.004,1376,0.96,1377,1.027,1378,1.074,1640,1.175,1641,1.175,1642,1.175,1643,1.23,1644,1.259,1645,1.259,1646,1.259,1647,1.259,1648,1.259,1649,1.259,1650,1.259,1651,1.259,1652,1.259,1653,1.259,1654,1.259,1655,1.259,1696,1.319,1697,1.319,1698,1.319,1699,1.35,1700,1.35,1701,1.35,1702,1.416,1703,1.416,1704,1.416,1705,1.416,1706,1.416,1707,1.451,1708,1.451,1709,1.451,1710,1.451,1711,1.451,1712,1.451,1713,1.451,1714,1.451,1715,1.562,1716,1.562,1717,1.562,1718,1.524,1719,1.562,1720,1.562,1721,1.562,1722,1.562,1723,1.562,1724,1.688,1725,1.688,1726,1.688,1727,1.688,1728,1.688,1729,1.688,1730,1.688,1731,1.688,1732,1.688,1733,1.688,1734,1.688,1735,1.688,1736,1.688,1737,1.524,1738,1.644,1739,1.734,1740,1.734,1741,1.644,1742,1.781,1743,1.781,1744,1.781,1745,1.781,1746,1.781,1747,1.832,1748,1.832,1749,1.832,1750,1.832,1751,1.832,1752,1.832,1753,1.832,1754,1.832,1755,1.832,1756,1.832,1757,1.832,1758,1.884,1759,1.884,1760,1.884,1761,1.884,1762,1.884,1763,1.884,1764,1.884,1881,1.524,1883,2.062,1903,3.555,1974,1.578,2844,4.537,3032,4.603,3370,6.076,3372,6.188,3379,3.303,3382,4.537,4380,2.934,5368,3.555,5555,3.893,5698,3.893,5699,4.405,5700,4.405,5701,6.051,5702,4.405,5703,4.405,5704,6.051,5705,4.405,5706,4.405,5707,4.405,5708,6.051,5709,4.405,5710,6.051,5711,4.405,5712,4.405,5713,4.405,5714,4.405,5715,4.405,5716,4.405,5717,4.405,5718,4.405,5719,4.405,5720,6.891,5721,5.347,5722,3.893,5723,4.405,5724,6.051,5725,6.911,5726,4.405,5727,4.405,5728,6.051,5729,6.051,5730,4.405,5731,4.405,5732,4.405,5733,3.893,5734,4.405,5735,4.405,5736,4.405,5737,3.893,5738,4.405,5739,4.405,5740,4.405]],["title/java/examples/minesweeper.html",[]],["body/java/examples/minesweeper.html",[3,0.077,4,0.245,5,0.288,6,0.154,7,0.186,8,0.236,9,0.231,10,0.254,11,0.352,12,0.171,13,0.318,14,0.245,15,0.28,16,0.28,17,0.298,18,0.564,19,0.327,22,0.66,23,1.767,24,0.308,25,2.754,31,0.913,32,0.785,39,1.378,46,0.562,49,0.588,50,3.417,51,3.34,56,0.75,59,2.928,60,0.397,61,0.387,62,0.387,63,0.986,64,0.463,65,0.845,66,0.523,67,0.536,68,0.562,69,0.549,70,0.588,71,0.602,72,0.602,73,0.63,74,0.66,75,0.66,76,0.69,77,0.69,78,0.706,90,1.459,98,1.237,99,1.118,100,1.118,101,1.118,114,0.622,116,2.97,122,0.675,126,1.795,128,1.378,151,2.173,162,2.244,163,1.655,277,0.738,281,0.66,282,1.118,283,1.205,284,1.205,289,3.566,297,0.845,299,1.175,301,0.69,310,0.772,331,1.016,344,3.982,377,0.905,378,0.884,379,1.065,400,1.504,407,1.891,421,1.118,439,1.459,442,1.146,445,1.237,802,1.34,809,1.118,835,2.31,1019,0.219,1022,1.118,1030,1.503,1032,0.673,1034,0.515,1035,0.536,1039,0.79,1041,0.927,1147,3.263,1160,2.1,1166,0.738,1186,1.736,1188,0.845,1189,1.04,1192,5.487,1211,2.67,1226,0.808,1228,0.706,1252,1.205,1372,0.722,1373,0.722,1374,0.738,1375,0.755,1376,0.722,1377,0.772,1378,0.808,1381,4.698,1640,0.884,1641,0.884,1642,0.884,1643,0.926,1644,0.947,1645,0.947,1646,0.947,1647,0.947,1648,0.947,1649,0.947,1650,0.947,1651,0.947,1652,0.947,1653,0.947,1654,0.947,1655,0.947,1688,1.713,1696,0.992,1697,0.992,1698,0.992,1699,1.016,1700,1.016,1701,1.016,1702,1.065,1703,1.065,1704,1.065,1705,1.065,1706,1.065,1707,1.091,1708,1.091,1709,1.091,1710,1.091,1711,1.091,1712,1.091,1713,1.091,1714,1.091,1715,1.175,1716,1.175,1717,1.175,1718,1.146,1719,1.175,1720,1.175,1721,1.175,1722,1.175,1723,1.175,1724,1.27,1725,1.27,1726,1.27,1727,1.27,1728,1.27,1729,1.27,1730,1.27,1731,1.27,1732,1.27,1733,1.27,1734,1.27,1735,1.27,1736,1.27,1737,1.146,1738,1.237,1739,1.304,1740,1.304,1741,1.237,1742,1.34,1743,1.34,1744,1.34,1745,1.34,1746,1.34,1747,1.378,1748,1.378,1749,1.378,1750,1.378,1751,1.378,1752,1.378,1753,1.378,1754,1.378,1755,1.378,1756,1.378,1757,1.378,1758,1.417,1759,1.417,1760,1.417,1761,1.417,1762,1.417,1763,1.417,1764,1.417,1765,1.459,1766,1.459,1767,1.459,1768,1.459,1769,1.459,1770,1.459,1771,1.459,1772,1.551,1773,1.551,1774,1.551,1775,1.551,1776,1.551,1777,1.551,1778,1.551,1779,1.551,1780,1.601,1781,1.601,1782,1.601,1783,1.601,1784,1.601,1785,1.601,1786,1.601,1787,1.713,1788,1.713,1789,1.713,1790,1.713,1791,1.713,1792,1.713,1793,1.713,1794,1.713,1795,1.713,1796,1.713,1797,1.713,1798,1.713,1799,1.713,1800,1.713,1801,1.713,1802,1.713,1803,1.713,1804,1.713,1805,1.713,1806,1.713,1807,1.713,1881,1.146,1888,1.459,1889,1.601,1891,1.459,1901,1.842,1963,1.655,1964,1.551,1968,1.776,1974,0.864,1976,2.86,1977,1.921,1985,2.86,1986,1.921,1994,2.207,1999,2.484,2000,2.484,2011,3.417,2019,2.484,2020,2.484,2034,1.378,2105,5,2107,3.744,2132,4.42,2406,1.921,2416,2.004,3389,1.551,3435,5.745,3925,2.928,4380,2.207,4804,1.845,4833,3.126,4834,2.333,4855,4.424,4871,3.286,4872,2.004,4877,2.099,4878,3.286,4879,3.474,4885,2.86,4888,2.207,4895,2.207,4897,2.207,4898,2.207,4899,2.207,4900,2.207,4901,2.207,4902,2.207,4903,2.207,4905,3.734,4918,2.985,4946,2.333,4961,2.207,5369,2.674,5516,2.928,5628,2.928,5630,4.36,5637,2.928,5638,2.928,5733,2.928,5741,3.314,5742,3.314,5743,3.314,5744,3.314,5745,5.896,5746,8.227,5747,3.314,5748,6.702,5749,3.314,5750,7.584,5751,3.314,5752,6.532,5753,3.314,5754,4.934,5755,8.916,5756,5.896,5757,4.934,5758,3.314,5759,3.314,5760,3.314,5761,3.314,5762,3.314,5763,4.934,5764,3.314,5765,3.314,5766,3.314,5767,3.314,5768,3.314,5769,2.928,5770,2.928,5771,2.928,5772,3.314,5773,3.314,5774,3.314,5775,3.314,5776,4.36,5777,3.314,5778,3.314,5779,4.36,5780,4.934,5781,3.314,5782,3.314]],["title/java/examples/othello.html",[]],["body/java/examples/othello.html",[2,1.19,3,0.077,4,0.213,5,0.183,6,0.109,7,0.081,8,0.205,9,0.1,10,0.229,11,0.402,12,0.229,13,0.328,14,0.527,15,0.18,16,0.18,17,0.192,18,0.204,19,0.344,22,0.654,24,0.198,31,1.156,32,0.791,38,0.818,46,0.362,49,0.379,51,0.94,53,0.94,56,0.875,60,0.256,61,0.249,62,0.249,63,0.504,64,0.298,65,0.306,66,0.337,67,0.718,68,0.362,69,0.353,70,0.379,71,0.388,72,0.388,73,0.406,74,0.425,75,0.696,76,0.444,77,0.444,78,0.454,79,0.61,80,0.757,90,1.539,104,0.796,112,0.703,114,0.611,116,1.691,117,1.37,122,1.629,124,1.237,128,2.234,140,1.329,142,0.796,157,2.957,162,2.189,163,1.066,167,3.72,247,3.923,270,1.955,277,0.779,281,1.278,282,0.72,283,0.776,284,0.776,288,1.097,292,1.144,297,0.891,299,0.757,301,0.444,306,1.722,309,1.188,310,0.497,331,0.654,332,1.188,377,0.954,378,0.569,379,0.686,383,0.999,399,1.6,400,0.968,403,1.188,404,1.421,407,0.818,421,0.72,439,0.94,442,0.738,444,1.188,445,0.796,447,1.188,764,2.196,771,1.103,780,1.352,809,0.72,828,0.52,835,0.999,1016,2.355,1019,0.375,1020,1.124,1021,3.849,1022,0.72,1030,1.309,1031,0.968,1032,0.719,1034,0.671,1035,0.345,1037,0.654,1041,0.947,1054,0.94,1147,3.854,1160,2.4,1166,0.475,1179,2.638,1186,1.886,1188,0.544,1189,1.611,1190,4.886,1211,1.462,1225,0.686,1226,0.52,1228,0.454,1252,2.337,1253,2.296,1364,2.015,1372,0.465,1373,0.465,1374,0.475,1375,0.486,1376,0.465,1377,0.497,1378,0.52,1381,1.237,1384,1.722,1388,1.636,1417,1.722,1434,2.461,1436,2.351,1437,2.278,1438,2.597,1441,1.421,1636,1.502,1640,0.569,1641,0.569,1642,0.569,1643,0.976,1644,0.61,1645,0.61,1646,0.61,1647,0.61,1648,0.61,1649,0.61,1650,0.999,1651,0.61,1652,0.61,1653,0.61,1654,0.61,1655,0.61,1687,1.352,1688,1.103,1696,0.639,1697,0.639,1698,0.639,1699,0.654,1700,0.654,1701,0.654,1702,0.686,1703,0.686,1704,0.686,1705,0.686,1706,0.686,1707,0.703,1708,0.703,1709,0.703,1710,0.703,1711,0.703,1712,0.703,1713,0.703,1714,0.703,1715,0.757,1716,0.757,1717,0.757,1718,0.738,1719,0.757,1720,0.757,1721,0.757,1722,0.757,1723,0.757,1724,0.818,1725,0.818,1726,0.818,1727,0.818,1728,0.818,1729,0.818,1730,0.818,1731,0.818,1732,0.818,1733,0.818,1734,0.818,1735,0.818,1736,0.818,1737,0.738,1738,0.796,1739,0.84,1740,0.84,1741,0.796,1742,0.863,1743,0.863,1744,0.863,1745,0.863,1746,0.863,1747,0.887,1748,0.887,1749,0.887,1750,0.887,1751,0.887,1752,0.887,1753,0.887,1754,0.887,1755,0.887,1756,0.887,1757,0.887,1758,0.913,1759,0.913,1760,0.913,1761,1.495,1762,0.913,1763,0.913,1764,0.913,1765,0.94,1766,0.94,1767,0.94,1768,0.94,1769,0.94,1770,0.94,1771,0.94,1772,0.999,1773,0.999,1774,0.999,1775,0.999,1776,0.999,1777,0.999,1778,0.999,1779,0.999,1780,1.031,1781,1.031,1782,1.031,1783,1.031,1784,1.031,1785,1.031,1786,1.031,1787,1.103,1788,1.103,1789,1.103,1790,1.103,1791,1.103,1792,1.103,1793,1.103,1794,1.103,1795,1.103,1796,1.103,1797,1.103,1798,1.103,1799,1.103,1800,1.103,1801,1.103,1802,1.103,1803,1.103,1804,1.103,1805,1.103,1806,1.103,1807,1.103,1808,1.144,1809,1.144,1810,1.144,1811,1.144,1812,1.144,1813,1.144,1814,1.144,1815,1.144,1816,1.144,1817,1.144,1818,1.144,1819,1.144,1820,1.144,1821,1.144,1822,1.144,1823,1.144,1824,1.144,1825,1.144,1826,1.188,1827,1.188,1828,1.237,1829,1.237,1830,1.237,1831,1.237,1832,1.237,1833,1.237,1834,1.237,1835,1.237,1836,1.237,1837,1.237,1838,1.237,1839,1.237,1840,1.237,1841,1.237,1842,1.237,1843,1.237,1844,1.237,1845,1.237,1846,1.237,1847,1.237,1848,1.291,1849,1.291,1850,1.291,1851,1.291,1852,1.291,1853,1.291,1854,1.291,1855,1.291,1856,1.291,1857,1.291,1858,1.291,1859,1.291,1860,1.291,1861,1.291,1862,1.291,1863,1.291,1864,1.291,1865,1.291,1866,1.291,1867,1.291,1868,1.291,1869,1.291,1870,1.291,1871,1.291,1872,1.291,1873,1.291,1874,1.291,1875,1.291,1876,1.291,1877,1.291,1878,1.291,1879,1.291,1881,0.738,1883,0.999,1888,0.94,1889,1.031,1891,1.955,1901,2.59,1963,1.746,1964,1.636,1968,1.144,1974,1.477,1975,2.573,1976,1.237,1977,2.026,1985,2.573,1986,2.026,1998,1.291,2003,1.352,2004,1.421,2009,1.352,2011,2.975,2061,1.874,2089,1.066,2096,1.6,2105,3.885,2107,4.002,2113,1.188,2116,2.573,2123,2.752,2151,1.352,2176,1.352,2177,1.352,2178,1.352,2179,1.352,2180,1.352,2181,1.352,2182,1.352,2183,1.352,2184,1.352,2185,1.352,2186,1.352,2187,1.352,2188,1.352,2189,1.352,2190,1.352,2191,1.352,2192,1.352,2193,1.352,2194,1.352,2195,1.352,2196,1.352,2197,1.352,2198,1.352,2199,1.352,2200,1.352,2201,1.352,2202,1.352,2203,1.352,2204,1.352,2205,1.352,2206,1.352,2207,1.352,2208,1.352,2209,1.421,2210,1.421,2211,1.421,2212,1.421,2213,1.421,2214,1.421,2215,1.421,2216,1.421,2217,1.421,2218,2.957,2219,1.421,2220,1.421,2221,1.421,2222,1.291,2223,1.421,2224,1.421,2225,1.421,2226,1.421,2227,1.421,2228,1.421,2229,1.421,2230,1.421,2231,1.421,2232,1.421,2233,1.421,2234,1.421,2235,1.421,2236,1.421,2237,1.421,2238,1.421,2239,1.421,2240,1.421,2241,1.421,2242,1.421,2243,1.421,2244,1.421,2245,1.421,2246,1.421,2286,1.539,2287,0.968,2301,1.144,2376,1.421,2382,0.72,2406,2.573,2416,1.291,2425,1.421,2426,1.291,2431,2.821,2671,1.502,2866,1.103,2994,2.218,2995,3.105,3004,0.887,3025,2.218,3038,1.237,3039,1.807,3064,1.502,3205,1.237,3369,1.352,3388,1.689,3389,1.636,3435,2.957,3444,1.188,3891,3.329,4167,1.502,4371,1.6,4383,2.461,4804,3.153,4815,1.421,4826,4.278,4827,1.722,4830,2.821,4833,2.214,4839,1.6,4855,4.068,4857,1.291,4869,5.506,4870,1.502,4871,2.957,4872,1.291,4873,1.6,4874,4.522,4875,1.6,4876,1.6,4877,1.352,4878,4.051,4879,1.502,4880,1.6,4881,1.502,4882,1.6,4883,2.461,4884,2.621,4885,3.526,4886,4.247,4887,1.502,4888,2.328,4889,2.461,4891,3.68,4892,1.502,4893,2.461,4894,4.396,4895,1.421,4896,2.461,4897,1.421,4898,1.421,4899,1.421,4900,1.421,4901,1.421,4902,2.328,4903,2.328,4905,2.812,4911,1.502,4912,1.502,4913,1.291,4915,1.6,4916,1.6,4917,4.522,4918,3.68,4919,1.352,4920,2.461,4921,2.214,4922,2.214,4923,2.214,4924,2.214,4925,2.214,4926,2.214,4927,2.214,4928,2.214,4929,2.214,4930,1.352,4931,1.352,4932,1.352,4933,1.352,4934,1.352,4935,1.352,4936,1.352,4937,1.352,4938,1.352,4939,1.352,4940,1.352,4941,1.352,4943,1.722,4944,1.722,4945,2.821,4946,1.502,4949,1.722,4950,2.821,4951,1.722,4952,1.722,4953,1.722,4954,2.621,4955,1.6,4956,1.722,4957,1.722,4958,1.722,4959,1.722,4961,1.421,4970,1.6,4971,1.6,4972,1.6,4973,1.6,4974,1.6,4975,1.6,4976,1.6,4977,1.6,4978,1.6,4979,1.6,5041,5.597,5141,1.6,5384,4.536,5402,5.676,5441,1.885,5442,1.885,5443,1.885,5444,1.885,5445,1.885,5446,1.885,5447,1.885,5448,1.885,5449,1.885,5450,1.885,5451,1.885,5452,1.885,5453,1.885,5454,1.885,5455,1.885,5456,1.885,5457,1.885,5458,1.885,5459,1.885,5460,1.885,5461,1.885,5462,1.885,5463,1.885,5464,1.885,5465,1.885,5466,1.885,5467,1.885,5468,1.885,5469,1.885,5470,1.885,5471,1.885,5472,1.885,5473,1.885,5474,1.885,5475,1.885,5476,1.885,5477,1.885,5478,1.885,5479,1.885,5480,1.885,5481,1.885,5482,1.885,5483,1.885,5484,1.885,5485,1.885,5486,1.885,5487,1.885,5488,1.885,5489,1.885,5490,1.885,5491,1.885,5492,1.885,5493,1.885,5494,1.885,5495,1.885,5496,1.885,5497,1.885,5498,1.885,5499,1.885,5500,1.885,5501,1.885,5502,1.885,5503,1.885,5504,1.885,5505,1.885,5506,1.885,5507,1.885,5508,1.885,5509,1.885,5510,1.885,5568,1.885,5770,1.885,5776,3.089,5779,1.885,5783,2.134,5784,2.134,5785,2.134,5786,2.134,5787,2.134,5788,2.134,5789,2.134,5790,2.134,5791,2.134,5792,2.134,5793,2.134,5794,2.134,5795,2.134,5796,2.134,5797,2.134,5798,2.134,5799,2.134,5800,2.134,5801,2.134,5802,2.134,5803,2.134,5804,2.134,5805,2.134,5806,2.134,5807,2.134,5808,2.134,5809,2.134,5810,2.134,5811,2.134,5812,2.134,5813,2.134,5814,2.134,5815,2.134,5816,2.134,5817,2.134,5818,2.134,5819,2.134,5820,2.134,5821,2.134,5822,2.134,5823,2.134,5824,2.134,5825,2.134,5826,5.664,5827,2.134,5828,2.134,5829,7.141,5830,6.704,5831,2.134,5832,2.134,5833,2.134,5834,3.495,5835,3.495,5836,3.495,5837,3.495,5838,3.495,5839,2.134,5840,6.939,5841,4.44,5842,6.083,5843,2.134,5844,2.134,5845,2.134,5846,2.134,5847,2.134,5848,2.134,5849,5.133,5850,2.134,5851,4.44,5852,2.134,5853,2.134,5854,2.134,5855,2.134,5856,2.134,5857,2.134,5858,2.134,5859,7.314,5860,3.495,5861,2.134,5862,2.134,5863,6.083,5864,5.664,5865,4.44,5866,2.134,5867,3.495,5868,5.133,5869,3.495,5870,2.134,5871,2.134,5872,2.134,5873,3.495,5874,2.134,5875,2.134,5876,2.134,5877,2.134,5878,6.423,5879,5.133,5880,2.134,5881,3.495,5882,4.44,5883,2.134,5884,5.133,5885,6.423,5886,2.134,5887,5.664,5888,4.44,5889,6.083,5890,4.44,5891,2.134,5892,3.495,5893,2.134,5894,2.134,5895,4.44,5896,2.134,5897,2.134,5898,2.134,5899,2.134,5900,2.134,5901,3.495,5902,2.134,5903,2.134,5904,4.44,5905,4.44,5906,2.134,5907,2.134,5908,2.134,5909,2.134,5910,2.134,5911,3.495,5912,3.495,5913,4.44,5914,2.134,5915,2.134,5916,2.134,5917,2.134,5918,2.134,5919,2.134,5920,2.134,5921,3.495,5922,3.495,5923,4.44,5924,3.495,5925,3.495,5926,2.134,5927,2.134,5928,2.134,5929,5.133,5930,2.134,5931,3.495,5932,2.134,5933,2.134,5934,2.134,5935,4.44,5936,2.134,5937,2.134,5938,2.134,5939,2.134,5940,2.134,5941,2.134,5942,2.134,5943,2.134,5944,3.495,5945,2.134,5946,2.134,5947,2.134,5948,2.134,5949,3.495]],["title/java/examples/queue.html",[]],["body/java/examples/queue.html",[2,1.362,3,0.075,4,0.222,5,0.227,6,0.199,7,0.241,8,0.255,9,0.298,10,0.328,11,0.343,12,0.328,13,0.343,14,0.47,15,0.538,16,0.538,17,0.573,18,0.609,19,0.627,22,0.609,31,0.89,32,0.555,46,1.079,49,1.13,60,0.763,61,0.743,62,0.743,63,0.723,64,0.89,65,0.912,66,1.005,67,1.029,68,1.079,69,1.054,70,1.13,71,1.156,72,1.156,73,1.211,74,1.267,75,1.267,76,1.326,77,1.326,78,1.356,112,2.883,114,0.47,122,1.296,301,1.326,828,2.167,831,3.483,1019,0.421,1032,0.699,1037,2.352,1041,0.684,1179,3.366,1186,1.905,1199,2.048,1201,3.968,1211,2.527,1225,2.467,1372,1.387,1373,1.387,1436,2.047,2382,2.59,2659,4.587,2672,3.968,2673,4.273,3195,4.861,3959,4.642,4250,4.032,4251,5.379,4252,5.111,4253,5.111,4254,4.861,4255,4.032,4256,4.24,4320,4.861,4486,5.137,4487,5.137,4507,4.861,4511,6.193,4513,6.193,4514,6.193]],["title/java/examples/read-write-queue.html",[]],["body/java/examples/read-write-queue.html",[3,0.076,4,0.203,5,0.269,6,0.193,7,0.234,8,0.302,9,0.29,10,0.319,11,0.334,12,0.319,13,0.334,14,0.457,15,0.523,16,0.523,17,0.557,18,0.592,19,0.61,22,0.619,24,0.575,32,0.54,46,1.049,49,1.099,56,0.874,60,0.742,61,0.722,62,0.722,63,0.703,64,0.866,65,0.887,66,0.978,67,1.001,68,1.049,69,1.025,70,1.099,71,1.125,72,1.125,73,1.178,74,1.232,75,1.232,76,1.289,77,1.289,114,0.557,285,3.922,373,3.922,1019,0.41,1032,0.722,1034,0.85,1041,0.949,1160,2.426,1162,3.448,1179,2.437,1186,1.813,1225,1.991,1659,4.36,1900,5.965,1974,1.615,2312,5.125,2382,2.09,2672,4.381,2866,3.202,3004,2.575,3354,4.124,4251,5.125,4329,3.746,4331,6.056,4490,4.997,4497,6.838,4499,6.838,4500,6.838,4502,6.838,4507,5.367,4515,7.217,4516,4.997,4517,4.997,4518,4.997,4520,6.09,4521,6.09,4522,4.997,4523,6.838,4524,4.997,4525,4.997,4526,4.997]],["title/java/examples/reverse-matrix.html",[]],["body/java/examples/reverse-matrix.html",[3,0.077,4,0.234,5,0.161,6,0.141,7,0.171,8,0.181,9,0.212,10,0.233,11,0.243,12,0.233,13,0.243,14,0.333,15,0.381,16,0.381,17,0.406,18,0.432,19,0.445,22,0.654,31,1.051,32,0.812,46,0.765,49,0.801,60,0.541,61,0.527,62,0.527,63,0.513,64,0.631,65,0.647,66,0.713,67,0.73,68,0.765,69,0.747,70,0.801,71,0.82,72,0.82,73,0.859,74,0.898,75,0.898,76,0.94,77,0.94,78,0.961,98,1.685,99,1.523,100,1.523,101,1.523,113,3.566,117,2.006,122,0.919,128,1.718,140,2.621,277,1.006,281,0.898,282,1.523,283,1.642,284,1.642,297,1.151,299,1.601,301,0.94,310,1.052,331,1.384,377,1.232,378,1.204,379,1.451,382,3.643,421,1.523,442,1.561,445,1.685,764,1.931,802,1.825,809,1.523,1019,0.407,1022,1.523,1032,0.615,1036,3.215,1041,0.872,1054,2.71,1147,4.283,1161,2.973,1166,1.006,1186,1.006,1187,2.513,1188,1.151,1189,1.417,1199,2.006,1201,3.181,1211,2.784,1226,1.1,1228,0.961,1252,1.642,1372,0.983,1373,0.983,1374,1.006,1375,1.028,1376,0.983,1377,1.052,1378,1.1,1421,1.685,1436,1.451,1441,3.006,1640,1.204,1641,1.204,1642,1.204,1643,1.261,1644,1.29,1645,1.29,1646,1.29,1647,1.29,1648,1.29,1649,1.29,1650,1.29,1651,1.29,1652,1.29,1653,1.29,1654,1.29,1655,1.29,1696,1.352,1697,1.352,1698,1.352,1699,1.384,1700,1.384,1701,1.384,1702,1.451,1703,1.451,1704,1.451,1705,1.451,1706,1.451,1707,1.487,1708,1.487,1709,1.487,1710,1.487,1711,1.487,1712,1.487,1713,1.487,1714,1.487,1715,1.601,1716,1.601,1717,1.601,1718,1.561,1719,1.601,1720,1.601,1721,1.601,1722,1.601,1723,1.601,1724,1.73,1725,1.73,1726,1.73,1727,1.73,1728,1.73,1729,1.73,1730,1.73,1731,1.73,1732,1.73,1733,1.73,1734,1.73,1735,1.73,1736,1.73,1737,1.561,1738,1.685,1739,1.776,1740,1.776,1741,1.685,1881,1.561,2034,1.877,2107,4.788,2433,3.897,2844,5.636,2877,3.643,3048,2.859,3370,4.928,3444,2.513,4096,3.989,4380,3.006,5368,6.919,5698,3.989,5720,6.951,5721,6.951,5722,6.185,5737,3.989,5950,6.153,5951,6.153,5952,4.514,5953,6.153,5954,4.514,5955,6.153,5956,6.153,5957,4.514,5958,4.514,5959,4.514,5960,4.514,5961,7.517,5962,7.866,5963,7,5964,6.153,5965,4.514,5966,7,5967,8.117,5968,6.153,5969,6.153,5970,4.514,5971,6.153,5972,7.866,5973,6.153,5974,6.153,5975,6.153,5976,6.153,5977,7,5978,4.514,5979,6.153,5980,4.514,5981,4.514,5982,6.153,5983,6.153,5984,4.514,5985,4.514,5986,4.514,5987,7,5988,4.514,5989,6.153,5990,6.153,5991,4.514,5992,4.514,5993,4.514,5994,4.514,5995,4.514]],["title/java/examples/river-cross.html",[]],["body/java/examples/river-cross.html",[3,0.077,4,0.248,5,0.298,6,0.231,7,0.164,8,0.173,9,0.203,10,0.308,11,0.233,12,0.223,13,0.233,14,0.319,15,0.366,16,0.366,17,0.538,18,0.414,19,0.426,22,0.619,24,0.402,31,1.083,32,0.808,46,0.733,49,0.768,51,3.825,53,1.906,56,0.882,60,0.519,61,0.505,62,0.505,63,0.491,64,0.605,65,0.62,66,0.683,67,0.7,68,0.733,69,0.716,70,0.768,71,0.786,72,0.786,73,0.823,74,0.861,75,0.861,76,0.901,77,0.901,78,0.922,112,1.968,114,0.545,117,2.382,122,0.881,126,2.988,128,2.238,151,2.632,152,2.832,167,2.32,170,3.046,277,0.964,288,2.149,297,1.103,301,0.901,310,1.008,331,1.326,368,1.086,377,1.181,378,1.155,439,3.529,442,2.554,836,2.617,1019,0.286,1030,1.103,1031,1.964,1032,0.695,1034,0.715,1035,0.7,1036,1.851,1037,1.326,1039,1.424,1041,0.832,1160,1.921,1166,0.964,1186,1.893,1188,1.103,1226,1.055,1227,4.481,1228,0.922,1252,1.574,1372,0.943,1373,0.943,1374,0.964,1375,0.986,1376,0.943,1377,1.008,1378,1.055,1437,2.619,1438,2.417,1635,3.464,1640,1.155,1641,1.155,1642,1.155,1643,1.209,1644,1.237,1645,1.237,1646,1.237,1647,1.237,1648,1.237,1649,1.237,1650,1.237,1651,1.237,1652,1.237,1653,1.237,1654,1.237,1655,1.237,1696,1.296,1697,1.296,1698,1.296,1699,1.326,1700,1.326,1701,1.326,1702,1.391,1703,1.391,1704,1.391,1705,1.391,1706,1.391,1901,2.231,2664,3.492,3004,1.799,3072,2.508,3195,2.741,3386,3.244,3389,2.025,3506,3.244,3886,4.823,4173,5.525,4331,2.882,4872,4.467,5426,3.492,5514,3.492,5643,3.492,5748,5.281,5996,4.327,5997,4.327,5998,4.327,5999,6.847,6000,4.327,6001,4.327,6002,4.327,6003,4.327,6004,4.327,6005,6.847,6006,4.327,6007,4.327,6008,4.327,6009,4.327,6010,7.749,6011,4.327,6012,8.686,6013,8.496,6014,8.213,6015,8.37,6016,4.327,6017,4.327,6018,4.327,6019,5.977,6020,5.977,6021,4.327,6022,3.824,6023,4.327,6024,5.977,6025,4.327,6026,4.327,6027,4.327,6028,4.327,6029,4.327,6030,6.847,6031,5.977,6032,4.327,6033,6.847,6034,4.327,6035,5.977,6036,5.977,6037,6.847,6038,4.327,6039,4.327,6040,4.327,6041,4.327,6042,4.327,6043,4.327,6044,4.327,6045,4.327,6046,4.327,6047,4.327,6048,4.327]],["title/java/examples/stack.html",[]],["body/java/examples/stack.html",[3,0.073,4,0.218,5,0.248,6,0.218,7,0.264,8,0.279,9,0.327,10,0.36,11,0.376,12,0.36,13,0.376,14,0.515,15,0.59,16,0.59,17,0.628,18,0.668,19,0.688,22,0.577,31,1.133,54,4.048,114,0.515,157,5.397,799,3.609,800,3.609,828,2.148,1019,0.462,1032,0.734,1041,0.75,1186,1.805,1199,2.285,1253,4.19,1259,5.706,1260,5.234,6049,6.98,6050,6.98]],["title/java/examples/sudoku.html",[]],["body/java/examples/sudoku.html",[3,0.077,4,0.225,5,0.296,6,0.259,7,0.311,8,0.332,9,0.393,10,0.428,11,0.449,12,0.416,13,0.373,14,0.511,15,0.585,16,0.585,17,0.623,18,0.662,19,0.682,22,0.493,24,0.089,31,0.243,32,0.831,46,1.173,49,1.228,56,0.257,60,0.829,61,0.807,62,0.807,63,0.828,64,0.967,65,0.979,66,1.106,67,1.119,68,1.173,69,1.159,70,1.228,71,1.241,72,1.257,73,1.316,74,1.377,75,1.377,76,1.441,77,1.441,78,1.474,79,0.273,80,0.339,98,0.357,99,0.323,100,0.323,101,0.323,104,0.357,105,0.397,106,0.447,107,0.421,108,0.387,114,0.128,116,1.809,122,1.409,128,0.486,142,0.357,277,1.542,281,0.19,282,0.323,283,0.348,284,0.348,289,1.448,292,0.512,297,1.764,299,0.339,301,1.441,309,0.532,310,1.612,331,1.472,332,0.532,377,1.889,378,1.846,379,0.307,383,0.447,400,0.434,403,0.532,407,0.366,421,0.323,442,0.331,444,0.532,445,0.357,447,0.532,809,0.323,836,1.784,1016,0.397,1019,0.063,1022,0.323,1030,0.244,1032,0.343,1034,0.1,1035,0.155,1039,0.571,1041,0.661,1166,1.542,1187,0.969,1188,1.764,1189,0.3,1199,0.255,1210,1.225,1211,0.573,1223,0.447,1226,1.687,1228,1.474,1230,0.554,1372,1.507,1373,1.507,1374,1.542,1375,1.577,1376,1.507,1377,1.612,1378,1.687,1437,0.617,1438,0.704,1635,1.985,1640,1.846,1641,1.846,1642,1.846,1643,1.933,1644,1.978,1645,1.978,1646,1.978,1647,1.978,1648,1.978,1649,1.978,1650,1.978,1651,1.978,1652,1.978,1653,1.978,1654,1.978,1655,1.978,1696,2.072,1697,2.072,1698,2.072,1699,2.121,1700,2.121,1701,2.121,1702,2.225,1703,2.225,1704,2.225,1705,0.307,1706,0.307,1707,0.315,1708,0.315,1709,0.315,1710,0.315,1711,0.315,1712,0.315,1713,0.315,1714,0.315,1715,0.339,1716,0.339,1717,0.339,1718,0.331,1719,0.339,1720,0.339,1721,0.339,1722,0.339,1723,0.339,1724,0.366,1725,0.366,1726,0.366,1727,0.366,1728,0.366,1729,0.366,1730,0.366,1731,0.366,1732,0.366,1733,0.366,1734,0.366,1735,0.366,1736,0.366,1737,0.331,1738,0.357,1739,0.376,1740,0.376,1741,0.357,1742,0.387,1743,0.387,1744,0.387,1745,0.387,1746,0.387,1747,0.397,1748,0.397,1749,0.397,1750,0.397,1751,0.397,1752,0.397,1753,0.397,1754,0.397,1755,0.397,1756,0.397,1757,0.397,1758,0.409,1759,0.409,1760,0.409,1761,0.409,1762,0.409,1763,0.409,1764,0.409,1765,0.421,1766,0.421,1767,0.421,1768,0.421,1769,0.421,1770,0.421,1771,0.421,1772,0.447,1773,0.447,1774,0.447,1775,0.447,1776,0.447,1777,0.447,1778,0.447,1779,0.447,1780,0.462,1781,0.462,1782,0.462,1783,0.462,1784,0.462,1785,0.462,1786,0.462,1787,0.494,1788,0.494,1789,0.494,1790,0.494,1791,0.494,1792,0.494,1793,0.494,1794,0.494,1795,0.494,1796,0.494,1797,0.494,1798,0.494,1799,0.494,1800,0.494,1801,0.494,1802,0.494,1803,0.494,1804,0.494,1805,0.494,1806,0.494,1807,0.494,1808,0.512,1809,0.512,1810,0.512,1811,0.512,1812,0.512,1813,0.512,1814,0.512,1815,0.512,1816,0.512,1817,0.512,1818,0.512,1819,0.512,1820,0.512,1821,0.512,1822,0.512,1823,0.512,1824,0.512,1825,0.512,1826,0.532,1827,0.532,1828,0.554,1829,0.554,1830,0.554,1831,0.554,1832,0.554,1833,0.554,1834,0.554,1835,0.554,1836,0.554,1837,0.554,1838,0.554,1839,0.554,1840,0.554,1841,0.554,1842,0.554,1843,0.554,1844,0.554,1845,0.554,1846,0.554,1847,0.554,1848,0.578,1849,0.578,1850,0.578,1851,0.578,1852,0.578,1853,0.578,1854,0.578,1855,0.578,1856,0.578,1857,0.578,1858,0.578,1859,0.578,1860,0.578,1861,0.578,1862,0.578,1863,0.578,1864,0.578,1865,0.578,1866,0.578,1867,0.578,1868,0.578,1869,0.578,1870,0.578,1871,0.578,1872,0.578,1873,0.578,1874,0.578,1875,0.578,1876,0.578,1877,0.578,1878,0.578,1879,0.578,1901,0.649,2176,0.606,2177,0.606,2178,0.606,2179,0.606,2180,0.606,2181,0.606,2182,0.606,2183,0.606,2184,0.606,2185,0.606,2186,0.606,2187,0.606,2188,0.606,2189,0.606,2190,0.606,2191,0.606,2192,0.606,2193,0.606,2194,0.606,2195,0.606,2196,0.606,2197,0.606,2198,0.606,2199,0.606,2200,0.606,2201,0.606,2202,0.606,2203,0.606,2204,0.606,2205,0.606,2206,0.606,2207,0.606,2208,0.606,3891,1.304,4129,0.845,4891,1.052,4913,2.071,5426,0.771,6051,0.956,6052,0.956,6053,0.956,6054,2.394,6055,0.956,6056,1.74,6057,1.74,6058,0.956,6059,0.956,6060,2.948,6061,2.394,6062,2.394,6063,0.956,6064,1.74,6065,0.956,6066,0.956,6067,0.956,6068,1.74,6069,0.956,6070,1.74,6071,0.956,6072,5.492,6073,0.956,6074,0.956,6075,0.956,6076,0.956,6077,0.956,6078,0.956,6079,0.956,6080,0.956,6081,0.956,6082,0.956,6083,0.956,6084,0.956,6085,0.956,6086,0.956,6087,0.956,6088,0.956,6089,0.956,6090,0.956,6091,0.956,6092,0.956,6093,0.956,6094,0.956,6095,0.956]],["title/java/examples/tax-calculate.html",[]],["body/java/examples/tax-calculate.html",[2,1.422,3,0.077,4,0.161,5,0.213,6,0.186,7,0.226,8,0.239,9,0.28,10,0.308,11,0.322,12,0.308,13,0.322,14,0.441,15,0.505,16,0.505,17,0.538,18,0.571,19,0.589,22,0.426,24,0.554,31,1.032,32,0.73,46,1.012,49,1.06,56,0.861,60,0.716,61,0.697,62,0.697,63,0.678,64,0.835,65,0.856,66,0.943,67,0.966,68,1.012,69,0.989,70,1.06,71,1.085,72,1.085,73,1.136,74,1.189,75,1.189,76,1.244,77,1.244,78,1.272,79,1.707,80,2.118,98,2.23,99,2.016,100,2.016,101,2.016,103,2.483,104,2.23,114,0.441,117,1.594,120,4.59,122,1.216,128,1.668,140,2.21,142,2.755,162,1.831,277,1.331,290,3.326,301,1.244,338,3.783,771,3.088,802,2.415,1019,0.395,1030,1.523,1032,0.684,1034,0.624,1035,0.966,1037,1.831,1039,1.909,1041,0.793,1223,2.796,1225,1.92,1230,3.462,1372,1.301,1373,1.301,1374,1.331,1375,1.361,1376,1.301,1427,2.631,1881,2.066,2034,2.483,2286,3.251,2287,2.711,2382,2.703,2429,4.82,3352,6.522,3365,3.613,3377,3.783,3494,4.82,3936,7.924,3971,5.278,4383,4.205,5393,5.278,6096,5.973,6097,5.973,6098,5.973,6099,8.598,6100,5.973,6101,5.973,6102,7.381,6103,5.973,6104,5.973,6105,5.973,6106,5.973,6107,5.973,6108,5.973,6109,5.973,6110,5.973,6111,5.973,6112,5.973,6113,8.011,6114,7.381,6115,5.973,6116,5.973,6117,5.973,6118,5.973,6119,5.973,6120,5.973]],["title/java/examples/tower-of-hanoi.html",[]],["body/java/examples/tower-of-hanoi.html",[2,1.107,3,0.077,4,0.242,5,0.285,6,0.237,7,0.275,8,0.291,9,0.292,10,0.321,11,0.336,12,0.321,13,0.392,14,0.46,15,0.527,16,0.527,17,0.561,18,0.596,19,0.614,22,0.64,23,1.078,25,2.199,31,0.956,32,0.792,38,1.398,46,1.057,49,1.107,56,0.392,60,0.747,61,0.727,62,0.727,63,0.708,64,0.872,65,0.893,66,0.984,67,1.008,68,1.057,69,1.032,70,1.107,71,1.133,72,1.133,73,1.186,74,1.241,75,1.241,76,1.298,77,1.298,78,1.328,79,1.782,80,2.211,82,3.224,97,3.114,98,2.327,99,2.104,100,2.104,101,2.104,103,2.592,104,2.554,105,2.202,106,2.479,107,2.332,109,1.886,111,4.694,112,2.689,114,0.591,117,1.664,122,1.269,124,3.069,140,1.586,162,1.118,163,2.645,248,2.568,251,1.956,254,2.43,264,3.342,270,1.607,277,1.389,281,1.241,285,2.311,288,1.662,297,0.93,301,1.298,310,1.234,368,0.663,377,1.446,378,0.973,383,2.479,799,2.738,800,2.738,802,2.521,827,3.342,831,2.403,1019,0.412,1020,1.703,1030,1.852,1032,0.687,1041,0.912,1054,2.746,1165,2.311,1166,1.18,1179,2.084,1186,1.389,1188,1.35,1199,1.413,1210,3.729,1223,2.918,1225,1.703,1226,1.291,1228,1.128,1241,2.944,1252,1.327,1253,3.918,1259,4.39,1364,1.656,1372,1.358,1373,1.358,1374,1.389,1375,1.421,1376,1.358,1377,1.453,1378,1.291,1388,1.708,1390,2.944,1392,2.568,1396,1.956,1415,3.809,1436,2.004,1637,3.069,1640,1.413,1641,1.413,1642,1.413,1643,1.479,1644,1.514,1645,1.514,1646,1.514,1647,1.514,1648,1.514,1649,1.514,1650,1.043,1651,1.043,1652,1.043,1653,1.043,1654,1.043,1655,1.043,1688,2.738,1696,1.092,1697,1.092,1698,1.092,1881,2.621,1888,2.746,1889,1.763,1891,1.607,1899,2.207,1906,2.43,1929,2.114,1963,1.822,1964,1.708,1971,1.956,1974,1.381,1998,4.138,2003,2.311,2004,2.43,2005,3.527,2007,2.207,2009,2.311,2034,3.021,2061,3.667,2096,2.735,2102,5.031,2105,3.613,2106,4.39,2112,4.274,2123,2.839,2382,1.787,2406,2.114,3004,1.517,3030,2.568,3038,3.069,3205,2.114,3377,2.311,3388,4.007,3444,3.471,3506,2.735,4263,2.944,4320,2.311,4329,2.207,4354,4.274,4449,2.944,4804,4.677,4824,4.556,4837,2.735,4844,2.944,4905,3.354,4921,3.354,4922,3.949,4923,3.949,4924,3.949,4925,3.949,4926,3.949,4927,3.949,4928,3.949,4929,3.354,4930,2.311,4931,2.311,4932,2.311,4933,2.311,4934,2.311,4935,2.311,4936,2.311,4937,2.311,4938,2.311,4939,2.311,4940,2.311,4941,2.311,4946,2.568,4947,2.944,4954,4.675,4961,3.527,5369,4.274,5514,4.274,5643,2.944,5769,3.224,5771,3.224,6022,5.509,6121,3.648,6122,5.296,6123,7.265,6124,6.235,6125,6.841,6126,5.296,6127,5.296,6128,5.296,6129,5.296,6130,8.572,6131,8.164,6132,5.296,6133,3.648,6134,3.648,6135,3.648,6136,3.648,6137,5.296,6138,3.648,6139,5.296,6140,3.648,6141,3.648,6142,5.296,6143,3.648,6144,3.648,6145,3.648,6146,3.648,6147,3.648,6148,3.648,6149,3.648,6150,3.648,6151,3.648,6152,3.648,6153,3.648,6154,3.648,6155,3.648,6156,5.296,6157,3.648,6158,3.648,6159,3.648,6160,6.235,6161,5.296,6162,3.648,6163,3.648,6164,3.648,6165,3.648,6166,6.235,6167,5.296,6168,5.296,6169,3.648,6170,3.648,6171,3.648,6172,5.296,6173,3.648,6174,3.648,6175,3.648,6176,3.648,6177,3.648,6178,3.648,6179,3.648,6180,6.841,6181,3.648,6182,5.296,6183,5.296,6184,6.841,6185,3.648]]],"invertedIndex":[["",{"_index":3,"title":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-operation.html":{},"c/writing-intro.html":{},"java/array.html":{},"java/class-and-obj.html":{},"java/container.html":{},"java/easy-print.html":{},"java/encapsulation.html":{},"java/exception.html":{},"java/extends.html":{},"java/interface.html":{},"java/java-vs-c.html":{},"java/message-passing.html":{},"java/thread.html":{}},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{},"c/system-intro.html#浮點數表示法":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"c/system-operation.html#Software-development-process":{},"c/writing-intro.html":{},"c/writing-intro.html#句子的組成":{},"c/writing-intro.html#程式語言":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#final-修飾字":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/sum1toN.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["0",{"_index":32,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{},"c/system-intro.html#浮點數表示法":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#運算符號-Operator":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["0&#x2013;load",{"_index":873,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["0&#x2026;499",{"_index":660,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["0&#x3002",{"_index":3687,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["0&#x3002;&#x5982;&#x679c;&#x8981;&#x5370;&#x51fa",{"_index":212,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["0&#xff0c;&#x5247;&#x628a",{"_index":891,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["0&#xff0c;&#x53ef;&#x8868;&#x9054;&#x7684;&#x7bc4;&#x570d;&#x5728",{"_index":670,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["0&#xff0c;&#x5982",{"_index":228,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["0&#xff0c;+0",{"_index":669,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["0&#xff0c;998",{"_index":664,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["0&#xff1b;&#x5c0d",{"_index":1600,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["0,0",{"_index":5999,"title":{},"body":{"java/examples/river-cross.html":{}}}],["0,1",{"_index":6000,"title":{},"body":{"java/examples/river-cross.html":{}}}],["0,2",{"_index":6001,"title":{},"body":{"java/examples/river-cross.html":{}}}],["0,3",{"_index":6002,"title":{},"body":{"java/examples/river-cross.html":{}}}],["0.00412",{"_index":329,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["0.01e10",{"_index":424,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["0.06",{"_index":6108,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["0.110101",{"_index":339,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["0.12",{"_index":2430,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["0.12201",{"_index":321,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["0.13",{"_index":6109,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["0.14",{"_index":2427,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["0.15",{"_index":5765,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["0.2",{"_index":2443,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["0.20",{"_index":2486,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["0.21",{"_index":6110,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["0.22222+0.07407",{"_index":328,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["0.3",{"_index":2412,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["0.30",{"_index":6111,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["0.32",{"_index":2435,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["0.33333",{"_index":327,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["0.4",{"_index":2448,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["0.45",{"_index":6112,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["0.5",{"_index":338,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{},"java/examples/tax-calculate.html":{}}}],["0.57",{"_index":2417,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["0.6",{"_index":2429,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/examples/tax-calculate.html":{}}}],["0.625",{"_index":336,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["0.63374",{"_index":330,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["0.7",{"_index":2470,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["0.8",{"_index":2432,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["0.828125",{"_index":333,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["0.9",{"_index":2437,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["0.m",{"_index":446,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["0/81",{"_index":325,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["000",{"_index":319,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{}}}],["001",{"_index":395,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["01/03/1998",{"_index":4093,"title":{},"body":{"java/jdbc.html":{}}}],["01/04/1997",{"_index":4094,"title":{},"body":{"java/jdbc.html":{}}}],["01/05/1998",{"_index":1882,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["01/10/2000",{"_index":3986,"title":{},"body":{"java/jdbc.html":{}}}],["01/11/2000",{"_index":4315,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["01/13/2001",{"_index":2247,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["010",{"_index":318,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["0101",{"_index":314,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{}}}],["011",{"_index":317,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["01110011",{"_index":414,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["02/06/2002",{"_index":2248,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["0206/2002",{"_index":4316,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["03/20/1999",{"_index":6164,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["03/21/1999",{"_index":6165,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["03/24/2000",{"_index":6097,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["03/29/2000",{"_index":6098,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["03/31/2003",{"_index":5512,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["03d",{"_index":154,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["04/24/2000",{"_index":4233,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["04/30/2000",{"_index":5641,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["05/06/2001",{"_index":1884,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["06/12/2003",{"_index":2249,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["06/14/1997",{"_index":6174,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["0644",{"_index":5345,"title":{},"body":{"c/examples/open-file.html":{}}}],["07",{"_index":816,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{}}}],["08/21/1998",{"_index":4127,"title":{},"body":{"java/jdbc.html":{}}}],["08/23/1998",{"_index":4982,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["09d",{"_index":159,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["0mod100=>condit",{"_index":1047,"title":{},"body":{"c/writing-intro.html":{}}}],["0mod100=condit",{"_index":1135,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["0mod400=>condit",{"_index":1048,"title":{},"body":{"c/writing-intro.html":{}}}],["0mod400=condit",{"_index":1136,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["0no4=>oper",{"_index":1049,"title":{},"body":{"c/writing-intro.html":{}}}],["0no4=oper",{"_index":1137,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["0x00",{"_index":5843,"title":{},"body":{"java/examples/othello.html":{}}}],["0x0011",{"_index":3071,"title":{},"body":{"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["0x00ff",{"_index":3064,"title":{},"body":{"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["0x01",{"_index":5844,"title":{},"body":{"java/examples/othello.html":{}}}],["0x01000000",{"_index":5420,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["0x02",{"_index":5845,"title":{},"body":{"java/examples/othello.html":{}}}],["0x03",{"_index":4912,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["0x04",{"_index":5848,"title":{},"body":{"java/examples/othello.html":{}}}],["0x08",{"_index":5850,"title":{},"body":{"java/examples/othello.html":{}}}],["0x0f",{"_index":5753,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["0x10",{"_index":5747,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["0x20",{"_index":5749,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["0x40",{"_index":5751,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["0xff00",{"_index":3067,"title":{},"body":{"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["0xff11",{"_index":3076,"title":{},"body":{"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["0xffff",{"_index":3073,"title":{},"body":{"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["0–load",{"_index":785,"title":{},"body":{"c/system-operation.html":{}}}],["0…499",{"_index":387,"title":{},"body":{"c/system-intro.html":{}}}],["0表示在河左岸,1",{"_index":6011,"title":{},"body":{"java/examples/river-cross.html":{}}}],["0，+0",{"_index":393,"title":{},"body":{"c/system-intro.html":{}}}],["0，998",{"_index":389,"title":{},"body":{"c/system-intro.html":{}}}],["1",{"_index":4,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{},"c/system-intro.html#浮點數表示法":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"c/system-operation.html#Software-development-process":{},"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#final-修飾字":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/sum1toN.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["1&#x2013;store",{"_index":877,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["1&#x3000",{"_index":886,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["1&#x3002;&#x8b80;&#x8005;&#x6b64;&#x6642;&#x7684;&#x7591;&#x554f;&#x662f;&#xff0c;&#x6e1b;&#x6cd5;&#x53c8;&#x8dd1;&#x51fa;&#x4f86;&#x4e86;&#xff0c;&#x9019;&#x6a23;&#x6703;&#x6bd4;&#x8f03;&#x5feb;&#x55ce;&#xff1f;&#x8acb;&#x6ce8;&#x610f",{"_index":632,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["1&#xff0c;&#x63db;&#x53e5;&#x8a71;&#x8aaa;&#x4efb;&#x4f55;&#x6578;&#x5b57;&#x90fd;&#x9577;&#x9019;&#x500b;&#x6a23;&#x5b50;&#xff0c;&#xb1;1.mmmmeee&#xff0c;&#x65e2;&#x7136;&#x6574;&#x6578;&#x4e00;&#x5b9a;&#x662f",{"_index":734,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["1&#xff0c;&#x90a3;&#x5c31;&#x4e0d;&#x8981;&#x6d6a;&#x8cbb;&#x4e86;&#xff0c;&#x4ee5;&#x4fbf;&#x53ef;&#x4ee5;&#x8868;&#x9054;&#x66f4;&#x5927;&#x7bc4;&#x570d;&#x7684;&#x6578;&#x5b57;&#x3002;&#x4e0a;&#x8ff0;&#x4f8b;&#x5b50;&#x7684",{"_index":735,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["1&#xff0c;2&#xff0c;3&#xff0c;4",{"_index":914,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["1&#xff0c;997",{"_index":665,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["1&#xff0c;998",{"_index":677,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["1&#xff0c;b",{"_index":4698,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["1+1/4",{"_index":425,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["1+2",{"_index":3479,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{}}}],["1,024",{"_index":293,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["1,048,576",{"_index":295,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["1,1",{"_index":6003,"title":{},"body":{"java/examples/river-cross.html":{}}}],["1,1,x,x",{"_index":5411,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["1,2",{"_index":5998,"title":{},"body":{"java/examples/river-cross.html":{}}}],["1,2,x,x",{"_index":5412,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["1,3,x,x",{"_index":5413,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["1,4,1,x",{"_index":5414,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["1,4,2,x",{"_index":5409,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["1,x,x,x",{"_index":5410,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["1..9",{"_index":3490,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{}}}],["1.0",{"_index":2433,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/examples/reverse-matrix.html":{}}}],["1.1",{"_index":3945,"title":{},"body":{"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#鍵盤事件處理範例":{}}}],["1.2",{"_index":2413,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["1.2&#xff0c;&#x82e5;&#x7a0b;&#x5f0f;&#x4f7f;&#x7528;&#x5230",{"_index":2764,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["1.25",{"_index":337,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["1.2857",{"_index":2119,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["1.3",{"_index":1935,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["1.30239846_10",{"_index":3429,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["1.3125",{"_index":335,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["1.35",{"_index":2436,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["1.4",{"_index":2117,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{}}}],["1.4&#xff0c;&#x57f7;&#x884c;&#x6642;&#x537b;&#x7528",{"_index":2763,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["1.5",{"_index":2460,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#字串":{}}}],["1.6",{"_index":298,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["1.656250",{"_index":334,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["1.76769313486231570_10+308",{"_index":3430,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["1.8",{"_index":2476,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["1.\\n",{"_index":5310,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["1.m",{"_index":448,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["1/1000",{"_index":4450,"title":{},"body":{"java/thread.html":{}}}],["1/1000&#x79d2",{"_index":4652,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["1/243",{"_index":326,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["1/3",{"_index":322,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#浮點數表示法":{}}}],["1/4",{"_index":426,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["10",{"_index":13,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{},"c/system-intro.html#浮點數表示法":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["10&#x2013;halt",{"_index":905,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["10*10",{"_index":5839,"title":{},"body":{"java/examples/othello.html":{}}}],["10.2",{"_index":3052,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["10.5",{"_index":2458,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["10/28/1997",{"_index":6175,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["100",{"_index":281,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{},"c/system-operation.html":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/class-and-obj.html":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["100&#x3001;200",{"_index":4686,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["100&#x3002",{"_index":610,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["100.0",{"_index":2404,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{}}}],["1000",{"_index":285,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"c/examples/find-prime-numbers.html":{},"java/examples/read-write-queue.html":{},"java/examples/tower-of-hanoi.html":{}}}],["1000&#x3001;b",{"_index":4684,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["10000",{"_index":3902,"title":{},"body":{"java/jdbc.html":{}}}],["1000000",{"_index":4383,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{},"c/examples/find-prime-numbers.html":{},"java/examples/othello.html":{},"java/examples/tax-calculate.html":{}}}],["10000000",{"_index":5306,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["100000000",{"_index":5936,"title":{},"body":{"java/examples/othello.html":{}}}],["10001100",{"_index":415,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["1000、b",{"_index":4470,"title":{},"body":{"java/thread.html":{}}}],["1001",{"_index":286,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["100c",{"_index":3476,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{}}}],["100、200",{"_index":4471,"title":{},"body":{"java/thread.html":{}}}],["101",{"_index":282,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["1010",{"_index":287,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["1010&#x3002;&#x63db;&#x8a00;&#x4e4b;&#xff0c;&#x6c42;&#x4e8c;&#x9032;&#x4f4d;&#x7684;&#x88dc;&#x6578;&#x53ef;&#x4ee5;&#x7528",{"_index":639,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["102",{"_index":1719,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["1023",{"_index":453,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["1024",{"_index":1255,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["103",{"_index":421,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["104",{"_index":1720,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["105",{"_index":1721,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["106",{"_index":1722,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["107",{"_index":1723,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["108",{"_index":1724,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["109",{"_index":1725,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["10–halt",{"_index":798,"title":{},"body":{"c/system-operation.html":{}}}],["11",{"_index":14,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#多維陣列":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["11.11",{"_index":1168,"title":{},"body":{"java/array.html":{},"java/array.html#Java-陣列的特性":{}}}],["11.2",{"_index":2081,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["11.69",{"_index":2076,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["110",{"_index":283,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["1101",{"_index":315,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["11010111011000",{"_index":313,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["111",{"_index":284,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["1111",{"_index":381,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["111111",{"_index":380,"title":{},"body":{"c/system-intro.html":{}}}],["111111&#xff0c;&#x6e1b;&#x53bb;&#x4e8c;&#x9032;&#x4f4d;&#x6578",{"_index":634,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["11111111",{"_index":413,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["112",{"_index":1726,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["113",{"_index":1727,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["114",{"_index":1728,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["115",{"_index":1729,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["116",{"_index":1730,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["117",{"_index":1731,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["118",{"_index":1732,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["119",{"_index":1733,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["11bit",{"_index":451,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["12",{"_index":15,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#多維陣列":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["120",{"_index":1734,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["121",{"_index":1735,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["122",{"_index":1736,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["1224",{"_index":308,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["123",{"_index":1737,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["1234",{"_index":5654,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["124",{"_index":1738,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/java-vs-c.html":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["1249",{"_index":402,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["124;&#124",{"_index":3443,"title":{},"body":{"java/java-vs-c.html":{}}}],["125",{"_index":1739,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["126",{"_index":445,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["127",{"_index":442,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["127~128",{"_index":443,"title":{},"body":{"c/system-intro.html":{}}}],["127~128&#xff0c;&#x4f46",{"_index":751,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["128",{"_index":299,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["129",{"_index":1740,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["13",{"_index":16,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#多維陣列":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["13.9",{"_index":2078,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["130",{"_index":1741,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["131",{"_index":1742,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["132",{"_index":1743,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["133",{"_index":1744,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["134",{"_index":1745,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["135",{"_index":1746,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["136",{"_index":1747,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["137",{"_index":1748,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["13754",{"_index":302,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["138",{"_index":1749,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["139",{"_index":1750,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["14",{"_index":17,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#多維陣列":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["140",{"_index":1751,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["141",{"_index":1752,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["142",{"_index":1753,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["143",{"_index":1754,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["143444",{"_index":311,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["144",{"_index":1755,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["145",{"_index":1756,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["146",{"_index":1757,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["147",{"_index":1758,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["148",{"_index":1759,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["149",{"_index":1760,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["15",{"_index":18,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["150",{"_index":1761,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["1500",{"_index":5353,"title":{},"body":{"c/examples/taxi-fee-calculator.html":{}}}],["151",{"_index":1762,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["152",{"_index":1763,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["153",{"_index":1764,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["1536",{"_index":305,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["154",{"_index":1765,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["155",{"_index":1766,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["156",{"_index":1767,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["157",{"_index":1768,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["158",{"_index":1769,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["159",{"_index":1770,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["16",{"_index":19,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["16&#xff0c;&#x6211;&#x5011;&#x901a;&#x5e38;&#x4ee5;&#x5169;&#x500b;&#x5341;&#x516d;&#x9032;&#x4f4d;&#x6578;&#x5b57;&#x4f86;&#x8868;&#x793a;&#x4e00;&#x500b;&#x4f4d;&#x5143;&#x7d44;&#xff0c;&#x56e0;&#x6b64;&#x5341;&#x516d;&#x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x662f;&#x9664;&#x4e86;&#x4e8c;&#x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x5916;&#x53e6;&#x4e00;&#x500b;&#x5e38;&#x7528;&#x7684;&#x6578;&#x5b57;&#x7cfb;&#x7d71;&#x3002;&#x5728;&#x5341;&#x516d;&#x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x4e2d;&#x6211;&#x5011;&#x4ee5",{"_index":527,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["16.54",{"_index":2079,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["160",{"_index":1771,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["161",{"_index":1772,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["162",{"_index":1773,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["163",{"_index":1774,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["163.22.20.114",{"_index":5653,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["163.22.22.22",{"_index":3912,"title":{},"body":{"java/jdbc.html":{}}}],["164",{"_index":1775,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["165",{"_index":1776,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["166",{"_index":1777,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["167",{"_index":1778,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["168",{"_index":1779,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["169",{"_index":1780,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["1698",{"_index":410,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["17",{"_index":60,"title":{},"body":{"c/c-intro.html":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["170",{"_index":400,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["171",{"_index":1781,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["172",{"_index":1782,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["173",{"_index":1783,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["174",{"_index":1784,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["175",{"_index":1785,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["176",{"_index":1786,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["177",{"_index":1787,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["178",{"_index":1788,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["179",{"_index":1789,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["18",{"_index":61,"title":{},"body":{"c/c-intro.html":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["180",{"_index":1790,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["181",{"_index":1791,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["182",{"_index":1792,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["183",{"_index":1793,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["184",{"_index":1794,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["185",{"_index":1795,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["186",{"_index":1796,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["187",{"_index":1797,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["188",{"_index":1798,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["189",{"_index":1799,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["19",{"_index":62,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["190",{"_index":1800,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["191",{"_index":1801,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["1911",{"_index":2455,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["192",{"_index":1802,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["193",{"_index":1803,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["194",{"_index":1804,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["195",{"_index":1805,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["196",{"_index":1806,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["197",{"_index":1807,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["198",{"_index":1808,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["1984",{"_index":1038,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["199",{"_index":1809,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["1997/08/17",{"_index":4981,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["1997/10/27",{"_index":88,"title":{},"body":{"c/c-intro.html":{}}}],["1998/3/17",{"_index":5699,"title":{},"body":{"java/examples/matrix.html":{}}}],["1999",{"_index":4389,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["1bit",{"_index":437,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["1–store",{"_index":787,"title":{},"body":{"c/system-operation.html":{}}}],["1，2，3，4",{"_index":804,"title":{},"body":{"c/system-operation.html":{}}}],["1，997",{"_index":390,"title":{},"body":{"c/system-intro.html":{}}}],["1，998",{"_index":396,"title":{},"body":{"c/system-intro.html":{}}}],["1，b",{"_index":4476,"title":{},"body":{"java/thread.html":{}}}],["1，換句話說任何數字都長這個樣子，±1.mmmmeee",{"_index":427,"title":{},"body":{"c/system-intro.html":{}}}],["2",{"_index":5,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{},"c/system-intro.html#浮點數表示法":{},"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#final-修飾字":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/sum1toN.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["2&#x2013;add",{"_index":880,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["2&#x2019",{"_index":689,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["2&#xff0c;&#x2026;&#xff0c;500",{"_index":666,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["2&#xff0c;997",{"_index":678,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["2&#xff0c;a",{"_index":4694,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["2&#xff0c;b",{"_index":4695,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["2*size+2",{"_index":5364,"title":{},"body":{"java/examples/bingo.html":{}}}],["2,1",{"_index":6009,"title":{},"body":{"java/examples/river-cross.html":{}}}],["2,2",{"_index":6004,"title":{},"body":{"java/examples/river-cross.html":{}}}],["2,4,1,3",{"_index":5408,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["2.0",{"_index":3041,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["2.008",{"_index":420,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["2.008e",{"_index":417,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["2.008e3",{"_index":419,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["2.3",{"_index":2434,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["2.4",{"_index":2469,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["2.55",{"_index":2480,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["2.6",{"_index":300,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["2.8",{"_index":2482,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["2/27",{"_index":324,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["2/9",{"_index":323,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["20",{"_index":63,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#多維陣列":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["20.6",{"_index":3482,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{}}}],["200",{"_index":407,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["2003/05/20",{"_index":5417,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["2003/12/17",{"_index":4983,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["2004/03/03",{"_index":89,"title":{},"body":{"c/c-intro.html":{}}}],["2004/04/26",{"_index":4986,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["2004/05/10",{"_index":5356,"title":{},"body":{"java/examples/OX-game.html":{}}}],["2004/07/07",{"_index":2250,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["2004/09/21",{"_index":4234,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["2004/10/01",{"_index":1885,"title":{},"body":{"java/easy-print.html":{}}}],["2004/10/01,&#x52a0;&#x5165;&#x80cc;&#x666f;&#x5217;&#x5370",{"_index":2489,"title":{},"body":{"java/easy-print.html#Print-java":{}}}],["2004/11/21",{"_index":5322,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["2004/12/08",{"_index":5303,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["2005/03/20,&#x52a0;&#x5165;clean",{"_index":4417,"title":{},"body":{"java/net.html#HTTP-Server":{}}}],["2005/03/20,加入cleaner",{"_index":4317,"title":{},"body":{"java/net.html":{}}}],["2005/03/29",{"_index":4962,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["2005/05/23",{"_index":5827,"title":{},"body":{"java/examples/othello.html":{}}}],["2005/05/24",{"_index":5828,"title":{},"body":{"java/examples/othello.html":{}}}],["2005/07/11",{"_index":5700,"title":{},"body":{"java/examples/matrix.html":{}}}],["2005/09/12",{"_index":6053,"title":{},"body":{"java/examples/sudoku.html":{}}}],["2005/09/16",{"_index":4237,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["2005/09/22",{"_index":4239,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["2006/01/23",{"_index":1224,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["2006/02/16",{"_index":4240,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["2008",{"_index":416,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["2008/09/28",{"_index":93,"title":{},"body":{"c/c-intro.html":{}}}],["201",{"_index":1810,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["202",{"_index":1811,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["203",{"_index":1812,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["204",{"_index":1813,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["205",{"_index":1814,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["206",{"_index":1815,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["207",{"_index":1816,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["208",{"_index":1817,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["209",{"_index":1818,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["21",{"_index":64,"title":{},"body":{"c/c-intro.html":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["210",{"_index":1819,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["211",{"_index":1820,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["212",{"_index":1821,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["213",{"_index":1822,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["214",{"_index":1823,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["2147483647",{"_index":3425,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["2147483648",{"_index":3424,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["215",{"_index":1824,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["216",{"_index":1825,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["217",{"_index":1826,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["218",{"_index":1827,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["219",{"_index":1828,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["22",{"_index":65,"title":{},"body":{"c/c-intro.html":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["220",{"_index":1829,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["221",{"_index":1830,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["222",{"_index":1831,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["223",{"_index":1832,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["224",{"_index":1833,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["225",{"_index":1834,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["226",{"_index":1835,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["227",{"_index":1836,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["228",{"_index":1837,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["229",{"_index":1838,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["23",{"_index":66,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["230",{"_index":1839,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["231",{"_index":1840,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["232",{"_index":1841,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["233",{"_index":1842,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["234",{"_index":1843,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["235",{"_index":1844,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["236",{"_index":1845,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["237",{"_index":1846,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["238",{"_index":1847,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["239",{"_index":1848,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["23bit",{"_index":440,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["24",{"_index":67,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["240",{"_index":1849,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["241",{"_index":1850,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["242",{"_index":1851,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["243",{"_index":332,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["244",{"_index":309,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["245",{"_index":1852,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["246",{"_index":1853,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["247",{"_index":1854,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["248",{"_index":1855,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["249",{"_index":403,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["25",{"_index":68,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["250",{"_index":1856,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["251",{"_index":1857,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["252",{"_index":1858,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["253",{"_index":1859,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["254",{"_index":447,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["255",{"_index":444,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["256",{"_index":292,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["257",{"_index":1860,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["258",{"_index":1861,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["259",{"_index":1862,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["26",{"_index":46,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["260",{"_index":1863,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["261",{"_index":1864,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["262",{"_index":1865,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["263",{"_index":1866,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["264",{"_index":1867,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["265",{"_index":1868,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["266",{"_index":1869,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["267",{"_index":1870,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["268",{"_index":1871,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["269",{"_index":1872,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["27",{"_index":69,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["270",{"_index":1873,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["271",{"_index":1874,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["272",{"_index":1875,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["273",{"_index":1876,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["274",{"_index":1877,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["275",{"_index":1878,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["276",{"_index":1879,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["277",{"_index":2176,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["278",{"_index":2177,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["279",{"_index":2178,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["28",{"_index":70,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["280",{"_index":2179,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["281",{"_index":2180,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["282",{"_index":2181,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["283",{"_index":2182,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["284",{"_index":2183,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["285",{"_index":2184,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["286",{"_index":2185,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["287",{"_index":2186,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["288",{"_index":2187,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["289",{"_index":2188,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["29",{"_index":71,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["290",{"_index":2189,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["291",{"_index":2190,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["292",{"_index":2191,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["293",{"_index":2192,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["294",{"_index":2193,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["295",{"_index":2194,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["296",{"_index":2195,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["297",{"_index":2196,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["298",{"_index":2197,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["299",{"_index":2198,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["2–add",{"_index":788,"title":{},"body":{"c/system-operation.html":{}}}],["2進位只有0和1",{"_index":412,"title":{},"body":{"c/system-intro.html":{}}}],["2，997",{"_index":397,"title":{},"body":{"c/system-intro.html":{}}}],["2，a",{"_index":4472,"title":{},"body":{"java/thread.html":{}}}],["2，b",{"_index":4474,"title":{},"body":{"java/thread.html":{}}}],["2，…，500",{"_index":391,"title":{},"body":{"c/system-intro.html":{}}}],["3",{"_index":6,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{},"c/system-intro.html#浮點數表示法":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#final-修飾字":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/sum1toN.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["3&#x2013;sub",{"_index":883,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["3&#x3002",{"_index":1619,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["3&#xff0c;&#x2026;&#xff0c;500",{"_index":679,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["3&#xff0c;&#x800c",{"_index":490,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["3,0",{"_index":6008,"title":{},"body":{"java/examples/river-cross.html":{}}}],["3,1",{"_index":6007,"title":{},"body":{"java/examples/river-cross.html":{}}}],["3,1,4,2",{"_index":5415,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["3,2",{"_index":6006,"title":{},"body":{"java/examples/river-cross.html":{}}}],["3,3",{"_index":6005,"title":{},"body":{"java/examples/river-cross.html":{}}}],["3.1",{"_index":2442,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["3.14",{"_index":1167,"title":{},"body":{"java/array.html":{},"java/array.html#Java-陣列的特性":{}}}],["3.14149",{"_index":3201,"title":{},"body":{"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{}}}],["3.14159",{"_index":1452,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#final-關鍵字":{}}}],["3.141592654",{"_index":3036,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["3.3",{"_index":2419,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["3.33",{"_index":2438,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["3.4",{"_index":2449,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["3.4028237_10+38",{"_index":3428,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["3.5",{"_index":2463,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["3.6",{"_index":2414,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["3.63",{"_index":2439,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["3.65",{"_index":2461,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["3.8",{"_index":3050,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["3.9",{"_index":2421,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["3/16/1998",{"_index":3360,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["3/17/1998",{"_index":3361,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["3/20/1999",{"_index":6135,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["3/21/1999",{"_index":6136,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["30",{"_index":72,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["300",{"_index":383,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["300&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x9280;&#x884c;&#x5e73;&#x767d;&#x640d;&#x5931;&#x4e86",{"_index":4701,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["300)=699",{"_index":385,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["3000",{"_index":4249,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["30000",{"_index":4327,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["300000",{"_index":6102,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["301",{"_index":2199,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["302",{"_index":2200,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["303",{"_index":2201,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["304",{"_index":2202,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["305",{"_index":2203,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["306",{"_index":2204,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["307",{"_index":2205,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["308",{"_index":2206,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["309",{"_index":2207,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["31",{"_index":73,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["310",{"_index":2208,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["311",{"_index":2209,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["312",{"_index":2210,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["313",{"_index":2211,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["314",{"_index":2212,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["315",{"_index":2213,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["316",{"_index":2214,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["317",{"_index":2215,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["318",{"_index":2216,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["319",{"_index":2217,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["32",{"_index":49,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#浮點數表示法":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["32.0",{"_index":3478,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{}}}],["320",{"_index":2218,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["321",{"_index":2219,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["322",{"_index":2220,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["323",{"_index":2221,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["324",{"_index":2222,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["325",{"_index":2223,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["326",{"_index":2224,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["327",{"_index":2225,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["32730",{"_index":320,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["32767",{"_index":3423,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["32768",{"_index":3422,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["32786",{"_index":6042,"title":{},"body":{"java/examples/river-cross.html":{}}}],["328",{"_index":2226,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["329",{"_index":2227,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["33",{"_index":74,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["330",{"_index":2228,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["331",{"_index":2229,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["332",{"_index":2230,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["333",{"_index":2231,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["334",{"_index":2232,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["335",{"_index":2233,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["336",{"_index":2234,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["337",{"_index":2235,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["338",{"_index":2236,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["339",{"_index":2237,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["34",{"_index":75,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["340",{"_index":2238,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["341",{"_index":2239,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["342",{"_index":2240,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["343",{"_index":2241,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["344",{"_index":2242,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["345",{"_index":2243,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["346",{"_index":2244,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["347",{"_index":2245,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["348",{"_index":2246,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["349",{"_index":4970,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["35",{"_index":76,"title":{},"body":{"c/c-intro.html":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["350",{"_index":404,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["351",{"_index":4971,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["352",{"_index":4972,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["353",{"_index":4973,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["354",{"_index":4974,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["355",{"_index":4975,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["356",{"_index":4976,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["357",{"_index":4977,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["358",{"_index":4978,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["359",{"_index":4979,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["35d8",{"_index":316,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["36",{"_index":77,"title":{},"body":{"c/c-intro.html":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["360",{"_index":5441,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["361",{"_index":5442,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["362",{"_index":5443,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["363",{"_index":5444,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["364",{"_index":5445,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["365",{"_index":5446,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["366",{"_index":5447,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["367",{"_index":5448,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["368",{"_index":5449,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["369",{"_index":5450,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["37",{"_index":78,"title":{},"body":{"c/c-intro.html":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["370",{"_index":5451,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["371",{"_index":5452,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["372",{"_index":5453,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["373",{"_index":5454,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["374",{"_index":5455,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["375",{"_index":5456,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["376",{"_index":5457,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["377",{"_index":5458,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["378",{"_index":5459,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["379",{"_index":5460,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["38",{"_index":301,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["380",{"_index":5461,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["381",{"_index":5462,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["382",{"_index":5463,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["383",{"_index":5464,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["384",{"_index":5465,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["385",{"_index":5466,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["386",{"_index":5467,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["387",{"_index":5468,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["388",{"_index":5469,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["389",{"_index":5470,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["39",{"_index":1372,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["390",{"_index":5471,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["391",{"_index":5472,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["392",{"_index":5473,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["393",{"_index":5474,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["394",{"_index":5475,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["395",{"_index":5476,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["396",{"_index":5477,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["397",{"_index":5478,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["398",{"_index":5479,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["399",{"_index":5480,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["39;\\n&#39",{"_index":135,"title":{},"body":{"c/c-intro.html":{}}}],["3copi",{"_index":5063,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["3d",{"_index":153,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["3–sub",{"_index":789,"title":{},"body":{"c/system-operation.html":{}}}],["3個機器指令load",{"_index":4467,"title":{},"body":{"java/thread.html":{}}}],["3，…，500",{"_index":398,"title":{},"body":{"c/system-intro.html":{}}}],["4",{"_index":7,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#final-修飾字":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/sum1toN.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["4&#x2013;jump",{"_index":887,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["4&#xff0c;3&#xff0c;2&#xff0c;1",{"_index":917,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["4,294,967,296",{"_index":296,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["4.3",{"_index":2471,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["4.4",{"_index":2468,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["4.6",{"_index":3055,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["4.94065645841246544_10",{"_index":3431,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["4/13/1998",{"_index":5959,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["4/13/2003",{"_index":5960,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["4/21/1998",{"_index":5511,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["40",{"_index":122,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["400",{"_index":1021,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["400000",{"_index":6103,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["401",{"_index":5481,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["402",{"_index":5482,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["403",{"_index":5483,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["404",{"_index":4371,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["405",{"_index":5484,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["406",{"_index":5485,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["407",{"_index":5486,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["408",{"_index":5487,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["409",{"_index":5488,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["4096",{"_index":303,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["41",{"_index":1373,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["410",{"_index":5489,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["411",{"_index":5490,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["412",{"_index":5491,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["413",{"_index":5492,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["414",{"_index":5493,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["415",{"_index":5494,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["416",{"_index":5495,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["417",{"_index":5496,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["418",{"_index":5497,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["419",{"_index":5498,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["42",{"_index":1374,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["420",{"_index":399,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["421",{"_index":5499,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["422",{"_index":5500,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["423",{"_index":5501,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["424",{"_index":5502,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["425",{"_index":5503,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["426",{"_index":5504,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["427",{"_index":5505,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["428",{"_index":5506,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["429",{"_index":5507,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["43",{"_index":277,"title":{},"body":{"c/system-intro.html":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["430",{"_index":5508,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["431",{"_index":5509,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["432",{"_index":5510,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["433",{"_index":5783,"title":{},"body":{"java/examples/othello.html":{}}}],["434",{"_index":5784,"title":{},"body":{"java/examples/othello.html":{}}}],["435",{"_index":5785,"title":{},"body":{"java/examples/othello.html":{}}}],["436",{"_index":5786,"title":{},"body":{"java/examples/othello.html":{}}}],["437",{"_index":5787,"title":{},"body":{"java/examples/othello.html":{}}}],["438",{"_index":5788,"title":{},"body":{"java/examples/othello.html":{}}}],["439",{"_index":5789,"title":{},"body":{"java/examples/othello.html":{}}}],["44",{"_index":1375,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["440",{"_index":5790,"title":{},"body":{"java/examples/othello.html":{}}}],["441",{"_index":5791,"title":{},"body":{"java/examples/othello.html":{}}}],["442",{"_index":5792,"title":{},"body":{"java/examples/othello.html":{}}}],["443",{"_index":5793,"title":{},"body":{"java/examples/othello.html":{}}}],["444",{"_index":5794,"title":{},"body":{"java/examples/othello.html":{}}}],["445",{"_index":5795,"title":{},"body":{"java/examples/othello.html":{}}}],["446",{"_index":5796,"title":{},"body":{"java/examples/othello.html":{}}}],["447",{"_index":5797,"title":{},"body":{"java/examples/othello.html":{}}}],["448",{"_index":306,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/examples/othello.html":{}}}],["449",{"_index":5798,"title":{},"body":{"java/examples/othello.html":{}}}],["45",{"_index":1376,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["450",{"_index":5799,"title":{},"body":{"java/examples/othello.html":{}}}],["451",{"_index":5800,"title":{},"body":{"java/examples/othello.html":{}}}],["452",{"_index":5801,"title":{},"body":{"java/examples/othello.html":{}}}],["453",{"_index":5802,"title":{},"body":{"java/examples/othello.html":{}}}],["454",{"_index":5803,"title":{},"body":{"java/examples/othello.html":{}}}],["455",{"_index":5804,"title":{},"body":{"java/examples/othello.html":{}}}],["456",{"_index":2671,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/examples/othello.html":{}}}],["457",{"_index":5805,"title":{},"body":{"java/examples/othello.html":{}}}],["458",{"_index":5806,"title":{},"body":{"java/examples/othello.html":{}}}],["459",{"_index":5807,"title":{},"body":{"java/examples/othello.html":{}}}],["46",{"_index":1377,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["460",{"_index":5808,"title":{},"body":{"java/examples/othello.html":{}}}],["461",{"_index":5809,"title":{},"body":{"java/examples/othello.html":{}}}],["462",{"_index":5810,"title":{},"body":{"java/examples/othello.html":{}}}],["463",{"_index":5811,"title":{},"body":{"java/examples/othello.html":{}}}],["464",{"_index":5812,"title":{},"body":{"java/examples/othello.html":{}}}],["465",{"_index":5813,"title":{},"body":{"java/examples/othello.html":{}}}],["466",{"_index":5814,"title":{},"body":{"java/examples/othello.html":{}}}],["467",{"_index":5815,"title":{},"body":{"java/examples/othello.html":{}}}],["468",{"_index":5816,"title":{},"body":{"java/examples/othello.html":{}}}],["469",{"_index":5817,"title":{},"body":{"java/examples/othello.html":{}}}],["47",{"_index":1166,"title":{},"body":{"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["470",{"_index":5818,"title":{},"body":{"java/examples/othello.html":{}}}],["471",{"_index":5819,"title":{},"body":{"java/examples/othello.html":{}}}],["472",{"_index":5820,"title":{},"body":{"java/examples/othello.html":{}}}],["473",{"_index":5821,"title":{},"body":{"java/examples/othello.html":{}}}],["474",{"_index":5822,"title":{},"body":{"java/examples/othello.html":{}}}],["475",{"_index":5823,"title":{},"body":{"java/examples/othello.html":{}}}],["476",{"_index":5824,"title":{},"body":{"java/examples/othello.html":{}}}],["48",{"_index":310,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["49",{"_index":1378,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["499",{"_index":388,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["499&#x2026",{"_index":661,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["499&#x3002",{"_index":671,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["499&#x3002;9",{"_index":667,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["499。9",{"_index":392,"title":{},"body":{"c/system-intro.html":{}}}],["4fe5",{"_index":3433,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["4–jump",{"_index":790,"title":{},"body":{"c/system-operation.html":{}}}],["4，3，2，1",{"_index":805,"title":{},"body":{"c/system-operation.html":{}}}],["5",{"_index":8,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/sum1toN.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["5&#x2013;skip",{"_index":889,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["5&#x79d2;&#x5167;&#x8981;&#x8b80;&#x5230;&#x8cc7;&#x6599",{"_index":4429,"title":{},"body":{"java/net.html#HTTP-Server":{}}}],["5)&#xff0c;&#x4e26;&#x5c07",{"_index":953,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["5.0",{"_index":2479,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"c/examples/avg.html":{}}}],["5.3",{"_index":3053,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["5/05/2002",{"_index":5743,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["5/19/1999",{"_index":5742,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["50",{"_index":1228,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["50.\\n",{"_index":1229,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["500",{"_index":386,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"c/examples/taxi-fee-calculator.html":{}}}],["500&#x2026",{"_index":676,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["500&#x3002;&#x6240;&#x4ee5",{"_index":680,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["5000",{"_index":4394,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["500公尺仍以500",{"_index":5354,"title":{},"body":{"c/examples/taxi-fee-calculator.html":{}}}],["5040",{"_index":5644,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["51",{"_index":1226,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["512",{"_index":304,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/examples/open-file.html":{}}}],["52",{"_index":1640,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["527",{"_index":278,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["52bit",{"_index":452,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["53",{"_index":1641,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["54",{"_index":1642,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["55",{"_index":1188,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["56",{"_index":1643,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["57",{"_index":1644,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["58",{"_index":1645,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["59",{"_index":1646,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["5–skip",{"_index":791,"title":{},"body":{"c/system-operation.html":{}}}],["6",{"_index":9,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/sum1toN.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["6&#x2013;input",{"_index":893,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["6.0",{"_index":2472,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["6.7",{"_index":3051,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["60",{"_index":377,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["600",{"_index":5857,"title":{},"body":{"java/examples/othello.html":{}}}],["600,高400",{"_index":5858,"title":{},"body":{"java/examples/othello.html":{}}}],["60000",{"_index":4321,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["600000",{"_index":6104,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["61",{"_index":1647,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["6124",{"_index":307,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["62",{"_index":1648,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["63",{"_index":1649,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["63999979",{"_index":5861,"title":{},"body":{"java/examples/othello.html":{}}}],["64",{"_index":297,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#浮點數表示法":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["649",{"_index":405,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["64m",{"_index":5862,"title":{},"body":{"java/examples/othello.html":{}}}],["65",{"_index":1650,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["65,536",{"_index":294,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["66",{"_index":1651,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["67",{"_index":1652,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["68",{"_index":1653,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["69",{"_index":1654,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["698",{"_index":411,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["6–input",{"_index":794,"title":{},"body":{"c/system-operation.html":{}}}],["7",{"_index":10,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["7&#x2013;output",{"_index":896,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["7&#x3002;&#x76ee;&#x524d;&#x7684;&#x96fb;&#x8166;&#x5927;&#x591a;&#x4f7f;&#x7528;&#x4e8c;&#x9032;&#x4f4d;&#x7cfb;&#x7d71;&#xff0c;&#x6211;&#x5011;&#x7a31;&#x4e00;&#x500b;&#x4e8c;&#x9032;&#x4f4d;&#x6578;&#x5b57;&#x70ba;&#x4e00;&#x500b;&#x4f4d;&#x5143",{"_index":491,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["7.2",{"_index":3054,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["70",{"_index":378,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["70&#xff1f",{"_index":631,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["71",{"_index":1655,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["72",{"_index":1696,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["73",{"_index":1697,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["74",{"_index":1698,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["749",{"_index":406,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["75",{"_index":1699,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["76",{"_index":1700,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["77",{"_index":1701,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["78",{"_index":1702,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["79",{"_index":1703,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["799",{"_index":409,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["7–output",{"_index":795,"title":{},"body":{"c/system-operation.html":{}}}],["8",{"_index":11,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["8&#x2013;call",{"_index":898,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["8&#x4f86;&#x50b3;&#x9001;&#x8cc7;&#x6599",{"_index":4401,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["8.27",{"_index":2075,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["8.5",{"_index":2080,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["8.55",{"_index":2441,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["8.6",{"_index":2418,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["8.75",{"_index":2444,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["8.8",{"_index":2422,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["8.95",{"_index":2445,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["80",{"_index":1704,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["800",{"_index":4473,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["800000",{"_index":6105,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["81",{"_index":331,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["82",{"_index":1705,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["829",{"_index":401,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["83",{"_index":1706,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["84",{"_index":1707,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["85",{"_index":1708,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["86",{"_index":1709,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["87",{"_index":1710,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["88",{"_index":1711,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["89",{"_index":1189,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["899",{"_index":408,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["8bit",{"_index":438,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{},"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["8–call",{"_index":796,"title":{},"body":{"c/system-operation.html":{}}}],["9",{"_index":12,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["9&#x2013;return",{"_index":902,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["9&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8dd1;&#x5230;&#x7b2c",{"_index":937,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["9.0",{"_index":3477,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{}}}],["9.1",{"_index":2415,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["9.15",{"_index":2446,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["9.2",{"_index":2423,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["9.2f",{"_index":164,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["9.35",{"_index":2467,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["9.4",{"_index":2420,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["9.84",{"_index":2077,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["9/7",{"_index":2120,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["90",{"_index":1712,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["900",{"_index":4475,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["900&#x3001;b",{"_index":4700,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["900、b",{"_index":4477,"title":{},"body":{"java/thread.html":{}}}],["901",{"_index":3910,"title":{},"body":{"java/jdbc.html":{}}}],["90213001",{"_index":3909,"title":{},"body":{"java/jdbc.html":{}}}],["90213001','b','中文歷年成績單',1,'901','ssyu@ncnu.edu.tw','y','163.22.22.22',20",{"_index":3904,"title":{},"body":{"java/jdbc.html":{}}}],["91",{"_index":1713,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["92",{"_index":1714,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["9223372036854775807",{"_index":3427,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["9223372036854775808",{"_index":3426,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["93",{"_index":1715,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["94",{"_index":1716,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["95",{"_index":1717,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["96",{"_index":1718,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["97",{"_index":1022,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["98",{"_index":809,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["98&#xff0c;program",{"_index":945,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["98，program",{"_index":815,"title":{},"body":{"c/system-operation.html":{}}}],["99",{"_index":379,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["99&#xff0c;&#x6240;&#x4ee5;&#x7b97;&#x51fa;&#x4f86;&#x7684;&#x7d50;&#x679c;&#x82e5;&#x5927;&#x65bc",{"_index":618,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["99&#xff0c;program",{"_index":944,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["999",{"_index":384,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["99，program",{"_index":814,"title":{},"body":{"c/system-operation.html":{}}}],["9d",{"_index":158,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["9–return",{"_index":797,"title":{},"body":{"c/system-operation.html":{}}}],["_courseid",{"_index":2349,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["_deptid2",{"_index":2373,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["_deptid3",{"_index":2375,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["_x123",{"_index":48,"title":{},"body":{"c/c-intro.html":{}}}],["_year,divis",{"_index":2361,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["_year=sql.fromsql(rs.getstr",{"_index":2350,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["a&#x3001;b",{"_index":4677,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["a&#x5df2;&#x53d6;&#x5f97;,&#x5247;&#x76ee;&#x524d;&#x9019;&#x500b;thread&#x6703;&#x7b49;&#x5230;thread",{"_index":4716,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["a&#x91cb;&#x653e;&#x8a72;lock",{"_index":4717,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["a&#xff0c;&#x6240;&#x4ee5;&#x8b8a;&#x6578",{"_index":4693,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["a&#xff0c;d",{"_index":3236,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["a(m",{"_index":3517,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["a,b,c,d",{"_index":5407,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["a.abstractmethod",{"_index":3213,"title":{},"body":{"java/interface.html":{},"java/interface.html#Abstract-Class-and-Method":{}}}],["a.add(b",{"_index":3396,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["a.java",{"_index":2652,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["a.multiply(b",{"_index":3398,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["a.out",{"_index":834,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["a.print",{"_index":3395,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["a1",{"_index":1163,"title":{},"body":{"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{}}}],["a2",{"_index":1164,"title":{},"body":{"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["a3",{"_index":1948,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["a4",{"_index":1946,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["ab",{"_index":5526,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["abc",{"_index":2668,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{}}}],["abc.txt",{"_index":2860,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["abcdef",{"_index":312,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["about(f",{"_index":5549,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["abov",{"_index":1390,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/examples/tower-of-hanoi.html":{}}}],["abs(x",{"_index":808,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{}}}],["abstract",{"_index":1693,"title":{"java/interface.html#Abstract-Class-and-Method":{}},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["abstract&#x3002",{"_index":3323,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["abstract&#x3002;&#x6211;&#x5011;&#x4e0d;&#x53ef;&#x4ee5;&#x76f4;&#x63a5",{"_index":3326,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["abstract&#xff1a;interfac",{"_index":3286,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["abstractexampl",{"_index":3211,"title":{},"body":{"java/interface.html":{},"java/interface.html#Abstract-Class-and-Method":{}}}],["abstractmethod",{"_index":3212,"title":{},"body":{"java/interface.html":{},"java/interface.html#Abstract-Class-and-Method":{}}}],["abstract：interfac",{"_index":3207,"title":{},"body":{"java/interface.html":{}}}],["acayear",{"_index":2265,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["acayear.length",{"_index":2268,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["acayear.substr",{"_index":2267,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["acayear.substring(acayear.length",{"_index":2269,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["access",{"_index":261,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-intro.html#軟體元件":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{}}}],["access.\\n",{"_index":2848,"title":{},"body":{"java/exception.html":{},"java/exception.html#簡介":{}}}],["access.f1",{"_index":2642,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{}}}],["access.f2",{"_index":2644,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{}}}],["access.f3",{"_index":2645,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{}}}],["access.f4",{"_index":2646,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{}}}],["account",{"_index":4269,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["accumul",{"_index":766,"title":{},"body":{"c/system-operation.html":{}}}],["ackerman",{"_index":3516,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["aco",{"_index":5527,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["act",{"_index":5575,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["action",{"_index":4844,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{},"java/examples/tower-of-hanoi.html":{}}}],["actionev",{"_index":1964,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["actionevent.action_perform",{"_index":5082,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["actionlisten",{"_index":1891,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["actionperform",{"_index":1963,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["ad",{"_index":3935,"title":{},"body":{"java/jdbc.html":{}}}],["add",{"_index":90,"title":{},"body":{"c/c-intro.html":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["add(oxboard",{"_index":4873,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["add,zip,pname,dept,grade,sname,studentid,year,period,deptid",{"_index":2387,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["addactionlisten",{"_index":2011,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["addactionlistener(clos",{"_index":4880,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/othello.html":{}}}],["addcolumn",{"_index":4103,"title":{},"body":{"java/jdbc.html":{}}}],["addconstraint",{"_index":4921,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["addconstraint.addconstraint",{"_index":4954,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["addconstraint.addconstraint(d,b",{"_index":5635,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["addconstraint.addconstraint(d,l",{"_index":5633,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["addconstraint.addconstraint(f,button",{"_index":2008,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["addconstraint.addconstraint(f,display",{"_index":5518,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["addconstraint.addconstraint(f,funbutton",{"_index":5520,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["addconstraint.addconstraint(f,keybutton",{"_index":5525,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["addconstraint.addconstraint(f,sp",{"_index":2002,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["addconstraint.java",{"_index":6132,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["addforeignkey",{"_index":4109,"title":{},"body":{"java/jdbc.html":{}}}],["addit",{"_index":3454,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["addmouselisten",{"_index":4895,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["addmousemotionlisten",{"_index":5872,"title":{},"body":{"java/examples/othello.html":{}}}],["addmov",{"_index":5895,"title":{},"body":{"java/examples/othello.html":{}}}],["addmove(best",{"_index":5906,"title":{},"body":{"java/examples/othello.html":{}}}],["addmove(po",{"_index":5918,"title":{},"body":{"java/examples/othello.html":{}}}],["addquerycondit",{"_index":1910,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{}}}],["addreferencebi",{"_index":4116,"title":{},"body":{"java/jdbc.html":{}}}],["address",{"_index":263,"title":{},"body":{"c/system-intro.html":{}}}],["address)&#xff0c;&#x5c31;&#x50cf;&#x6211;&#x5011;&#x7684;&#x9580;&#x724c;&#x865f;&#x78bc;&#x4e00;&#x6a23;&#xff0c;&#x53ef;&#x4f9b",{"_index":466,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["addwindowlisten",{"_index":5759,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["addwindowlistener(clos",{"_index":4882,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/othello.html":{}}}],["addwindowlistener(cw",{"_index":4958,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["ademp",{"_index":5849,"title":{},"body":{"java/examples/othello.html":{}}}],["adjustmentev",{"_index":4846,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["ag",{"_index":4174,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["age,&#x5176;&#x503c;&#x9650;&#x5b9a;&#x65bc;0&#x5230;130&#x4e4b;&#x9593",{"_index":4216,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["age,其值限定於0到130",{"_index":4172,"title":{},"body":{"java/message-passing.html":{}}}],["alin",{"_index":5391,"title":{},"body":{"java/examples/bingo.html":{}}}],["all.length",{"_index":4942,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{}}}],["alphabeta",{"_index":5921,"title":{},"body":{"java/examples/othello.html":{}}}],["alreadi",{"_index":5375,"title":{},"body":{"java/examples/bingo.html":{}}}],["alternatingreaderswritersmonitor",{"_index":4556,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["alu",{"_index":258,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-operation.html":{}}}],["alu(alrithmet",{"_index":779,"title":{},"body":{"c/system-operation.html":{}}}],["alu(arithmet",{"_index":765,"title":{},"body":{"c/system-operation.html":{}}}],["amask",{"_index":3063,"title":{},"body":{"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["amount",{"_index":4480,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["amp",{"_index":3435,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{},"c/examples/find-prime-numbers.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["amp;&amp",{"_index":128,"title":{},"body":{"c/c-intro.html":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{}}}],["amp;data",{"_index":2843,"title":{},"body":{"java/exception.html":{},"java/exception.html#簡介":{},"c/examples/avg.html":{}}}],["amp;i",{"_index":5352,"title":{},"body":{"c/examples/taxi-fee-calculator.html":{}}}],["amp;n",{"_index":5295,"title":{},"body":{"c/examples/fibonacci-number.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{}}}],["amp;siz",{"_index":127,"title":{},"body":{"c/c-intro.html":{}}}],["amp;tl",{"_index":4969,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["amp;vardoubl",{"_index":176,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["amp;varfloat",{"_index":175,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["amp;varint",{"_index":173,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["amp;varlong",{"_index":174,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["amp;x",{"_index":5297,"title":{},"body":{"c/examples/find-max-min.html":{}}}],["amp;year",{"_index":1027,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["an",{"_index":5652,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["ancho",{"_index":6181,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["anchor",{"_index":4926,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["anim",{"_index":2998,"title":{},"body":{"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{}}}],["animal&apos;",{"_index":3126,"title":{},"body":{"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{}}}],["animal'",{"_index":3026,"title":{},"body":{"java/extends.html":{}}}],["animal(0x0011",{"_index":3075,"title":{},"body":{"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["anoth",{"_index":1384,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/examples/othello.html":{}}}],["anotherrun",{"_index":3203,"title":{},"body":{"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{}}}],["anotherrun.period",{"_index":3209,"title":{},"body":{"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{}}}],["ansi(american",{"_index":357,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["answer",{"_index":5666,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["anyon",{"_index":4906,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{}}}],["api",{"_index":2628,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["api&#xff0c;&#x90a3;&#x9ebc;&#x6703;&#x5728;&#x57f7;&#x884c;&#x671f;&#x9593;&#x7522;&#x751f;&#x932f;&#x8aa4;&#x3002",{"_index":2766,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["api&#xff0c;window",{"_index":3535,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["api，window",{"_index":3406,"title":{},"body":{"java/java-vs-c.html":{}}}],["apo",{"_index":2534,"title":{},"body":{"java/easy-print.html#印表範例":{},"java/io.html#範例":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{}}}],["apos;.&apo",{"_index":4414,"title":{},"body":{"java/net.html#SMTP-Client":{},"java/gui.html#鍵盤事件處理範例":{}}}],["apos;/&apo",{"_index":4421,"title":{},"body":{"java/net.html#HTTP-Server":{}}}],["apos;0&apo",{"_index":5284,"title":{},"body":{"java/gui.html#鍵盤事件處理範例":{}}}],["apos;1&apo",{"_index":1359,"title":{},"body":{"java/array.html#陣列範例":{}}}],["apos;2&apo",{"_index":1360,"title":{},"body":{"java/array.html#陣列範例":{}}}],["apos;3&apo",{"_index":1361,"title":{},"body":{"java/array.html#陣列範例":{}}}],["apos;4&apo",{"_index":1362,"title":{},"body":{"java/array.html#陣列範例":{}}}],["apos;9&apo",{"_index":5285,"title":{},"body":{"java/gui.html#鍵盤事件處理範例":{}}}],["apos;\\n&apo",{"_index":192,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{},"java/easy-print.html#圖形與字型公用程式":{},"java/io.html#範例":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{}}}],["apos;\\r&apo",{"_index":3402,"title":{},"body":{"java/io.html#範例":{}}}],["apos;\\t&apo",{"_index":3403,"title":{},"body":{"java/io.html#範例":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{}}}],["apos;a&apo",{"_index":194,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["append",{"_index":3464,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#字串":{}}}],["append(x).append",{"_index":3466,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#字串":{}}}],["append(y).tostr",{"_index":3467,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#字串":{}}}],["applet",{"_index":6123,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["applic",{"_index":2627,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["architectur",{"_index":249,"title":{},"body":{"c/system-intro.html":{}}}],["archiv",{"_index":2620,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["area",{"_index":2095,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["arg",{"_index":1162,"title":{},"body":{"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/file-handler.html":{},"java/examples/read-write-queue.html":{}}}],["argc",{"_index":3419,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["args.length",{"_index":3385,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["argument",{"_index":5339,"title":{},"body":{"c/examples/open-file.html":{},"java/examples/bingo.html":{}}}],["argv",{"_index":1035,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Abstract-Class-and-Method":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{}}}],["argv.length",{"_index":3886,"title":{},"body":{"java/jdbc.html":{},"java/examples/bingo.html":{},"java/examples/river-cross.html":{}}}],["arithmet",{"_index":256,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["around",{"_index":3925,"title":{},"body":{"java/jdbc.html":{},"java/examples/minesweeper.html":{}}}],["arrang",{"_index":5432,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["arrange(row",{"_index":5440,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["array",{"_index":1161,"title":{},"body":{"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/array.html#陣列範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/examples/bingo.html":{},"java/examples/matrix.html":{},"java/examples/reverse-matrix.html":{}}}],["arrayexampl",{"_index":1157,"title":{},"body":{"java/array.html":{},"java/array.html#Java-陣列的特性":{}}}],["arrayexample2",{"_index":1169,"title":{},"body":{"java/array.html":{},"java/array.html#多維陣列":{}}}],["arrayexample3",{"_index":1172,"title":{},"body":{"java/array.html":{},"java/array.html#多維陣列":{}}}],["arrayexample4",{"_index":1176,"title":{},"body":{"java/array.html":{},"java/array.html#陣列索引的檢查":{}}}],["arrayexample4.java",{"_index":1181,"title":{},"body":{"java/array.html":{},"java/array.html#陣列索引的檢查":{}}}],["arrayexample4.main",{"_index":1180,"title":{},"body":{"java/array.html":{},"java/array.html#陣列索引的檢查":{}}}],["arrayexample4.main(arrayexample4.java:5",{"_index":1178,"title":{},"body":{"java/array.html":{},"java/array.html#陣列索引的檢查":{}}}],["arrayindexoutofboundexcept",{"_index":1175,"title":{},"body":{"java/array.html":{},"java/array.html#陣列索引的檢查":{},"java/exception.html":{},"java/exception.html#相關語法":{}}}],["arriv",{"_index":4573,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["asap",{"_index":6168,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["asc",{"_index":2347,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ascii",{"_index":341,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/jdbc.html":{}}}],["ascii(american",{"_index":360,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["asin",{"_index":5528,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["ask",{"_index":5907,"title":{},"body":{"java/examples/othello.html":{}}}],["assign",{"_index":3432,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["assum",{"_index":2130,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["atan",{"_index":5529,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["author",{"_index":98,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["auto",{"_index":59,"title":{},"body":{"c/c-intro.html":{},"java/examples/minesweeper.html":{}}}],["averag",{"_index":3488,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{}}}],["awt",{"_index":1687,"title":{"java/gui.html#AWT":{}},"body":{"java/easy-print.html":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#AWT":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["awt&#xff0c;&#x4e26;&#x5728;&#x6700;&#x5f8c;&#x9762;&#x7d66;&#x4e00;&#x500b",{"_index":5215,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["awt&#xff0c;&#x4ee5;&#x7b26;&#x5408",{"_index":5179,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["a、b",{"_index":4468,"title":{},"body":{"java/thread.html":{}}}],["a已取得,則目前這個thread會等到thread",{"_index":4482,"title":{},"body":{"java/thread.html":{}}}],["a釋放該lock",{"_index":4483,"title":{},"body":{"java/thread.html":{}}}],["a，d",{"_index":3196,"title":{},"body":{"java/interface.html":{}}}],["b",{"_index":288,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/othello.html":{},"java/examples/river-cross.html":{},"java/examples/tower-of-hanoi.html":{}}}],["b&#x3001;c",{"_index":3239,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["b&#x3001;c&#xff0c;&#x8a72;&#x8a9e;&#x8a00;&#x53c8;&#x4f7f;&#x7528",{"_index":3238,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["b.addactionlisten",{"_index":5636,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["b.addactionlistener(cw",{"_index":4959,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["b.class",{"_index":2654,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["b.java",{"_index":2653,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["b.print",{"_index":3397,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["b.setfont(font",{"_index":4956,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["b4",{"_index":1944,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{}}}],["back",{"_index":1241,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/examples/tower-of-hanoi.html":{}}}],["background",{"_index":1904,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["backspac",{"_index":5066,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["bar",{"_index":372,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["base",{"_index":769,"title":{},"body":{"c/system-operation.html":{},"java/extends.html":{}}}],["based&#x3002;&#x6240;&#x8b02",{"_index":3081,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["bat",{"_index":6013,"title":{},"body":{"java/examples/river-cross.html":{}}}],["bat[boatat",{"_index":6027,"title":{},"body":{"java/examples/river-cross.html":{}}}],["bat[othersid",{"_index":6028,"title":{},"body":{"java/examples/river-cross.html":{}}}],["batch",{"_index":4558,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["befor",{"_index":3930,"title":{},"body":{"java/jdbc.html":{}}}],["begin",{"_index":1215,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"c/examples/find-prime-numbers.html":{}}}],["begin.millitm",{"_index":5320,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["begin.tim",{"_index":5319,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["below",{"_index":6185,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["best",{"_index":5934,"title":{},"body":{"java/examples/othello.html":{}}}],["bestmov",{"_index":5935,"title":{},"body":{"java/examples/othello.html":{}}}],["between",{"_index":121,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["big5",{"_index":3947,"title":{},"body":{"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["binari",{"_index":364,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/java-vs-c.html":{}}}],["bingo",{"_index":5361,"title":{},"body":{"java/examples/bingo.html":{}}}],["bingo(s",{"_index":5395,"title":{},"body":{"java/examples/bingo.html":{}}}],["bird",{"_index":3001,"title":{},"body":{"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{}}}],["bird(0x0011",{"_index":3074,"title":{},"body":{"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["bird)a",{"_index":3014,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["bird)a1",{"_index":3022,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["bit",{"_index":50,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{},"c/examples/find-prime-numbers.html":{},"java/examples/minesweeper.html":{}}}],["bit&#xff0c;binari",{"_index":492,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["bit)&#xff0c",{"_index":737,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["bits&#xff0c;&#x53c8;&#x7a31;&#x70ba",{"_index":495,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["bits(c",{"_index":422,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["bitwis",{"_index":3456,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["bit，binari",{"_index":279,"title":{},"body":{"c/system-intro.html":{}}}],["bk",{"_index":291,"title":{},"body":{"c/system-intro.html":{}}}],["bk&#x3002;&#x4ee5;&#x4e8c;&#x9032;&#x4f4d;&#x70ba;&#x4f8b;&#xff0c;&#x4e0d;&#x540c;&#x7684;&#x4f4d;&#x5143;&#x6578;&#x6240;&#x80fd;&#x8868;&#x9054;&#x7684;&#x6578;&#x5b57;&#x5982;&#x4e0b;&#x8868;&#xff1a",{"_index":503,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["black",{"_index":5829,"title":{},"body":{"java/examples/othello.html":{}}}],["black.setlabel",{"_index":5835,"title":{},"body":{"java/examples/othello.html":{}}}],["blaster",{"_index":353,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["block",{"_index":1442,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#初始化的執行順序":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["block&#xff1a",{"_index":1621,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["bmask",{"_index":3066,"title":{},"body":{"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["board",{"_index":4891,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["board[at",{"_index":5382,"title":{},"body":{"java/examples/bingo.html":{}}}],["board[c]=turn",{"_index":5898,"title":{},"body":{"java/examples/othello.html":{}}}],["board[directions[i][j]]==play",{"_index":4909,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{}}}],["board[i",{"_index":4913,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["board[i*(s",{"_index":5430,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["board[i]==ademp",{"_index":5892,"title":{},"body":{"java/examples/othello.html":{}}}],["board[k",{"_index":5438,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["board[lastline+i",{"_index":5428,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["board[lines[i][j",{"_index":5374,"title":{},"body":{"java/examples/bingo.html":{}}}],["board[maxat",{"_index":6068,"title":{},"body":{"java/examples/sudoku.html":{}}}],["board[po",{"_index":5384,"title":{},"body":{"java/examples/bingo.html":{},"java/examples/othello.html":{}}}],["board[pos+directions[i",{"_index":5901,"title":{},"body":{"java/examples/othello.html":{}}}],["board[pos]==ademp",{"_index":5916,"title":{},"body":{"java/examples/othello.html":{}}}],["board[puton",{"_index":5435,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["board[row",{"_index":4904,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{}}}],["board[scan",{"_index":5889,"title":{},"body":{"java/examples/othello.html":{}}}],["board[x",{"_index":5371,"title":{},"body":{"java/examples/bingo.html":{}}}],["boatat",{"_index":6010,"title":{},"body":{"java/examples/river-cross.html":{}}}],["bomb",{"_index":5746,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["bombnumb",{"_index":5763,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["boolean",{"_index":1437,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#初始化的執行順序":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/io.html":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/othello.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["borderlayout",{"_index":4840,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["bottom",{"_index":3038,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["bound",{"_index":5847,"title":{},"body":{"java/examples/othello.html":{}}}],["bound,bound,bound,bound,bound,bound,bound,bound,bound,bound",{"_index":5867,"title":{},"body":{"java/examples/othello.html":{}}}],["bound,empty,empty,ademp,ademp,ademp,ademp,empty,empty,bound",{"_index":5869,"title":{},"body":{"java/examples/othello.html":{}}}],["bound,empty,empty,ademp,black,white,ademp,empty,empty,bound",{"_index":5871,"title":{},"body":{"java/examples/othello.html":{}}}],["bound,empty,empty,ademp,white,black,ademp,empty,empty,bound",{"_index":5870,"title":{},"body":{"java/examples/othello.html":{}}}],["bound,empty,empty,empty,empty,empty,empty,empty,empty,bound",{"_index":5868,"title":{},"body":{"java/examples/othello.html":{}}}],["boundari",{"_index":5761,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["branch",{"_index":6029,"title":{},"body":{"java/examples/river-cross.html":{}}}],["branches.length",{"_index":6034,"title":{},"body":{"java/examples/river-cross.html":{}}}],["branches[i",{"_index":6036,"title":{},"body":{"java/examples/river-cross.html":{}}}],["break",{"_index":1016,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/bingo.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["breakcontinueexampl",{"_index":3461,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{}}}],["bscore",{"_index":2391,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["bsize",{"_index":6015,"title":{},"body":{"java/examples/river-cross.html":{}}}],["bsize.\\nth",{"_index":6047,"title":{},"body":{"java/examples/river-cross.html":{}}}],["bu",{"_index":268,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{}}}],["buf",{"_index":5337,"title":{},"body":{"c/examples/open-file.html":{},"java/examples/engineering-calculator.html":{}}}],["buf.append(data.charat(i",{"_index":5622,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["buf.length",{"_index":5623,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["buffer",{"_index":2037,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["buffer.getgraph",{"_index":2092,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["bufferedoutputstream",{"_index":4332,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["bufferedoutputstream(s.getoutputstream",{"_index":4335,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["bufferedread",{"_index":3350,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/file-handler.html":{}}}],["bufferedwrit",{"_index":3355,"title":{},"body":{"java/io.html":{}}}],["bug",{"_index":3926,"title":{},"body":{"java/jdbc.html":{}}}],["butmap",{"_index":348,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["button",{"_index":1977,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["button(buttons[i]))).addactionlisten",{"_index":5537,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["button))buttons.add(leav",{"_index":2015,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["button))buttons.add(next",{"_index":2012,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["button))buttons.add(printal",{"_index":2014,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["button))buttons.add(printon",{"_index":2013,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["button)buttons.add(previ",{"_index":2010,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["button)d.add",{"_index":5760,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["button)funbuttons.add",{"_index":5522,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["button)keybuttons.add",{"_index":5536,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["buttons.setlayout",{"_index":2006,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["bye",{"_index":4125,"title":{},"body":{"java/jdbc.html":{}}}],["byte",{"_index":51,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"java/io.html":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/guess-sever-client.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/river-cross.html":{}}}],["byte&#x3002;&#x4e0b;&#x5716;&#x662f;&#x4e8c;&#x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x7684;&#x8a08;&#x6578;&#x65b9;&#x5f0f;&#xff1a",{"_index":496,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["byte)&#x3002;&#x56e0;&#x70ba",{"_index":526,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["bytearrayinputstream",{"_index":3342,"title":{},"body":{"java/io.html":{}}}],["bytearrayoutputstream",{"_index":3346,"title":{},"body":{"java/io.html":{}}}],["bytetocharconvert",{"_index":3939,"title":{},"body":{"java/jdbc.html":{}}}],["bytetocharconverter.getconverter(encod",{"_index":3953,"title":{},"body":{"java/jdbc.html":{}}}],["b、c",{"_index":3197,"title":{},"body":{"java/interface.html":{}}}],["c",{"_index":2,"title":{"c/c-intro.html":{},"java/array.html#C-語言陣列回顧":{},"java/java-vs-c.html":{}},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#浮點數表示法":{},"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"c/writing-intro.html":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#陣列索引的檢查":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#初始化的執行順序":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/extends.html":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["c!=scan",{"_index":5897,"title":{},"body":{"java/examples/othello.html":{}}}],["c&#x8a9e;&#x8a00;&#x7684;&#x7d50;&#x69cb",{"_index":1097,"title":{},"body":{"c/writing-intro.html#程式語言":{}}}],["c++&#xff0c;&#x4ee5;&#x4e0a;&#x5169;&#x7a2e;&#x6a5f;&#x5236;&#x90fd;&#x63d0;&#x4f9b;&#xff0c;&#x53ef;&#x7531;&#x8a2d;&#x8a08;&#x8005;&#x81ea;&#x884c;&#x6c7a;&#x5b9a;&#x3002;&#x4f46;&#x662f",{"_index":3151,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["c++&#xff0c;&#x770b;&#x5230",{"_index":3738,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["c+=directions[i",{"_index":5899,"title":{},"body":{"java/examples/othello.html":{}}}],["c,ctrl",{"_index":4988,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["c.add(jsp",{"_index":5145,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["c.anchor",{"_index":4935,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["c.cname",{"_index":2346,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["c.columnname.equalsignorecase(cnam",{"_index":4108,"title":{},"body":{"java/jdbc.html":{}}}],["c.fill",{"_index":4934,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["c.gridheight",{"_index":4933,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["c.gridi",{"_index":4931,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["c.gridwidth",{"_index":4932,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["c.gridx",{"_index":4930,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["c.inset",{"_index":4938,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["c.print",{"_index":3399,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["c.setlayout",{"_index":5130,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["c.weighti",{"_index":4937,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["c.weightx",{"_index":4936,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["c1",{"_index":3028,"title":{},"body":{"java/extends.html":{},"java/extends.html#Override-覆寫":{}}}],["c2",{"_index":3027,"title":{},"body":{"java/extends.html":{},"java/extends.html#Override-覆寫":{}}}],["ca",{"_index":2407,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ca.drawh",{"_index":2450,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ca.drawh(explain",{"_index":2473,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ca.drawh(explain2",{"_index":2475,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ca.drawh(stu.info",{"_index":2483,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["cach",{"_index":2042,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["cachedata",{"_index":4324,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["cachedata(filename,data,system.currenttimemilli",{"_index":4386,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["cachedata)e.nextel",{"_index":4325,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["calc",{"_index":5513,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["calcul",{"_index":3046,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["calendar",{"_index":2451,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["calendar.d",{"_index":2457,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["calendar.getinst",{"_index":2452,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["calendar.month",{"_index":2456,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["calendar.year",{"_index":2454,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["call",{"_index":53,"title":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}},"body":{"c/c-intro.html":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Abstract-Class-and-Method":{},"java/message-passing.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/examples/othello.html":{},"java/examples/river-cross.html":{}}}],["callablestat",{"_index":3873,"title":{},"body":{"java/jdbc.html":{}}}],["calloc",{"_index":5325,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["caltax",{"_index":6100,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["caltax(incom",{"_index":6120,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["can&apos;t",{"_index":2898,"title":{},"body":{"java/exception.html#簡介":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/interface.html#Abstract-Class-and-Method":{}}}],["can't",{"_index":2845,"title":{},"body":{"java/exception.html":{},"java/extends.html":{},"java/interface.html":{}}}],["cancel",{"_index":1972,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["canva",{"_index":1906,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/gui.html":{},"java/gui.html#AWT":{},"java/examples/tower-of-hanoi.html":{}}}],["canvas.getmedia",{"_index":1940,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["canvas.getorient",{"_index":1951,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["canvas.nextpag",{"_index":1926,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["canvas.setresolut",{"_index":1908,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["canvas.update(pg",{"_index":1923,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["card",{"_index":375,"title":{},"body":{"c/system-intro.html":{}}}],["card)&#x3002",{"_index":594,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["cardlayout",{"_index":4841,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["case",{"_index":1015,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{}}}],["cast",{"_index":3010,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["catalog",{"_index":3991,"title":{},"body":{"java/jdbc.html":{}}}],["catalog+catalogseparator+schema+catalogseparator+totalnam",{"_index":4070,"title":{},"body":{"java/jdbc.html":{}}}],["catalog+catalogseparator+totalnam",{"_index":4072,"title":{},"body":{"java/jdbc.html":{}}}],["catalog.trim()+catalogsepar",{"_index":4084,"title":{},"body":{"java/jdbc.html":{}}}],["catalog.trim().length",{"_index":4083,"title":{},"body":{"java/jdbc.html":{}}}],["catalognam",{"_index":4071,"title":{},"body":{"java/jdbc.html":{}}}],["catalogsepar",{"_index":3990,"title":{},"body":{"java/jdbc.html":{}}}],["catalogseparator.length",{"_index":4063,"title":{},"body":{"java/jdbc.html":{}}}],["catch",{"_index":2382,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["catch(someexcept",{"_index":2875,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["catch(superclassofsomeexcept",{"_index":2876,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["caught",{"_index":2862,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["central",{"_index":250,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-operation.html":{}}}],["ch",{"_index":5061,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["ch!=keyevent.char_undefin",{"_index":5074,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["chang",{"_index":4867,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["char",{"_index":142,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"c/examples/open-file.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{}}}],["charact",{"_index":340,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/jdbc.html":{}}}],["chararea",{"_index":2103,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{}}}],["chararea(g",{"_index":2447,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["chararea.fillh(g",{"_index":2440,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["chararea.fillv(g",{"_index":2477,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["chararea.java",{"_index":2094,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["chararrayread",{"_index":3351,"title":{},"body":{"java/io.html":{}}}],["chararraywrit",{"_index":3356,"title":{},"body":{"java/io.html":{}}}],["chars[i",{"_index":2147,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["chart",{"_index":1024,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["chartobyteconvert",{"_index":3941,"title":{},"body":{"java/jdbc.html":{}}}],["chartobyteconverter.getconverter(encod",{"_index":3955,"title":{},"body":{"java/jdbc.html":{}}}],["check",{"_index":2846,"title":{},"body":{"java/exception.html":{},"java/exception.html#簡介":{},"java/jdbc.html":{},"java/examples/bingo.html":{},"java/examples/guess-sever-client.html":{}}}],["check.addcolumn(col",{"_index":4029,"title":{},"body":{"java/jdbc.html":{}}}],["check.addforeignkey(fk",{"_index":4042,"title":{},"body":{"java/jdbc.html":{}}}],["check.addreferenceby(fk",{"_index":4052,"title":{},"body":{"java/jdbc.html":{}}}],["check.primarykey.addelement(findcolumn(check,rs.getstr",{"_index":4032,"title":{},"body":{"java/jdbc.html":{}}}],["check.schemaname,check.tablenam",{"_index":4010,"title":{},"body":{"java/jdbc.html":{}}}],["check.totalnam",{"_index":4012,"title":{},"body":{"java/jdbc.html":{}}}],["checkbox",{"_index":4831,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["checkcopi",{"_index":4994,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["checked[i",{"_index":5651,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["checknum",{"_index":5307,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["checknum%primes[i",{"_index":5312,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["checkwin",{"_index":5754,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["chi",{"_index":2033,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/jdbc.html":{}}}],["chinan",{"_index":106,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/guess-sever-client.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["choic",{"_index":4832,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["choos",{"_index":5372,"title":{},"body":{"java/examples/bingo.html":{}}}],["circl",{"_index":3034,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{}}}],["circle)shapes[i]).area",{"_index":3059,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["class",{"_index":1019,"title":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/interface.html#Abstract-Class-and-Method":{}},"body":{"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#類別與物件的基本概念":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#final-修飾字":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["class&#x3002",{"_index":1513,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{},"java/thread.html#Program-Process-Thread":{}}}],["class&#xff0c",{"_index":2913,"title":{},"body":{"java/exception.html#相關語法":{}}}],["class&#xff0c;&#x53ea;&#x80fd",{"_index":3339,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["class&#xff0c;&#x800c;&#x4e0d;&#x5c6c;&#x65bc",{"_index":3278,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["class&#xff0c;&#x800c;&#x57f7;&#x884c;&#x6642;&#x5247;&#x662f",{"_index":4219,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["class(&#x5b50;&#x985e;&#x5225",{"_index":3083,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["class(&#x7236;&#x985e;&#x5225",{"_index":3085,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["class)/sw",{"_index":4814,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["class.fornam",{"_index":3881,"title":{},"body":{"java/jdbc.html":{}}}],["classa",{"_index":2613,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["classa.java",{"_index":2612,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["classb",{"_index":2614,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["classb.java",{"_index":2615,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["classid",{"_index":2284,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["classid.equ",{"_index":2303,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["classmethod",{"_index":4186,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["classnam",{"_index":3436,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["classname.classmethod",{"_index":1423,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["classname.classnam",{"_index":3447,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["classneedtoloadlibrari",{"_index":1448,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#初始化的執行順序":{}}}],["classpath",{"_index":2616,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["classpath=.;c:\\mylib.zip;c:\\otherlib.jar;n:\\&#x8a08;&#x7db2;&#x4e2d;&#x5fc3;&#x7cfb;&#x7d71;&#x7d44;\\project",{"_index":2730,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["classpath=.;c:\\mylib.zip;c:\\otherlib.jar;n:\\計網中心系統組\\project",{"_index":2622,"title":{},"body":{"java/encapsulation.html":{}}}],["classpath=.;n:\\&#x8a08;&#x7db2;&#x4e2d;&#x5fc3;&#x7cfb;&#x7d71;&#x7d44;\\project",{"_index":2725,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["classpath=.;n:\\計網中心系統組\\project",{"_index":2617,"title":{},"body":{"java/encapsulation.html":{}}}],["cleaner",{"_index":4319,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["cleaner()).start",{"_index":4391,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["clear",{"_index":4364,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/engineering-calculator.html":{}}}],["client",{"_index":2655,"title":{"java/net.html#SMTP-Client":{}},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/guess-sever-client.html":{}}}],["client.clos",{"_index":5684,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["client.getinetaddress().gethostaddress",{"_index":5683,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["client.getinputstream",{"_index":5682,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["client.getoutputstream",{"_index":5681,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["clientsocket",{"_index":5680,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["clipboard",{"_index":5006,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["clipboardown",{"_index":4993,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["clone",{"_index":5701,"title":{},"body":{"java/examples/matrix.html":{}}}],["close",{"_index":4875,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/othello.html":{}}}],["close(fd1",{"_index":5348,"title":{},"body":{"c/examples/open-file.html":{}}}],["close(fd3",{"_index":5349,"title":{},"body":{"c/examples/open-file.html":{}}}],["close\\n",{"_index":4369,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["closewindow",{"_index":4874,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["closewindow(d",{"_index":5630,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{}}}],["closewindow(f",{"_index":2000,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{}}}],["cmd",{"_index":1967,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["cmd.equal",{"_index":1969,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["cname",{"_index":2353,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["co",{"_index":5530,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["code",{"_index":38,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["code\").valu",{"_index":1068,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["code&#x3002;&#x4f7f;&#x7528",{"_index":3547,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["code&#x3002;&#x6240;&#x8b02",{"_index":3521,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["code&#xff0c;&#x518d;&#x7d93;&#x7531",{"_index":3519,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["code&#xff0c;&#x5247;&#x4e0b;&#x9054;&#x5982;&#x4e0b;&#x547d;&#x4ee4;&#xff1a",{"_index":993,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["code&#xff0c;&#x7136;&#x5f8c",{"_index":2800,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["col",{"_index":2107,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{}}}],["col.columndefault",{"_index":4021,"title":{},"body":{"java/jdbc.html":{}}}],["col.columndefault.endswith",{"_index":4025,"title":{},"body":{"java/jdbc.html":{}}}],["col.columndefault.length",{"_index":4024,"title":{},"body":{"java/jdbc.html":{}}}],["col.columndefault.startswith",{"_index":4022,"title":{},"body":{"java/jdbc.html":{}}}],["col.columndefault.substr",{"_index":4023,"title":{},"body":{"java/jdbc.html":{}}}],["col.columnnam",{"_index":4013,"title":{},"body":{"java/jdbc.html":{}}}],["col.columns",{"_index":4017,"title":{},"body":{"java/jdbc.html":{}}}],["col.datatyp",{"_index":4014,"title":{},"body":{"java/jdbc.html":{}}}],["col.decimaldigit",{"_index":4018,"title":{},"body":{"java/jdbc.html":{}}}],["col.isnul",{"_index":4026,"title":{},"body":{"java/jdbc.html":{}}}],["col.radix",{"_index":4019,"title":{},"body":{"java/jdbc.html":{}}}],["col.remark",{"_index":4020,"title":{},"body":{"java/jdbc.html":{}}}],["col.remarks.equ",{"_index":4027,"title":{},"body":{"java/jdbc.html":{}}}],["col.remarks=col.columnnam",{"_index":4028,"title":{},"body":{"java/jdbc.html":{}}}],["col.tablenam",{"_index":4011,"title":{},"body":{"java/jdbc.html":{}}}],["col.typenam",{"_index":4016,"title":{},"body":{"java/jdbc.html":{}}}],["col=n",{"_index":5984,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["collect",{"_index":1399,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["coln",{"_index":5962,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["column",{"_index":4006,"title":{},"body":{"java/jdbc.html":{}}}],["column)columns.elementat(i",{"_index":4107,"title":{},"body":{"java/jdbc.html":{}}}],["column)columns.elementat(i)).print",{"_index":4118,"title":{},"body":{"java/jdbc.html":{}}}],["column)foreign.elementat(i",{"_index":4138,"title":{},"body":{"java/jdbc.html":{}}}],["column)foreign.elementat(i)).print",{"_index":4144,"title":{},"body":{"java/jdbc.html":{}}}],["column)primary.elementat(i",{"_index":4137,"title":{},"body":{"java/jdbc.html":{}}}],["column)primary.elementat(i)).print",{"_index":4142,"title":{},"body":{"java/jdbc.html":{}}}],["column)primarykey.elementat(i)).print",{"_index":4120,"title":{},"body":{"java/jdbc.html":{}}}],["column)t.columns.elementat(i",{"_index":4081,"title":{},"body":{"java/jdbc.html":{}}}],["column)t.columns.elementat(i)).columnname.equals(column",{"_index":4080,"title":{},"body":{"java/jdbc.html":{}}}],["column.java",{"_index":4145,"title":{},"body":{"java/jdbc.html":{}}}],["columndefault",{"_index":4153,"title":{},"body":{"java/jdbc.html":{}}}],["columnnam",{"_index":4075,"title":{},"body":{"java/jdbc.html":{}}}],["columns",{"_index":4149,"title":{},"body":{"java/jdbc.html":{}}}],["columns.addelement(c",{"_index":4104,"title":{},"body":{"java/jdbc.html":{}}}],["columns.s",{"_index":4106,"title":{},"body":{"java/jdbc.html":{}}}],["col左邊的怎麼算都是0",{"_index":5992,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["combin",{"_index":1243,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["combination(data",{"_index":1244,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["command",{"_index":835,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"c/examples/open-file.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["command.equ",{"_index":4885,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["command.length",{"_index":5543,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["comment",{"_index":92,"title":{},"body":{"c/c-intro.html":{},"c/writing-intro.html":{},"java/examples/matrix.html":{}}}],["comments)(&#x7d66;&#x4eba;&#x770b;&#x7684",{"_index":1099,"title":{},"body":{"c/writing-intro.html#程式語言":{}}}],["compareto",{"_index":1934,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["compat",{"_index":3021,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["compil",{"_index":36,"title":{},"body":{"c/c-intro.html":{},"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#final-關鍵字":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#字串":{},"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["compile&#xff0c;&#x4ee5;&#x7522;&#x751f;&#x65b0;&#x7684;&#x57f7;&#x884c;&#x6a94;&#x3002;&#x9664;&#x4e86;&#x9700;&#x8981;&#x91cd;&#x65b0;&#x7de8;&#x8b6f;&#x5916;&#xff0c;&#x65b0;&#x7cfb;&#x7d71;&#x662f;&#x5426;&#x5177;&#x5099;&#x61c9;&#x7528;&#x7a0b;&#x5f0f;&#x6240;&#x9700;&#x7684;&#x7a0b;&#x5f0f;&#x5eab;&#xff0c;includ",{"_index":3524,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["compile&#xff0c;&#x57f7;&#x884c;&#x820a;&#x6a5f;&#x5668;&#x4e0a;&#x5df2;&#x6709;&#x7684",{"_index":3542,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["compiler&#xff0c;&#x6216",{"_index":3551,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["compile，以產生新的執行檔。除了需要重新編譯外，新系統是否具備應用程式所需的程式庫，includ",{"_index":3404,"title":{},"body":{"java/java-vs-c.html":{}}}],["complement",{"_index":376,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{}}}],["complet",{"_index":1900,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["compon",{"_index":4804,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["component&#x3001;layoutmanag",{"_index":5149,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["component&#xff0c;&#x4e5f;&#x5f88;&#x5c11;&#x7528",{"_index":5249,"title":{},"body":{"java/gui.html#AWT":{}}}],["component&#xff0c;&#x5176;&#x5b50;&#x985e;&#x5225;&#x6709",{"_index":5223,"title":{},"body":{"java/gui.html#AWT":{}}}],["component&#xff0c;&#x5247;&#x9019;&#x7a2",{"_index":5153,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["componentev",{"_index":4847,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["component、layoutmanag",{"_index":4803,"title":{},"body":{"java/gui.html":{}}}],["comput",{"_index":247,"title":{},"body":{"c/system-intro.html":{},"java/examples/othello.html":{}}}],["con",{"_index":1895,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["con.clos",{"_index":3920,"title":{},"body":{"java/jdbc.html":{}}}],["con.commit",{"_index":2381,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["con.createstat",{"_index":2285,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["con.getmetadata",{"_index":3995,"title":{},"body":{"java/jdbc.html":{}}}],["con.preparestat",{"_index":3906,"title":{},"body":{"java/jdbc.html":{}}}],["con.setautocommit",{"_index":3889,"title":{},"body":{"java/jdbc.html":{}}}],["cond",{"_index":4135,"title":{},"body":{"java/jdbc.html":{}}}],["condit",{"_index":3459,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{},"java/thread.html":{}}}],["condition)&#x3002",{"_index":4711,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["conduct",{"_index":2377,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["connect",{"_index":1894,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["constrctor",{"_index":4435,"title":{},"body":{"java/thread.html":{},"java/thread.html#如何產生-Thread":{}}}],["construct",{"_index":4271,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["constructo",{"_index":1431,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#Overloading":{}}}],["constructor",{"_index":1254,"title":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#類別與物件的基本概念":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/thread.html":{},"java/examples/matrix.html":{}}}],["constructor&#x3002",{"_index":1605,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["constructor&#x3002;&#x56e0;&#x70ba;&#x985e;&#x5225",{"_index":1611,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["constructor&#x3002;&#x5982;&#x679c;&#x5b50;&#x985e;&#x5225",{"_index":3183,"title":{},"body":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["constructor&#x3002;constructor",{"_index":1561,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["constructor&#xff0c;&#x4f46;&#x70ba;&#x4e86;&#x65b9;&#x4fbf;&#x8d77;&#x898b;&#xff0c;&#x5982;&#x679c",{"_index":1573,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["constructor&#xff0c;&#x5247",{"_index":1576,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["constructor&#xff0c;&#x5247;&#x4f7f;&#x7528;&#x7236;&#x985e;&#x5225;&#x6c92;&#x6709;&#x53c3;&#x6578;&#x7684",{"_index":3185,"title":{},"body":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["constructor&#xff0c;&#x5247;&#x5fc5;&#x9808;&#x5728;&#x5b50;&#x985e;&#x5225;&#x7684",{"_index":3187,"title":{},"body":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["constructor&#xff0c;&#x6210;&#x70ba",{"_index":1617,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["constructor&#xff1a",{"_index":1578,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{},"java/thread.html#如何產生-Thread":{}}}],["constructor。constructor",{"_index":1429,"title":{},"body":{"java/class-and-obj.html":{}}}],["contain",{"_index":3388,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["container&#x3002",{"_index":5155,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["container.add(compon",{"_index":4941,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["containerev",{"_index":4848,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["content",{"_index":4236,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["continu",{"_index":1017,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/guess-sever-client.html":{}}}],["control",{"_index":254,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-operation.html":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/examples/tower-of-hanoi.html":{}}}],["convert",{"_index":3957,"title":{},"body":{"java/jdbc.html":{}}}],["coordin",{"_index":2112,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/examples/tower-of-hanoi.html":{}}}],["coounter+2",{"_index":812,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{}}}],["copi",{"_index":1903,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/examples/matrix.html":{}}}],["copyfil",{"_index":5336,"title":{},"body":{"c/examples/open-file.html":{}}}],["copyfile:\\n",{"_index":5343,"title":{},"body":{"c/examples/open-file.html":{}}}],["copyright",{"_index":4092,"title":{},"body":{"java/jdbc.html":{}}}],["core",{"_index":2850,"title":{},"body":{"java/exception.html":{},"java/exception.html#簡介":{}}}],["correct",{"_index":94,"title":{},"body":{"c/c-intro.html":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Abstract-Class-and-Method":{},"java/jdbc.html":{},"c/examples/open-file.html":{}}}],["correct,w",{"_index":3023,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["cost",{"_index":5351,"title":{},"body":{"c/examples/taxi-fee-calculator.html":{}}}],["count",{"_index":3891,"title":{},"body":{"java/jdbc.html":{},"java/examples/bingo.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["count[i",{"_index":6062,"title":{},"body":{"java/examples/sudoku.html":{}}}],["count[near[i][j",{"_index":6058,"title":{},"body":{"java/examples/sudoku.html":{}}}],["count[near[i][k",{"_index":6065,"title":{},"body":{"java/examples/sudoku.html":{}}}],["counter",{"_index":768,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{}}}],["counter+1",{"_index":792,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{}}}],["counter+1&#x3000",{"_index":895,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["counter+1&#xff0c;&#x5426;&#x5247;&#x628a",{"_index":892,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["counter+1(&#x4e5f;&#x5c31;&#x662f",{"_index":946,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["counter+2",{"_index":793,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{}}}],["cours",{"_index":2338,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["courseid",{"_index":2367,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["courseid,year,class,studentid",{"_index":3894,"title":{},"body":{"java/jdbc.html":{}}}],["courseid=\\&apo",{"_index":2550,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["cpu",{"_index":253,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-intro.html#數字系統":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["cpu(centr",{"_index":773,"title":{},"body":{"c/system-operation.html":{}}}],["cpu(pentium",{"_index":782,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{}}}],["cpu、ram",{"_index":267,"title":{},"body":{"c/system-intro.html":{}}}],["creat",{"_index":1929,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/examples/tower-of-hanoi.html":{}}}],["createcanva",{"_index":1914,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{}}}],["createcanvas(data",{"_index":1907,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["createimage(d.width",{"_index":2090,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["creation",{"_index":3452,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["credit",{"_index":2354,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["critic",{"_index":4465,"title":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["cross",{"_index":4890,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{}}}],["cu",{"_index":255,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{}}}],["curi",{"_index":2109,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["current",{"_index":3195,"title":{},"body":{"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/examples/queue.html":{},"java/examples/river-cross.html":{}}}],["currentaddr",{"_index":2320,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["currentaddr.equ",{"_index":2325,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["currentdata",{"_index":2064,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["currentindex",{"_index":5080,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["currentpag",{"_index":2039,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["currentpo",{"_index":2157,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["currentpoint",{"_index":2171,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["currentpoint,i",{"_index":2174,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["currentpoint=x+(scal",{"_index":2173,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["currentpos=y+f.getheight()+scal",{"_index":2163,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["currenttim",{"_index":4322,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["currentzip",{"_index":2321,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["cursor",{"_index":5851,"title":{},"body":{"java/examples/othello.html":{}}}],["cursor(cursor.default_cursor",{"_index":5853,"title":{},"body":{"java/examples/othello.html":{}}}],["cursor(cursor.hand_cursor",{"_index":5141,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/othello.html":{}}}],["cursor(cursor.wait_cursor",{"_index":5856,"title":{},"body":{"java/examples/othello.html":{}}}],["curx",{"_index":2108,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["curx,curi",{"_index":2141,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["cut",{"_index":5928,"title":{},"body":{"java/examples/othello.html":{}}}],["cw",{"_index":4957,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["cycl",{"_index":1184,"title":{},"body":{"java/array.html":{},"java/array.html#陣列索引的檢查":{}}}],["d",{"_index":126,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"c/examples/fibonacci-number.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/river-cross.html":{}}}],["d%l%f%lf",{"_index":172,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["d&#x4e0d;&#x662f;&#x958f;&#x5e74;\\n",{"_index":1128,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["d&#x662f;&#x958f;&#x5e74;\\n",{"_index":1127,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["d.addwindowlisten",{"_index":5629,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["d.cname",{"_index":2289,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["d.height",{"_index":2091,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["d.pack",{"_index":5637,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{}}}],["d.setlayout",{"_index":5632,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["d.show",{"_index":5638,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{}}}],["data",{"_index":1199,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/avg.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/matrix.html":{},"java/examples/queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["data&#x88e1;&#x627e;&#x51fa;&#x6240;&#x6709;n&#x500b;&#x6578;&#x5b57;&#x7d44;&#x5408",{"_index":1357,"title":{},"body":{"java/array.html#陣列範例":{}}}],["data.addelement(stu",{"_index":2379,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["data.charat(i",{"_index":5612,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["data.length",{"_index":1201,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/queue.html":{},"java/examples/reverse-matrix.html":{}}}],["data.length][data",{"_index":5702,"title":{},"body":{"java/examples/matrix.html":{}}}],["data.length取n",{"_index":1242,"title":{},"body":{"java/array.html":{}}}],["data.s",{"_index":1917,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{}}}],["data0",{"_index":6074,"title":{},"body":{"java/examples/sudoku.html":{}}}],["data1",{"_index":6075,"title":{},"body":{"java/examples/sudoku.html":{}}}],["data10",{"_index":6084,"title":{},"body":{"java/examples/sudoku.html":{}}}],["data2",{"_index":6076,"title":{},"body":{"java/examples/sudoku.html":{}}}],["data3",{"_index":6077,"title":{},"body":{"java/examples/sudoku.html":{}}}],["data4",{"_index":6078,"title":{},"body":{"java/examples/sudoku.html":{}}}],["data5",{"_index":6079,"title":{},"body":{"java/examples/sudoku.html":{}}}],["data6",{"_index":6080,"title":{},"body":{"java/examples/sudoku.html":{}}}],["data7",{"_index":6081,"title":{},"body":{"java/examples/sudoku.html":{}}}],["data8",{"_index":6082,"title":{},"body":{"java/examples/sudoku.html":{}}}],["data9",{"_index":6083,"title":{},"body":{"java/examples/sudoku.html":{}}}],["data[at",{"_index":1237,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["data[got",{"_index":1238,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["data[head",{"_index":4252,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/queue.html":{}}}],["data[i",{"_index":1210,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/jdbc.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["data[i].charat",{"_index":4302,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["data[i][j",{"_index":3382,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{},"java/examples/matrix.html":{}}}],["data[i][k",{"_index":5716,"title":{},"body":{"java/examples/matrix.html":{}}}],["data[j",{"_index":1207,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["data[min",{"_index":1206,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["data[row][col",{"_index":5964,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["data[tail",{"_index":4256,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/queue.html":{}}}],["data[top",{"_index":1259,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/examples/engineering-calculator.html":{},"java/examples/stack.html":{},"java/examples/tower-of-hanoi.html":{}}}],["databas",{"_index":3870,"title":{},"body":{"java/jdbc.html":{}}}],["databasemetadata",{"_index":3878,"title":{},"body":{"java/jdbc.html":{}}}],["dataflavor",{"_index":4995,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["dataflavor.stringflavor",{"_index":4998,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["datainputstream",{"_index":3344,"title":{},"body":{"java/io.html":{}}}],["dataoutputstream",{"_index":3349,"title":{},"body":{"java/io.html":{}}}],["dataperpag",{"_index":2056,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{}}}],["dataperpage(i",{"_index":2071,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["dataperpage(tot",{"_index":2055,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["datatyp",{"_index":4148,"title":{},"body":{"java/jdbc.html":{}}}],["data裡找出所有n",{"_index":1248,"title":{},"body":{"java/array.html":{}}}],["date",{"_index":1881,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["db",{"_index":3884,"title":{},"body":{"java/jdbc.html":{}}}],["dbm",{"_index":3932,"title":{},"body":{"java/jdbc.html":{}}}],["dead",{"_index":5560,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["dead,push",{"_index":5561,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["dead,termin",{"_index":5567,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["debug",{"_index":4341,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["decim",{"_index":365,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/jdbc.html":{}}}],["decimaldigit",{"_index":4150,"title":{},"body":{"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["declar",{"_index":1013,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"java/interface.html":{},"java/interface.html#Abstract-Class-and-Method":{}}}],["decod",{"_index":777,"title":{},"body":{"c/system-operation.html":{}}}],["def",{"_index":2669,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{}}}],["default",{"_index":3072,"title":{},"body":{"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/river-cross.html":{}}}],["defin",{"_index":1388,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"c/examples/open-file.html":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["degre",{"_index":3475,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{},"java/examples/bingo.html":{}}}],["degree*degree*degre",{"_index":5378,"title":{},"body":{"java/examples/bingo.html":{}}}],["delet",{"_index":1430,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["delete,8",{"_index":5065,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["delta",{"_index":5377,"title":{},"body":{"java/examples/bingo.html":{}}}],["depart",{"_index":1223,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/guess-sever-client.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["dept",{"_index":102,"title":{},"body":{"c/c-intro.html":{}}}],["deptid",{"_index":2273,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["deptid.equ",{"_index":2305,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["deptid=\\&apo",{"_index":2551,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["dequeu",{"_index":4250,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/examples/queue.html":{}}}],["deselect",{"_index":4864,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["design",{"_index":1691,"title":{},"body":{"java/easy-print.html":{}}}],["dest",{"_index":3975,"title":{},"body":{"java/jdbc.html":{}}}],["dest[i",{"_index":3977,"title":{},"body":{"java/jdbc.html":{}}}],["destroy",{"_index":1420,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["destructor",{"_index":1367,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#類別與物件的基本概念":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["determin",{"_index":5719,"title":{},"body":{"java/examples/matrix.html":{}}}],["dev",{"_index":847,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["develop",{"_index":818,"title":{"c/system-operation.html#Software-development-process":{}},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["diagram",{"_index":1072,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["diagram.drawsvg(\"flowchart",{"_index":1074,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["dialog",{"_index":4834,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{}}}],["dialog(f",{"_index":5628,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{}}}],["diff",{"_index":5350,"title":{},"body":{"c/examples/taxi-fee-calculator.html":{}}}],["differec",{"_index":2122,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["digit",{"_index":280,"title":{},"body":{"c/system-intro.html":{}}}],["digit)&#x3002;&#x7531;&#x65bc",{"_index":493,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["dimens",{"_index":1985,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["dimension",{"_index":5362,"title":{},"body":{"java/examples/bingo.html":{}}}],["dimension(x.width",{"_index":1988,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["din",{"_index":3364,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["din.read",{"_index":3366,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["dir",{"_index":1386,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["direct",{"_index":1381,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["directions.length",{"_index":4908,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["directions[i",{"_index":5779,"title":{},"body":{"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["directions[k",{"_index":5768,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["disk",{"_index":6131,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["diskdiff",{"_index":5840,"title":{},"body":{"java/examples/othello.html":{}}}],["diskdiff==leg",{"_index":5900,"title":{},"body":{"java/examples/othello.html":{}}}],["dispatch",{"_index":4861,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["display",{"_index":5514,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/river-cross.html":{},"java/examples/tower-of-hanoi.html":{}}}],["display.add(a",{"_index":6149,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["display.add(b",{"_index":6151,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["display.add(c",{"_index":6152,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["display.getcaretposit",{"_index":5539,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["display.gettext",{"_index":5538,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["display.removeal",{"_index":6148,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["display.requestfocu",{"_index":5552,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["display.setcaretposition((see.substr",{"_index":5546,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["display.setcaretposition(rel.length",{"_index":5542,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["display.setlayout",{"_index":6144,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["display.settext",{"_index":5548,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["display.settext(rel",{"_index":5541,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["display.settext(see.substr",{"_index":5544,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["display.valid",{"_index":6153,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["divid",{"_index":5323,"title":{},"body":{"c/examples/find-prime-numbers.html":{},"java/examples/engineering-calculator.html":{}}}],["dividable[checknum",{"_index":5328,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["dividable[multipl",{"_index":5329,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["divis",{"_index":2326,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["division.equ",{"_index":2399,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["divisor",{"_index":5590,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["dms\\n",{"_index":5316,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["document.getelementbyid(\"flowchart",{"_index":1067,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["dog",{"_index":3003,"title":{},"body":{"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["dog)a2",{"_index":3024,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["domain",{"_index":3948,"title":{},"body":{"java/jdbc.html":{}}}],["domain.endswith",{"_index":3950,"title":{},"body":{"java/jdbc.html":{}}}],["don&apos;t",{"_index":2506,"title":{},"body":{"java/easy-print.html#圖形與字型公用程式":{}}}],["don't",{"_index":2099,"title":{},"body":{"java/easy-print.html":{}}}],["done\\n",{"_index":30,"title":{},"body":{"c/c-intro.html":{}}}],["donext",{"_index":1991,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["doprevi",{"_index":1990,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["doprintal",{"_index":1993,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["doprinton",{"_index":1992,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["dotperinch",{"_index":2038,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{}}}],["dotperinch=rel",{"_index":2045,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["doubl",{"_index":140,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/class-and-obj.html":{},"java/class-and-obj.html#final-關鍵字":{},"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"c/examples/avg.html":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/matrix.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["double)&#xff0c",{"_index":202,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["double.tostring(operand_stack.pop",{"_index":5608,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["double.tostring(x",{"_index":2393,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["double.valueof(token).doublevalu",{"_index":3383,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["doublestack",{"_index":5573,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["doublestr",{"_index":2392,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["doublestring(credit",{"_index":2397,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["down",{"_index":2142,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["downcast",{"_index":3009,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["downcasting(&#x5411;&#x4e0b;&#x8f49;&#x578b",{"_index":3096,"title":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}},"body":{}}],["download",{"_index":5958,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["draw",{"_index":2096,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["drawcent",{"_index":2164,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["drawh",{"_index":2146,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["drawh(",{"_index":2145,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["drawlineh",{"_index":2144,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["drawlinev",{"_index":2133,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["drawv",{"_index":2136,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["drawv(",{"_index":2135,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["driven",{"_index":4809,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["driver",{"_index":3927,"title":{},"body":{"java/jdbc.html":{}}}],["drivermanag",{"_index":3871,"title":{},"body":{"java/jdbc.html":{}}}],["drivermanager.getconnect",{"_index":3887,"title":{},"body":{"java/jdbc.html":{}}}],["drop",{"_index":4311,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["dump",{"_index":2851,"title":{},"body":{"java/exception.html":{},"java/exception.html#簡介":{},"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["dvd",{"_index":266,"title":{},"body":{"c/system-intro.html":{}}}],["d不是閏年\\n",{"_index":1029,"title":{},"body":{"c/writing-intro.html":{}}}],["d是閏年\\n",{"_index":1028,"title":{},"body":{"c/writing-intro.html":{}}}],["e",{"_index":162,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/exception.html":{},"java/exception.html#範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["e.class=opened.class",{"_index":2341,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["e.consum",{"_index":5023,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["e.courseid,e.year,e.score,c.cname,c.credit,c.divis",{"_index":2335,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["e.courseid=c.courseid",{"_index":2342,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["e.courseid=opened.courseid",{"_index":2339,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["e.getactioncommand",{"_index":1968,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["e.geti",{"_index":4902,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["e.getid",{"_index":5081,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["e.getkeychar",{"_index":5062,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["e.getkeycod",{"_index":5015,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["e.getx",{"_index":4903,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["e.hasmoreel",{"_index":4323,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["e.ismetadown",{"_index":5782,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["e.printstacktrac",{"_index":3401,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/examples/file-handler.html":{}}}],["e.studentid",{"_index":2343,"title":{},"body":{"java/easy-print.html":{}}}],["e.studentid=\\&apo",{"_index":2545,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["e.year",{"_index":2344,"title":{},"body":{"java/easy-print.html":{}}}],["e.year=\\&apo",{"_index":2546,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["e.year=opened.year",{"_index":2340,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["e1",{"_index":2868,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["e1,e2",{"_index":4178,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["e1.increaseag",{"_index":4182,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["e1.setag",{"_index":4180,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["e2",{"_index":2870,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["e2.increaseag",{"_index":4183,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["e2.setag",{"_index":4181,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["e3",{"_index":2872,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["each",{"_index":5368,"title":{},"body":{"java/examples/bingo.html":{},"java/examples/matrix.html":{},"java/examples/reverse-matrix.html":{}}}],["each=col",{"_index":5993,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["eachn",{"_index":5972,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["ebcdic",{"_index":342,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["ebcdic(extend",{"_index":363,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["edit",{"_index":827,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/examples/tower-of-hanoi.html":{}}}],["edit)sourc",{"_index":822,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["editor",{"_index":820,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["ee",{"_index":429,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["eg",{"_index":4066,"title":{},"body":{"java/jdbc.html":{}}}],["electr",{"_index":434,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["electron",{"_index":435,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["element",{"_index":1217,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/container.html":{},"java/container.html#範例程式":{},"java/examples/engineering-calculator.html":{}}}],["elim",{"_index":6056,"title":{},"body":{"java/examples/sudoku.html":{}}}],["elim[i][j",{"_index":6063,"title":{},"body":{"java/examples/sudoku.html":{}}}],["elim[maxat][i",{"_index":6067,"title":{},"body":{"java/examples/sudoku.html":{}}}],["elim[near[i][j]][data[i",{"_index":6057,"title":{},"body":{"java/examples/sudoku.html":{}}}],["elim[near[i][k]][j",{"_index":6064,"title":{},"body":{"java/examples/sudoku.html":{}}}],["elimin",{"_index":5559,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{}}}],["eliminate(guess",{"_index":5661,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["eliminate,dead,dead",{"_index":5566,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["email",{"_index":4265,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["empti",{"_index":4889,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["emsp",{"_index":5951,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["emsp;&emsp;&emsp",{"_index":5953,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["emsp;&emsp;&emsp;&emsp;&emsp",{"_index":5955,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp",{"_index":5956,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["encapsul",{"_index":2594,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["encapsulationexampl",{"_index":2597,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{}}}],["encod",{"_index":3946,"title":{},"body":{"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["end",{"_index":5309,"title":{},"body":{"c/examples/find-prime-numbers.html":{},"java/examples/engineering-calculator.html":{}}}],["end.millitm",{"_index":5318,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["end.tim",{"_index":5317,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["endid",{"_index":2276,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["endid.equ",{"_index":2302,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["enfoc",{"_index":6167,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["engin",{"_index":436,"title":{},"body":{"c/system-intro.html":{}}}],["engineering&#xff0c;&#x96fb;&#x5b50;&#x96fb;&#x6a5f;&#x5de5;&#x7a0b;&#x5354;&#x6703;&#xff0c;&#x662f;&#x4e00;&#x500b;&#x5168;&#x7403;&#x6700;&#x5927;&#x7684;&#x5b78;&#x8853;&#x7d44;&#x7e54",{"_index":743,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["enought",{"_index":5326,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["enqueu",{"_index":4255,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/examples/queue.html":{}}}],["ensur",{"_index":6154,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["enter",{"_index":6139,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["entryd",{"_index":2368,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["entrydate=integer.parseint(ncnumisc.getenteryear(info",{"_index":2365,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["enu",{"_index":1682,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["enu.hasmoreel",{"_index":1684,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["enum",{"_index":3378,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["enumer",{"_index":1639,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["environment(id",{"_index":850,"title":{},"body":{"c/system-operation.html":{}}}],["environment(ide&#xff0c;&#x6574;&#x5408;&#x958b;&#x767c;&#x74b0;&#x5883;)&#x3002",{"_index":1010,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["environment.addr",{"_index":2481,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["environment.getdomain",{"_index":3949,"title":{},"body":{"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["environment.gettitle()+ncnumisc.chinesedigit(integer.parseint(year",{"_index":2408,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["environment.gettitle().equ",{"_index":2474,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["eofexcept",{"_index":3367,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["epp",{"_index":2866,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/othello.html":{},"java/examples/read-write-queue.html":{}}}],["eppp",{"_index":5071,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["equal",{"_index":2376,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{},"c/examples/find-prime-numbers.html":{},"java/examples/othello.html":{}}}],["error",{"_index":96,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/class-and-obj.html":{},"java/class-and-obj.html#final-關鍵字":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/interface.html":{},"java/interface.html#Abstract-Class-and-Method":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{}}}],["error&#x3002",{"_index":3315,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["error&#xff0c;&#x4e26;&#x4e2d;&#x65b7;&#x57f7;&#x884c;&#x7dd2;&#x7684;&#x57f7;&#x884c;&#x3002",{"_index":2991,"title":{},"body":{"java/exception.html#相關語法":{}}}],["error,&#x4e0d;&#x5f97;&#x7e2e;&#x5c0f;&#x5b58;&#x53d6;&#x7bc4;&#x570d",{"_index":3137,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["errorcal",{"_index":4184,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["errordialog",{"_index":4886,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/othello.html":{}}}],["errordialog(fg,sql.fromsql",{"_index":2383,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["errordialog(par",{"_index":4910,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["errordialog(top",{"_index":5911,"title":{},"body":{"java/examples/othello.html":{}}}],["eval",{"_index":5568,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["eval(display.gettext",{"_index":5540,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["evalu",{"_index":5688,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["event",{"_index":4807,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#AWT":{}}}],["event&#xff0c;&#x4e26;&#x7531;&#x8996;&#x7a97;&#x7cfb;&#x7d71;&#x5c07;&#x8a72",{"_index":5162,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["ex",{"_index":831,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/guess-sever-client.html":{},"java/examples/queue.html":{},"java/examples/tower-of-hanoi.html":{}}}],["ex.printstacktrac",{"_index":2385,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["ex.tostr",{"_index":2384,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ex2",{"_index":4396,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["ex2.printstacktrac",{"_index":4397,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["exampl",{"_index":1234,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/file-handler.html":{}}}],["example.java",{"_index":1369,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["example1",{"_index":2643,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{}}}],["example2",{"_index":2647,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#範例":{}}}],["example3",{"_index":1670,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{}}}],["example4",{"_index":2648,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{}}}],["excel",{"_index":273,"title":{},"body":{"c/system-intro.html":{}}}],["except",{"_index":1037,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#陣列索引的檢查":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/river-cross.html":{},"java/examples/tax-calculate.html":{}}}],["exception)&#xff0c;&#x6307;&#x7684;&#x662f;&#x7a0b;&#x5f0f;&#x767c;&#x751f;&#x4e0d;&#x6b63;&#x5e38;&#x7684;&#x932f;&#x8aa4;&#xff0c;&#x800c;&#x5c0e;&#x81f4;&#x7121;&#x6cd5;&#x7e7c;&#x7e8c;&#x57f7;&#x884c;&#x7684;&#x60c5;&#x5f62;&#x3002",{"_index":2889,"title":{},"body":{"java/exception.html#簡介":{}}}],["exceptionexampl",{"_index":2855,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["exceptoin",{"_index":4488,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["excess",{"_index":441,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["exclus",{"_index":3457,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["execut",{"_index":778,"title":{},"body":{"c/system-operation.html":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["executequeri",{"_index":3874,"title":{},"body":{"java/jdbc.html":{}}}],["executeupd",{"_index":3875,"title":{},"body":{"java/jdbc.html":{}}}],["exenam",{"_index":837,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["exist",{"_index":2841,"title":{},"body":{"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{}}}],["exit",{"_index":4918,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"c/examples/open-file.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["exp",{"_index":5533,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["exp.next_token",{"_index":5579,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["expand",{"_index":6033,"title":{},"body":{"java/examples/river-cross.html":{}}}],["expans",{"_index":6182,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["expect",{"_index":2115,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["explain",{"_index":2259,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["explain2",{"_index":2260,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["exponenti",{"_index":418,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["exponential(&#x6307;&#x6578;)&#xff0c;mmmm",{"_index":739,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["exponential(指數)，mmmm",{"_index":430,"title":{},"body":{"c/system-intro.html":{}}}],["express",{"_index":5569,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["expression(express",{"_index":5570,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["extend",{"_index":1974,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/read-write-queue.html":{},"java/examples/tower-of-hanoi.html":{}}}],["extens",{"_index":4381,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["extern",{"_index":57,"title":{},"body":{"c/c-intro.html":{}}}],["f",{"_index":151,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"c/examples/avg.html":{},"c/examples/find-max-min.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/river-cross.html":{}}}],["f(n",{"_index":3499,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["f.addwindowlisten",{"_index":1999,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{}}}],["f.charwidth(char",{"_index":2160,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["f.charwidth(chars[i",{"_index":2149,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["f.getasc",{"_index":2118,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["f.getheight",{"_index":2129,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["f.pack",{"_index":2019,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{}}}],["f.setfont(font",{"_index":5517,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["f.setlayout",{"_index":1997,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/examples/engineering-calculator.html":{}}}],["f.setmenubar(mb",{"_index":5516,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{}}}],["f.show",{"_index":2020,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{}}}],["f.stringwidth(",{"_index":2165,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["f1",{"_index":2638,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{}}}],["f2",{"_index":2639,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{}}}],["f3",{"_index":2640,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{}}}],["f4",{"_index":2641,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{}}}],["fab",{"_index":1185,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["fab(num",{"_index":3515,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["factor",{"_index":5721,"title":{},"body":{"java/examples/matrix.html":{},"java/examples/reverse-matrix.html":{}}}],["fail",{"_index":2858,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/guess-sever-client.html":{}}}],["fals",{"_index":1438,"title":{},"body":{"java/class-and-obj.html":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/othello.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["false&#x3002",{"_index":1603,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["fault",{"_index":1174,"title":{},"body":{"java/array.html":{},"java/exception.html":{},"java/exception.html#簡介":{}}}],["fault&#x3002",{"_index":1317,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["fault&#x3002;&#x6bd4;&#x8f03;&#x597d;&#x7684;&#x5beb;&#x6cd5;&#x662f;&#xff1a",{"_index":2897,"title":{},"body":{"java/exception.html#簡介":{}}}],["fcntl.h",{"_index":5335,"title":{},"body":{"c/examples/open-file.html":{}}}],["fd",{"_index":5101,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["fd.getselectedfil",{"_index":5106,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["fd.setdialogtype(jfilechooser.open_dialog",{"_index":5102,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["fd.setdialogtype(jfilechooser.save_dialog",{"_index":5114,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["fd.showopendialog(topwindow",{"_index":5104,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["fd.showsavedialog(topwindow",{"_index":5115,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["fd1",{"_index":5341,"title":{},"body":{"c/examples/open-file.html":{}}}],["fd1,fd2,fd3",{"_index":5338,"title":{},"body":{"c/examples/open-file.html":{}}}],["fd2=read(fd1,buf,s",{"_index":5346,"title":{},"body":{"c/examples/open-file.html":{}}}],["fd3=open(copyfile,o_creat|o_wronli",{"_index":5344,"title":{},"body":{"c/examples/open-file.html":{}}}],["feel",{"_index":4491,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{}}}],["feel&#x3002",{"_index":5198,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["fetch",{"_index":776,"title":{},"body":{"c/system-operation.html":{}}}],["fg",{"_index":1897,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["fg.addbutton",{"_index":1911,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["fg.dispos",{"_index":1970,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["fg.newtable(col",{"_index":2264,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["fg.read",{"_index":1912,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["fg.settitl",{"_index":2263,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["field",{"_index":4991,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["field.java",{"_index":4980,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["file",{"_index":39,"title":{},"body":{"c/c-intro.html":{},"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/io.html":{},"java/io.html#範例":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#文字編輯器":{},"c/examples/open-file.html":{},"java/examples/editor.html":{},"java/examples/file-handler.html":{},"java/examples/minesweeper.html":{}}}],["file&#x3002",{"_index":965,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["file(.c",{"_index":825,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["file(.o",{"_index":829,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["file(text",{"_index":823,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["filedialog",{"_index":4835,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["fileinputstream",{"_index":2859,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{},"java/io.html":{}}}],["filenam",{"_index":4380,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{},"c/examples/open-file.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/reverse-matrix.html":{}}}],["filename:\\n",{"_index":5340,"title":{},"body":{"c/examples/open-file.html":{}}}],["filenotfoundexcept",{"_index":2861,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["fileoutputstream",{"_index":3347,"title":{},"body":{"java/io.html":{},"java/examples/guess-sever-client.html":{}}}],["fileread",{"_index":3353,"title":{},"body":{"java/io.html":{}}}],["filereader(arg",{"_index":3391,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["filereader(fil",{"_index":5108,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["files(.h",{"_index":826,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["filetyp",{"_index":4351,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["filewrit",{"_index":3358,"title":{},"body":{"java/io.html":{},"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["filewriter(fil",{"_index":5117,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["fill",{"_index":2061,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["fillh",{"_index":2167,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["fillv",{"_index":2153,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["filo",{"_index":806,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{}}}],["fin",{"_index":5107,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["final",{"_index":1160,"title":{"java/class-and-obj.html#final-關鍵字":{},"java/extends.html#final-修飾字":{}},"body":{"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#final-關鍵字":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/extends.html":{},"java/extends.html#final-修飾字":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/jdbc.html":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/read-write-queue.html":{},"java/examples/river-cross.html":{}}}],["final&#xff1a;interfac",{"_index":3280,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["finalclass",{"_index":3061,"title":{},"body":{"java/extends.html":{},"java/extends.html#final-修飾字":{}}}],["finalmethod",{"_index":3062,"title":{},"body":{"java/extends.html":{},"java/extends.html#final-修飾字":{}}}],["final：interfac",{"_index":3206,"title":{},"body":{"java/interface.html":{}}}],["find",{"_index":1203,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["findcolumn",{"_index":4074,"title":{},"body":{"java/jdbc.html":{}}}],["findcolumn(t",{"_index":4077,"title":{},"body":{"java/jdbc.html":{}}}],["findleg",{"_index":5923,"title":{},"body":{"java/examples/othello.html":{}}}],["findsolut",{"_index":6041,"title":{},"body":{"java/examples/river-cross.html":{}}}],["findsolutions(ms",{"_index":6048,"title":{},"body":{"java/examples/river-cross.html":{}}}],["findtabl",{"_index":4058,"title":{},"body":{"java/jdbc.html":{}}}],["findtable(catalog",{"_index":4078,"title":{},"body":{"java/jdbc.html":{}}}],["findtable(gettotalname(catalog",{"_index":4059,"title":{},"body":{"java/jdbc.html":{}}}],["findtable(tmp1,tmp2,tmp3",{"_index":4044,"title":{},"body":{"java/jdbc.html":{}}}],["findtable(tmp5,tmp6,tmp7",{"_index":4053,"title":{},"body":{"java/jdbc.html":{}}}],["findtable(totalnam",{"_index":4076,"title":{},"body":{"java/jdbc.html":{}}}],["firstpag",{"_index":2084,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["firt",{"_index":801,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{}}}],["fish",{"_index":3005,"title":{},"body":{"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["fix",{"_index":4984,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["fk",{"_index":3993,"title":{},"body":{"java/jdbc.html":{}}}],["fk.foreign.addelement(findcolumn(check,tmp8",{"_index":4047,"title":{},"body":{"java/jdbc.html":{}}}],["fk.foreign.addelement(findcolumn(tmp5,tmp6,tmp7,tmp8",{"_index":4055,"title":{},"body":{"java/jdbc.html":{}}}],["fk.foreignt",{"_index":4045,"title":{},"body":{"java/jdbc.html":{}}}],["fk.primary.addelement(findcolumn(check,tmp4",{"_index":4054,"title":{},"body":{"java/jdbc.html":{}}}],["fk.primary.addelement(findcolumn(tmp1,tmp2,tmp3,tmp4",{"_index":4046,"title":{},"body":{"java/jdbc.html":{}}}],["fk.primaryt",{"_index":4043,"title":{},"body":{"java/jdbc.html":{}}}],["fk.primarytable==t",{"_index":4114,"title":{},"body":{"java/jdbc.html":{}}}],["flag",{"_index":767,"title":{},"body":{"c/system-operation.html":{}}}],["flavor",{"_index":5000,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["flavor.equals(dataflavor.stringflavor",{"_index":5001,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["fli",{"_index":3002,"title":{},"body":{"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{}}}],["flip",{"_index":5778,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["float",{"_index":138,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/container.html":{},"java/container.html#範例程式":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/io.html":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#運算符號範例":{},"c/examples/avg.html":{},"c/examples/find-max-min.html":{}}}],["float(i",{"_index":1667,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["float)v.get(i",{"_index":1668,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["float[])v.toarray",{"_index":1669,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["flow",{"_index":1023,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["flowchart.parse(cod",{"_index":1073,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["flowlayout",{"_index":4842,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["flush",{"_index":1925,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["fn",{"_index":5293,"title":{},"body":{"c/examples/fibonacci-number.html":{}}}],["fn_1",{"_index":3501,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{}}}],["fn_1紀錄在tmp",{"_index":3505,"title":{},"body":{"java/java-vs-c.html":{}}}],["fn_2",{"_index":3502,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{}}}],["fname",{"_index":3387,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["fnf",{"_index":2863,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["focu",{"_index":4852,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["focusev",{"_index":4849,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["follow",{"_index":4896,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["font",{"_index":2116,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["font.bold",{"_index":2485,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["font.plain",{"_index":2426,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["fontheight",{"_index":2111,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["fontmetr",{"_index":2104,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["foo",{"_index":33,"title":{},"body":{"c/c-intro.html":{}}}],["foo裡的i",{"_index":35,"title":{},"body":{"c/c-intro.html":{}}}],["fopen",{"_index":2839,"title":{},"body":{"java/exception.html":{},"java/exception.html#簡介":{}}}],["forc",{"_index":1417,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/examples/othello.html":{}}}],["foreign",{"_index":4033,"title":{},"body":{"java/jdbc.html":{}}}],["foreignkey",{"_index":3992,"title":{},"body":{"java/jdbc.html":{}}}],["foreignkey)foreignkeys.elementat(i",{"_index":4113,"title":{},"body":{"java/jdbc.html":{}}}],["foreignkey)foreignkeys.elementat(i)).print",{"_index":4121,"title":{},"body":{"java/jdbc.html":{}}}],["foreignkey)referenceby.elementat(i)).print",{"_index":4123,"title":{},"body":{"java/jdbc.html":{}}}],["foreignkey.java",{"_index":4124,"title":{},"body":{"java/jdbc.html":{}}}],["foreignkeys.addelement(fk",{"_index":4110,"title":{},"body":{"java/jdbc.html":{}}}],["foreignkeys.removeelementat(i",{"_index":4115,"title":{},"body":{"java/jdbc.html":{}}}],["foreignkeys.s",{"_index":4112,"title":{},"body":{"java/jdbc.html":{}}}],["foreignt",{"_index":4131,"title":{},"body":{"java/jdbc.html":{}}}],["forev",{"_index":4333,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["format",{"_index":824,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["format)&#xff0c;&#x540c;&#x4e00;&#x500b;&#x4f5c;&#x696d;&#x5e73;&#x53f0;&#x7684",{"_index":969,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["found",{"_index":836,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/exception.html":{},"java/exception.html#相關語法":{},"c/examples/find-prime-numbers.html":{},"java/examples/bingo.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["foundat",{"_index":4813,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["four",{"_index":4540,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["fout",{"_index":5116,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["fout.clos",{"_index":5119,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["fout.write(jta.gettext",{"_index":5118,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["frame",{"_index":1976,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["frame(titl",{"_index":1996,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["franz",{"_index":5405,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["free",{"_index":6160,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["fromright",{"_index":2110,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["fromsql",{"_index":3982,"title":{},"body":{"java/jdbc.html":{}}}],["fscanf",{"_index":2842,"title":{},"body":{"java/exception.html":{},"java/exception.html#簡介":{}}}],["ftime(&amp;begin",{"_index":5311,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["ftime(&amp;end",{"_index":5315,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["fuction",{"_index":4267,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["full",{"_index":4064,"title":{},"body":{"java/jdbc.html":{}}}],["fullmask",{"_index":3068,"title":{},"body":{"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["fun",{"_index":1665,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/examples/engineering-calculator.html":{}}}],["funbutton",{"_index":5519,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["funbuttons.setlayout",{"_index":5521,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["function",{"_index":1011,"title":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}},"body":{"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/extends.html":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Abstract-Class-and-Method":{},"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{}}}],["function&#x3002",{"_index":3153,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["function&#xff0c;&#x4f46;&#x57f7;&#x884c",{"_index":4203,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["function(&#x865b;&#x64ec;&#x51fd;&#x6578",{"_index":3138,"title":{"java/extends.html#Virtual-Function-虛擬函數":{}},"body":{}}],["g",{"_index":163,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["g.drawchars(chars,i",{"_index":2140,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["g.drawlin",{"_index":2416,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["g.drawline(i",{"_index":5770,"title":{},"body":{"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["g.drawov",{"_index":4914,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{}}}],["g.drawoval(j",{"_index":5941,"title":{},"body":{"java/examples/othello.html":{}}}],["g.drawrect",{"_index":2411,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["g.drawstr",{"_index":2431,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/examples/othello.html":{}}}],["g.drawstring(",{"_index":2158,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["g.drawstring(environment.gettitl",{"_index":2478,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["g.drawstring(integer.tostring(map[tt",{"_index":5772,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["g.drawstring(s,x",{"_index":2166,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["g.drawstring(titl",{"_index":2428,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["g.filloval((j",{"_index":5775,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["g.filloval(j",{"_index":5940,"title":{},"body":{"java/examples/othello.html":{}}}],["g.fillrect((j",{"_index":5773,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["g.fillrect(x",{"_index":6172,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["g.getfontmetr",{"_index":2114,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["g.setcolor(color.blu",{"_index":5771,"title":{},"body":{"java/examples/minesweeper.html":{},"java/examples/tower-of-hanoi.html":{}}}],["g.setcolor(color.green",{"_index":5774,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["g.setcolor(color.r",{"_index":5769,"title":{},"body":{"java/examples/minesweeper.html":{},"java/examples/tower-of-hanoi.html":{}}}],["g.setfont",{"_index":2424,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["gain",{"_index":4850,"title":{},"body":{"java/gui.html":{}}}],["game",{"_index":5776,"title":{},"body":{"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["gap",{"_index":6184,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["garbag",{"_index":1398,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["gcc",{"_index":43,"title":{},"body":{"c/c-intro.html":{},"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["gcd",{"_index":3497,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"c/examples/least-common-multiple.html":{}}}],["gcd(m",{"_index":3511,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["gcd(n",{"_index":3512,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["gcd(x,i",{"_index":5334,"title":{},"body":{"c/examples/least-common-multiple.html":{}}}],["gener",{"_index":770,"title":{},"body":{"c/system-operation.html":{},"java/exception.html":{},"java/exception.html#相關語法":{}}}],["genlin",{"_index":5366,"title":{},"body":{"java/examples/bingo.html":{}}}],["genmap",{"_index":5365,"title":{},"body":{"java/examples/bingo.html":{}}}],["getag",{"_index":4175,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["getavgscor",{"_index":2402,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["getbyt",{"_index":3896,"title":{},"body":{"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["getcatalogsepar",{"_index":4089,"title":{},"body":{"java/jdbc.html":{}}}],["getcol",{"_index":2127,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["getcolumn",{"_index":4105,"title":{},"body":{"java/jdbc.html":{}}}],["getcontentpan",{"_index":4830,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/examples/othello.html":{}}}],["getcontentpane().add(oxboard",{"_index":4966,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["getcontentpane().setlayout",{"_index":5947,"title":{},"body":{"java/examples/othello.html":{}}}],["getdata",{"_index":1913,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{}}}],["getdataindex",{"_index":2047,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["getdir",{"_index":1404,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["getheight",{"_index":6171,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["getjoincondit",{"_index":4133,"title":{},"body":{"java/jdbc.html":{}}}],["getkey",{"_index":6018,"title":{},"body":{"java/examples/river-cross.html":{}}}],["getmedia",{"_index":2082,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{}}}],["getmedia().equ",{"_index":2072,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["getmessag",{"_index":2881,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["getorient",{"_index":2083,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{}}}],["getorientation().equ",{"_index":2073,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["getpreferreds",{"_index":1986,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["getprintjob",{"_index":1931,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["getprintjob(canva",{"_index":1920,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["getprintjob(pc",{"_index":2025,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["getresolut",{"_index":2046,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["getrow",{"_index":2124,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["getsid",{"_index":6021,"title":{},"body":{"java/examples/river-cross.html":{}}}],["getsiz",{"_index":6169,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["getsolutionnum",{"_index":5431,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["getspe",{"_index":1403,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["getstr",{"_index":3899,"title":{},"body":{"java/jdbc.html":{}}}],["getsubpageindex",{"_index":2049,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["gettabl",{"_index":4090,"title":{},"body":{"java/jdbc.html":{}}}],["getter",{"_index":4489,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["getter(q",{"_index":4498,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["gettotalnam",{"_index":4082,"title":{},"body":{"java/jdbc.html":{}}}],["gettotalname(table.catalogname,table.schemaname,table.tablenam",{"_index":4003,"title":{},"body":{"java/jdbc.html":{}}}],["gettransferdata",{"_index":5002,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["gettransferdataflavor",{"_index":4996,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["getwidth",{"_index":6170,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["getxxx",{"_index":3876,"title":{},"body":{"java/jdbc.html":{}}}],["gif",{"_index":345,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["gif&#x5716;&#x6a94",{"_index":4425,"title":{},"body":{"java/net.html#HTTP-Server":{}}}],["github",{"_index":1694,"title":{},"body":{"java/easy-print.html":{}}}],["global",{"_index":47,"title":{},"body":{"c/c-intro.html":{}}}],["gnu.gleem.linalg",{"_index":5950,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["gnu.gleem.linalg.nonsquarematrixexcept",{"_index":5957,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["got+1",{"_index":1239,"title":{},"body":{"java/array.html":{}}}],["goto",{"_index":1018,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{}}}],["grade",{"_index":2274,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["grade.equ",{"_index":2307,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["graphic",{"_index":1688,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["grid",{"_index":5939,"title":{},"body":{"java/examples/othello.html":{}}}],["grid_height",{"_index":4925,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["grid_i",{"_index":4923,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["grid_width",{"_index":4924,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["grid_x",{"_index":4922,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["gridbagconstraint",{"_index":4929,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["gridbagconstraints.both",{"_index":2003,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["gridbagconstraints.cent",{"_index":2004,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["gridbagconstraints.horizont",{"_index":2009,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["gridbagconstraints.non",{"_index":6141,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["gridbagconstraints.northwest",{"_index":4955,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["gridbagconstraints.west",{"_index":6142,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["gridbaglayout",{"_index":1998,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["gridbaglayout)container.getlayout()).setconstraints(component,c",{"_index":4940,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["gridbaglayout輔助類別，簡化gridbaglayout",{"_index":6133,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["gridlayout",{"_index":2007,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#AWT":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/tower-of-hanoi.html":{}}}],["group",{"_index":3448,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{},"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["guess",{"_index":5658,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["guess.log",{"_index":5675,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["guessclient",{"_index":5642,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["guessclient.java",{"_index":5639,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["guessconnect",{"_index":5677,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["guessconnection(listensocket.accept",{"_index":5676,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["guessnum",{"_index":5686,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["guessserv",{"_index":5671,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["guessserver.java",{"_index":5640,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["gui",{"_index":1899,"title":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/examples/tower-of-hanoi.html":{}}}],["gui.addlabel",{"_index":2270,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["gui.addtextarea",{"_index":2277,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["gui.addtextfield",{"_index":2271,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["gui.gettextfield",{"_index":2282,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["gui.gettoolkit().getprintjob(fg",{"_index":1936,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["gvar",{"_index":3415,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["h",{"_index":3040,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["h1/body/html",{"_index":4374,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["h2",{"_index":3362,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["h2.c",{"_index":81,"title":{},"body":{"c/c-intro.html":{}}}],["halt",{"_index":807,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{}}}],["handl",{"_index":2838,"title":{},"body":{"java/exception.html":{},"java/exception.html#簡介":{},"java/jdbc.html":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["hanoi",{"_index":6125,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["hanoi.class",{"_index":6134,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["hanoi.html",{"_index":6121,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["hanoi.java",{"_index":6122,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["happen",{"_index":6163,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["hashcod",{"_index":5944,"title":{},"body":{"java/examples/othello.html":{}}}],["hashsiz",{"_index":5860,"title":{},"body":{"java/examples/othello.html":{}}}],["hashtabl",{"_index":1636,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/othello.html":{}}}],["hashval",{"_index":5841,"title":{},"body":{"java/examples/othello.html":{}}}],["hashval=(hashv",{"_index":5902,"title":{},"body":{"java/examples/othello.html":{}}}],["hasleg",{"_index":5891,"title":{},"body":{"java/examples/othello.html":{}}}],["haslegal(turn",{"_index":5878,"title":{},"body":{"java/examples/othello.html":{}}}],["haslegal(turn^ston",{"_index":5879,"title":{},"body":{"java/examples/othello.html":{}}}],["hd",{"_index":171,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["head",{"_index":2659,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/queue.html":{}}}],["head.data",{"_index":2662,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{}}}],["head.next",{"_index":2663,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{}}}],["header",{"_index":40,"title":{},"body":{"c/c-intro.html":{},"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["height",{"_index":2106,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/examples/tower-of-hanoi.html":{}}}],["height+f.getheight",{"_index":2172,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["hello",{"_index":132,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["hello.c",{"_index":833,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["hello.class",{"_index":3420,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["hello.java",{"_index":3414,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["helo",{"_index":4294,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["here",{"_index":1389,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["hierarchyev",{"_index":4858,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["higher",{"_index":5583,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["hintcursor",{"_index":5854,"title":{},"body":{"java/examples/othello.html":{}}}],["histori",{"_index":6031,"title":{},"body":{"java/examples/river-cross.html":{}}}],["history.add(display[i]+getsid",{"_index":6038,"title":{},"body":{"java/examples/river-cross.html":{}}}],["history.remove(history.s",{"_index":6040,"title":{},"body":{"java/examples/river-cross.html":{}}}],["hlen",{"_index":2155,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["homework",{"_index":84,"title":{},"body":{"c/c-intro.html":{},"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["horizont",{"_index":2098,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/examples/bingo.html":{}}}],["hostnam",{"_index":5679,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["hotspot",{"_index":3408,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["ht",{"_index":1678,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["ht.element",{"_index":1683,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["ht.get(filenam",{"_index":4384,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["ht.get(whichfil",{"_index":4362,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["ht.put",{"_index":1679,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["ht.put(filenam",{"_index":4385,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["ht.remove(tmp.filenam",{"_index":4328,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["ht.remove(whichfil",{"_index":4363,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["html",{"_index":4354,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/tower-of-hanoi.html":{}}}],["html&#x6587;&#x5b57;&#x6a94",{"_index":4422,"title":{},"body":{"java/net.html#HTTP-Server":{}}}],["htmlbodyh1http/1.0",{"_index":4373,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["http",{"_index":4312,"title":{"java/net.html#HTTP-Server":{}},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["http/1.0",{"_index":4367,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["httpcon",{"_index":4330,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["httpcon(q)).start",{"_index":4390,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["httpserver",{"_index":4318,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["httpserver.java",{"_index":4313,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["human",{"_index":5865,"title":{},"body":{"java/examples/othello.html":{}}}],["i!=s.length",{"_index":5094,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["i&#x8868;&#x793a;&#x76ee;&#x524d;&#x8981;&#x627e;f(i",{"_index":3851,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["i)+command",{"_index":5550,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["i)+command).length",{"_index":5547,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["i)+command+see.substring(i",{"_index":5545,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["i).getbytes().length=j",{"_index":5090,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["i*j",{"_index":3491,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{}}}],["i*siz",{"_index":5386,"title":{},"body":{"java/examples/bingo.html":{}}}],["i*width",{"_index":5758,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["i+=sub",{"_index":2068,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["i,j=limit",{"_index":5084,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["i/o",{"_index":87,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-operation.html":{}}}],["i0",{"_index":4301,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["i=0",{"_index":4297,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["i==j",{"_index":5668,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["i==s.length",{"_index":5095,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["i=data.length",{"_index":5626,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["i=j",{"_index":4061,"title":{},"body":{"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["i=s.length",{"_index":5088,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["i=siz",{"_index":5429,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["iall.length",{"_index":5946,"title":{},"body":{"java/examples/othello.html":{}}}],["ibm",{"_index":362,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["ibuttons.length",{"_index":5535,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["ichecked.length",{"_index":5669,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["id",{"_index":2312,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/read-write-queue.html":{}}}],["idata.length",{"_index":3964,"title":{},"body":{"java/jdbc.html":{},"java/examples/engineering-calculator.html":{}}}],["idirections.length",{"_index":5360,"title":{},"body":{"java/examples/OX-game.html":{}}}],["ids.addel",{"_index":2327,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ids.siz",{"_index":2329,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ieee",{"_index":423,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["ieee(institud",{"_index":433,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["ifdef",{"_index":3405,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["iforeign.s",{"_index":4143,"title":{},"body":{"java/jdbc.html":{}}}],["ilegals.length",{"_index":5924,"title":{},"body":{"java/examples/othello.html":{}}}],["imag",{"_index":2036,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["image/gif",{"_index":4359,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["image/jpg",{"_index":4358,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["imessage.length",{"_index":5948,"title":{},"body":{"java/examples/othello.html":{}}}],["immedi",{"_index":6157,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["implement",{"_index":1252,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/jdbc.html":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/tower-of-hanoi.html":{}}}],["import",{"_index":1030,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["in",{"_index":5008,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["in.clos",{"_index":4376,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/guess-sever-client.html":{}}}],["in.hasnextint",{"_index":1043,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{}}}],["in.nextint",{"_index":1044,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{}}}],["in.read",{"_index":6116,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["in.read(an",{"_index":5660,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["in.read(inputnum",{"_index":5690,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["in.read(studentid",{"_index":5687,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["includ",{"_index":20,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{}}}],["inclus",{"_index":3458,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["incom",{"_index":3936,"title":{},"body":{"java/jdbc.html":{},"java/examples/tax-calculate.html":{}}}],["incorrect",{"_index":3980,"title":{},"body":{"java/jdbc.html":{}}}],["increas",{"_index":1395,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["increaseag",{"_index":4177,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["index",{"_index":0,"title":{"index.html":{},"index.html#Index-Page":{}},"body":{"index.html":{},"c/system-operation.html":{},"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["infinit",{"_index":449,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["info",{"_index":2330,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["inform",{"_index":103,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/guess-sever-client.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["infrom",{"_index":6052,"title":{},"body":{"java/examples/sudoku.html":{}}}],["inherit",{"_index":1363,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#類別與物件的基本概念":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/message-passing.html":{}}}],["inheritance(&#x591a;&#x91cd;&#x7e7c;&#x627f;)&#x3002;java",{"_index":3087,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["inheritance(&#x7e7c;&#x627f",{"_index":4228,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["inheritance(&#x7e7c;&#x627f;)&#xff0c;&#x662f;&#x6307",{"_index":3082,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["inheritance(多重繼承)。java",{"_index":2997,"title":{},"body":{"java/extends.html":{}}}],["inheritanceexampl",{"_index":3016,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{}}}],["init",{"_index":5643,"title":{},"body":{"java/examples/guess-sever-client.html":{},"java/examples/river-cross.html":{},"java/examples/tower-of-hanoi.html":{}}}],["init.expand",{"_index":6045,"title":{},"body":{"java/examples/river-cross.html":{}}}],["initdisk",{"_index":6166,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["initi",{"_index":1385,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#final-關鍵字":{},"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["initsequ",{"_index":1439,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#初始化的執行順序":{}}}],["innerloop",{"_index":3463,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{}}}],["input",{"_index":264,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/io.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/open-file.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/tower-of-hanoi.html":{}}}],["input.addactionlisten",{"_index":6143,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["input.requestfocu",{"_index":6145,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["input.settext",{"_index":6158,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["inputbuf",{"_index":3390,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["inputbuf.equ",{"_index":3393,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["inputbuf=nexttoken(din)).equ",{"_index":3392,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["inputev",{"_index":4853,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["inputmethodev",{"_index":4859,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["inputnum",{"_index":3485,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/examples/guess-sever-client.html":{}}}],["inputstream",{"_index":3341,"title":{},"body":{"java/io.html":{},"java/examples/guess-sever-client.html":{}}}],["inputstreamread",{"_index":3352,"title":{},"body":{"java/io.html":{},"java/examples/tax-calculate.html":{}}}],["inputstreamreader(s.getinputstream",{"_index":4336,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["inputstreamreader(smtps.getinputstream",{"_index":4291,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["inputstreamreader(system.in",{"_index":3494,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/examples/tax-calculate.html":{}}}],["inputtrunc",{"_index":5083,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["insert",{"_index":1212,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/jdbc.html":{},"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["insertionsort",{"_index":1213,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["insets(top,left,bottom,right",{"_index":4939,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["instanceof",{"_index":2089,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#本章觀念整理範例":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{},"java/examples/othello.html":{}}}],["instead",{"_index":4360,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["institut",{"_index":359,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/jdbc.html":{}}}],["instlearn",{"_index":2396,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["instruct",{"_index":772,"title":{},"body":{"c/system-operation.html":{}}}],["int",{"_index":22,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/open-file.html":{},"c/examples/sum1toN.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["int&#xff0c",{"_index":199,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["integ",{"_index":1165,"title":{},"body":{"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/container.html":{},"java/container.html#範例程式":{},"c/examples/find-prime-numbers.html":{},"java/examples/bingo.html":{},"java/examples/tower-of-hanoi.html":{}}}],["integer(i",{"_index":1659,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["integer)v.get(i",{"_index":1666,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["integer.parseint(argv",{"_index":1227,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/examples/bingo.html":{},"java/examples/river-cross.html":{}}}],["integer.parseint(e.getactioncommand",{"_index":6147,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["integer.parseint(sb.tostr",{"_index":5422,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["integer.parseint(token",{"_index":3376,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["integer.tostr",{"_index":4382,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["integer.tostring(i",{"_index":1680,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["integer[])v.toarray",{"_index":1663,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["integr",{"_index":849,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["intel",{"_index":775,"title":{},"body":{"c/system-operation.html":{}}}],["interchang",{"_index":361,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["interfac",{"_index":764,"title":{"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{}},"body":{"c/system-operation.html":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/gui.html":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{}}}],["interface&#xff0c;&#x5b9a;&#x7fa9;&#x65bc",{"_index":4622,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["interface&#xff0c;&#x6216",{"_index":3295,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["interface&#xff0c;&#x800c",{"_index":3256,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["interruptedexcept",{"_index":4329,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/examples/read-write-queue.html":{},"java/examples/tower-of-hanoi.html":{}}}],["introduct",{"_index":83,"title":{},"body":{"c/c-intro.html":{}}}],["intstack",{"_index":5571,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["inv",{"_index":5290,"title":{},"body":{"c/examples/avg.html":{}}}],["invers",{"_index":382,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{},"java/examples/reverse-matrix.html":{}}}],["invocationev",{"_index":4860,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["inv小於5",{"_index":5291,"title":{},"body":{"c/examples/avg.html":{}}}],["io",{"_index":130,"title":{"c/c-intro.html#常用的-IO-函數":{},"java/io.html":{}},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/io.html":{}}}],["ioe",{"_index":6118,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["ioexcept",{"_index":3365,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/tax-calculate.html":{}}}],["iprimary.s",{"_index":4141,"title":{},"body":{"java/jdbc.html":{}}}],["is.length",{"_index":3969,"title":{},"body":{"java/jdbc.html":{}}}],["isdataflavorsupport",{"_index":4999,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["isful",{"_index":4257,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["isleg",{"_index":5881,"title":{},"body":{"java/examples/othello.html":{}}}],["islegal(sid",{"_index":5893,"title":{},"body":{"java/examples/othello.html":{}}}],["islegal(turn",{"_index":5882,"title":{},"body":{"java/examples/othello.html":{}}}],["isnul",{"_index":4152,"title":{},"body":{"java/jdbc.html":{}}}],["isnumer",{"_index":4154,"title":{},"body":{"java/jdbc.html":{}}}],["iso(intern",{"_index":366,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["issolut",{"_index":6019,"title":{},"body":{"java/examples/river-cross.html":{}}}],["isvalid",{"_index":6020,"title":{},"body":{"java/examples/river-cross.html":{}}}],["item",{"_index":4863,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["itemev",{"_index":4862,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["itop",{"_index":6173,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["itself",{"_index":1394,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["ix",{"_index":3380,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["i列,第j",{"_index":3492,"title":{},"body":{"java/java-vs-c.html":{}}}],["i列有siz",{"_index":3493,"title":{},"body":{"java/java-vs-c.html":{}}}],["i表示目前要找f(i",{"_index":3504,"title":{},"body":{"java/java-vs-c.html":{}}}],["j",{"_index":116,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#多維陣列":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{}}}],["j*(size",{"_index":5390,"title":{},"body":{"java/examples/bingo.html":{}}}],["j==i",{"_index":1232,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/examples/guess-sever-client.html":{}}}],["j==s.length",{"_index":5093,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["j=i",{"_index":5733,"title":{},"body":{"java/examples/matrix.html":{},"java/examples/minesweeper.html":{}}}],["japplet",{"_index":4828,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["jar",{"_index":2621,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["jar(java",{"_index":2619,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["jattr",{"_index":1958,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["jattr.setcopies(copi",{"_index":1961,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["jattr.setdialog(jobattributes.dialogtype.non",{"_index":1959,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["jattr.setprinter(print",{"_index":1960,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["java",{"_index":368,"title":{"java/array.html#Java-陣列的特性":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{},"java/java-vs-c.html#Java-語言的寫作風格":{}},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#初始化的執行順序":{},"java/container.html":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/examples/file-handler.html":{},"java/examples/river-cross.html":{},"java/examples/tower-of-hanoi.html":{}}}],["java&#x7684;&#x7bc4;&#x4f8b",{"_index":1130,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["java.applet.applet",{"_index":6138,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["java.awt",{"_index":1888,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["java.awt.awtev",{"_index":4843,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["java.awt.datatransf",{"_index":4989,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["java.awt.ev",{"_index":1889,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["java.io",{"_index":1427,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/tax-calculate.html":{}}}],["java.io.ioexcept",{"_index":4990,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["java.io.serializ",{"_index":4096,"title":{},"body":{"java/jdbc.html":{},"java/examples/reverse-matrix.html":{}}}],["java.lang",{"_index":1425,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{}}}],["java.lang.arrayindexoutofboundsexcept",{"_index":1177,"title":{},"body":{"java/array.html":{},"java/array.html#陣列索引的檢查":{}}}],["java.lang.compon",{"_index":5943,"title":{},"body":{"java/examples/othello.html":{}}}],["java.lang.doubl",{"_index":3439,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["java.lang.error",{"_index":2883,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["java.lang.except",{"_index":5954,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["java.lang.float",{"_index":3438,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["java.lang.integ",{"_index":3440,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["java.lang.object",{"_index":1441,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#初始化的執行順序":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{}}}],["java.lang.runtimeexcept",{"_index":2877,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{},"java/examples/reverse-matrix.html":{}}}],["java.lang.str",{"_index":2632,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{}}}],["java.lang.system.out.println",{"_index":2633,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{}}}],["java.lang.thread",{"_index":4433,"title":{},"body":{"java/thread.html":{},"java/thread.html#如何產生-Thread":{}}}],["java.lang.throw",{"_index":5952,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["java.net",{"_index":4244,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/examples/guess-sever-client.html":{}}}],["java.sql",{"_index":1890,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["java.sql.typ",{"_index":4146,"title":{},"body":{"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["java.util",{"_index":1031,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/file-handler.html":{},"java/examples/othello.html":{},"java/examples/river-cross.html":{}}}],["java.util.random",{"_index":5744,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["java.util.scann",{"_index":3487,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{}}}],["java.util.vector",{"_index":4129,"title":{},"body":{"java/jdbc.html":{},"java/examples/sudoku.html":{}}}],["java.vers",{"_index":1933,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["javac",{"_index":2651,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["javadoc",{"_index":3470,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["javadoc此部份註解要變成html",{"_index":3471,"title":{},"body":{"java/java-vs-c.html":{}}}],["javax.sw",{"_index":4815,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/othello.html":{}}}],["javax.swing.ev",{"_index":5096,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jbutton",{"_index":4817,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["jdbc",{"_index":3869,"title":{"java/jdbc.html":{}},"body":{"java/jdbc.html":{}}}],["jdbc:odbc:ncnu",{"_index":3885,"title":{},"body":{"java/jdbc.html":{}}}],["jdbcbridgetest",{"_index":3880,"title":{},"body":{"java/jdbc.html":{}}}],["jdbcbridgetest.java",{"_index":3879,"title":{},"body":{"java/jdbc.html":{}}}],["jdialog",{"_index":4827,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/examples/othello.html":{}}}],["jdk",{"_index":1634,"title":{},"body":{"java/container.html":{},"java/easy-print.html":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["jdk(java",{"_index":3412,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["jdk1.1",{"_index":1886,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["jdk1.1.4",{"_index":2035,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["jdk1.1.5",{"_index":4095,"title":{},"body":{"java/jdbc.html":{}}}],["jdk1.1.6",{"_index":4128,"title":{},"body":{"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["jdk1.1.7",{"_index":6176,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["jdk1.1.7b",{"_index":6137,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["jdk1.2以後版本使用ctrl",{"_index":4987,"title":{},"body":{"java/gui.html":{}}}],["jfc(java",{"_index":4812,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["jfilechoos",{"_index":5100,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jfilechooser.approve_opt",{"_index":5105,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jframe",{"_index":4826,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/othello.html":{}}}],["jlabel",{"_index":4818,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["jmb",{"_index":5131,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jmb.add(m",{"_index":5137,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jmenu",{"_index":4964,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jmenubar",{"_index":4965,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jmenuitem",{"_index":4968,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["job",{"_index":1930,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["jobattribut",{"_index":1957,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["join",{"_index":4451,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["joinexampl",{"_index":4454,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["joptionpane.information_messag",{"_index":5359,"title":{},"body":{"java/examples/OX-game.html":{}}}],["joptionpane.showmessagedialog",{"_index":5358,"title":{},"body":{"java/examples/OX-game.html":{}}}],["jpeg",{"_index":346,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["jpg",{"_index":4357,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["jpg&#x5716;&#x6a94",{"_index":4424,"title":{},"body":{"java/net.html#HTTP-Server":{}}}],["jpopupmenu",{"_index":4822,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["jscrollpan",{"_index":5142,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jscrollpane(jta",{"_index":5144,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["json.parse(decodeuricomponent(document.getelementbyid(\"flowchart",{"_index":1070,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["jsp",{"_index":5143,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jta",{"_index":5099,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jta.getcaretposit",{"_index":5122,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jta.gettext",{"_index":5120,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jta.setcaretposit",{"_index":5112,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jta.setcaretposition(at",{"_index":5123,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jta.setcursor",{"_index":5140,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jta.setfont(myfont",{"_index":5139,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jta.setselectionend(at",{"_index":5125,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jta.setselectionstart(at",{"_index":5124,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jta.settext(sb.tostr",{"_index":5111,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jtabbedpan",{"_index":4821,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["jtabl",{"_index":4820,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["jtextarea",{"_index":5098,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["jtextfield",{"_index":4825,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["jtree",{"_index":4819,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["jump",{"_index":813,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{}}}],["jvm",{"_index":1182,"title":{},"body":{"java/array.html":{},"java/array.html#陣列索引的檢查":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#初始化的執行順序":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/thread.html":{}}}],["jwindow",{"_index":4829,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["jy",{"_index":3381,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["k",{"_index":289,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/sudoku.html":{}}}],["k+=directions[j",{"_index":5439,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["k=0",{"_index":5713,"title":{},"body":{"java/examples/matrix.html":{}}}],["k==i",{"_index":5645,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["k==j",{"_index":5646,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["k==n",{"_index":5726,"title":{},"body":{"java/examples/matrix.html":{}}}],["k=i",{"_index":5724,"title":{},"body":{"java/examples/matrix.html":{}}}],["k=puton+directions[j",{"_index":5437,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["key",{"_index":1638,"title":{},"body":{"java/container.html":{},"java/jdbc.html":{},"c/examples/input-is-prime-number-or-not.html":{}}}],["keyboard",{"_index":119,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{}}}],["keyboard)&#x3001;&#x5149;&#x5b78;&#x8fa8;&#x8b58;&#x6a5f",{"_index":591,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["keybutton",{"_index":5523,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["keybuttons.setlayout",{"_index":5524,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["keyev",{"_index":4854,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_back_spac",{"_index":5059,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_copi",{"_index":5017,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_cut",{"_index":5019,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_delet",{"_index":5038,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_down",{"_index":5026,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_end",{"_index":5033,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_ent",{"_index":5025,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_find",{"_index":5020,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_hom",{"_index":5032,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_insert",{"_index":5021,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_left",{"_index":5030,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_page_down",{"_index":5036,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_page_up",{"_index":5034,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_past",{"_index":5016,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_right",{"_index":5031,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_tab",{"_index":5024,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_undo",{"_index":5018,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyevent.vk_up",{"_index":5028,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyjump",{"_index":5010,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keylisten",{"_index":4992,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keypress",{"_index":5013,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyreleas",{"_index":5079,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keytyp",{"_index":5060,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["keyword",{"_index":2596,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["kind",{"_index":3011,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["kit)&#x3002;jdk",{"_index":3559,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["kit)。jdk",{"_index":3413,"title":{},"body":{"java/java-vs-c.html":{}}}],["know",{"_index":5376,"title":{},"body":{"java/examples/bingo.html":{}}}],["knowncredit",{"_index":2390,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["l",{"_index":3032,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"c/examples/find-max-min.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{}}}],["l==i",{"_index":5647,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["l==j",{"_index":5648,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["l==k",{"_index":5649,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["l=i",{"_index":5727,"title":{},"body":{"java/examples/matrix.html":{}}}],["l=最大數，s=最小數，x",{"_index":5296,"title":{},"body":{"c/examples/find-max-min.html":{}}}],["label",{"_index":4837,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{},"java/examples/engineering-calculator.html":{},"java/examples/tower-of-hanoi.html":{}}}],["label(messag",{"_index":5631,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["landscap",{"_index":1955,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["lang",{"_index":3007,"title":{},"body":{"java/extends.html":{},"java/extends.html#基本觀念":{}}}],["languag",{"_index":1366,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#類別與物件的基本概念":{},"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["larger",{"_index":1219,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"c/examples/find-prime-numbers.html":{}}}],["last",{"_index":802,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/minesweeper.html":{},"java/examples/reverse-matrix.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["lastlin",{"_index":5427,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["lastpag",{"_index":2085,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["layout",{"_index":6156,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["layoutmanag",{"_index":4805,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#AWT":{}}}],["lcm",{"_index":5333,"title":{},"body":{"c/examples/least-common-multiple.html":{}}}],["ld",{"_index":160,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/examples/input-is-prime-number-or-not.html":{}}}],["ld是質數\\n",{"_index":5332,"title":{},"body":{"c/examples/input-is-prime-number-or-not.html":{}}}],["ld非質數\\n",{"_index":5331,"title":{},"body":{"c/examples/input-is-prime-number-or-not.html":{}}}],["lead",{"_index":3929,"title":{},"body":{"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["leap",{"_index":1033,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["learn",{"_index":2363,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["learning.addel",{"_index":2401,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["leav",{"_index":1982,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["left",{"_index":3444,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/tower-of-hanoi.html":{}}}],["left[col][each",{"_index":5973,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["left[col][each]*factor",{"_index":5981,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["left[nonzero][col",{"_index":5970,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["left[nonzero][each",{"_index":5974,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["left[row][col",{"_index":5963,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["left[row][col]/left[col][col",{"_index":5979,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["left[row][each",{"_index":5980,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["left[row][row",{"_index":5985,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["left_round_bracket",{"_index":5556,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["legal",{"_index":5842,"title":{},"body":{"java/examples/othello.html":{}}}],["legalnumb",{"_index":5091,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["legalnumber(sb.tostr",{"_index":5051,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["legals[i",{"_index":5938,"title":{},"body":{"java/examples/othello.html":{}}}],["len",{"_index":1154,"title":{},"body":{"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/examples/bingo.html":{}}}],["len))/(strlen",{"_index":2170,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["len=f.stringwidth(",{"_index":2168,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["length",{"_index":113,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/matrix.html":{},"java/examples/reverse-matrix.html":{}}}],["length!=x.data.length",{"_index":5714,"title":{},"body":{"java/examples/matrix.html":{}}}],["length\":50,\"text",{"_index":1063,"title":{},"body":{"c/writing-intro.html":{}}}],["length&#xff0c;&#x7528;&#x4ee5;&#x7d00;&#x9304;&#x8a72;&#x9663;&#x5217;&#x7684;&#x9577;&#x5ea6",{"_index":1281,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["length:50,text",{"_index":1144,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["less",{"_index":5302,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["letter",{"_index":1942,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{}}}],["level",{"_index":5922,"title":{},"body":{"java/examples/othello.html":{}}}],["lf",{"_index":169,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["libnam",{"_index":1447,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#初始化的執行順序":{}}}],["librari",{"_index":131,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["limit",{"_index":5009,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["line",{"_index":2113,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"c/examples/open-file.html":{},"java/examples/bingo.html":{},"java/examples/othello.html":{}}}],["line.equ",{"_index":4339,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["line.startswith",{"_index":4342,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["line=in.readlin",{"_index":4338,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["lines[i+size][j",{"_index":5387,"title":{},"body":{"java/examples/bingo.html":{}}}],["lines[i][j",{"_index":5385,"title":{},"body":{"java/examples/bingo.html":{}}}],["link",{"_index":830,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["linker",{"_index":821,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["list",{"_index":2657,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/gui.html":{},"java/gui.html#AWT":{},"c/examples/find-prime-numbers.html":{}}}],["listen",{"_index":3200,"title":{},"body":{"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#AWT":{}}}],["listener&#x3002",{"_index":5164,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["listensocket",{"_index":5674,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["liter",{"_index":5558,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["lld",{"_index":161,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["load",{"_index":784,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["local",{"_index":58,"title":{},"body":{"c/c-intro.html":{},"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#final-關鍵字":{},"java/jdbc.html":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{}}}],["lock",{"_index":4479,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["lock&#x3002;block",{"_index":4750,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["lock&#xff0c;&#x4e26;&#x4e14;&#x7121;&#x6cd5;&#x4f7f;&#x7528;cpu&#x3002",{"_index":4753,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["lock,如果別的thread",{"_index":4481,"title":{},"body":{"java/thread.html":{}}}],["lock。block",{"_index":4508,"title":{},"body":{"java/thread.html":{}}}],["lock，並且無法使用cpu",{"_index":4509,"title":{},"body":{"java/thread.html":{}}}],["log",{"_index":5534,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["logic",{"_index":257,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-operation.html":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["long",{"_index":120,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/array.html#陣列範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"c/examples/input-is-prime-number-or-not.html":{},"java/examples/tax-calculate.html":{}}}],["long.max_valu",{"_index":6106,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["long.valueof(sb.tostring()).longvalu",{"_index":6117,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["look",{"_index":4823,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["look&#x3001;motif&#x3001;machintosh",{"_index":5185,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["look、motif、machintosh",{"_index":4811,"title":{},"body":{"java/gui.html":{}}}],["loop",{"_index":86,"title":{},"body":{"c/c-intro.html":{},"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["lose",{"_index":4851,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["lostownership",{"_index":5005,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["l，將l設成輸入值x",{"_index":5298,"title":{},"body":{"c/examples/find-max-min.html":{}}}],["m",{"_index":439,"title":{},"body":{"c/system-intro.html":{},"java/class-and-obj.html":{},"java/class-and-obj.html#final-關鍵字":{},"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/river-cross.html":{}}}],["m%n",{"_index":3513,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["m,f",{"_index":5996,"title":{},"body":{"java/examples/river-cross.html":{}}}],["m.add",{"_index":4879,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["m.add(black",{"_index":5831,"title":{},"body":{"java/examples/othello.html":{}}}],["m.add(mi",{"_index":5136,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{}}}],["m.add(whit",{"_index":5832,"title":{},"body":{"java/examples/othello.html":{}}}],["m.setfont(myfont",{"_index":5132,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["m.x",{"_index":1453,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#final-關鍵字":{}}}],["machin",{"_index":1183,"title":{"java/java-vs-c.html#Java-Virtual-Machine":{}},"body":{"java/array.html":{},"java/array.html#陣列索引的檢查":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["machine&#xff0c;&#x5247;&#x539f;&#x59cb;&#x7a0b;&#x5f0f;&#x4e0d;&#x7528",{"_index":3541,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["machine&#xff0c;&#x5b83;&#x6240;&#x7528;&#x7684;&#x6307;&#x4ee4;&#x7a31;&#x70ba",{"_index":3546,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["machine(&#x6b64;&#x8655;&#x662f",{"_index":3569,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["machine(&#x865b;&#x64ec;&#x6a5f;&#x5668;)&#xff0c;&#x8b93;&#x7a0b;&#x5f0f;&#x8a9e;&#x8a00;&#x7de8;&#x8b6f;&#x6642;&#x4e0d;&#x8981;&#x7ffb;&#x6210;&#x5be6;&#x9ad4;&#x6a5f;&#x5668;&#x7684;&#x6307;&#x4ee4;&#xff0c;&#x800c;&#x662f;&#x7ffb;&#x6210",{"_index":3538,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["mail",{"_index":4266,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["main",{"_index":24,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/read-write-queue.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{}}}],["main&#xff1a;&#x8acb;&#x78ba;&#x5b9a",{"_index":3580,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["main(str",{"_index":1371,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["maintain",{"_index":6128,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["main裡的i",{"_index":26,"title":{},"body":{"c/c-intro.html":{}}}],["major",{"_index":1148,"title":{},"body":{"java/array.html":{},"java/array.html#C-語言陣列回顧":{}}}],["make",{"_index":1246,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["malmatrix.java",{"_index":5739,"title":{},"body":{"java/examples/matrix.html":{}}}],["malmatrixexcept",{"_index":3372,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{},"java/examples/matrix.html":{}}}],["manag",{"_index":104,"title":{},"body":{"c/c-intro.html":{},"c/system-operation.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/guess-sever-client.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["management(&#x5c08;&#x6848;&#x7ba1;&#x7406",{"_index":1008,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["mani",{"_index":2058,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/jdbc.html":{}}}],["mantissa",{"_index":431,"title":{},"body":{"c/system-intro.html":{}}}],["mantissa(&#x5c3e;&#x6578;)&#xff0c;&#x4ee5;&#x4e0b;&#x7684",{"_index":740,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["map",{"_index":344,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/examples/minesweeper.html":{}}}],["map[tt",{"_index":5755,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["margin\":10,\"font",{"_index":1064,"title":{},"body":{"c/writing-intro.html":{}}}],["margin:10,font",{"_index":1145,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["mark",{"_index":5750,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["mask",{"_index":3065,"title":{},"body":{"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["master",{"_index":5678,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["master.num[answ",{"_index":5692,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["master.outfile.flush",{"_index":5695,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["master.outfile.println",{"_index":5694,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["mat",{"_index":6012,"title":{},"body":{"java/examples/river-cross.html":{}}}],["mat[boatat",{"_index":6025,"title":{},"body":{"java/examples/river-cross.html":{}}}],["mat[othersid",{"_index":6026,"title":{},"body":{"java/examples/river-cross.html":{}}}],["match",{"_index":5664,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["match(guess",{"_index":5670,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["math.abs(op2",{"_index":5593,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["math.acos(op2",{"_index":5594,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["math.asin(op2",{"_index":5595,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["math.atan(op2",{"_index":5596,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["math.cos(op2",{"_index":5597,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["math.exp(op2",{"_index":5600,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["math.h",{"_index":5330,"title":{},"body":{"c/examples/input-is-prime-number-or-not.html":{}}}],["math.log(op2",{"_index":5601,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["math.pow(op1,op2",{"_index":5591,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["math.random",{"_index":1444,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#初始化的執行順序":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/guess-sever-client.html":{}}}],["math.random()*i",{"_index":5766,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["math.random()*len",{"_index":5370,"title":{},"body":{"java/examples/bingo.html":{}}}],["math.random()*x",{"_index":5767,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["math.round(op2",{"_index":5602,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["math.sin(op2",{"_index":5598,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["math.sqrt(op2",{"_index":5592,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["math.tan(op2",{"_index":5599,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["matrix",{"_index":3370,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{},"java/examples/matrix.html":{},"java/examples/reverse-matrix.html":{}}}],["matrix(data",{"_index":3384,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["matrix(data.length,x.data",{"_index":5715,"title":{},"body":{"java/examples/matrix.html":{}}}],["matrix(rel",{"_index":5986,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["matrix(x",{"_index":5703,"title":{},"body":{"java/examples/matrix.html":{}}}],["matrix.java",{"_index":5698,"title":{},"body":{"java/examples/matrix.html":{},"java/examples/reverse-matrix.html":{}}}],["max",{"_index":6060,"title":{},"body":{"java/examples/sudoku.html":{}}}],["max_prior",{"_index":4443,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["maxat",{"_index":6061,"title":{},"body":{"java/examples/sudoku.html":{}}}],["maxlen",{"_index":4486,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/queue.html":{}}}],["maxsiz",{"_index":6049,"title":{},"body":{"java/examples/stack.html":{}}}],["maxweight",{"_index":5380,"title":{},"body":{"java/examples/bingo.html":{}}}],["mb",{"_index":4872,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/river-cross.html":{}}}],["mb(msize",{"_index":6043,"title":{},"body":{"java/examples/river-cross.html":{}}}],["mb.add",{"_index":4881,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["mb.add(m",{"_index":4877,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["mb.setfont(font",{"_index":5515,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["md",{"_index":3994,"title":{},"body":{"java/jdbc.html":{}}}],["md.getcatalogsepar",{"_index":3996,"title":{},"body":{"java/jdbc.html":{}}}],["md.getcolumns(check.catalognam",{"_index":4009,"title":{},"body":{"java/jdbc.html":{}}}],["md.getexportedkeys(check.catalognam",{"_index":4048,"title":{},"body":{"java/jdbc.html":{}}}],["md.getimportedkeys(check.catalognam",{"_index":4034,"title":{},"body":{"java/jdbc.html":{}}}],["md.getprimarykeys(check.catalognam",{"_index":4031,"title":{},"body":{"java/jdbc.html":{}}}],["md.gettables(catalog,schema",{"_index":3997,"title":{},"body":{"java/jdbc.html":{}}}],["media",{"_index":1939,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["media.equalsignorecas",{"_index":1941,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["member",{"_index":1368,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#類別與物件的基本概念":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["member&#x3002",{"_index":1525,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["member&#x3002;java",{"_index":2684,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["member。java",{"_index":2595,"title":{},"body":{"java/encapsulation.html":{}}}],["memori",{"_index":262,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-intro.html#軟體元件":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{}}}],["memory(&#x4e3b;&#x8a18;&#x61b6;&#x9ad4;)&#x3002;&#x6211;&#x5011;&#x53ef;&#x5c07;&#x8a18;&#x61b6;&#x9ad4;&#x8996;&#x70ba;&#x7531;&#x4e00;&#x500b;&#x500b;&#x5c0f;&#x683c;&#x5b50;&#x6240;&#x7d44;&#x6210;&#x7684;&#x9663;&#x5217;&#xff0c;&#x6bcf;&#x500b;&#x683c;&#x5b50;&#x5167;&#x90fd;&#x5132;&#x5b58;&#x8457;&#x4e00;&#x500b;&#x4e8c;&#x9032;&#x4f4d;&#x6578;&#x5b57;&#x4ee5;&#x4ee3;&#x8868;&#x7a0b;&#x5f0f;&#x6307;&#x4ee4;&#x6216;&#x8cc7;&#x6599;&#x3002;&#x6211;&#x5011;&#x7d66;&#x6bcf;&#x4e00;&#x500b;&#x683c;&#x5b50;&#x4e00;&#x500b;&#x7279;&#x6709;&#x7684;&#x7de8;&#x865f;&#xff0c;&#x7a31;&#x70ba;&#x5730;&#x5740",{"_index":465,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["memory.\\n",{"_index":5327,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["menu",{"_index":4871,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["menubar",{"_index":4833,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["menuitem",{"_index":4878,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["messag",{"_index":2994,"title":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{},"java/message-passing.html#Message-Passing-的語法":{}},"body":{"java/extends.html":{},"java/extends.html#基本觀念":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["message.charat(i",{"_index":4949,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["message.length",{"_index":4948,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{}}}],["method",{"_index":1020,"title":{"java/interface.html#Abstract-Class-and-Method":{}},"body":{"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"java/class-and-obj.html":{},"java/class-and-obj.html#類別與物件的基本概念":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/container.html":{},"java/easy-print.html":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/extends.html":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#final-修飾字":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["method&#x3002",{"_index":3160,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["method&#x3002;&#x4f8b;&#x5982;&#xff1a",{"_index":3735,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["method&#x3002;&#x7531;&#x65bc;&#x7236;&#x985e;&#x5225;&#x7684",{"_index":3142,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["method&#xff0c;&#x4e5f;&#x4e0d;&#x662f",{"_index":3133,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["method&#xff0c;&#x5426;&#x5247;&#x5fc5;&#x9808;&#x5ba3;&#x544a;&#x81ea;&#x5df1;&#x70ba",{"_index":3337,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["method&#xff0c;&#x547c;&#x53eb;&#x8a72;&#x65b9;&#x6cd5;&#x53ef;&#x5f37;&#x8feb",{"_index":1552,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["method&#xff0c;&#x56e0;&#x6b64;&#x82e5;&#x518d;&#x52a0;&#x4e0a",{"_index":1590,"title":{},"body":{"java/class-and-obj.html#Overloading":{}}}],["method&#xff0c;&#x5728",{"_index":3289,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["method&#xff1a",{"_index":4743,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["method(&#x5982",{"_index":3121,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["method(&#x7269;&#x4ef6;&#x65b9;&#x6cd5;&#x6210;&#x54e1",{"_index":1482,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["method(overrid",{"_index":3029,"title":{},"body":{"java/extends.html":{}}}],["method(override)&#xff0c;&#x7576;&#x4f7f;&#x7528;&#x7236;&#x985e;&#x5225",{"_index":3145,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["method)&#xff0c;&#x5247;&#x5c31;&#x7b97;&#x5b9a;&#x7fa9;&#x4e86;&#x540c;&#x6a23;&#x7684",{"_index":3132,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["methodm",{"_index":3199,"title":{},"body":{"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{}}}],["methodm&#xff1f",{"_index":3247,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["methodolog",{"_index":3359,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["mi",{"_index":5133,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{}}}],["mi.addactionlisten",{"_index":5135,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{}}}],["mi.setfont(myfont",{"_index":5134,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["micro",{"_index":3411,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["microsoft",{"_index":844,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["mim",{"_index":1205,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["mime",{"_index":4235,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["min",{"_index":1208,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["min_prior",{"_index":4444,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["mine2",{"_index":5745,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["mine2.java",{"_index":5741,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["mini",{"_index":4448,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["minimun",{"_index":1204,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["minu",{"_index":5554,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["miss",{"_index":4069,"title":{},"body":{"java/jdbc.html":{}}}],["mod100mod100(no",{"_index":1056,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["mod4(no",{"_index":1053,"title":{},"body":{"c/writing-intro.html":{}}}],["mod400mod400(no",{"_index":1058,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["mod4=>condit",{"_index":1046,"title":{},"body":{"c/writing-intro.html":{}}}],["mod4=condit",{"_index":1134,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["mode",{"_index":4507,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{}}}],["mode&#x3002",{"_index":4756,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["mode&#xff0c;&#x4e26;&#x8a2d;&#x70ba;&#x7b49;&#x5f85;&#x8a72",{"_index":4746,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["mode==in",{"_index":5077,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["mode==ovr",{"_index":5022,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["mode==read",{"_index":4516,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["mode==writ",{"_index":4517,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["modifi",{"_index":1883,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/othello.html":{}}}],["monitor",{"_index":4527,"title":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}},"body":{"java/thread.html":{}}}],["more",{"_index":91,"title":{},"body":{"c/c-intro.html":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{}}}],["mous",{"_index":4808,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["mouse&#x3001;keyboard",{"_index":5159,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["mouseclick",{"_index":4897,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["mousedrag",{"_index":5914,"title":{},"body":{"java/examples/othello.html":{}}}],["mouseent",{"_index":4898,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["mouseev",{"_index":4855,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["mouseexit",{"_index":4899,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["mouselisten",{"_index":4888,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["mousemotionlisten",{"_index":5838,"title":{},"body":{"java/examples/othello.html":{}}}],["mousemov",{"_index":5915,"title":{},"body":{"java/examples/othello.html":{}}}],["mousepress",{"_index":4901,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["mousereleas",{"_index":4900,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{}}}],["mouse、keyboard",{"_index":4806,"title":{},"body":{"java/gui.html":{}}}],["move",{"_index":6022,"title":{},"body":{"java/examples/river-cross.html":{},"java/examples/tower-of-hanoi.html":{}}}],["move(branches[i",{"_index":6035,"title":{},"body":{"java/examples/river-cross.html":{}}}],["move(n",{"_index":6161,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["move(s",{"_index":6159,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["movemethod",{"_index":2999,"title":{},"body":{"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{}}}],["mpeg",{"_index":355,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["msg",{"_index":1434,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#Overloading":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["msize",{"_index":6014,"title":{},"body":{"java/examples/river-cross.html":{}}}],["msize+bs",{"_index":6017,"title":{},"body":{"java/examples/river-cross.html":{}}}],["multi",{"_index":2053,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["multiinterfac",{"_index":3204,"title":{},"body":{"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{}}}],["multipl",{"_index":2996,"title":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}},"body":{"java/extends.html":{},"java/extends.html#基本觀念":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{},"java/thread.html":{},"c/examples/find-prime-numbers.html":{}}}],["multipli",{"_index":5555,"title":{},"body":{"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{}}}],["my.h",{"_index":41,"title":{},"body":{"c/c-intro.html":{}}}],["mybatch",{"_index":4567,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["myclass",{"_index":2611,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["mydata",{"_index":5004,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["myexcept",{"_index":2854,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["myflavor",{"_index":4997,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["myfont",{"_index":5127,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["myid",{"_index":4455,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["mylib",{"_index":1450,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#初始化的執行順序":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["mylib.package1",{"_index":2624,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["mylib.package2",{"_index":2625,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["mynot",{"_index":2254,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["mynumb",{"_index":4575,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["mypackag",{"_index":2610,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{}}}],["mypackage.b",{"_index":2630,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{}}}],["mysiz",{"_index":4893,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["myvari",{"_index":3473,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["m、f",{"_index":5997,"title":{},"body":{"java/examples/river-cross.html":{}}}],["m個傳教士,b",{"_index":6023,"title":{},"body":{"java/examples/river-cross.html":{}}}],["n",{"_index":117,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/writing-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/easy-print.html":{},"java/io.html":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/sum1toN.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{},"java/examples/matrix.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["n&#x203b;&#x5b78;&#x751f;&#x5b78;&#x671f;&#x5b78;&#x696d;&#x6210;&#x7e3e;&#x6709;&#x4e0b;&#x5217;&#x60c5;&#x5f62;&#x8005;&#xff0c;&#x61c9;&#x4e88;&#x9000;&#x5b78;&#xff1a;\\n&#x4e00;&#x3001;&#x4e00;&#x822c;&#x751f;&#xff1a;&#x5b78;&#x671f;&#x5b78;&#x696d;&#x6210;&#x7e3e;&#x7d2f;&#x8a08;&#x5169;&#x5b78;&#x671f;&#x4e0d;&#x53ca;&#x683c;&#x79d1;&#x76ee;&#x4e4b;&#x5b78;&#x5206;&#x6578;&#xff0c;&#x5747;&#x9054",{"_index":2519,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["n/2",{"_index":3481,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{}}}],["n/2*(n+1",{"_index":3480,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{}}}],["n;k",{"_index":5730,"title":{},"body":{"java/examples/matrix.html":{}}}],["n\\n",{"_index":2484,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["n][n",{"_index":5722,"title":{},"body":{"java/examples/matrix.html":{},"java/examples/reverse-matrix.html":{}}}],["name",{"_index":80,"title":{},"body":{"c/c-intro.html":{},"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["name&#x9996;&#x5b57;&#x5927;&#x5beb",{"_index":3756,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["name&#x9996;&#x5b57;&#x5c0f;&#x5beb",{"_index":3761,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["nan",{"_index":450,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/jdbc.html":{}}}],["nanb",{"_index":5696,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["nanb(inputnum",{"_index":5691,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["nation",{"_index":105,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/guess-sever-client.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["nativ",{"_index":3409,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["nauck在1850",{"_index":5406,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["ncnu.dbo.student.nam",{"_index":4068,"title":{},"body":{"java/jdbc.html":{}}}],["ncnu.gui",{"_index":1887,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["ncnu.gui.speedbar",{"_index":4245,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["ncnu.net",{"_index":4243,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["ncnu.print",{"_index":1880,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{}}}],["ncnu.rul",{"_index":2252,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ncnu.rule.environ",{"_index":3923,"title":{},"body":{"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["ncnu.sql",{"_index":2251,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["ncnumisc.chinesedigit(d.get",{"_index":2453,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ncnumisc.chinesedigit2(integer.parseint(period",{"_index":2409,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ncnumisc.doublestring(stu.bscor",{"_index":2466,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ncnumisc.doublestring(stu.getavgscor",{"_index":2462,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ncnumisc.doublestring(stu.tcredit",{"_index":2464,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ncnumisc.doublestring(stu.tgcredit",{"_index":2465,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ncnumisc.getacayear",{"_index":2266,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["near",{"_index":6055,"title":{},"body":{"java/examples/sudoku.html":{}}}],["neb",{"_index":5752,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["necessari",{"_index":2131,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["need",{"_index":2059,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/jdbc.html":{}}}],["net",{"_index":4230,"title":{"java/net.html":{}},"body":{}}],["netscor",{"_index":2357,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["netscore.equ",{"_index":2359,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["new",{"_index":1041,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["newboard",{"_index":5866,"title":{},"body":{"java/examples/othello.html":{}}}],["newgam",{"_index":4911,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["newspe",{"_index":1401,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["next",{"_index":1979,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/jdbc.html":{},"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["next.seten",{"_index":2018,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["next_token",{"_index":5611,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["nextbatch",{"_index":4560,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["nextnumb",{"_index":4571,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["nextpag",{"_index":2086,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["nexttoken",{"_index":3363,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["nexttoken(din",{"_index":3374,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["nfe",{"_index":5393,"title":{},"body":{"java/examples/bingo.html":{},"java/examples/tax-calculate.html":{}}}],["no400=>oper",{"_index":1051,"title":{},"body":{"c/writing-intro.html":{}}}],["no400mod400(y",{"_index":1059,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["no4mod4(y",{"_index":1055,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["node",{"_index":2658,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{}}}],["non",{"_index":2629,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{},"java/extends.html":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/jdbc.html":{}}}],["nonsquarematrixexcept",{"_index":5720,"title":{},"body":{"java/examples/matrix.html":{},"java/examples/reverse-matrix.html":{}}}],["nonsquarematrixexception.java",{"_index":5740,"title":{},"body":{"java/examples/matrix.html":{}}}],["nonzero",{"_index":5967,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["nonzero==n",{"_index":5971,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["nonzero=col",{"_index":5968,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["nonzeron",{"_index":5969,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["norm_prior",{"_index":4445,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["normal",{"_index":5762,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["normalcursor",{"_index":5852,"title":{},"body":{"java/examples/othello.html":{}}}],["north",{"_index":1383,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["note",{"_index":2278,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["notifi",{"_index":4510,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{}}}],["notifyal",{"_index":4254,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/examples/queue.html":{}}}],["nowhav",{"_index":4258,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["nowserv",{"_index":4574,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["nr",{"_index":4544,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["nr+nw",{"_index":4554,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["nr[nextbatch",{"_index":4566,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["nr[thisbatch",{"_index":4565,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["nr[thisbatch]+nw",{"_index":4569,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["nrtotal",{"_index":4546,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["nrtotal+nw",{"_index":4550,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["nt",{"_index":271,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#軟體元件":{}}}],["null",{"_index":1436,"title":{},"body":{"java/class-and-obj.html":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/find-prime-numbers.html":{},"java/examples/editor.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/tower-of-hanoi.html":{}}}],["null&#x3002;&#x5982;&#x679c;&#x4e0d;&#x6aa2;&#x67e5;&#x50b3;&#x56de;&#x503c;&#xff0c;&#x5247;&#x6703;&#x7522;&#x751f",{"_index":2896,"title":{},"body":{"java/exception.html#簡介":{}}}],["null&#xff1b;&#x5c0d",{"_index":1602,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["num",{"_index":3514,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/examples/bingo.html":{},"java/examples/guess-sever-client.html":{}}}],["num[i",{"_index":5663,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["num[m",{"_index":5650,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["number",{"_index":1396,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/exception.html":{},"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"c/examples/find-prime-numbers.html":{},"c/examples/open-file.html":{},"java/examples/bingo.html":{},"java/examples/tower-of-hanoi.html":{}}}],["number&#xff0c;&#x662f;&#x6d6e;&#x9ede;&#x6578;&#x88e1;&#x7684;&#x4e00;&#x500b;&#x7279;&#x5225;&#x6578;&#x503c;)&#x3002;&#x4f7f;&#x7528",{"_index":2904,"title":{},"body":{"java/exception.html#簡介":{}}}],["numberformatexcept",{"_index":3377,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/bingo.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["numer",{"_index":4167,"title":{},"body":{"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/othello.html":{}}}],["numsol",{"_index":6030,"title":{},"body":{"java/examples/river-cross.html":{}}}],["numsolut",{"_index":5419,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["numvehicl",{"_index":1382,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["nw",{"_index":4545,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["nwtotal",{"_index":4547,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["n※學生學期學業成績有下列情形者，應予退學：\\n",{"_index":2261,"title":{},"body":{"java/easy-print.html":{}}}],["n的費氏級數:\\n",{"_index":5294,"title":{},"body":{"c/examples/fibonacci-number.html":{}}}],["n註b",{"_index":2255,"title":{},"body":{"java/easy-print.html":{}}}],["n註c",{"_index":2256,"title":{},"body":{"java/easy-print.html":{}}}],["n註d",{"_index":2257,"title":{},"body":{"java/easy-print.html":{}}}],["n註e",{"_index":2258,"title":{},"body":{"java/easy-print.html":{}}}],["n，計算第n",{"_index":5292,"title":{},"body":{"c/examples/fibonacci-number.html":{}}}],["o",{"_index":157,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/examples/othello.html":{},"java/examples/stack.html":{}}}],["obj",{"_index":1256,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["object",{"_index":828,"title":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#類別與物件的基本概念":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#初始化的執行順序":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#final-修飾字":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/io.html":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{},"java/message-passing.html#Message-Passing-的語法":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/matrix.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/stack.html":{}}}],["object&#x2019;",{"_index":5260,"title":{},"body":{"java/gui.html#AWT":{}}}],["object&#x3002",{"_index":3279,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{},"java/thread.html#Program-Process-Thread":{}}}],["object&#xff0c;&#x4f46;&#x662f",{"_index":4609,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["object&#xff0c;&#x547c;&#x53eb",{"_index":4747,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["object&#xff0c;&#x9019;&#x7a2e;&#x89c0;&#x5ff5;&#x7a31;&#x70ba",{"_index":3107,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["object(&#x7269;&#x4ef6;)&#xff0c;&#x5176;&#x529f;&#x80fd;&#x548c",{"_index":3626,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["object(to",{"_index":4511,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/queue.html":{}}}],["object)&#x3002",{"_index":3635,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["object[data.length",{"_index":1257,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["object[maxlen",{"_index":4487,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/queue.html":{}}}],["object[maxs",{"_index":6050,"title":{},"body":{"java/examples/stack.html":{}}}],["objectinputstream",{"_index":3343,"title":{},"body":{"java/io.html":{}}}],["objectmethod",{"_index":4185,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["objectoutputstream",{"_index":3348,"title":{},"body":{"java/io.html":{}}}],["object’",{"_index":4866,"title":{},"body":{"java/gui.html":{}}}],["occur",{"_index":4845,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["ocr",{"_index":371,"title":{},"body":{"c/system-intro.html":{}}}],["ocr)&#x3001;&#x689d;&#x78bc;&#x6a5f",{"_index":592,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["ok",{"_index":5634,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["ok\\n",{"_index":4368,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["on",{"_index":1216,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/examples/bingo.html":{}}}],["onc",{"_index":4365,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["oo",{"_index":4169,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["op",{"_index":3449,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{},"java/examples/engineering-calculator.html":{}}}],["op&#x2013",{"_index":3708,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["op1",{"_index":5587,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["op1,op2,tmp",{"_index":5576,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["op2",{"_index":5585,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["open",{"_index":2337,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/gui.html":{},"java/gui.html#文字編輯器":{},"c/examples/open-file.html":{},"java/examples/editor.html":{}}}],["open(filename,o_rdonli",{"_index":5342,"title":{},"body":{"c/examples/open-file.html":{}}}],["opened.senddate,e.netscor",{"_index":2336,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["oper",{"_index":269,"title":{"java/java-vs-c.html#運算符號-Operator":{}},"body":{"c/system-intro.html":{},"c/system-intro.html#軟體元件":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/java-vs-c.html":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#運算符號範例":{},"java/examples/engineering-calculator.html":{}}}],["operand_stack",{"_index":5574,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["operand_stack.pop",{"_index":5586,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["operand_stack.push",{"_index":5606,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["operand_stack.push(double.valueof(token.data).doublevalu",{"_index":5581,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["operand_stack.push(tmp",{"_index":5603,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["operator_stack",{"_index":5572,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["operator_stack.peek",{"_index":5607,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["operator_stack.pop",{"_index":5588,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["operator_stack.push(end",{"_index":5577,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["operator_stack.push(token.typ",{"_index":5604,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["opp",{"_index":5885,"title":{},"body":{"java/examples/othello.html":{}}}],["optic",{"_index":369,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["option",{"_index":1069,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["options\").valu",{"_index":1071,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["order",{"_index":2309,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ori",{"_index":1950,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["ori.equalsignorecas",{"_index":1952,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["orient",{"_index":1365,"title":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#類別與物件的基本概念":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/java-vs-c.html":{},"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["orig",{"_index":3974,"title":{},"body":{"java/jdbc.html":{}}}],["orig.length",{"_index":3976,"title":{},"body":{"java/jdbc.html":{}}}],["orig[i",{"_index":3978,"title":{},"body":{"java/jdbc.html":{}}}],["origin",{"_index":1247,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["othello",{"_index":5826,"title":{},"body":{"java/examples/othello.html":{}}}],["othello.java",{"_index":5825,"title":{},"body":{"java/examples/othello.html":{}}}],["other",{"_index":1435,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#Overloading":{}}}],["othersid",{"_index":6024,"title":{},"body":{"java/examples/river-cross.html":{}}}],["otherwis",{"_index":3500,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["out",{"_index":109,"title":{},"body":{"c/c-intro.html":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/extends.html":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/tower-of-hanoi.html":{}}}],["out&#xff0c;filo)&#x3002;&#x4f8b;&#x5982;&#x4f9d;&#x5e8f",{"_index":913,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["out.clos",{"_index":4377,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/guess-sever-client.html":{}}}],["out.flush",{"_index":4375,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["out.writ",{"_index":4366,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["out.write(data",{"_index":4370,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["out.write(guess",{"_index":5659,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["out.write(rel",{"_index":5693,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["out.write(studentid",{"_index":5657,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["outerloop",{"_index":3462,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{}}}],["outfil",{"_index":5673,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["outofmemoryerror",{"_index":2884,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["output",{"_index":265,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/jdbc.html":{}}}],["outputstream",{"_index":3345,"title":{},"body":{"java/io.html":{},"java/examples/guess-sever-client.html":{}}}],["outputstreamwrit",{"_index":3357,"title":{},"body":{"java/io.html":{}}}],["out，filo",{"_index":803,"title":{},"body":{"c/system-operation.html":{}}}],["over",{"_index":5912,"title":{},"body":{"java/examples/othello.html":{}}}],["overload",{"_index":1387,"title":{"java/class-and-obj.html#Overloading":{}},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{}}}],["overloading&#x3002",{"_index":1586,"title":{},"body":{"java/class-and-obj.html#Overloading":{}}}],["overloading&#x3002;java",{"_index":3741,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["overloading&#xff0c;&#x628a;&#x5b83;&#x5011;&#x5206;&#x5225;&#x7576;&#x6210;&#x4e0d;&#x540c;&#x7684",{"_index":3312,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["overloading(int",{"_index":1432,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#Overloading":{}}}],["overloading。java",{"_index":3468,"title":{},"body":{"java/java-vs-c.html":{}}}],["overrid",{"_index":3025,"title":{},"body":{"java/extends.html":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/interface.html":{},"java/interface.html#Abstract-Class-and-Method":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["override&#x3002",{"_index":3125,"title":{},"body":{"java/extends.html#Override-覆寫":{},"java/extends.html#final-修飾字":{}}}],["override(&#x8986;&#x5beb",{"_index":3119,"title":{"java/extends.html#Override-覆寫":{}},"body":{}}],["overwrit",{"_index":3198,"title":{},"body":{"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["ovr",{"_index":5007,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["ox",{"_index":4869,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["oxboard",{"_index":4870,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["oxboard.newgam",{"_index":4887,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["oxboard.setblackplay",{"_index":5834,"title":{},"body":{"java/examples/othello.html":{}}}],["oxboard.setwhiteplay",{"_index":5836,"title":{},"body":{"java/examples/othello.html":{}}}],["oxmain",{"_index":4868,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/OX-game.html":{}}}],["oxmain.java",{"_index":5355,"title":{},"body":{"java/examples/OX-game.html":{}}}],["p",{"_index":167,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/matrix.html":{},"java/examples/othello.html":{},"java/examples/river-cross.html":{}}}],["p.diskdiff",{"_index":5876,"title":{},"body":{"java/examples/othello.html":{}}}],["p.parent",{"_index":5931,"title":{},"body":{"java/examples/othello.html":{}}}],["p.turn",{"_index":5875,"title":{},"body":{"java/examples/othello.html":{}}}],["p.val",{"_index":5930,"title":{},"body":{"java/examples/othello.html":{}}}],["p1",{"_index":2634,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{}}}],["p1.a",{"_index":2636,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{}}}],["p2",{"_index":2635,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{}}}],["p2.a",{"_index":2637,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{}}}],["pa",{"_index":1938,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pa.setmedia(pageattributes.mediatype.a3",{"_index":1949,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pa.setmedia(pageattributes.mediatype.a4",{"_index":1947,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pa.setmedia(pageattributes.mediatype.jis_b4",{"_index":1945,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pa.setmedia(pageattributes.mediatype.lett",{"_index":1943,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pa.setorientationrequested(pageattributes.orientationrequestedtype.landscap",{"_index":1956,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pa.setorientationrequested(pageattributes.orientationrequestedtype.portrait",{"_index":1954,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pack",{"_index":4883,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["packag",{"_index":1421,"title":{"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{}},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/extends.html":{},"java/extends.html#Override-覆寫":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/reverse-matrix.html":{}}}],["package&#x3002",{"_index":1522,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["package&#xff1a;&#x53ea;&#x6709;&#x548c",{"_index":2688,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["package1",{"_index":2626,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["packageclassmethod",{"_index":2607,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{}}}],["packageobjectmethod",{"_index":2603,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{}}}],["packagevari",{"_index":2599,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{}}}],["page",{"_index":1,"title":{"index.html#Index-Page":{}},"body":{"index.html":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{}}}],["pageattribut",{"_index":1937,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pagenum",{"_index":2057,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{}}}],["pageposit",{"_index":2041,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["pagepositions[currentpage].data",{"_index":2048,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["pagepositions[currentpage].subpag",{"_index":2050,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["pagepositions[i",{"_index":2069,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["pagepositions[i+j",{"_index":2066,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["pagesperdata",{"_index":2062,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{}}}],["pagesperdata(data.elementat(currentdata",{"_index":2065,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["pagesperdata(data.elementat(i",{"_index":2052,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["paint",{"_index":2406,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["paint(g",{"_index":2093,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["paintev",{"_index":4856,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["pair",{"_index":2040,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["pair(currentdata",{"_index":2070,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["pair(currentdata,j",{"_index":2067,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["pair[tot",{"_index":2063,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["panel",{"_index":2005,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#AWT":{},"java/examples/engineering-calculator.html":{},"java/examples/tower-of-hanoi.html":{}}}],["parallelogram",{"_index":3037,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["parallelogram)shapes[i]).area",{"_index":3060,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["param",{"_index":111,"title":{},"body":{"c/c-intro.html":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/examples/tower-of-hanoi.html":{}}}],["paramet",{"_index":1012,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{}}}],["parameter)argv",{"_index":3472,"title":{},"body":{"java/java-vs-c.html":{}}}],["parent",{"_index":4894,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/OX-game.html":{},"java/examples/guess-sever-client.html":{},"java/examples/othello.html":{}}}],["parent.next(t",{"_index":5027,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["parent.pagedown(t",{"_index":5037,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["parent.pageup(t",{"_index":5035,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["parent.previous(t",{"_index":5029,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["pascal",{"_index":1220,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["pascal.java",{"_index":1222,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["pass",{"_index":2995,"title":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{},"java/message-passing.html#Message-Passing-的語法":{}},"body":{"java/extends.html":{},"java/extends.html#基本觀念":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/examples/othello.html":{}}}],["password",{"_index":3883,"title":{},"body":{"java/jdbc.html":{}}}],["paste,127",{"_index":5064,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["path",{"_index":3421,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["pattern",{"_index":1692,"title":{},"body":{"java/easy-print.html":{}}}],["pc",{"_index":1984,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pc.buffer",{"_index":2026,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pc.currentpag",{"_index":2031,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pc.firstpag",{"_index":2022,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pc.getresolut",{"_index":2027,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pc.lastpag",{"_index":2017,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pc.nextpag",{"_index":2024,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pc.previouspag",{"_index":2021,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pc.setresolut",{"_index":2028,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pc.setresolution(rel",{"_index":2030,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pc.update(pc.getgraph",{"_index":2023,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pc.update(pg",{"_index":2029,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["peek",{"_index":1260,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/examples/engineering-calculator.html":{},"java/examples/stack.html":{}}}],["peopl",{"_index":4173,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/examples/river-cross.html":{}}}],["people有vari",{"_index":4171,"title":{},"body":{"java/message-passing.html":{}}}],["per",{"_index":2054,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["peraddr",{"_index":2323,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["perform",{"_index":5689,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["period",{"_index":2262,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{}}}],["permut",{"_index":1235,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["permutation(data",{"_index":1240,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["perzip",{"_index":2324,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["pg",{"_index":1921,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{}}}],["pg.dispos",{"_index":1924,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pg.drawimage(buff",{"_index":2088,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["pi",{"_index":1451,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#final-關鍵字":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{}}}],["pict",{"_index":349,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["pile",{"_index":6130,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["pile(s",{"_index":6150,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["pile.java",{"_index":6127,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["pivot",{"_index":1214,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["pjob",{"_index":1919,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pjob.end",{"_index":1927,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["pjob.getgraph",{"_index":1922,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["play",{"_index":4892,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["pleas",{"_index":1026,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/exception.html":{},"java/exception.html#簡介":{},"c/examples/find-prime-numbers.html":{},"c/examples/open-file.html":{},"java/examples/eight-queens-puzzle.html":{}}}],["plu",{"_index":5553,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["pname",{"_index":1916,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["po",{"_index":5041,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/othello.html":{}}}],["point",{"_index":1415,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/examples/tower-of-hanoi.html":{}}}],["pointer",{"_index":168,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{}}}],["polic",{"_index":6179,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["polymorph",{"_index":3012,"title":{},"body":{"java/extends.html":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{}}}],["polymorphism(&#x591a;&#x578b",{"_index":3108,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["polymorphism)&#xff0c;&#x800c;&#x5b50;&#x985e;&#x5225;&#x548c;&#x7236;&#x985e;&#x5225;&#x53ef;&#x80fd;&#x90fd;&#x5b9a;&#x7fa9;&#x4e86;&#x76f8;&#x540c;&#x7684",{"_index":3144,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["pop",{"_index":800,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/container.html":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/examples/engineering-calculator.html":{},"java/examples/stack.html":{},"java/examples/tower-of-hanoi.html":{}}}],["pop&#x3002",{"_index":911,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["port",{"_index":4379,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["portraint",{"_index":1953,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["portrait",{"_index":2074,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{}}}],["pos!=s.length",{"_index":5076,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["pos+directions[i",{"_index":5888,"title":{},"body":{"java/examples/othello.html":{}}}],["pos,sstart,send",{"_index":5014,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["pos==s.length",{"_index":5054,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["posit",{"_index":5369,"title":{},"body":{"java/examples/bingo.html":{},"java/examples/minesweeper.html":{},"java/examples/tower-of-hanoi.html":{}}}],["possibl",{"_index":6039,"title":{},"body":{"java/examples/river-cross.html":{}}}],["postfix",{"_index":3450,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["postscript",{"_index":350,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["pos為0",{"_index":5894,"title":{},"body":{"java/examples/othello.html":{}}}],["power",{"_index":3509,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/examples/engineering-calculator.html":{}}}],["power(a",{"_index":3510,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["practic",{"_index":85,"title":{},"body":{"c/c-intro.html":{}}}],["pre",{"_index":5665,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["pre[j",{"_index":5667,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["prefix",{"_index":3451,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["preparedstat",{"_index":3872,"title":{},"body":{"java/jdbc.html":{}}}],["preparestat",{"_index":3916,"title":{},"body":{"java/jdbc.html":{}}}],["preprocessor",{"_index":45,"title":{},"body":{"c/c-intro.html":{},"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["press",{"_index":6140,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["preview",{"_index":1973,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["preview(canva",{"_index":1909,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["preview(printcanva",{"_index":1995,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["previou",{"_index":1978,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{}}}],["previous",{"_index":1418,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["previous.seten",{"_index":2016,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["previouspag",{"_index":2087,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["primari",{"_index":4030,"title":{},"body":{"java/jdbc.html":{}}}],["primary.s",{"_index":4136,"title":{},"body":{"java/jdbc.html":{}}}],["primarykey",{"_index":4101,"title":{},"body":{"java/jdbc.html":{}}}],["primarykey.s",{"_index":4119,"title":{},"body":{"java/jdbc.html":{}}}],["primaryt",{"_index":4130,"title":{},"body":{"java/jdbc.html":{}}}],["prime",{"_index":5301,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["prime.c",{"_index":5321,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["prime2.c",{"_index":5300,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["primes[j]*primes[j",{"_index":5314,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["primes[tot",{"_index":5313,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["print",{"_index":108,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#Overloading":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/examples/bingo.html":{},"java/examples/matrix.html":{},"java/examples/sudoku.html":{}}}],["print(int",{"_index":1433,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#Overloading":{}}}],["print(integer.parseint(in.readlin",{"_index":3495,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{}}}],["print.java",{"_index":1695,"title":{"java/easy-print.html#Print-java":{}},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["print_rectangel",{"_index":123,"title":{},"body":{"c/c-intro.html":{}}}],["print_rectangl",{"_index":115,"title":{},"body":{"c/c-intro.html":{}}}],["print_rectangle(s",{"_index":129,"title":{},"body":{"c/c-intro.html":{}}}],["printal",{"_index":1981,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["printcanva",{"_index":1905,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{}}}],["printcanvas.java",{"_index":2032,"title":{"java/easy-print.html#PrintCanvas-java":{}},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["printer",{"_index":1902,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["printf",{"_index":29,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{}}}],["printgraph",{"_index":1689,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["printid",{"_index":3905,"title":{},"body":{"java/jdbc.html":{}}}],["printjob",{"_index":1918,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["printlog",{"_index":3901,"title":{},"body":{"java/jdbc.html":{}}}],["printlog(printid,studentid,class,type,copy,year,email,success,ip,pric",{"_index":3903,"title":{},"body":{"java/jdbc.html":{}}}],["printon",{"_index":1980,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["printresult",{"_index":6072,"title":{},"body":{"java/examples/sudoku.html":{}}}],["printstacktrac",{"_index":2882,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["printstream",{"_index":1428,"title":{},"body":{"java/class-and-obj.html":{},"java/io.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["printstream&#x3002;&#x6211;&#x5011;&#x53ef;&#x900f;&#x904e;&#x8a72;&#x8b8a;&#x6578;&#x6240;&#x6307;&#x5230;&#x7684;&#x7269;&#x4ef6;&#xff0c;&#x5c07;&#x8a0a;&#x606f;&#x5370;&#x5230;&#x87a2;&#x5e55;&#x4e0a;&#x3002",{"_index":1551,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["printstream(smtps.getoutputstream",{"_index":4289,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["printwrit",{"_index":5672,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["printylnoticea4",{"_index":2253,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["printylnoticea4.java",{"_index":2175,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["printylnoticecanva",{"_index":2405,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["printylnoticecanvas(data",{"_index":2386,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["prioriti",{"_index":5584,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["privat",{"_index":1186,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/tower-of-hanoi.html":{}}}],["private&#xff1a;&#x53ea;&#x6709",{"_index":2686,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["privateclassmethod",{"_index":2606,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{}}}],["privateobjectmethod",{"_index":2602,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{}}}],["privatevari",{"_index":2598,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{}}}],["privileg",{"_index":2847,"title":{},"body":{"java/exception.html":{},"java/exception.html#簡介":{}}}],["problem",{"_index":2102,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/examples/tower-of-hanoi.html":{}}}],["procedur",{"_index":3877,"title":{},"body":{"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["process",{"_index":251,"title":{"c/system-operation.html#Software-development-process":{},"java/thread.html#Program-Process-Thread":{}},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-operation.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/tower-of-hanoi.html":{}}}],["process&#xff1a;&#x7531",{"_index":4580,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["produc",{"_index":3937,"title":{},"body":{"java/jdbc.html":{}}}],["produec",{"_index":3981,"title":{},"body":{"java/jdbc.html":{}}}],["program",{"_index":79,"title":{"java/thread.html#Program-Process-Thread":{}},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#軟體元件":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{},"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/othello.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["program&#xff1a;&#x4e00;&#x7fa4;&#x7a0b;&#x5f0f;&#x78bc;&#x7684;&#x96c6;&#x5408;&#xff0c;&#x7528;&#x4ee5;&#x89e3;&#x6c7a;&#x7279;&#x5b9a;&#x7684;&#x554f;&#x984c;&#x3002;&#x4ee5;&#x7269;&#x4ef6;&#x5c0e;&#x5411;&#x7684;&#x89c0;&#x5ff5;&#x4f86;&#x985e;&#x6bd4;&#xff0c;&#x76f8;&#x7576;&#x65bc",{"_index":4579,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["project",{"_index":848,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["proper",{"_index":2151,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["protect",{"_index":1397,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/extends.html":{},"java/extends.html#Override-覆寫":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["protected&#xff1a;&#x53ea;&#x6709;&#x540c;&#x4e00;&#x500b",{"_index":2690,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["protectedclassmethod",{"_index":2608,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{}}}],["protectedobjectmethod",{"_index":2604,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{}}}],["protectedvari",{"_index":2600,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{}}}],["pstmt",{"_index":3890,"title":{},"body":{"java/jdbc.html":{}}}],["pstmt.close",{"_index":3915,"title":{},"body":{"java/jdbc.html":{}}}],["pstmt.executeupd",{"_index":3913,"title":{},"body":{"java/jdbc.html":{}}}],["pstmt.setbyt",{"_index":3917,"title":{},"body":{"java/jdbc.html":{}}}],["pstmt.setint",{"_index":3907,"title":{},"body":{"java/jdbc.html":{}}}],["pstmt.setstr",{"_index":3908,"title":{},"body":{"java/jdbc.html":{}}}],["ptr",{"_index":5609,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["public",{"_index":1032,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#final-修飾字":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["public&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x5373;&#x4fbf;&#x5ba3;&#x544a;&#x6642;&#x6c92;&#x5beb",{"_index":3271,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["public&#xff1a;&#x540c;&#x8b8a;&#x6578;&#x8aaa;&#x660e;&#x3002",{"_index":3285,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["public&#xff1a;&#x6240;&#x6709;&#x7684",{"_index":2693,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["public&#xff1a;&#x6240;&#x8b02",{"_index":3268,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["publicclass",{"_index":3042,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["publicclassmethod",{"_index":2609,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{}}}],["publicobjectmethod",{"_index":2605,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{}}}],["publicvari",{"_index":2601,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{}}}],["punch",{"_index":374,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["purpos",{"_index":771,"title":{},"body":{"c/system-operation.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{},"c/examples/find-prime-numbers.html":{},"java/examples/OX-game.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/othello.html":{},"java/examples/tax-calculate.html":{}}}],["push",{"_index":799,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/container.html":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/examples/engineering-calculator.html":{},"java/examples/stack.html":{},"java/examples/tower-of-hanoi.html":{}}}],["push&#xff0c;&#x62ff;&#x51fa;&#x4f86;&#x7684;&#x52d5;&#x4f5c;&#x7a31;&#x70ba",{"_index":910,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["push,push,pop",{"_index":5562,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["push,push,push,push,push,push,dead,push",{"_index":5564,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["push,push,push,push,push,push,pop",{"_index":5563,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["push,push,push,push,push,push,push,push",{"_index":5565,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["put",{"_index":1637,"title":{},"body":{"java/container.html":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/engineering-calculator.html":{},"java/examples/tower-of-hanoi.html":{}}}],["puton",{"_index":5433,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["putter",{"_index":4495,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["putter(q",{"_index":4501,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["q",{"_index":4331,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{},"java/examples/river-cross.html":{}}}],["q.dequeu",{"_index":4490,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["q.enqueu",{"_index":4518,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["q.enqueue(",{"_index":4395,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["q.enqueue(data",{"_index":4496,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["queen",{"_index":5418,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["queen(siz",{"_index":5423,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["queen.java",{"_index":5416,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["queri",{"_index":1966,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{}}}],["queue",{"_index":2672,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{}}}],["queue.dequeu",{"_index":4282,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{}}}],["queue.enqueue(req",{"_index":4280,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["queue.isful",{"_index":4310,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["queue.siz",{"_index":4261,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["queue來smooth",{"_index":4242,"title":{},"body":{"java/net.html":{}}}],["quicktim",{"_index":356,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["quit",{"_index":4305,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["quot",{"_index":3967,"title":{},"body":{"java/jdbc.html":{}}}],["r",{"_index":290,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/class-and-obj.html":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/examples/file-handler.html":{},"java/examples/tax-calculate.html":{}}}],["r&#x4e5f;&#x53ef;&#x4ee5",{"_index":1585,"title":{},"body":{"java/class-and-obj.html#Overloading":{}}}],["r1",{"_index":4497,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["r1.join",{"_index":4525,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["r1.start",{"_index":4503,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["r2",{"_index":4499,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["r2.join",{"_index":4526,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["r2.start",{"_index":4504,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["race",{"_index":4478,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["radiu",{"_index":3035,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["radix",{"_index":4151,"title":{},"body":{"java/jdbc.html":{}}}],["ram",{"_index":276,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#軟體元件":{}}}],["ram(random",{"_index":260,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{}}}],["random",{"_index":275,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#軟體元件":{},"java/examples/bingo.html":{}}}],["rang",{"_index":6101,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["range[i",{"_index":6113,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["rate",{"_index":6107,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["rate[i",{"_index":6114,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["ratio",{"_index":6183,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["read",{"_index":118,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#軟體元件":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/examples/guess-sever-client.html":{}}}],["read(alway",{"_index":4562,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["reader",{"_index":373,"title":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}},"body":{"c/system-intro.html":{},"java/io.html":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/examples/read-write-queue.html":{}}}],["reader)&#x3001;&#x8a9e;&#x97f3;&#x8f38;&#x5165;&#x3001;&#x4e2d;&#x6587;&#x624b;&#x5beb;&#x8fa8;&#x8b58;&#x3001;&#x6253;&#x5b54;&#x6a5f",{"_index":593,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["reader)).start",{"_index":4521,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["readerspreferredmonitor",{"_index":4543,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["readerthread",{"_index":4539,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["readerthread(srw)).start",{"_index":4542,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["readerwrit",{"_index":4515,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["readerwriter(q",{"_index":4519,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["reader都讀完了,找下一個writ",{"_index":4568,"title":{},"body":{"java/thread.html":{}}}],["readincom",{"_index":6115,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["readincome(in",{"_index":6119,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["reading(0",{"_index":4559,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["readmatrix",{"_index":3371,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["readmatrix(din",{"_index":3394,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["read的thread",{"_index":4548,"title":{},"body":{"java/thread.html":{}}}],["real",{"_index":4538,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["receiv",{"_index":4248,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["receiver,str",{"_index":4273,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["receivers&apo",{"_index":4407,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["recognit",{"_index":370,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["record",{"_index":2060,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["rectangl",{"_index":110,"title":{},"body":{"c/c-intro.html":{},"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["rectangle)shapes[i]).area",{"_index":3058,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["recurs",{"_index":3506,"title":{"java/java-vs-c.html#遞迴-recursion-範例":{}},"body":{"java/java-vs-c.html":{},"java/examples/river-cross.html":{},"java/examples/tower-of-hanoi.html":{}}}],["reduc",{"_index":4916,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/othello.html":{}}}],["ref",{"_index":3194,"title":{},"body":{"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["refer",{"_index":1158,"title":{},"body":{"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#初始化的執行順序":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{}}}],["reference&#xff0c;&#x53ef;&#x6307;&#x5411;&#x5c6c;&#x65bc",{"_index":3645,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["reference(&#x53c3;&#x8003",{"_index":3623,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["reference.method",{"_index":4170,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["reference.objectmemb",{"_index":3446,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["reference.objectmethod",{"_index":1424,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["referencebi",{"_index":4102,"title":{},"body":{"java/jdbc.html":{}}}],["referenceby.addelement(fk",{"_index":4117,"title":{},"body":{"java/jdbc.html":{}}}],["referenceby.s",{"_index":4122,"title":{},"body":{"java/jdbc.html":{}}}],["regist",{"_index":259,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-operation.html":{}}}],["rel",{"_index":1187,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["rel.addel",{"_index":6066,"title":{},"body":{"java/examples/sudoku.html":{}}}],["rel.addelement(tmp.elementat(j",{"_index":6071,"title":{},"body":{"java/examples/sudoku.html":{}}}],["rel.data[i][j",{"_index":5710,"title":{},"body":{"java/examples/matrix.html":{}}}],["rel.length",{"_index":1191,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["rel[col][each",{"_index":5975,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["rel[col][each]*factor",{"_index":5983,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["rel[i",{"_index":1194,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["rel[n",{"_index":1195,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["rel[nonzero][each",{"_index":5976,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["rel[row][col",{"_index":5966,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["rel[row][each",{"_index":5982,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["relat",{"_index":3455,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["releas",{"_index":4512,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["remark",{"_index":4100,"title":{},"body":{"java/jdbc.html":{}}}],["remot",{"_index":4036,"title":{},"body":{"java/jdbc.html":{}}}],["removeforeignkey",{"_index":4111,"title":{},"body":{"java/jdbc.html":{}}}],["render",{"_index":6129,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["repaint",{"_index":4905,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["repres",{"_index":5363,"title":{},"body":{"java/examples/bingo.html":{}}}],["req",{"_index":4275,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["req.data",{"_index":4279,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["req.receiv",{"_index":4277,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["req.send",{"_index":4276,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["req.subject",{"_index":4278,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["request",{"_index":4246,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["requir",{"_index":2366,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["resceiv",{"_index":4270,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["reset",{"_index":2132,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/examples/guess-sever-client.html":{},"java/examples/minesweeper.html":{}}}],["resiz",{"_index":6180,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["respons",{"_index":4493,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["rest",{"_index":2143,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["result",{"_index":2844,"title":{},"body":{"java/exception.html":{},"java/exception.html#簡介":{},"java/examples/matrix.html":{},"java/examples/reverse-matrix.html":{}}}],["result*=right[i][i",{"_index":5737,"title":{},"body":{"java/examples/matrix.html":{},"java/examples/reverse-matrix.html":{}}}],["result=right",{"_index":5736,"title":{},"body":{"java/examples/matrix.html":{}}}],["resultset",{"_index":2280,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["retri",{"_index":4241,"title":{},"body":{"java/net.html":{}}}],["return",{"_index":31,"title":{},"body":{"c/c-intro.html":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/least-common-multiple.html":{},"c/examples/sum1toN.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["returnstr",{"_index":1965,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{}}}],["returnv",{"_index":5103,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["revers",{"_index":1250,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["reverse(data",{"_index":1249,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["right",{"_index":1054,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{},"java/examples/tower-of-hanoi.html":{}}}],["right[col][each",{"_index":5989,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["right[col][each]*factor",{"_index":5995,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["right[i][j",{"_index":5723,"title":{},"body":{"java/examples/matrix.html":{}}}],["right[i][j]*factor",{"_index":5735,"title":{},"body":{"java/examples/matrix.html":{}}}],["right[i][l",{"_index":5728,"title":{},"body":{"java/examples/matrix.html":{}}}],["right[k][i",{"_index":5725,"title":{},"body":{"java/examples/matrix.html":{}}}],["right[k][i]/right[i][i",{"_index":5732,"title":{},"body":{"java/examples/matrix.html":{}}}],["right[k][i]是0",{"_index":5731,"title":{},"body":{"java/examples/matrix.html":{}}}],["right[k][j",{"_index":5734,"title":{},"body":{"java/examples/matrix.html":{}}}],["right[k][l",{"_index":5729,"title":{},"body":{"java/examples/matrix.html":{}}}],["right[nonzero][col",{"_index":5988,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["right[nonzero][each",{"_index":5990,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["right[row][col",{"_index":5987,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["right[row][col]/right[col][col",{"_index":5991,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["right[row][each",{"_index":5994,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["right_round_bracket",{"_index":5557,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["robust)&#xff0c;java",{"_index":2909,"title":{},"body":{"java/exception.html#簡介":{}}}],["robust)，java",{"_index":2852,"title":{},"body":{"java/exception.html":{}}}],["rom",{"_index":274,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#軟體元件":{}}}],["root",{"_index":5128,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["round",{"_index":3484,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{},"java/examples/engineering-calculator.html":{}}}],["round(x",{"_index":3483,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{}}}],["row",{"_index":1147,"title":{},"body":{"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/reverse-matrix.html":{}}}],["row*(i",{"_index":5781,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["row*fontheight",{"_index":2126,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["row+i",{"_index":5434,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["row==col",{"_index":5965,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["row==siz",{"_index":5436,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["row=col",{"_index":5977,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["rown",{"_index":5961,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["rown;row",{"_index":5978,"title":{},"body":{"java/examples/reverse-matrix.html":{}}}],["rs",{"_index":2281,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["rs.close",{"_index":2328,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["rs.getbyt",{"_index":3895,"title":{},"body":{"java/jdbc.html":{}}}],["rs.getdoubl",{"_index":2352,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["rs.getint",{"_index":4015,"title":{},"body":{"java/jdbc.html":{}}}],["rs.getstr",{"_index":2315,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["rs.next",{"_index":2314,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["run",{"_index":3004,"title":{},"body":{"java/extends.html":{},"java/extends.html#基本觀念":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#AWT":{},"java/examples/guess-sever-client.html":{},"java/examples/othello.html":{},"java/examples/read-write-queue.html":{},"java/examples/river-cross.html":{},"java/examples/tower-of-hanoi.html":{}}}],["run&#x3002",{"_index":3300,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["runnabl",{"_index":3205,"title":{},"body":{"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#AWT":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["runnable.period",{"_index":3208,"title":{},"body":{"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{}}}],["runnable.run",{"_index":4441,"title":{},"body":{"java/thread.html":{}}}],["runnalb",{"_index":3202,"title":{},"body":{"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{}}}],["runtim",{"_index":3015,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["runtimeexcept",{"_index":2878,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["s",{"_index":152,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#初始化的執行順序":{},"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-max-min.html":{},"c/examples/open-file.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/river-cross.html":{}}}],["s%d",{"_index":3418,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["s,depart",{"_index":2297,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["s.charat",{"_index":5085,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["s.charat(i",{"_index":3970,"title":{},"body":{"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["s.charat(j",{"_index":5092,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["s.charat(k",{"_index":5086,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["s.class",{"_index":2304,"title":{},"body":{"java/easy-print.html":{}}}],["s.class=&apo",{"_index":2535,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["s.close",{"_index":4378,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/guess-sever-client.html":{}}}],["s.deptid",{"_index":2306,"title":{},"body":{"java/easy-print.html":{}}}],["s.deptid,s.class",{"_index":2295,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["s.deptid,s.class,s.grad",{"_index":2310,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["s.deptid=&apo",{"_index":2536,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["s.deptid=d.deptid",{"_index":2298,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["s.getbytes().lengthj",{"_index":5087,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["s.getchar",{"_index":2138,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["s.getinputstream",{"_index":5655,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["s.getoutputstream",{"_index":5656,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["s.grade",{"_index":2308,"title":{},"body":{"java/easy-print.html":{}}}],["s.grade,s.addr2",{"_index":2292,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["s.grade=&apo",{"_index":2537,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["s.indexof",{"_index":3968,"title":{},"body":{"java/jdbc.html":{}}}],["s.length",{"_index":2134,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["s.name",{"_index":2290,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["s.pname",{"_index":2291,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["s.setsotimeout",{"_index":4393,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["s.somemethod",{"_index":2865,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["s.status=&apos;0&apo",{"_index":2532,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["s.status='0",{"_index":2299,"title":{},"body":{"java/easy-print.html":{}}}],["s.studentid",{"_index":2288,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["s.studentid=&apo",{"_index":2533,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["s.substr",{"_index":5089,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["s.substring(sstart,send",{"_index":5067,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["s.tochararray",{"_index":3983,"title":{},"body":{"java/jdbc.html":{}}}],["s.zipcode1",{"_index":2294,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["s.zipcode2,s.addr1",{"_index":2293,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["s1",{"_index":2665,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{}}}],["s1.pop",{"_index":2886,"title":{},"body":{"java/exception.html":{},"java/exception.html#範例":{}}}],["s1.push",{"_index":2667,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{}}}],["s2",{"_index":2666,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{}}}],["s2.push",{"_index":2670,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{}}}],["sa",{"_index":3888,"title":{},"body":{"java/jdbc.html":{}}}],["sample.txt",{"_index":2840,"title":{},"body":{"java/exception.html":{},"java/exception.html#簡介":{}}}],["save",{"_index":5113,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["sb",{"_index":2287,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{},"java/examples/othello.html":{},"java/examples/tax-calculate.html":{}}}],["sb.append",{"_index":2301,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{},"java/examples/othello.html":{}}}],["sb.append(all[i",{"_index":4943,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["sb.append(c",{"_index":3971,"title":{},"body":{"java/jdbc.html":{},"java/examples/tax-calculate.html":{}}}],["sb.append(ch",{"_index":5075,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["sb.append(data",{"_index":5073,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["sb.append(msg",{"_index":4944,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["sb.append(s.substring(po",{"_index":5055,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["sb.append(s.substring(send",{"_index":5049,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["sb.append(x",{"_index":5110,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["sb.dispos",{"_index":4264,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["sb.length",{"_index":3368,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{}}}],["sb.setspeed(queue.s",{"_index":4262,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["sb.tostr",{"_index":3369,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/file-handler.html":{},"java/examples/othello.html":{}}}],["scale",{"_index":2156,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["scan",{"_index":5887,"title":{},"body":{"java/examples/othello.html":{}}}],["scan+=directions[i",{"_index":5890,"title":{},"body":{"java/examples/othello.html":{}}}],["scanf",{"_index":125,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{}}}],["scanner",{"_index":1040,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{}}}],["scanner(system.in",{"_index":1042,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{}}}],["sccs(sourc",{"_index":2649,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["schema",{"_index":3987,"title":{},"body":{"java/jdbc.html":{}}}],["schema.java",{"_index":3985,"title":{},"body":{"java/jdbc.html":{}}}],["schema.trim()+catalogsepar",{"_index":4086,"title":{},"body":{"java/jdbc.html":{}}}],["schema.trim().length",{"_index":4085,"title":{},"body":{"java/jdbc.html":{}}}],["schemanam",{"_index":4097,"title":{},"body":{"java/jdbc.html":{}}}],["score",{"_index":2351,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["score*credit",{"_index":2400,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["screen",{"_index":124,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["scrollbar",{"_index":4836,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["scrollpan",{"_index":1892,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#AWT":{}}}],["second",{"_index":4449,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/examples/tower-of-hanoi.html":{}}}],["section",{"_index":4466,"title":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}},"body":{"java/thread.html":{}}}],["section)&#x6642;&#xff0c;&#x5fc5;&#x9808;&#x62ff;&#x5230;&#x67d0;&#x7269;&#x4ef6;&#x7684;&#x9396;&#x624d;&#x884c;&#xff0c;&#x9019;&#x500b;&#x9396;&#x540c;&#x6642;&#x9593;&#x6700;&#x591a;&#x53ea;&#x6709;&#x4e00;&#x500b;&#x57f7;&#x884c;&#x7dd2;&#x53ef;&#x4ee5;&#x64c1;&#x6709;&#x5b83;&#x3002",{"_index":4714,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["see",{"_index":3030,"title":{},"body":{"java/extends.html":{},"java/extends.html#Virtual-Function-虛擬函數":{},"c/examples/open-file.html":{},"java/examples/engineering-calculator.html":{},"java/examples/tower-of-hanoi.html":{}}}],["see.substring(i",{"_index":5551,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["segment",{"_index":1173,"title":{},"body":{"java/array.html":{},"java/array.html#陣列索引的檢查":{},"java/exception.html":{},"java/exception.html#簡介":{}}}],["select",{"_index":1196,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#AWT":{}}}],["selectionsort",{"_index":1198,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["sem",{"_index":432,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{}}}],["send",{"_index":3931,"title":{},"body":{"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["send!=s.length",{"_index":5048,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["send=t.getselectionend",{"_index":5044,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["senddat",{"_index":2355,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["senddate.equ",{"_index":2358,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["sender",{"_index":4247,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["sender&apos;",{"_index":4406,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["sender'",{"_index":4268,"title":{},"body":{"java/net.html":{}}}],["sender,str",{"_index":4272,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["sendex",{"_index":4309,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["sendsstart",{"_index":5045,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["sentinel",{"_index":5578,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["sep",{"_index":4134,"title":{},"body":{"java/jdbc.html":{}}}],["seper",{"_index":3460,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["serializ",{"_index":3988,"title":{},"body":{"java/jdbc.html":{}}}],["serif",{"_index":2425,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["serv",{"_index":4334,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["server",{"_index":2656,"title":{"java/net.html#HTTP-Server":{}},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["serversocket",{"_index":4387,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{},"java/examples/guess-sever-client.html":{}}}],["set",{"_index":1392,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#final-關鍵字":{},"java/examples/bingo.html":{},"java/examples/tower-of-hanoi.html":{}}}],["setag",{"_index":4176,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["setblackplay",{"_index":5877,"title":{},"body":{"java/examples/othello.html":{}}}],["setcheck",{"_index":5392,"title":{},"body":{"java/examples/bingo.html":{}}}],["setcol",{"_index":2128,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["setcursor(hintcursor",{"_index":5917,"title":{},"body":{"java/examples/othello.html":{}}}],["setcursor(normalcursor",{"_index":5913,"title":{},"body":{"java/examples/othello.html":{}}}],["setcursor(thinkcursor",{"_index":5903,"title":{},"body":{"java/examples/othello.html":{}}}],["setdefaultcloseoperation(jframe.exit_on_clos",{"_index":5357,"title":{},"body":{"java/examples/OX-game.html":{}}}],["setdir",{"_index":1402,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["setencod",{"_index":3956,"title":{},"body":{"java/jdbc.html":{}}}],["setjmenubar(mb",{"_index":4967,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["setlayout",{"_index":4947,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/tower-of-hanoi.html":{}}}],["setmenubar(mb",{"_index":4876,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["setprint",{"_index":1915,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["setpriority(thread.min_prior",{"_index":5685,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["setresiz",{"_index":5833,"title":{},"body":{"java/examples/othello.html":{}}}],["setresolut",{"_index":2044,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["setrow",{"_index":2125,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["setspe",{"_index":1400,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["settouch",{"_index":5777,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["settouched(tt",{"_index":5780,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["setup",{"_index":4946,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["setup(par",{"_index":4945,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["setvis",{"_index":4884,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/othello.html":{}}}],["setwhiteplay",{"_index":5880,"title":{},"body":{"java/examples/othello.html":{}}}],["shall",{"_index":1419,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["shape",{"_index":3043,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["shape2d",{"_index":3031,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["shape2d.area",{"_index":3049,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["shapes.length",{"_index":3044,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["shapes[i",{"_index":3057,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["shapes[i].area",{"_index":3045,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["sheng",{"_index":100,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["shift",{"_index":1218,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["shift&#xff0c;&#x4ee5;&#x53ca;&#x7528;&#x4f86;&#x5224;&#x65b7;&#x7269;&#x4ef6;&#x578b;&#x614b;&#x7684",{"_index":3656,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["shiuh",{"_index":99,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["short",{"_index":170,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/examples/river-cross.html":{}}}],["show",{"_index":4961,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["showal",{"_index":5756,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["showprogress",{"_index":4259,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["showsqlexception.show(ex",{"_index":4057,"title":{},"body":{"java/jdbc.html":{}}}],["showwin",{"_index":5757,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["side",{"_index":5884,"title":{},"body":{"java/examples/othello.html":{}}}],["side^ston",{"_index":5886,"title":{},"body":{"java/examples/othello.html":{}}}],["side這個顏色,能否下在po",{"_index":5883,"title":{},"body":{"java/examples/othello.html":{}}}],["sign",{"_index":428,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#浮點數表示法":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{},"java/examples/matrix.html":{}}}],["sign*result",{"_index":5738,"title":{},"body":{"java/examples/matrix.html":{}}}],["signatur",{"_index":3210,"title":{},"body":{"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{}}}],["simpl",{"_index":4314,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["simplet",{"_index":1896,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["sin",{"_index":5531,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["singl",{"_index":4528,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["singlereaderwrit",{"_index":4529,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["situat",{"_index":6032,"title":{},"body":{"java/examples/river-cross.html":{}}}],["size",{"_index":112,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"c/examples/open-file.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/river-cross.html":{},"java/examples/tower-of-hanoi.html":{}}}],["size\":12",{"_index":1065,"title":{},"body":{"c/writing-intro.html":{}}}],["size*j",{"_index":5388,"title":{},"body":{"java/examples/bingo.html":{}}}],["size*s",{"_index":5367,"title":{},"body":{"java/examples/bingo.html":{}}}],["size:12",{"_index":1146,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["size==data.length",{"_index":4253,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/queue.html":{}}}],["size][j",{"_index":5389,"title":{},"body":{"java/examples/bingo.html":{}}}],["sizeof",{"_index":3441,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["skip",{"_index":811,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{}}}],["sleep",{"_index":4320,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/queue.html":{},"java/examples/tower-of-hanoi.html":{}}}],["sleep(int",{"_index":4447,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["sleepexampl",{"_index":4464,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["slow",{"_index":4492,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["smtp",{"_index":4231,"title":{"java/net.html#SMTP-Client":{}},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["smtp()).start",{"_index":4281,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["smtp.java",{"_index":4232,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["smtps.close",{"_index":4308,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["smtpsinput",{"_index":4290,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["smtpsinput.clos",{"_index":4307,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["smtpsinput.readlin",{"_index":4292,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["smtpsoutput",{"_index":4288,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["smtpsoutput.clos",{"_index":4306,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["smtpsoutput.flush",{"_index":4295,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["smtpsoutput.print",{"_index":4296,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["smtpsoutput.println",{"_index":4293,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["smtpsoutput.writ",{"_index":4303,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["smtpsoutput.write(data[i].getbyt",{"_index":4304,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["smtpsoutput.write(subject.getbyt",{"_index":4300,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["socket",{"_index":4286,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/examples/guess-sever-client.html":{}}}],["socket(environment.getmailserv",{"_index":4287,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["softwar",{"_index":817,"title":{"c/system-operation.html#Software-development-process":{}},"body":{"c/system-operation.html":{}}}],["sol",{"_index":6059,"title":{},"body":{"java/examples/sudoku.html":{}}}],["solut",{"_index":5426,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["solv",{"_index":6124,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["someexcept",{"_index":2874,"title":{},"body":{"java/exception.html":{}}}],["someexception&#xff0c;&#x5247;&#x547c;&#x53eb;&#x8a72",{"_index":2960,"title":{},"body":{"java/exception.html#相關語法":{}}}],["somemethod",{"_index":2856,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["sort",{"_index":1197,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["sort(data",{"_index":1200,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["sound",{"_index":352,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["sourc",{"_index":37,"title":{},"body":{"c/c-intro.html":{},"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{}}}],["source1.c",{"_index":838,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["source1.o",{"_index":841,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["source2.c",{"_index":839,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["source2.o",{"_index":842,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["source3.c",{"_index":840,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["source3.o",{"_index":843,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["south",{"_index":1413,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["sp",{"_index":1893,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["sp.add(pc",{"_index":2001,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["space",{"_index":2152,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{}}}],["space&#x3002",{"_index":4588,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["space&#xff0c;&#x4f46;&#x9019;&#x4e9b",{"_index":4604,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["space&#xff1a;&#x76f8;&#x7576;&#x65bc",{"_index":4585,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["specifi",{"_index":2150,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["speed",{"_index":1380,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["speedbar",{"_index":4260,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["sql",{"_index":3938,"title":{},"body":{"java/jdbc.html":{}}}],["sql.fromsql",{"_index":2317,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["sql.fromsql(rs.getstr",{"_index":2316,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["sql.java",{"_index":3921,"title":{},"body":{"java/jdbc.html":{}}}],["sql.toascii",{"_index":3918,"title":{},"body":{"java/jdbc.html":{}}}],["sql.tobyt",{"_index":3954,"title":{},"body":{"java/jdbc.html":{}}}],["sql.tochar",{"_index":3952,"title":{},"body":{"java/jdbc.html":{}}}],["sql.tosql",{"_index":3933,"title":{},"body":{"java/jdbc.html":{}}}],["sql.tostr",{"_index":3898,"title":{},"body":{"java/jdbc.html":{}}}],["sql.tostring(rs.getbyt",{"_index":2356,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["sqlexcept",{"_index":4056,"title":{},"body":{"java/jdbc.html":{}}}],["sqrt",{"_index":2849,"title":{},"body":{"java/exception.html":{},"java/exception.html#簡介":{},"java/examples/engineering-calculator.html":{}}}],["srw",{"_index":4536,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["ss",{"_index":4388,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["ss.accept",{"_index":4392,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["sstart",{"_index":5047,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["sstart=t.getselectionstart",{"_index":5043,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["ssyu@ncnu.edu.tw",{"_index":3911,"title":{},"body":{"java/jdbc.html":{}}}],["st",{"_index":4344,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["st.nexttoken",{"_index":4346,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["stack",{"_index":54,"title":{},"body":{"c/c-intro.html":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/container.html":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{},"java/examples/stack.html":{}}}],["stack&#x3002;&#x63db;&#x53e5;&#x8a71;&#x8aaa;&#xff0c;thread",{"_index":4606,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["stack&#xff1a;&#x7d00;&#x9304;&#x51fd;&#x6578;&#x547c;&#x53eb;&#x8def;&#x5f91;&#xff0c;&#x4ee5;&#x53ca;&#x9019;&#x4e9b;&#x51fd;&#x6578;&#x6240;&#x7528;&#x5230;&#x7684;&#x5340;&#x57df;&#x8b8a;&#x6578",{"_index":4596,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["stackoverflowerror",{"_index":2885,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["stack。換句話說，thread",{"_index":4432,"title":{},"body":{"java/thread.html":{}}}],["standard",{"_index":358,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["standardsorgan",{"_index":367,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["start",{"_index":2123,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/examples/bingo.html":{},"java/examples/guess-sever-client.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["start+i)%len",{"_index":5381,"title":{},"body":{"java/examples/bingo.html":{}}}],["startid",{"_index":2275,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["startid.equ",{"_index":2300,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["startread",{"_index":4530,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["startswith",{"_index":3944,"title":{},"body":{"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["startwr",{"_index":4537,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["startwrit",{"_index":4532,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["start和stop",{"_index":4534,"title":{},"body":{"java/thread.html":{}}}],["statement",{"_index":52,"title":{},"body":{"c/c-intro.html":{},"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["static",{"_index":56,"title":{},"body":{"c/c-intro.html":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/read-write-queue.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["static&#xff1a;&#x65e2;&#x7136",{"_index":3274,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["staticblock",{"_index":1443,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#初始化的執行順序":{}}}],["statu",{"_index":4431,"title":{},"body":{"java/thread.html":{},"java/thread.html#Program-Process-Thread":{}}}],["stdio.h",{"_index":21,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/exception.html":{},"java/exception.html#簡介":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/find-prime-numbers.html":{},"c/examples/input-is-prime-number-or-not.html":{},"c/examples/open-file.html":{},"c/examples/taxi-fee-calculator.html":{}}}],["stdlib.h",{"_index":5304,"title":{},"body":{"c/examples/find-prime-numbers.html":{},"c/examples/open-file.html":{}}}],["step",{"_index":2664,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/examples/river-cross.html":{}}}],["still",{"_index":4065,"title":{},"body":{"java/jdbc.html":{}}}],["stmt",{"_index":2279,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["stmt.close",{"_index":2380,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["stmt.executequeri",{"_index":3893,"title":{},"body":{"java/jdbc.html":{}}}],["stmt.executequery(queri",{"_index":2370,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["stmt.executequery(sb.tostr",{"_index":2311,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["stmt.executequery(sql.tosql(queri",{"_index":2348,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["stmt.executeupd",{"_index":3900,"title":{},"body":{"java/jdbc.html":{}}}],["stone",{"_index":5846,"title":{},"body":{"java/examples/othello.html":{}}}],["stop",{"_index":2369,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["stopread",{"_index":4531,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["stopwrit",{"_index":4533,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["store",{"_index":783,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/jdbc.html":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["store)&#xff0c;&#x5c07;&#x4e3b;&#x8a18;&#x61b6;&#x9ad4;&#x8907;&#x88fd;&#x5230;&#x66ab;&#x5b58;&#x5668",{"_index":858,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["strang",{"_index":2121,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["string",{"_index":1034,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/read-write-queue.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{}}}],["string(array",{"_index":165,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["string(dest",{"_index":3979,"title":{},"body":{"java/jdbc.html":{}}}],["string(tmp",{"_index":3966,"title":{},"body":{"java/jdbc.html":{}}}],["string(tochar.convertall(data",{"_index":3972,"title":{},"body":{"java/jdbc.html":{}}}],["string)enu.nextel",{"_index":1685,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["string)ht.get",{"_index":1681,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["string)tt.gettransferdata(dataflavor.stringflavor",{"_index":5070,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["string)v.get(i",{"_index":1672,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["string[])ids.elementat(i",{"_index":2331,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["string[])stu.learning.elementat",{"_index":2364,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["string[])stu.learning.elementat(i",{"_index":2459,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["string[v.siz",{"_index":1674,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["stringbuff",{"_index":2286,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#字串":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/othello.html":{},"java/examples/tax-calculate.html":{}}}],["stringbuffer(s.substr",{"_index":5046,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["stringtest",{"_index":3465,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#字串":{}}}],["stringtoken",{"_index":4343,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["stringtokenizer&#x5c07;&#x5b57;&#x4e32;&#x4ee5;&#x7a7a;&#x767d;&#x5206;&#x958b",{"_index":4419,"title":{},"body":{"java/net.html#HTTP-Server":{}}}],["stringtokenizer(lin",{"_index":4345,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["strlen",{"_index":2137,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["strlen,char",{"_index":2139,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["struct",{"_index":3442,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{},"c/examples/find-prime-numbers.html":{}}}],["stu",{"_index":2333,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["stu.bscor",{"_index":2378,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["stu.info",{"_index":2334,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["stu.instlearn",{"_index":2360,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["stu.learning.s",{"_index":2362,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["student",{"_index":2296,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["student.nam",{"_index":4067,"title":{},"body":{"java/jdbc.html":{}}}],["studentid",{"_index":2372,"title":{},"body":{"java/easy-print.html":{},"java/examples/guess-sever-client.html":{}}}],["studentid=\\&apo",{"_index":2554,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["studio",{"_index":846,"title":{},"body":{"c/system-operation.html":{}}}],["studio&#xff0c;&#x88e1;&#x9762;&#x5c31;&#x5305;&#x542b;&#x4e86",{"_index":999,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["stuinfo",{"_index":2313,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["sub",{"_index":810,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/class-and-obj.html":{},"java/class-and-obj.html#類別與物件的基本概念":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#本章觀念整理範例":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["subclass",{"_index":3013,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/interface.html":{},"java/interface.html#Abstract-Class-and-Method":{}}}],["subclass&apos;",{"_index":3330,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["subclass'",{"_index":3214,"title":{},"body":{"java/interface.html":{}}}],["subject",{"_index":82,"title":{},"body":{"c/c-intro.html":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/tower-of-hanoi.html":{}}}],["subject,str",{"_index":4274,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["subpag",{"_index":2043,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["subx",{"_index":4469,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["sugar",{"_index":3469,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#字串":{}}}],["sum",{"_index":1149,"title":{},"body":{"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"c/examples/avg.html":{},"c/examples/sum1toN.html":{},"java/examples/matrix.html":{}}}],["sum(data",{"_index":3056,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["sum(i",{"_index":1153,"title":{},"body":{"java/array.html":{},"java/array.html#C-語言陣列回顧":{}}}],["sum(int",{"_index":1150,"title":{},"body":{"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["sum(n",{"_index":3507,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"c/examples/sum1toN.html":{}}}],["sum(x",{"_index":1152,"title":{},"body":{"java/array.html":{},"java/array.html#C-語言陣列回顧":{}}}],["sum/5",{"_index":3486,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{}}}],["summat",{"_index":3474,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["sun",{"_index":3410,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["sun.io",{"_index":3922,"title":{},"body":{"java/jdbc.html":{}}}],["sun.jdbc.odbc.jdbcodbcdriv",{"_index":3882,"title":{},"body":{"java/jdbc.html":{}}}],["super",{"_index":1364,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#類別與物件的基本概念":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["super,則必須放在第一行,連變數宣告也不能擺在sup",{"_index":3069,"title":{},"body":{"java/extends.html":{}}}],["support",{"_index":6016,"title":{},"body":{"java/examples/river-cross.html":{}}}],["swap",{"_index":1209,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/examples/bingo.html":{}}}],["swim",{"_index":3006,"title":{},"body":{"java/extends.html":{},"java/extends.html#基本觀念":{}}}],["swing",{"_index":4816,"title":{"java/gui.html#井字遊戲的-Swing-版本":{}},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["swingoxmain",{"_index":4963,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["swingoxmain.java",{"_index":4960,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["switch",{"_index":1014,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{}}}],["synchron",{"_index":3959,"title":{},"body":{"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/examples/queue.html":{}}}],["synchronized(ref",{"_index":4485,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["synchronized區塊後,此thread會自動釋放lock",{"_index":4484,"title":{},"body":{"java/thread.html":{}}}],["sys/timeb.h",{"_index":5305,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["system",{"_index":248,"title":{},"body":{"c/system-intro.html":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/jdbc.html":{},"java/examples/tower-of-hanoi.html":{}}}],["system)&#x3002;java",{"_index":2819,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["system)&#xff0c;&#x5982",{"_index":481,"title":{},"body":{"c/system-intro.html#軟體元件":{}}}],["system)。java",{"_index":2650,"title":{},"body":{"java/encapsulation.html":{}}}],["system.arraycopy(data",{"_index":1258,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["system.arraycopy(newboard",{"_index":5873,"title":{},"body":{"java/examples/othello.html":{}}}],["system.arraycopy(p.board",{"_index":5874,"title":{},"body":{"java/examples/othello.html":{}}}],["system.arraycopy(tmp",{"_index":5933,"title":{},"body":{"java/examples/othello.html":{}}}],["system.currenttimemilli",{"_index":3892,"title":{},"body":{"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["system.exit",{"_index":3389,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/river-cross.html":{}}}],["system.gc",{"_index":1416,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["system.getproperti",{"_index":1932,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["system.in.read",{"_index":5421,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["system.loadlibrari",{"_index":1449,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#初始化的執行順序":{}}}],["system.loadlibrary(str",{"_index":1446,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#初始化的執行順序":{}}}],["system.out",{"_index":1426,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/io.html":{}}}],["system.out.print",{"_index":1230,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/examples/bingo.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{}}}],["system.out.print(data[i",{"_index":1236,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["system.out.print(data[i][j",{"_index":5718,"title":{},"body":{"java/examples/matrix.html":{}}}],["system.out.print(s+x",{"_index":3416,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["system.out.print(tablenam",{"_index":4165,"title":{},"body":{"java/jdbc.html":{}}}],["system.out.println",{"_index":1039,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{}}}],["system.out.println(",{"_index":5662,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["system.out.println(a.determin",{"_index":3400,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["system.out.println(a1.movemethod",{"_index":3017,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{}}}],["system.out.println(b.fullmask",{"_index":3070,"title":{},"body":{"java/extends.html":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["system.out.println(b.movemethod",{"_index":3018,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["system.out.println(count",{"_index":5404,"title":{},"body":{"java/examples/bingo.html":{}}}],["system.out.println(d.movemethod",{"_index":3019,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["system.out.println(data",{"_index":1445,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#初始化的執行順序":{}}}],["system.out.println(data[i",{"_index":1202,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["system.out.println(eppp",{"_index":5072,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["system.out.println(ex",{"_index":3961,"title":{},"body":{"java/jdbc.html":{},"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["system.out.println(f.movemethod",{"_index":3020,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["system.out.println(fab",{"_index":3503,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["system.out.println(gcd",{"_index":3496,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{}}}],["system.out.println(isnul",{"_index":4168,"title":{},"body":{"java/jdbc.html":{}}}],["system.out.println(lin",{"_index":4340,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["system.out.println(myid",{"_index":4456,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["system.out.println(numsol",{"_index":6046,"title":{},"body":{"java/examples/river-cross.html":{}}}],["system.out.println(pow",{"_index":3508,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["system.out.println(s.data",{"_index":1440,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#初始化的執行順序":{}}}],["system.out.println(sum",{"_index":3489,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["system.out.println(tmp[i",{"_index":1677,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["system.out.println(x",{"_index":1673,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號範例":{}}}],["system.out.println(year",{"_index":1045,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["s，將s設成輸入值x",{"_index":5299,"title":{},"body":{"c/examples/find-max-min.html":{}}}],["t",{"_index":3039,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/jdbc.html":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/othello.html":{}}}],["t.addactionlistener((actionlisten",{"_index":5011,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["t.addkeylistener((keylisten",{"_index":5012,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["t.board[i",{"_index":5945,"title":{},"body":{"java/examples/othello.html":{}}}],["t.columns.s",{"_index":4079,"title":{},"body":{"java/jdbc.html":{}}}],["t.getcaretposit",{"_index":5042,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["t.gettext",{"_index":5040,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["t.isedit",{"_index":5039,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["t.run",{"_index":4439,"title":{},"body":{"java/thread.html":{}}}],["t.setcaretposition(po",{"_index":5058,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["t.setcaretposition(sstart",{"_index":5053,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["t.settext(inputtruncate(sb.tostr",{"_index":5078,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["t.settext(sb.tostr",{"_index":5052,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["t.start",{"_index":4438,"title":{},"body":{"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["t1",{"_index":4457,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["t1.join",{"_index":4462,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["t1.run",{"_index":4460,"title":{},"body":{"java/thread.html":{}}}],["t1.start",{"_index":4459,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["t2",{"_index":4458,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["t2.join",{"_index":4463,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["t2.start",{"_index":4461,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["tab",{"_index":4985,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["tabl",{"_index":3989,"title":{},"body":{"java/jdbc.html":{},"java/examples/engineering-calculator.html":{}}}],["table)tables.elementat(i",{"_index":4008,"title":{},"body":{"java/jdbc.html":{}}}],["table)tables.elementat(i)).totalname.equals(totalnam",{"_index":4073,"title":{},"body":{"java/jdbc.html":{}}}],["table.catalognam",{"_index":3999,"title":{},"body":{"java/jdbc.html":{}}}],["table.java",{"_index":4091,"title":{},"body":{"java/jdbc.html":{}}}],["table.remark",{"_index":4005,"title":{},"body":{"java/jdbc.html":{}}}],["table.schemanam",{"_index":4000,"title":{},"body":{"java/jdbc.html":{}}}],["table.tablenam",{"_index":4001,"title":{},"body":{"java/jdbc.html":{}}}],["table.tabletyp",{"_index":4004,"title":{},"body":{"java/jdbc.html":{}}}],["table.totalnam",{"_index":4002,"title":{},"body":{"java/jdbc.html":{}}}],["table.trim",{"_index":4088,"title":{},"body":{"java/jdbc.html":{}}}],["table.trim().length",{"_index":4087,"title":{},"body":{"java/jdbc.html":{}}}],["table[token.type][operator_stack.peek",{"_index":5582,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["tablegui",{"_index":1898,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["tablenam",{"_index":4098,"title":{},"body":{"java/jdbc.html":{}}}],["tables.addelement(t",{"_index":3998,"title":{},"body":{"java/jdbc.html":{}}}],["tables.s",{"_index":4007,"title":{},"body":{"java/jdbc.html":{}}}],["tabletyp",{"_index":4099,"title":{},"body":{"java/jdbc.html":{}}}],["tail",{"_index":2673,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/queue.html":{}}}],["tail.next",{"_index":2674,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{}}}],["takeanumbermonitor",{"_index":4570,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["taken",{"_index":4572,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["tan",{"_index":5532,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["target",{"_index":4917,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["target.dispos",{"_index":4920,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["tax",{"_index":6099,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["tax.java",{"_index":6096,"title":{},"body":{"java/examples/tax-calculate.html":{}}}],["tcredit",{"_index":2398,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["templat",{"_index":1690,"title":{},"body":{"java/easy-print.html":{}}}],["termin",{"_index":166,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"java/java-vs-c.html":{},"java/java-vs-c.html#流程控制敘述":{},"java/examples/engineering-calculator.html":{}}}],["test",{"_index":2879,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{},"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["text",{"_index":819,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/gui.html":{},"java/gui.html#AWT":{}}}],["text/html",{"_index":4355,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["text/html\\n\\n",{"_index":4372,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["text/plain",{"_index":4352,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["text/plain;\\n\\tcharset=\\\"big5",{"_index":4298,"title":{},"body":{"java/net.html":{}}}],["text/plain;\\n\\tcharset=\\big5",{"_index":4411,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["textarea",{"_index":4839,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["textarea(message,row,col",{"_index":4951,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["textcompon",{"_index":4838,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{},"java/gui.html#鍵盤事件處理範例":{}}}],["textev",{"_index":4865,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{}}}],["textfield",{"_index":4824,"title":{},"body":{"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#AWT":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/tower-of-hanoi.html":{}}}],["tgcredit",{"_index":2388,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["theme\":\"simple\",\"scale\":1,\"lin",{"_index":1061,"title":{},"body":{"c/writing-intro.html":{}}}],["theme:simple,scale:1,lin",{"_index":1142,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["themselv",{"_index":4179,"title":{},"body":{"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["think",{"_index":5859,"title":{},"body":{"java/examples/othello.html":{}}}],["thinkcursor",{"_index":5855,"title":{},"body":{"java/examples/othello.html":{}}}],["thinking.join",{"_index":5942,"title":{},"body":{"java/examples/othello.html":{}}}],["this.spe",{"_index":1393,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["thisbatch",{"_index":4557,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["this物件複製到rel",{"_index":5709,"title":{},"body":{"java/examples/matrix.html":{}}}],["thread",{"_index":1179,"title":{"java/thread.html#Program-Process-Thread":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}},"body":{"java/array.html":{},"java/array.html#陣列索引的檢查":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#AWT":{},"java/examples/guess-sever-client.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/tower-of-hanoi.html":{}}}],["thread&#x3002",{"_index":4602,"title":{},"body":{"java/thread.html#Program-Process-Thread":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["thread&#x6b63;&#x5728;writ",{"_index":4778,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["thread&#xff0c;&#x5176;&#x9032;&#x5165;&#x9ede;&#x70ba",{"_index":4625,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["thread&#xff1a;thread",{"_index":4590,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["thread&apos;",{"_index":4631,"title":{},"body":{"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["thread'",{"_index":4437,"title":{},"body":{"java/thread.html":{}}}],["thread(runn",{"_index":4434,"title":{},"body":{"java/thread.html":{},"java/thread.html#如何產生-Thread":{}}}],["thread.currentthread().sleep",{"_index":4263,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{},"java/examples/tower-of-hanoi.html":{}}}],["thread.setpriority(int",{"_index":4442,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["threada",{"_index":4453,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["threada.join",{"_index":4452,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["threadexample1",{"_index":4436,"title":{},"body":{"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["threadexample2",{"_index":4440,"title":{},"body":{"java/thread.html":{},"java/thread.html#如何產生-Thread":{}}}],["thread想要writ",{"_index":4553,"title":{},"body":{"java/thread.html":{}}}],["thread想要讀,或是有thread",{"_index":4551,"title":{},"body":{"java/thread.html":{}}}],["thread正在writ",{"_index":4549,"title":{},"body":{"java/thread.html":{}}}],["thread正在讀,或是有thread",{"_index":4555,"title":{},"body":{"java/thread.html":{}}}],["thread要writ",{"_index":4564,"title":{},"body":{"java/thread.html":{}}}],["thread：thread",{"_index":4430,"title":{},"body":{"java/thread.html":{}}}],["throw",{"_index":1036,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/file-handler.html":{},"java/examples/matrix.html":{},"java/examples/reverse-matrix.html":{},"java/examples/river-cross.html":{}}}],["throwabl",{"_index":2853,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["throws最後面是",{"_index":2857,"title":{},"body":{"java/exception.html":{}}}],["throw後面沒有",{"_index":2864,"title":{},"body":{"java/exception.html":{}}}],["tiff",{"_index":347,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["time",{"_index":2631,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{},"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{},"java/net.html":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/examples/bingo.html":{},"java/examples/guess-sever-client.html":{}}}],["time(jit",{"_index":3407,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["timeb",{"_index":5308,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["titl",{"_index":1983,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#印表範例":{}}}],["tmp",{"_index":1211,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"c/examples/least-common-multiple.html":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{}}}],["tmp.addmove(legals[i",{"_index":5925,"title":{},"body":{"java/examples/othello.html":{}}}],["tmp.alphabeta",{"_index":5937,"title":{},"body":{"java/examples/othello.html":{}}}],["tmp.alphabeta(level",{"_index":5927,"title":{},"body":{"java/examples/othello.html":{}}}],["tmp.data",{"_index":2661,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{}}}],["tmp.endswith",{"_index":2394,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["tmp.equal",{"_index":2319,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["tmp.eval",{"_index":5926,"title":{},"body":{"java/examples/othello.html":{}}}],["tmp.length",{"_index":1676,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["tmp.next",{"_index":2660,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#範例":{}}}],["tmp.receiv",{"_index":4284,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["tmp.sender",{"_index":4283,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["tmp.size",{"_index":6070,"title":{},"body":{"java/examples/sudoku.html":{}}}],["tmp.subject",{"_index":4285,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["tmp.substr",{"_index":2395,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["tmp.time",{"_index":4326,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["tmp.trim",{"_index":2318,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["tmp.val",{"_index":5929,"title":{},"body":{"java/examples/othello.html":{}}}],["tmp1",{"_index":4035,"title":{},"body":{"java/jdbc.html":{}}}],["tmp2",{"_index":4037,"title":{},"body":{"java/jdbc.html":{}}}],["tmp3",{"_index":4038,"title":{},"body":{"java/jdbc.html":{}}}],["tmp4",{"_index":4039,"title":{},"body":{"java/jdbc.html":{}}}],["tmp5",{"_index":4049,"title":{},"body":{"java/jdbc.html":{}}}],["tmp6",{"_index":4050,"title":{},"body":{"java/jdbc.html":{}}}],["tmp7",{"_index":4051,"title":{},"body":{"java/jdbc.html":{}}}],["tmp8",{"_index":4040,"title":{},"body":{"java/jdbc.html":{}}}],["tmp9",{"_index":4041,"title":{},"body":{"java/jdbc.html":{}}}],["tmp=((cachedata)httpserv",{"_index":4361,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["tmp[count",{"_index":5932,"title":{},"body":{"java/examples/othello.html":{}}}],["tmp[i",{"_index":3965,"title":{},"body":{"java/jdbc.html":{}}}],["to.push(from.pop",{"_index":6162,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["toascii(str",{"_index":3958,"title":{},"body":{"java/jdbc.html":{}}}],["tobyt",{"_index":3942,"title":{},"body":{"java/jdbc.html":{}}}],["tobyte.convertall(s.tochararray",{"_index":3960,"title":{},"body":{"java/jdbc.html":{}}}],["tochar",{"_index":3940,"title":{},"body":{"java/jdbc.html":{}}}],["tochar.convertall(data",{"_index":3962,"title":{},"body":{"java/jdbc.html":{}}}],["tochar.convertall(dest",{"_index":3984,"title":{},"body":{"java/jdbc.html":{}}}],["token",{"_index":3373,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{}}}],["token(calc.divid",{"_index":5616,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["token(calc.end",{"_index":5613,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["token(calc.error",{"_index":5624,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["token(calc.fun,buf.tostr",{"_index":5627,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["token(calc.left_round_bracket",{"_index":5619,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["token(calc.literal,buf.tostr",{"_index":5625,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["token(calc.minu",{"_index":5621,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["token(calc.mod",{"_index":5617,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["token(calc.multipli",{"_index":5615,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["token(calc.plu",{"_index":5614,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["token(calc.pow",{"_index":5618,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["token(calc.right_round_bracket",{"_index":5620,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["token.data.equ",{"_index":5605,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["token.equ",{"_index":3375,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{}}}],["token.typ",{"_index":5580,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["toolkit",{"_index":97,"title":{},"body":{"c/c-intro.html":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/tower-of-hanoi.html":{}}}],["toolkit.getdefaulttoolkit().getprintjob",{"_index":1962,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["toolkit.getdefaulttoolkit().getscreens",{"_index":1987,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["toolkit.getdefaulttoolkit().getsystemclipboard().getcont",{"_index":5069,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["toolkit.getdefaulttoolkit().getsystemclipboard().setcont",{"_index":5068,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["top",{"_index":1253,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/stack.html":{},"java/examples/tower-of-hanoi.html":{}}}],["topwindow",{"_index":5097,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["topwindow.addwindowlisten",{"_index":5146,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["topwindow.dispos",{"_index":5126,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["topwindow.getcontentpan",{"_index":5129,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["topwindow.pack",{"_index":5147,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["topwindow.setjmenubar(jmb",{"_index":5138,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["topwindow.show",{"_index":5148,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["tosql",{"_index":3973,"title":{},"body":{"java/jdbc.html":{}}}],["tostr",{"_index":2880,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{},"java/jdbc.html":{}}}],["tostringfast",{"_index":3963,"title":{},"body":{"java/jdbc.html":{}}}],["total",{"_index":1155,"title":{},"body":{"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#迴圈範例":{},"c/examples/find-prime-numbers.html":{}}}],["totalnam",{"_index":4060,"title":{},"body":{"java/jdbc.html":{}}}],["totalname.indexof(catalogseparator,i",{"_index":4062,"title":{},"body":{"java/jdbc.html":{}}}],["totalpag",{"_index":2051,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{}}}],["totalvehicl",{"_index":1405,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["tower",{"_index":6126,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["tran",{"_index":3943,"title":{},"body":{"java/jdbc.html":{}}}],["transfer",{"_index":4299,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["treat",{"_index":3934,"title":{},"body":{"java/jdbc.html":{}}}],["tree",{"_index":2623,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{}}}],["tree&#x3002",{"_index":2733,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["tri",{"_index":1225,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["tri[i",{"_index":1233,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["tri[i][j",{"_index":1231,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["triangl",{"_index":1221,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["trim",{"_index":2283,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{}}}],["true",{"_index":1901,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{},"java/jdbc.html":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/bingo.html":{},"java/examples/engineering-calculator.html":{},"java/examples/guess-sever-client.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["truetyp",{"_index":351,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["truncat",{"_index":3928,"title":{},"body":{"java/jdbc.html":{}}}],["tscore",{"_index":2389,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["tscore/knowncredit",{"_index":2403,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["tt",{"_index":1192,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/minesweeper.html":{}}}],["tt[i",{"_index":1193,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{}}}],["turn",{"_index":5402,"title":{},"body":{"java/examples/bingo.html":{},"java/examples/othello.html":{}}}],["turn==black",{"_index":5904,"title":{},"body":{"java/examples/othello.html":{}}}],["turn==whit",{"_index":5905,"title":{},"body":{"java/examples/othello.html":{}}}],["turn^ston",{"_index":5896,"title":{},"body":{"java/examples/othello.html":{}}}],["tutori",{"_index":6177,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["tw",{"_index":3951,"title":{},"body":{"java/jdbc.html":{}}}],["two",{"_index":1245,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["tx",{"_index":4950,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["tx.setedit",{"_index":4952,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["tx.setfont(font",{"_index":4953,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/othello.html":{}}}],["txt",{"_index":4356,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["type",{"_index":95,"title":{},"body":{"c/c-intro.html":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{}}}],["type)op",{"_index":3453,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["type==types.decim",{"_index":5057,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["type==types.numer",{"_index":5056,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["type==types.numeric||type==types.decim",{"_index":5050,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["typenam",{"_index":4147,"title":{},"body":{"java/jdbc.html":{}}}],["typename.equ",{"_index":4166,"title":{},"body":{"java/jdbc.html":{}}}],["typeoneexcept",{"_index":2867,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["types.bigint",{"_index":4155,"title":{},"body":{"java/jdbc.html":{}}}],["types.bit",{"_index":4164,"title":{},"body":{"java/jdbc.html":{}}}],["types.char",{"_index":2272,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["types.decim",{"_index":4159,"title":{},"body":{"java/jdbc.html":{}}}],["types.doubl",{"_index":4163,"title":{},"body":{"java/jdbc.html":{}}}],["types.float",{"_index":4160,"title":{},"body":{"java/jdbc.html":{}}}],["types.integ",{"_index":4161,"title":{},"body":{"java/jdbc.html":{}}}],["types.numer",{"_index":4158,"title":{},"body":{"java/jdbc.html":{}}}],["types.r",{"_index":4162,"title":{},"body":{"java/jdbc.html":{}}}],["types.smallint",{"_index":4157,"title":{},"body":{"java/jdbc.html":{}}}],["types.tinyint",{"_index":4156,"title":{},"body":{"java/jdbc.html":{}}}],["typethreeexcept",{"_index":2871,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["typetwoexcept",{"_index":2869,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["u",{"_index":155,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["u4fe5",{"_index":3434,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["ud",{"_index":5324,"title":{},"body":{"c/examples/find-prime-numbers.html":{}}}],["unabl",{"_index":1928,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["unicod",{"_index":343,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"java/io.html":{},"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{},"java/jdbc.html":{}}}],["unicode&#x3002",{"_index":589,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["unicode&#xff0c;&#x56e0;&#x6b64;&#x5b57;&#x5143;&#x5e38;&#x6578;&#x7684;&#x8868;&#x793a;&#x6cd5;&#xff0c;&#x9664;&#x56e0;&#x5faa",{"_index":3609,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["uniqu",{"_index":6054,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unique(board)).sol",{"_index":6069,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unique(data0)).print().sol",{"_index":6085,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unique(data1)).print().sol",{"_index":6086,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unique(data10)).print().sol",{"_index":6095,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unique(data2)).print().sol",{"_index":6087,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unique(data3)).print().sol",{"_index":6088,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unique(data4)).print().sol",{"_index":6089,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unique(data5)).print().sol",{"_index":6090,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unique(data6)).print().sol",{"_index":6091,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unique(data7)).print().sol",{"_index":6092,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unique(data8)).print().sol",{"_index":6093,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unique(data9)).print().sol",{"_index":6094,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unique)tmp.elementat(i)).print",{"_index":6073,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unique.java",{"_index":6051,"title":{},"body":{"java/examples/sudoku.html":{}}}],["unit",{"_index":252,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#硬體元件":{},"c/system-operation.html":{}}}],["unit)。pentium",{"_index":774,"title":{},"body":{"c/system-operation.html":{}}}],["univers",{"_index":107,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/guess-sever-client.html":{},"java/examples/sudoku.html":{},"java/examples/tower-of-hanoi.html":{}}}],["unix",{"_index":42,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#軟體元件":{},"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/encapsulation.html":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["unknown",{"_index":1994,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/minesweeper.html":{}}}],["unreach",{"_index":2873,"title":{},"body":{"java/exception.html":{},"java/exception.html#相關語法":{}}}],["unsign",{"_index":156,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"java/java-vs-c.html":{},"c/examples/find-prime-numbers.html":{}}}],["unsigned&#x3002",{"_index":3602,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["unspecifi",{"_index":3000,"title":{},"body":{"java/extends.html":{},"java/extends.html#基本觀念":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{}}}],["unsupportedflavorexcept",{"_index":5003,"title":{},"body":{"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{}}}],["until",{"_index":4523,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["up",{"_index":4514,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/queue.html":{}}}],["upcast",{"_index":3008,"title":{},"body":{"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["upcasting(&#x5411;&#x4e0a;&#x8f49;&#x578b",{"_index":3095,"title":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}},"body":{}}],["updat",{"_index":2034,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/minesweeper.html":{},"java/examples/reverse-matrix.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["us",{"_index":1251,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/jdbc.html":{},"c/examples/find-prime-numbers.html":{},"java/examples/bingo.html":{}}}],["usag",{"_index":3386,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{},"java/examples/river-cross.html":{}}}],["user",{"_index":1971,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/tower-of-hanoi.html":{}}}],["user'",{"_index":6146,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["usr/includ",{"_index":44,"title":{},"body":{"c/c-intro.html":{}}}],["utf",{"_index":4238,"title":{},"body":{"java/net.html":{}}}],["v",{"_index":1657,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/gui.html":{}}}],["v&#x8907;&#x88fd;&#x8cbc;&#x4e0a;&#x529f;&#x80fd",{"_index":5282,"title":{},"body":{"java/gui.html#鍵盤事件處理範例":{}}}],["v.add",{"_index":1658,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["v.add(index",{"_index":1660,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["v.add(integer.tostring(i",{"_index":1671,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["v.copyinto(tmp",{"_index":1675,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["v.get(i",{"_index":1662,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["v.remove(i",{"_index":1664,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["v.size",{"_index":1661,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["v1",{"_index":1406,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["v1.getdir",{"_index":1412,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["v1.getspe",{"_index":1411,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["v1.setdir",{"_index":1410,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["v1.setspe",{"_index":1409,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["v2",{"_index":1408,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["val",{"_index":1190,"title":{},"body":{"java/array.html":{},"java/array.html#陣列範例":{},"java/container.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["valid",{"_index":6155,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["valu",{"_index":3048,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/examples/file-handler.html":{},"java/examples/reverse-matrix.html":{}}}],["var",{"_index":1066,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["varchar",{"_index":143,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["varchar=%c",{"_index":149,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["vardoubl",{"_index":141,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["vardouble=%lf",{"_index":148,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["varfloat",{"_index":139,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["varfloat=%f",{"_index":147,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["variabl",{"_index":55,"title":{},"body":{"c/c-intro.html":{},"c/writing-intro.html":{},"c/writing-intro.html#程式語言":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/class-and-obj.html":{},"java/class-and-obj.html#類別與物件的基本概念":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/message-passing.html":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{},"java/message-passing.html#Message-Passing-的語法":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{}}}],["variable&#x3002;&#x5b58;&#x53d6;class",{"_index":1535,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["variable&#xff0c;&#x4e0d;&#x540c",{"_index":4586,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["variable&#xff0c;&#x5176;&#x578b;&#x614b;&#x70ba",{"_index":1548,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["variable&#xff1a",{"_index":4644,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["variable(&#x7269;&#x4ef6;&#x8b8a;&#x6578;&#x6210;&#x54e1",{"_index":1480,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["variable。存取class",{"_index":1422,"title":{},"body":{"java/class-and-obj.html":{}}}],["varint",{"_index":136,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["varint=%d",{"_index":145,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["varlong",{"_index":137,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["varlong=%ld",{"_index":146,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["varnam",{"_index":3437,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#資料型別":{}}}],["varstr",{"_index":144,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["varstring=%s\\n",{"_index":150,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{}}}],["vecotr",{"_index":4132,"title":{},"body":{"java/jdbc.html":{}}}],["vector",{"_index":1635,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#印表範例":{},"java/jdbc.html":{},"java/examples/river-cross.html":{},"java/examples/sudoku.html":{}}}],["vectorexampl",{"_index":1656,"title":{},"body":{"java/container.html":{},"java/container.html#範例程式":{}}}],["vehicl",{"_index":1379,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["vehicle.totalvehicl",{"_index":1414,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["version",{"_index":3897,"title":{},"body":{"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{}}}],["version1",{"_index":3914,"title":{},"body":{"java/jdbc.html":{}}}],["version2",{"_index":3919,"title":{},"body":{"java/jdbc.html":{}}}],["vertic",{"_index":2097,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/examples/bingo.html":{}}}],["vi",{"_index":832,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["vi&#x3002",{"_index":981,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["view.java",{"_index":4126,"title":{},"body":{"java/jdbc.html":{}}}],["virtual",{"_index":1370,"title":{"java/extends.html#Virtual-Function-虛擬函數":{},"java/java-vs-c.html#Java-Virtual-Machine":{}},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/extends.html":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/interface.html":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Abstract-Class-and-Method":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["visit",{"_index":5748,"title":{},"body":{"java/examples/minesweeper.html":{},"java/examples/river-cross.html":{}}}],["visited[getkey",{"_index":6037,"title":{},"body":{"java/examples/river-cross.html":{}}}],["visited[init.getkey",{"_index":6044,"title":{},"body":{"java/examples/river-cross.html":{}}}],["visual",{"_index":845,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{}}}],["vlen",{"_index":2154,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["vlen*strlen)/(strlen",{"_index":2162,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["void",{"_index":114,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/class-and-obj.html#初始化的執行順序":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#下面的程式碼哪裡有錯":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/exception.html#範例":{},"java/extends.html":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Override-覆寫":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#本章觀念整理範例":{},"java/extends.html#final-修飾字":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/jdbc.html":{},"java/message-passing.html":{},"java/message-passing.html#Message-Passing-的語法":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#鍵盤事件處理範例":{},"java/gui.html#文字編輯器":{},"c/examples/avg.html":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/taxi-fee-calculator.html":{},"java/examples/OX-game.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{},"java/examples/river-cross.html":{},"java/examples/stack.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["w",{"_index":3033,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["w1",{"_index":4500,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["w1.join",{"_index":4522,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["w1.start",{"_index":4505,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["w2",{"_index":4502,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["w2.join",{"_index":4524,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["w2.start",{"_index":4506,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["wait",{"_index":4251,"title":{},"body":{"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/examples/queue.html":{},"java/examples/read-write-queue.html":{}}}],["waitin",{"_index":4561,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["wake",{"_index":4513,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/queue.html":{}}}],["want",{"_index":1391,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["wantoperand",{"_index":5610,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["warn",{"_index":5394,"title":{},"body":{"java/examples/bingo.html":{}}}],["wast",{"_index":4494,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["wav",{"_index":354,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#數字系統":{}}}],["weight",{"_index":5373,"title":{},"body":{"java/examples/bingo.html":{}}}],["weight[at",{"_index":5383,"title":{},"body":{"java/examples/bingo.html":{}}}],["weight[lines[i][j",{"_index":5379,"title":{},"body":{"java/examples/bingo.html":{}}}],["weight_i",{"_index":4928,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["weight_x",{"_index":4927,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["welcome.html",{"_index":4348,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["west",{"_index":1407,"title":{},"body":{"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["whichfil",{"_index":4337,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["whichfile.endswith",{"_index":4353,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["whichfile.equ",{"_index":4347,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["whichfile.length",{"_index":4350,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["whichfile.substr",{"_index":4349,"title":{},"body":{"java/net.html":{},"java/net.html#HTTP-Server":{}}}],["white",{"_index":5830,"title":{},"body":{"java/examples/othello.html":{}}}],["white.setlabel",{"_index":5837,"title":{},"body":{"java/examples/othello.html":{}}}],["whoassist",{"_index":2374,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["whodoubl",{"_index":2371,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["whoplayblack",{"_index":5863,"title":{},"body":{"java/examples/othello.html":{}}}],["whoplayblack==comput",{"_index":5920,"title":{},"body":{"java/examples/othello.html":{}}}],["whoplayblack==human",{"_index":5909,"title":{},"body":{"java/examples/othello.html":{}}}],["whoplaywhit",{"_index":5864,"title":{},"body":{"java/examples/othello.html":{}}}],["whoplaywhite==comput",{"_index":5919,"title":{},"body":{"java/examples/othello.html":{}}}],["whoplaywhite==human",{"_index":5910,"title":{},"body":{"java/examples/othello.html":{}}}],["whose",{"_index":6178,"title":{},"body":{"java/examples/tower-of-hanoi.html":{}}}],["width",{"_index":2105,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/extends.html":{},"java/extends.html#本章觀念整理範例":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/examples/minesweeper.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["width\":2,\"lin",{"_index":1062,"title":{},"body":{"c/writing-intro.html":{}}}],["width:2,lin",{"_index":1143,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["widthcol",{"_index":5949,"title":{},"body":{"java/examples/othello.html":{}}}],["win",{"_index":4907,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{}}}],["winder",{"_index":5908,"title":{},"body":{"java/examples/othello.html":{}}}],["window",{"_index":270,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#軟體元件":{},"c/system-intro.html#數字系統":{},"c/system-operation.html":{},"c/system-operation.html#Software-development-process":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/gui.html":{},"java/gui.html#GUI-簡介":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{},"java/examples/tower-of-hanoi.html":{}}}],["windowadapt",{"_index":1975,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["windowclos",{"_index":4919,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["windowev",{"_index":4857,"title":{},"body":{"java/gui.html":{},"java/gui.html#AWT":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{},"java/examples/engineering-calculator.html":{},"java/examples/othello.html":{}}}],["windowlist",{"_index":4915,"title":{},"body":{"java/gui.html":{},"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/othello.html":{}}}],["windows&#x3001;open",{"_index":5184,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["windows、open",{"_index":4810,"title":{},"body":{"java/gui.html":{}}}],["without",{"_index":3047,"title":{},"body":{"java/extends.html":{},"java/extends.html#本章觀念整理範例":{}}}],["word",{"_index":272,"title":{},"body":{"c/system-intro.html":{},"c/system-intro.html#軟體元件":{},"java/thread.html":{},"java/thread.html#Program-Process-Thread":{}}}],["work",{"_index":3924,"title":{},"body":{"java/jdbc.html":{}}}],["world",{"_index":134,"title":{},"body":{"c/c-intro.html":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的引用":{}}}],["world&#x3002;&#x7136;&#x5f8c;&#x63db;&#x884c",{"_index":191,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["world.\\n",{"_index":133,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"java/class-and-obj.html":{},"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["world\\n",{"_index":3417,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["worri",{"_index":2100,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["wrap",{"_index":2101,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/jdbc.html":{}}}],["write",{"_index":780,"title":{},"body":{"c/system-operation.html":{},"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html":{},"java/gui.html#井字遊戲的-Swing-版本":{},"java/examples/OX-game.html":{},"java/examples/othello.html":{}}}],["write(fd3,buf,fd2",{"_index":5347,"title":{},"body":{"c/examples/open-file.html":{}}}],["writer",{"_index":3354,"title":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}},"body":{"java/io.html":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/examples/read-write-queue.html":{}}}],["writer&#xff1a;&#x53ea;&#x540c;&#x6642;&#x5141;&#x8a31;&#x4e00;&#x500b;&#x57f7;&#x884c;&#x7dd2;&#x5b58;&#x53d6",{"_index":4772,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["writer)).start",{"_index":4520,"title":{},"body":{"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/examples/read-write-queue.html":{}}}],["writerspreferredmonitor",{"_index":4552,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["writerthread",{"_index":4535,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["writerthread(srw)).start",{"_index":4541,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["writing(0",{"_index":4563,"title":{},"body":{"java/thread.html":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x",{"_index":23,"title":{},"body":{"c/c-intro.html":{},"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/array.html#陣列範例":{},"java/class-and-obj.html":{},"java/class-and-obj.html#final-關鍵字":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/exception.html":{},"java/exception.html#相關語法":{},"java/interface.html":{},"java/interface.html#Abstract-Class-and-Method":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"java/thread.html":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{},"java/gui.html":{},"java/gui.html#文字編輯器":{},"c/examples/fibonacci-number.html":{},"c/examples/find-max-min.html":{},"c/examples/least-common-multiple.html":{},"java/examples/bingo.html":{},"java/examples/editor.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/tower-of-hanoi.html":{}}}],["x&#x7684;&#x9577;&#x5ea6;&#x5230;&#x5e95;&#x662f;&#x591a;&#x5c11",{"_index":1266,"title":{},"body":{"java/array.html#C-語言陣列回顧":{}}}],["x&#xff0c;&#x5f97;&#x5230",{"_index":635,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x)+f.charwidth(chars[i",{"_index":2148,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["x*i",{"_index":5764,"title":{},"body":{"java/examples/minesweeper.html":{}}}],["x+(width",{"_index":2159,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["x+1",{"_index":394,"title":{},"body":{"c/system-intro.html":{}}}],["x+1)&#xff0c;&#x56e0;&#x6b64;&#x6700;&#x591a",{"_index":673,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x,i",{"_index":3498,"title":{},"body":{"java/java-vs-c.html":{},"c/examples/least-common-multiple.html":{}}}],["x.arrang",{"_index":5424,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["x.choos",{"_index":5398,"title":{},"body":{"java/examples/bingo.html":{}}}],["x.data",{"_index":5708,"title":{},"body":{"java/examples/matrix.html":{}}}],["x.data.length",{"_index":5707,"title":{},"body":{"java/examples/matrix.html":{}}}],["x.data[i][j",{"_index":5711,"title":{},"body":{"java/examples/matrix.html":{}}}],["x.data[k][j",{"_index":5717,"title":{},"body":{"java/examples/matrix.html":{}}}],["x.getsolutionnum",{"_index":5425,"title":{},"body":{"java/examples/eight-queens-puzzle.html":{}}}],["x.height",{"_index":1989,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#Print-java":{}}}],["x.indexof",{"_index":5121,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["x.length",{"_index":1159,"title":{},"body":{"java/array.html":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/examples/matrix.html":{}}}],["x.print",{"_index":5396,"title":{},"body":{"java/examples/bingo.html":{}}}],["x.setchecked(num",{"_index":5399,"title":{},"body":{"java/examples/bingo.html":{}}}],["x.tablename+sep+x.columnnam",{"_index":4139,"title":{},"body":{"java/jdbc.html":{}}}],["x2013",{"_index":924,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["x2013;op",{"_index":3709,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x201c;&#x4e1f;&#x68c4;&#x201d",{"_index":622,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x201c;&#x53ef;&#x8868;&#x9054;&#x7bc4;&#x570d;&#x5f88;&#x5927;&#x4e14;&#x6709;&#x5c0f;&#x6578;&#x201d",{"_index":718,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x201c;&#x5be6;&#x6578;&#x201d;&#xff0c;&#x800c;&#x8981;&#x8aaa",{"_index":708,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x201c;&#x5ffd;&#x7565;&#x6ea2;&#x4f4d;&#x201d",{"_index":613,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x201c;&#x5ffd;&#x8996;&#x201d",{"_index":623,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x201c;&#x6709;&#x9650;&#x4f4d;&#x6578;&#x7684;&#x4e8c;&#x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x201d;&#xff0c;&#x6240;&#x4ee5;&#x80fd;&#x8868;&#x9054;&#x7684;&#x6578;&#x5b57;&#x6709;&#x9650;&#xff0c;&#x4e0d;&#x4f46;&#x4e0d;&#x80fd;&#x8868;&#x9054;&#x50cf",{"_index":712,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x201c;&#x6d6e;&#x52d5;&#x201d;&#xff0c;&#x6240;&#x4ee5;&#x624d;&#x6703;&#x88ab;&#x7a31;&#x70ba;&#x662f",{"_index":726,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x201c;&#x6d6e;&#x9ede;&#x6578;&#x201d",{"_index":709,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x201c;&#x6d6e;&#x9ede;&#x6578;&#x201d;&#x3002;&#x6211;&#x5011;&#x5e38;&#x7528",{"_index":727,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x201c;&#x6ea2;&#x4f4d;&#x201d",{"_index":615,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x201c;&#x7701;&#x7565;&#x201d",{"_index":624,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x201c;&#x7b26;&#x865f;&#x8207;&#x5927;&#x5c0f;&#x8868;&#x793a;&#x6cd5;&#x201d;&#xff1a;&#x7b2c;&#x4e00;&#x500b",{"_index":601,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x2026",{"_index":512,"title":{},"body":{"c/system-intro.html#數字系統":{},"c/system-operation.html#Software-development-process":{},"java/java-vs-c.html#運算符號範例":{}}}],["x2026;999",{"_index":659,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x3001",{"_index":2914,"title":{},"body":{"java/exception.html#相關語法":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/thread.html#Program-Process-Thread":{},"java/gui.html#GUI-簡介":{}}}],["x3002",{"_index":543,"title":{},"body":{"c/system-intro.html#數字系統":{},"java/class-and-obj.html#類別與物件的基本概念":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/encapsulation.html#類別成員的存取":{},"java/exception.html#簡介":{},"java/exception.html#相關語法":{},"java/extends.html#基本觀念":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{},"java/interface.html#Abstract-Class-and-Method":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/thread.html#如何產生-Thread":{},"java/gui.html#GUI-簡介":{}}}],["x3002;&#x4e0d;&#x8ad6;&#x7cfb;&#x7d71;&#x5275;&#x9020;&#x4e86;&#x591a;&#x5c11",{"_index":1532,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x3002;&#x4ee5;&#x4e0b;&#x7bc4;&#x4f8b",{"_index":1511,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x3002;&#x53ea;&#x8981;&#x7b26;&#x5408",{"_index":918,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x3002;&#x5982;&#x679c;&#x6211;&#x5011;&#x53ea;&#x7528;&#x5230",{"_index":2717,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x3002;&#x5f9e;&#x4ee5;&#x4e0a;&#x7684;&#x6558;&#x8ff0;&#xff0c;&#x8b80;&#x8005;&#x53ef;&#x4ee5;&#x63a8;&#x77e5;&#x9019;&#x56db;&#x7a2e;&#x5b58;&#x53d6;&#x7bc4;&#x570d;&#x7684;&#x5927;&#x5c0f;&#x662f",{"_index":2699,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x3002;&#x6253;&#x500b;&#x6bd4;&#x65b9;&#xff0c",{"_index":3639,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x3002;&#x6307;&#x5b9a",{"_index":2719,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x3002;&#x6b64;&#x9650;&#x5236;&#x662f;&#x56e0;&#x70ba",{"_index":2742,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x3002;&#x7576",{"_index":1502,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x3002;&#x8001;&#x5e2b;&#x4f60;&#x5beb;&#x932f;&#x4e86;&#x5427;&#xff0c;&#x61c9;&#x8a72;&#x662f",{"_index":730,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x3002;&#x800c",{"_index":620,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x3002;&#x82e5;&#x4e0d;&#x60f3;&#x8b93",{"_index":987,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x3002;&#x82e5;&#x8981;&#x8f49;&#x6210",{"_index":540,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x3002;&#x8981;&#x5ba3;&#x544a;&#x67d0",{"_index":2703,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x3002;&#x8981;&#x7279;&#x5225;&#x6ce8;&#x610f;&#x7684;&#x662f;&#xff0c;&#x50b3;&#x56de;&#x503c;&#x4e26;&#x4e0d;&#x80fd;&#x7528;&#x4f86;&#x5206;&#x8fa8;&#x8981;&#x547c;&#x53eb;&#x54ea;&#x500b",{"_index":1589,"title":{},"body":{"java/class-and-obj.html#Overloading":{}}}],["x3002;e",{"_index":721,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x3002;java",{"_index":3657,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x300c;&#x5b57;&#x5143;&#x5c0d;&#x61c9;&#x8868;&#x300d",{"_index":3613,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x3c0",{"_index":713,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x4e00;&#x500b",{"_index":742,"title":{},"body":{"c/system-intro.html#浮點數表示法":{},"java/thread.html#Program-Process-Thread":{}}}],["x4e00;&#x500b;&#x6216;&#x4ee5;&#x4e0a;&#x7684",{"_index":4589,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x4e00;&#x500b;&#x7c21;&#x5316;&#x7684;&#x5178;&#x578b;&#x7684;&#x96fb;&#x8166;&#x7cfb;&#x7d71;&#x67b6;&#x69cb;&#x53ef;&#x7531;&#x5716;&#x4e8c;&#x4f86;&#x8868;&#x793a;&#x3002;&#x96fb;&#x8166;&#x7684;&#x904b;&#x7b97;&#x662f;&#x7531;&#x4e2d;&#x592e;&#x8655;&#x7406;&#x55ae;&#x5143",{"_index":455,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x4e00;&#x5806",{"_index":2776,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x4e00;&#x5b9a;&#x6c92;&#x6709;&#x554f;&#x984c;&#xff1a",{"_index":3104,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x4e00;&#x6a23;&#x53ef;&#x4ee5;&#x4f5c;&#x70ba;&#x4e00;&#x7a2e;&#x578b;&#x614b;&#x7684;&#x5ba3;&#x544a;&#xff0c;&#x56e0;&#x6b64;&#x5982;&#x4e0b;&#x7684;&#x5224;&#x65b7;&#x90fd;&#x662f;&#x6b63;&#x78ba;&#x7684",{"_index":3266,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x4e00;&#x7a2",{"_index":5167,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x4e00;&#x822c;&#x4f86;&#x8aaa",{"_index":2942,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x4e00;&#x822c;&#x6211;&#x5011;&#x90fd;&#x4f7f;&#x7528;&#x7701;&#x7565",{"_index":2786,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x4e00;&#x822c;&#x662f;&#x4ee5;&#x8edf;&#x9ad4;&#x4f86;&#x6a21;&#x64ec;&#x7684;&#xff0c;&#x53ea;&#x8981;&#x65b0;&#x7684;&#x5e73;&#x53f0;&#x6709",{"_index":3540,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x4e00;&#x822c;&#x800c;&#x8a00;&#xff0c;&#x4ee5",{"_index":500,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x4e00;&#x8d77;&#x5b9a;&#x7fa9;&#x5728",{"_index":4196,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x4e0a;&#x4e00;&#x7bc0;&#x7684",{"_index":4766,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x4e0a;&#x4e00;&#x9801",{"_index":2496,"title":{},"body":{"java/easy-print.html#Print-java":{}}}],["x4e0a;&#x5143;&#x4ef6;&#x7684;&#x4ea4;&#x96c6;&#xff0c;&#x56e0;&#x6b64",{"_index":5186,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x4e0a;&#x5370;&#x51fa",{"_index":190,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x4e0a;&#x7684",{"_index":2818,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x4e0a;&#x8868;&#x662f;&#x8aaa",{"_index":662,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x4e0a;&#x8ff0;&#x4f8b;&#x5b50;&#x88e1;&#x6240;&#x7528;&#x5230;&#x7684;&#x95dc;&#x9375;&#x5b57;&#x6216;&#x985e;&#x5225;&#x540d;&#x7a31;&#x8aaa;&#x660e;&#x5982;&#x4e0b;&#xff1a",{"_index":1516,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x4e0a;&#x8ff0;&#x4f8b;&#x5b50;&#x88e1;&#xff0c;&#x5982;&#x679c;&#x6a94;&#x6848",{"_index":2893,"title":{},"body":{"java/exception.html#簡介":{}}}],["x4e0a;&#x8ff0;&#x5169;&#x500b;&#x53ef;&#x7e3d;&#x7a31;&#x70ba",{"_index":1483,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x4e0a;&#x8ff0;&#x7684;&#x7bc4;&#x4f8b;&#x4e2d;&#xff0c",{"_index":1302,"title":{},"body":{"java/array.html#多維陣列":{}}}],["x4e0a;&#x8ff0;&#x7684;&#x7bc4;&#x4f8b;&#x6703;&#x5370;&#x51fa;&#xff1a",{"_index":2944,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x4e0a;&#x8ff0;&#x7bc4;&#x4f8b;&#x6709;&#x5169;&#x9ede;&#x8981;&#x6ce8;&#x610f",{"_index":1311,"title":{},"body":{"java/array.html#多維陣列":{}}}],["x4e0a;&#x8ff0;&#x904e;&#x7a0b;&#x4e2d;&#x5e7e;&#x500b;&#x6bd4;&#x8f03;&#x6703;&#x767c;&#x751f;&#x7684;&#x554f;&#x984c;&#x662f;&#xff1a",{"_index":3572,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x4e0a;&#x958b;&#x767c;&#x7684",{"_index":3530,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x4e0a;&#x9762;&#x7684",{"_index":3156,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x4e0a;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#x88e1;&#x8aaa;&#x660",{"_index":1587,"title":{},"body":{"java/class-and-obj.html#Overloading":{}}}],["x4e0a;&#x9762;&#x8a0a;&#x606f;&#x7684;&#x610f;&#x7fa9;&#x662f;&#xff1a",{"_index":1322,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x4e0a;&#xff0c;&#x4e0b;&#x9762;&#x6709;&#x95dc",{"_index":978,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x4e0a;&#xff0c;&#x5247;&#x6709;&#x7528;&#x5230;&#x5c08;&#x5c6c;&#x7a0b;&#x5f0f;&#x5eab;&#x7684;&#x90e8;&#x5206",{"_index":3532,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x4e0b;&#x4e00;&#x500b;&#x8cbb;&#x6c0f;&#x6578;&#x4f9d;&#x5b9a;&#x7fa9;&#x70ba",{"_index":3844,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x4e0b;&#x4e00;&#x7bc0",{"_index":3293,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x4e0b;&#x4e00;&#x9801",{"_index":2497,"title":{},"body":{"java/easy-print.html#Print-java":{}}}],["x4e0b;&#x4fe",{"_index":2556,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x4e0b;&#x5716;&#x70ba",{"_index":1337,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x4e0b;&#x7684",{"_index":4751,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x4e0b;&#x7684;&#x8996;&#x7a97;)&#x3001",{"_index":5227,"title":{},"body":{"java/gui.html#AWT":{}}}],["x4e0b;&#x9054;&#x7de8;&#x8b6f;&#x6307;&#x4ee4;&#xff0c;&#x4e0d;&#x4f46;&#x8cbb;&#x6642;&#xff0c;&#x800c;&#x4e14;&#x5bb9;&#x6613;&#x907a;&#x6f0f;&#x3002;&#x5373;&#x4f7f;&#x5beb;&#x500b;&#x6279;&#x6b21;&#x7a0b;&#x5f0f;&#xff0c;&#x4e5f;&#x8981;&#x96a8;&#x6642;&#x8a18;&#x5f97;&#x7d0d;&#x5165;&#x65b0;&#x7684;&#x539f;&#x59cb;&#x6a94",{"_index":2816,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x4e0b;&#x9762;&#x7684;&#x7a0b;&#x5f0f;&#x78bc;&#x54ea;&#x88e1;&#x6709;&#x932f",{"_index":2795,"title":{"java/encapsulation.html#下面的程式碼哪裡有錯":{}},"body":{}}],["x4e0b;&#x9762;&#x7684;&#x985e;&#x5225;&#xff0c;&#x5c6c;&#x65bc",{"_index":1545,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x4e0d;&#x505a;&#x4efb;&#x4f55;&#x4e8b;&#x3002",{"_index":1615,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x4e0d;&#x53ea;&#x4e00;&#x822c;&#x7684",{"_index":1583,"title":{},"body":{"java/class-and-obj.html#Overloading":{}}}],["x4e0d;&#x53ef;&#x88ab;&#x7e7c;&#x627f;&#xff0c;&#x653e;&#x5728",{"_index":3178,"title":{},"body":{"java/extends.html#final-修飾字":{}}}],["x4e0d;&#x540c;&#x6578;&#x5b57;&#x7cfb;&#x7d71;&#x7684;&#x6578;&#x503c;&#x904b;&#x7b97",{"_index":507,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x4e0d;&#x540c;&#x6578;&#x5b57;&#x7cfb;&#x7d71;&#x9593;&#x7684;&#x8f49;&#x63db",{"_index":511,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x4e0d;&#x540c;&#x7684",{"_index":852,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x4e0d;&#x540c;&#x8655;&#x5728;&#x65bc",{"_index":3713,"title":{},"body":{"java/java-vs-c.html#流程控制敘述":{}}}],["x4e0d;&#x540c;&#x8655;&#x5728;&#x65bc;&#x6bcf;&#x500b",{"_index":1506,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x4e0d;&#x540c;&#xff1a",{"_index":4205,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x4e0d;&#x5b58;&#x5728;&#xff0c;&#x5247;&#x7121;&#x6cd5;&#x958b;&#x555f;&#x8a72;&#x6a94;&#x6848;&#xff0c;&#x56e0;&#x6b64",{"_index":2894,"title":{},"body":{"java/exception.html#簡介":{}}}],["x4e0d;&#x662f",{"_index":3647,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x4e0d;&#x662f;&#x958f;&#x5e74",{"_index":1133,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x4e0d;&#x662f;&#x958f;&#x5e74;yes100=oper",{"_index":1138,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x4e0d;&#x662f;&#x958f;&#x5e74;yes400=oper",{"_index":1140,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x4e0d;&#x77e5;&#x9053;&#x7684;&#x8a71;&#x7a0b;&#x5f0f;&#x8981;&#x600e;&#x9ebc;&#x5beb",{"_index":1267,"title":{},"body":{"java/array.html#C-語言陣列回顧":{}}}],["x4e0d;&#x7b49;&#x65bc",{"_index":3675,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x4e0d;&#x7ba1;&#x8cc7;&#x6599;&#x7684;&#x683c;&#x5f0f;&#x70ba;&#x4f55;&#xff0c;&#x96fb;&#x8166;&#x5167;&#x90e8;&#x90fd;&#x662f;&#x4ee5;&#x4e0d;&#x540c;&#x5927;&#x5c0f;&#x7684;&#x4e8c;&#x9032;&#x4f4d;&#x6578;&#x5b57;&#x4f86;&#x4ee3;&#x8868;&#x3002;&#x9019;&#x4e9b;&#x4e8c;&#x9032;&#x4f4d;&#x6578;&#x5b57;&#x7684;&#x89e3;&#x91cb;&#x65b9;&#x6cd5;&#x662f;&#x7531;&#x5169;&#x500b;&#x56e0;&#x7d20;&#x4f86;&#x6c7a;&#x5b9a;&#xff1a",{"_index":595,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x4e0d;&#x80fd;&#x53bb;&#x5b58;&#x53d6",{"_index":4225,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["x4e0d;&#x80fd;&#x5ba3;&#x544a;&#x50b3;&#x56de;&#x503c;&#x3002",{"_index":1562,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x4e0d;&#x80fd;&#x6574;&#x9664",{"_index":3832,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x4e0d;&#x80fd;&#x76f4;&#x63a5",{"_index":3338,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x4e0d;&#x80fd;&#x76f4;&#x63a5;&#x52a0;&#x5165;&#x5143;&#x4ef6;&#xff0c;&#x5fc5;&#x9808;&#x900f;&#x904",{"_index":5212,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x4e0d;&#x80fd;&#x88ab",{"_index":3773,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["x4e0d;&#x898b;&#x5f97;&#x662f;&#x4e00;&#x500b",{"_index":3112,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x4e14",{"_index":3718,"title":{},"body":{"java/java-vs-c.html#流程控制敘述":{}}}],["x4e26;&#x4e0d;&#x4f9d;&#x9760;&#x5e95;&#x5c64;&#x7684;&#x8996;&#x7a97;&#x7cfb;&#x7d71;&#x756b;&#x51fa;&#x5143;&#x4ef6;&#x7684;&#x5916;&#x89c0;&#xff0c;&#x56e0;&#x6b64",{"_index":5196,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x4e26;&#x4e0d;&#x662f;&#x7269;&#x4ef6;&#xff0c;&#x800c;&#x662f;&#x7528;&#x4f86;&#x6307;&#x5411",{"_index":3637,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x4e26;&#x5305;&#x62ec",{"_index":1007,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x4e2d;&#x5ba3;&#x544a;&#x7684",{"_index":3283,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x4e2d;&#x5ba3;&#x544a;&#x7684;&#x8b8a;&#x6578;&#x5177;&#x6709;&#x4ee5;&#x4e0b;&#x7279;&#x8cea",{"_index":3267,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x4e2d;&#x76f4;&#x63a5;&#x7e7c;&#x627f",{"_index":5217,"title":{},"body":{"java/gui.html#AWT":{}}}],["x4e3b;&#x8981;&#x662f",{"_index":5241,"title":{},"body":{"java/gui.html#AWT":{}}}],["x4e3b;&#x8a5",{"_index":1093,"title":{},"body":{"c/writing-intro.html#句子的組成":{}}}],["x4e4b;&#x524d;&#xff0c;&#x6211;&#x5011;&#x5fc5;&#x9808;&#x5148;&#x628a",{"_index":4577,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x4e4b;&#x548c",{"_index":3861,"title":{},"body":{"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x4e4b;&#x5f8c;&#xff0c;&#x9032;&#x884c",{"_index":1624,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x4e4b;&#x9593;&#x53ef;&#x4ee5;&#x5b9a;&#x7fa9;&#x7e7c;&#x627f",{"_index":1465,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x4e4b;&#x9593;&#x53ef;&#x4ee5;&#x6709;&#x591a;&#x91cd;&#x7e7c;&#x627f;&#x3002",{"_index":3257,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x4e58",{"_index":3665,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x4e5f;&#x4e0d;&#x540c;&#xff0c;&#x5f7c;&#x6b64;&#x770b;&#x4e0d;&#x5230;&#x5c0d;&#x65b9;&#x7684",{"_index":4587,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x4e5f;&#x4e0d;&#x7b97",{"_index":3135,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["x4e5f;&#x53ef;&#x4ee5",{"_index":1588,"title":{},"body":{"java/class-and-obj.html#Overloading":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x7528;&#x5728",{"_index":4722,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x4e5f;&#x53ef;&#x4ee5;)&#xff0c;&#x7a31;&#x70ba",{"_index":3124,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["x4e5f;&#x5c31;&#x662f;&#x8aaa",{"_index":4667,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x7522;&#x751f",{"_index":958,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x96d6;&#x7136;&#x53ef;&#x4ee5;&#x5beb;&#x5f88;&#x591a;&#x500b",{"_index":2937,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x4e5f;&#x5c31;&#x7d50;&#x675f;&#x4e86;&#xff1b;&#x9019;&#x548c",{"_index":4629,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x4e5f;&#x63a1;&#x7528",{"_index":588,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x4e5f;&#x662f;&#x5176;&#x4e2d;&#x4e00;&#x7a2e;)&#xff0c;&#x5df2;&#x7d93;&#x628a",{"_index":1005,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x4e5f;&#x6703;&#x5e6b;&#x6211;&#x5011;&#x52a0;&#x4e0a;&#x53bb;&#x3002",{"_index":3273,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x4e5f;&#x6703;&#x6aa2;&#x67e5;&#x5be6;&#x969b;&#x7684;&#x7269;&#x4ef6;&#x80fd;&#x5426;&#x548c",{"_index":3116,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x4e86",{"_index":702,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x4e86;&#x3002",{"_index":1334,"title":{},"body":{"java/array.html#陣列索引的檢查":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x4e8b;&#x5be6;&#x4e0a;&#x662f;&#x5148;&#x627e;&#x51fa",{"_index":1304,"title":{},"body":{"java/array.html#多維陣列":{}}}],["x4e8c;&#x9032;&#x4f4d",{"_index":497,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x4e8c;&#x9032;&#x4f4d;&#x52a0;&#x6cd5;&#x8868",{"_index":509,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x4e8c;&#x9032;&#x4f4d;&#x6240;&#x80fd;&#x8868;&#x9054;&#x7684;&#x6700;&#x5927;&#x6578;&#x5b57;y&#x662f;&#x4e00;&#x500b;&#x5168;&#x90e8;&#x90fd;&#x662f",{"_index":692,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x4e95;&#x5b57;&#x904a;&#x6232",{"_index":5265,"title":{"java/gui.html#井字遊戲":{}},"body":{"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["x4e95;&#x5b57;&#x904a;&#x6232;&#x7684",{"_index":5277,"title":{"java/gui.html#井字遊戲的-Swing-版本":{}},"body":{}}],["x4ea4;&#x4e92;&#x57f7;&#x884c",{"_index":4791,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x4ea4;&#x63db;&#x4e0b;&#x4e00;&#x6279;&#x8981;&#x8b80;&#x7684",{"_index":4796,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x4eba",{"_index":4409,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["x4ee3;&#x8868",{"_index":663,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x4ee3;&#x8868;&#x5f9e;&#x67d0;&#x500b;&#x8d77;&#x59cb;&#x9ede;&#x958b;&#x59cb;(&#x4f8b;&#x5982",{"_index":4591,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x4ee3;&#x8868;&#x6307;&#x6578",{"_index":722,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x4ee3;&#x8868;&#x76ee;&#x524d;&#x7684;&#x5de5;&#x4f5c;&#x76ee;&#x9304",{"_index":2721,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x4ee4",{"_index":645,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x4ee5",{"_index":1469,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/java-vs-c.html#運算符號-Operator":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{},"java/thread.html#如何產生-Thread":{}}}],["x4ee5;&#x4e0a;&#x52a0",{"_index":220,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x4ee5;&#x4e0a;&#x7684",{"_index":5261,"title":{},"body":{"java/gui.html#AWT":{}}}],["x4ee5;&#x4e0a;&#x7a0b;&#x5f0f;&#x57f7;&#x884c;&#x5f8c;&#xff0c;&#x87a2;&#x5e55;&#x4e0a;&#x6703;&#x6301;&#x7e8c;&#x5370;&#x51fa",{"_index":4634,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x4ee5;&#x4e0a;&#x8b8a;&#x6578;&#x7684;&#x578b;&#x614b;&#x90fd;&#x662f",{"_index":3650,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x4ee5;&#x4e0b;&#x662f",{"_index":4725,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x4ee5;&#x4e0b;&#x662f;&#x4ee5;&#x865b;&#x64ec;&#x6a5f;&#x5668;&#x8a9e;&#x8a00;&#x6240;&#x5beb;&#x7684;&#x5169;&#x6578;&#x5b57;&#x76f8;&#x52a0;&#x7a0b;&#x5f0f;&#xff0c;&#x2013",{"_index":922,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x4ee5;&#x4e0b;&#x662f;&#x7a0b;&#x5f0f;&#x7684;&#x7bc4;&#x4f8b;&#xff1a",{"_index":1348,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x4ee5;&#x51fd;&#x6578;&#x4f5c;&#x70ba;&#x5beb;&#x4f5c;&#x548c;&#x57f7;&#x884c;&#x7684;&#x4e3b;&#x9ad4;&#x3002;&#x51fd;&#x6578;&#x7531;&#x4e00;&#x7fa4;&#x7a0b;&#x5f0f;&#x78bc;&#x6240;&#x7d44;&#x6210;&#xff0c;&#x51fd;&#x6578;&#x7684;&#x958b;&#x982d;&#x5730;&#x5740;&#x5728",{"_index":4190,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x4ee5;&#x5341;&#x516d;&#x9032;&#x4f4d;&#x8868;&#x793a",{"_index":200,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x4ee5;&#x5341;&#x9032;&#x4f4d;&#x5370;&#x51fa",{"_index":230,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x4ee5;&#x5341;&#x9032;&#x4f4d;&#x6578;&#x5b57;&#x8868;&#x793a",{"_index":198,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x4ee5;&#x53ca",{"_index":3078,"title":{},"body":{"java/extends.html#基本觀念":{},"java/java-vs-c.html#迴圈範例":{},"java/gui.html#GUI-簡介":{}}}],["x4ee5;&#x53ca;&#x66ab;&#x5b58;&#x5668;&#x7b49",{"_index":869,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x4ee5;&#x53d6;&#x4ee3;&#x820a;&#x6709;&#x7684",{"_index":583,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x4ee5;&#x5916;&#xff0c;&#x88e1;&#x9762;&#x7684;&#x6bcf;&#x4e00;&#x500b;&#x6578;&#x5b57;&#x90fd;&#x662f;&#x5176;&#x6b63;&#x4e0a;&#x65b9;&#x548c;&#x5de6;&#x4e0a;&#x65b9;&#x6578;&#x5b57;&#x7684;&#x548c;&#x3002;&#x4f60;&#x53ef;&#x4ee5;&#x7528;&#x9663;&#x5217;&#x4f86;&#x8a08;&#x7b97;&#x548c;&#x5132;&#x5b58;&#x9019;&#x4e9b;&#x6578;&#x5b57;&#xff0c;&#x7136;&#x5f8c;&#x518d;&#x4ee5;&#x4e0a;&#x5716;&#x7684;&#x683c;&#x5f0f;&#x5370;&#x51fa;&#x4f86;&#x3002",{"_index":1342,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x4ee5;&#x5f8c;&#x63d0;&#x4f9b;&#x65b0;&#x7684",{"_index":5191,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x4ee5;&#x6307;&#x793a;&#x8981;&#x8df3;&#x51fa;&#x6216;&#x7e7c;&#x7e8c;&#x7684;&#x7bc4;&#x570d;&#x3002",{"_index":3716,"title":{},"body":{"java/java-vs-c.html#流程控制敘述":{}}}],["x4ee5;&#x65b9;&#x4fbf;&#x8b80;&#x8005;&#x5beb;&#x4f5c;&#x7a0b;&#x5f0f;&#x3002;&#x9019;&#x5169;&#x500b;&#x51fd;&#x6578;&#x6216;&#x8a31;&#x5728;&#x4e0d;&#x540c;&#x5e73;&#x53f0;&#x4e0a;&#x7684;&#x67d0;&#x4e9b;&#x7279;&#x6b8a;&#x7528;&#x6cd5;&#x6703;&#x6709;&#x9ede;&#x5c0f;&#x51fa;&#x5165",{"_index":184,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x4ee5;&#x6d41;&#x7a0b;&#x5716",{"_index":1122,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x4ee5;&#x7a0b;&#x5f0f;&#x4f86;&#x8868;&#x793a",{"_index":1123,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x4ee5;&#x8b8a;&#x6578",{"_index":3847,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x4ee5;&#x8ff4;&#x5708;&#x57f7;&#x884c",{"_index":3787,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x4ee5;&#x905e;&#x8ff4;&#x6c42;&#x5169;&#x500b;&#x6574;&#x6578",{"_index":3863,"title":{},"body":{"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x4ee5;&#x905e;&#x8ff4;&#x8a08;&#x7b97",{"_index":3860,"title":{},"body":{"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x4ee5;&#x907f;&#x514d;client&#x8981;&#x6c42;&#x6e96;&#x5099;&#x6a94;&#x6848;&#x5f8c;,&#x537b;&#x4e0d;&#x64f7;&#x53d6",{"_index":4418,"title":{},"body":{"java/net.html#HTTP-Server":{}}}],["x4efb;&#x4f55;&#x503c",{"_index":757,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x4f46;&#x5047;&#x8a2d;&#x6211;&#x5011;&#x7684;&#x57f7;&#x884c;&#x74b0;&#x5883;&#x662f;&#xff0c;&#x67d0;&#x4e9b",{"_index":4732,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x4f46;&#x56e0;&#x70ba",{"_index":180,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x4f46;&#x5728",{"_index":3109,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x4f46;&#x5927;&#x81f4;&#x4e0a;&#x662f;&#x76f8;&#x540c;&#x7684;&#x3002",{"_index":185,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x4f46;&#x5de6;&#x908a;&#x4e00;&#x5f8b;&#x88dc;&#x96f6",{"_index":3690,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x4f4d",{"_index":223,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x4f4d;&#x5143",{"_index":3688,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x4f4d;&#x5143;&#x61c9;&#x5c0d",{"_index":558,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x4f4d;&#x5143;&#x6578",{"_index":504,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x4f4d;&#x5143;&#x6d6e;&#x9ede;&#x6578;&#x8868;&#x793a;&#x6cd5",{"_index":759,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x4f4d;&#x5143;&#x7684;&#x6d6e;&#x9ede;&#x6578;&#x4ee5;&#x4e0b;&#x9762;&#x7684;&#x683c;&#x5f0f;&#x4f86;&#x8868;&#x793a;&#xff1a",{"_index":744,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x4f4d;&#x5143;&#x9577;&#x5ea6",{"_index":3599,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x4f4d;&#x6578;&#x7684",{"_index":652,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x4f4d;&#x6578;&#x7684;&#x610f;&#x601d;&#x3002;&#x56e0;&#x6b64",{"_index":626,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x4f4d;&#xff0c;&#x4e0d;&#x8db3;&#x8655;&#x88dc",{"_index":229,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x4f4d;&#xff0c;&#x4e0d;&#x8db3;&#x8655;&#x88dc;&#x7a7a;&#x767d",{"_index":226,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x4f4d;&#xff0c;&#x5176;&#x4e2d;&#x5c0f;&#x6578;&#x9ede;&#x4ee5;&#x4e0b",{"_index":239,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x4f5c;&#x5207;&#x63db;&#xff0c;&#x4ee5;&#x8b93;&#x5404;&#x500b",{"_index":4614,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x4f5c;&#x696d;&#x7cfb;&#x7d71;&#x4e0a;&#x7684;&#x7a0b;&#x5f0f;&#x7de8;&#x5beb;&#x74b0;&#x5883;&#xff0c;&#x6700;&#x5e38;&#x4f7f;&#x7528;&#x7684;&#x662f",{"_index":998,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x4f5c;&#x696d;&#x7cfb;&#x7d71;&#x5167;&#xff0c;&#x6700;&#x5e38;&#x898b;&#x7684",{"_index":980,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x4f5c;&#x696d;&#x7cfb;&#x7d71;&#x6703;&#x6839;&#x64da",{"_index":4611,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x4f5c;&#x70ba;&#x5176;&#x7de8;&#x78bc;&#x7684;&#x65b9;&#x5f0f;&#x3002;window",{"_index":587,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x4f5c;&#x70ba;&#x5beb;&#x4f5c;&#x7684;&#x4e3b;&#x9ad4;&#xff0c;&#x57f7;&#x884c;&#x6642;&#x4e3b;&#x8981;&#x7531",{"_index":4194,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x4f5c;&#x70ba;&#x66f4;&#x65b0;&#x6700;&#x65b0;&#x5169;&#x500b;&#x8cbb;&#x6c0f;&#x6578;&#x6240;&#x9700;&#x7684;&#x8a18;&#x61b6;&#x9ad4;&#x7a7a;&#x9593",{"_index":3849,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x4f5c;&#x70ba;&#x6b63;&#x8ca0;&#x865f;&#xff0c;&#x5176;&#x4ed6;&#x7684",{"_index":602,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x4f5c;&#x8005",{"_index":1078,"title":{},"body":{"c/writing-intro.html#文章的組成":{}}}],["x4f60;&#x53ef;&#x4ee5;&#x57f7;&#x884c;&#x4e0b;&#x9762;&#x7684;&#x7a0b;&#x5f0f;&#xff0c;&#x770b;&#x770b",{"_index":4656,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x4f60;&#x6703;&#x767c;&#x73fe;&#x57f7;&#x884c;&#x5b8c;&#x6210;&#x5f8c",{"_index":4699,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x4f7f;&#x7528",{"_index":3758,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{},"java/thread.html#如何產生-Thread":{}}}],["x4f7f;&#x7528;&#x4ee5;&#x4e0a;&#x985e;&#x5225;&#x7684;&#x5370;&#x8868;&#x7a0b;&#x5f0f",{"_index":2509,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x4f7f;&#x7528;&#x5230",{"_index":2755,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x4f7f;&#x7528;&#x76f8;&#x540c;&#x7684",{"_index":4603,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x4f7f;&#x7528;&#x8005;&#x4ee5",{"_index":5158,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x4f7f;&#x7528;&#x95dc;&#x9375;&#x5b57",{"_index":3090,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["x4f86;&#x4ee3;&#x8868",{"_index":3790,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x4f86;&#x4ee3;&#x8868;&#x4e86;&#x3002",{"_index":214,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x4f86;&#x4ee3;&#x8868;&#x67d0",{"_index":2771,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x4f86;&#x505a;&#x7279;&#x5225;&#x7684;&#x8f49;&#x63db;&#xff0c;&#x7a31;&#x9019;&#x7a2e;&#x6280;&#x8853;&#x70ba",{"_index":3743,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x4f86;&#x5340;&#x5225;&#x4e86;&#x3002",{"_index":2794,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x4f86;&#x53d6;&#x4ee3;&#x6e1b;&#x6cd5;&#xff0c;&#x800c",{"_index":640,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x4f86;&#x547c;&#x53eb;&#x3002;&#x5728",{"_index":1539,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x4f86;&#x547d;&#x540d;&#xff0c;&#x63db;&#x53e5;&#x8a71;&#x8aaa;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x7528;&#x4e2d;&#x6587;&#x53d6;&#x8b8a;&#x6578;&#x540d;&#x7a31;&#x3002",{"_index":3620,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x4f86;&#x57f7;&#x884c;&#x3002;&#x5b83;&#x5305;&#x542b;&#x4e86;&#x63a7;&#x5236;&#x55ae;&#x5143",{"_index":456,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x4f86;&#x57f7;&#x884c;&#x4e86;&#x3002",{"_index":3571,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x4f86;&#x5b58;&#x53d6;&#x5c6c;&#x65bc",{"_index":3633,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x4f86;&#x5b58;&#x53d6;&#x7269;&#x4ef6;&#xff0c;&#x56e0;&#x6b64",{"_index":4214,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["x4f86;&#x5b58;&#x653e;&#x6d6e;&#x9ede;&#x6578;&#xff0c;&#x5176;&#x6a19;&#x6e96;&#x7531",{"_index":728,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x4f86;&#x6a21;&#x64ec;&#x7684;&#x3002",{"_index":921,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x4f86;&#x6c7a;&#x5b9a;&#x57f7;&#x884c;&#x7684",{"_index":3159,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x4f86;&#x7d00;&#x9304;&#x7a0b;&#x5f0f;&#x72c0;&#x614b;&#x3002;&#x7531;&#x65bc;&#x7269;&#x4ef6;&#x5c0e;&#x5411;&#x7a0b;&#x5f0f;&#x8a9e;&#x8a00;&#x5c07",{"_index":4195,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x4f86;&#x7de8;&#x8b6f;&#x76ee;&#x524d;&#x76ee;&#x9304;&#x4e0b;&#x7684;&#x6240;&#x6709",{"_index":2822,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x4f86;&#x8655;&#x7406",{"_index":2990,"title":{},"body":{"java/exception.html#相關語法":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x4f86;&#x8655;&#x7406;&#x3002",{"_index":3189,"title":{},"body":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["x4f86;&#x8655;&#x7406;&#xff0c;&#x5982",{"_index":5263,"title":{},"body":{"java/gui.html#AWT":{}}}],["x4f86;&#x8868;&#x793a",{"_index":528,"title":{},"body":{"c/system-intro.html#數字系統":{},"c/writing-intro.html#範例":{}}}],["x4f86;&#x8868;&#x9054",{"_index":650,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x4f86;&#x8868;&#x9054;&#x3002;java",{"_index":3618,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x4f86;&#x8868;&#x9054;&#x7e7c;&#x627f;&#x89c0;&#x5ff5;&#xff1a",{"_index":3091,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["x4f86;&#x8868;&#x9054;&#xff0c;&#x56e0;&#x6b64;&#x4f60;&#x6703;&#x767c;&#x89ba",{"_index":696,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x4f86;&#x8aaa;&#xff0c;&#x5176;&#x503c;&#x70ba",{"_index":1601,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["x4f86;&#x8aaa;&#xff0c;&#x5b57;&#x4e32;&#x662f;&#x7531",{"_index":3727,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x4f86;&#x8aaa;&#xff0c;&#x662f;&#x5728;&#x7522;&#x751f",{"_index":1596,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x4f86;&#x8aaa;&#xff0c;object",{"_index":4210,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x4f86;&#x9010;&#x4e00;&#x6aa2;&#x8996;&#x5176;&#x5167;&#x5bb9;&#x3002;&#x4f46;&#x9019;&#x7a2e;&#x5be6;&#x4f5c;&#x65b9;&#x6cd5;&#x5728;&#x50b3;&#x905e;&#x9663;&#x5217;&#x53c3;&#x6578;&#x6642",{"_index":1264,"title":{},"body":{"java/array.html#C-語言陣列回顧":{}}}],["x4f86;&#x9054;&#x6210;&#x3002;&#x6240;&#x8b02",{"_index":614,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x4f86;&#x9054;&#x6210;&#x3002;&#x63a5;&#x4e0b;&#x4f86;&#x7684;&#x554f;&#x984c;&#x5c31;&#x662f;&#x5982;&#x4f55;&#x7531",{"_index":629,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x4f86;&#x958b;&#x767c",{"_index":1003,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x4f8b;&#x5916;&#x8655;&#x7406",{"_index":2890,"title":{},"body":{"java/exception.html#簡介":{}}}],["x4f8b;&#x5982",{"_index":3225,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x4f8b;&#x5982;&#x4f7f;&#x7528;&#x8005;&#x4ee5",{"_index":5165,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x4f8b;&#x5982;&#x6700;&#x591a",{"_index":651,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x4f9d;&#x7167",{"_index":235,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x4fc2;&#x4f5c;&#x70ba;&#x9023;&#x63a5;&#x5176;&#x4e0a;&#x5404;&#x786c;&#x9ad4;&#x5143;&#x4ef6;&#x4ea4;&#x63db;&#x96fb;&#x5b50;&#x8cc7;&#x6599;&#x7684;&#x8def;&#x5f91;&#x3002",{"_index":475,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x4fde;&#x65ed;&#x6607",{"_index":2488,"title":{},"body":{"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/net.html#SMTP-Client":{},"java/gui.html#鍵盤事件處理範例":{}}}],["x4fde;&#x65ed;&#x6607;&#x5beb;&#x597d;&#x73a9;&#x7684",{"_index":5271,"title":{},"body":{"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["x4fe1",{"_index":4408,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["x4fee;&#x5225",{"_index":2576,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x4fee;&#x7fd2;&#x7e3d;&#x5b78;&#x5206;&#x6578",{"_index":2563,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x4fee;&#x98fe;&#x5b57",{"_index":3173,"title":{"java/extends.html#final-修飾字":{}},"body":{}}],["x500b",{"_index":536,"title":{},"body":{"c/system-intro.html#數字系統":{},"java/java-vs-c.html#迴圈範例":{}}}],["x500b;&#x4e00;&#x7d44;&#x7684",{"_index":533,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x500b;&#x4eba;&#x6210;&#x7e3e;&#x672a;&#x5230;(&#x8acb;&#x5411;&#x8001;&#x5e2b;&#x67e5;&#x660e;)\\n&#x8a3b;c",{"_index":2515,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x500b;&#x5143;&#x7d20;&#x3002;&#x7531;&#x65bc",{"_index":1307,"title":{},"body":{"java/array.html#多維陣列":{}}}],["x500b;&#x5225",{"_index":2799,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x500b;&#x586b",{"_index":211,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x500b;&#x586b;&#x7a7a;&#x767d;&#xff0c",{"_index":209,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x500b;&#x5b57;&#x5143",{"_index":574,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x500b;&#x5b57;&#x5143;&#xff0c;&#x5c0d;&#x8c61;&#x5f62;&#x5b57;&#x8a9e;&#x8a00;&#x662f;&#x4e0d;&#x5920;&#x7684;&#x3002;&#x56e0;&#x6b64",{"_index":580,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x500b;&#x5b57;&#x5143;)&#xff0c;&#x76ee;&#x524d;&#x50c5;&#x9650;&#x65bc",{"_index":570,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x500b;&#x6574;&#x6578;&#x6578;&#x5b57;&#xff0c;&#x8a08;&#x7b97;&#x5176;&#x7e3d;&#x5408;&#x548c;&#x5e73;&#x5747;&#x3002;&#x89e3;&#x6790;&#xff1a",{"_index":3782,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x500b;&#x6578;&#x5b57;&#x6240;&#x80fd;&#x8868;&#x9054;&#x7684;&#x7bc4;&#x570d;&#x70ba",{"_index":502,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x500b;&#x6578;&#x5b57;&#x7684;&#x6392;&#x5217",{"_index":1350,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x500b;&#x6578;&#x5b57;&#x7684;&#x7d44;&#x5408",{"_index":1354,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x500b;&#x6578;&#x5b57;&#x7d44;&#x6210;&#xff0c;&#x7b2c;&#x4e00;&#x500b;&#x6578;&#x5b57;&#x4ee3;&#x8868;&#x6307;&#x4ee4;&#xff0c;&#x5f8c;&#x9762;&#x5169;&#x500b;&#x6578;&#x5b57;&#x4ee3;&#x8868;&#x8a18;&#x61b6;&#x9ad4;&#x7684;&#x5730;&#x5740;&#x3002;&#x6a5f;&#x5668;&#x6307;&#x4ee4;&#x57f7;&#x884c;&#x6642;&#x6703;&#x6539;&#x8b8a;&#x67d0;&#x4e9b;&#x8a18;&#x61b6;&#x9ad4",{"_index":867,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x500b;&#x6578;&#x5b57;&#x9760;&#x53f3;&#x4e0d;&#x8db3",{"_index":208,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x500b;&#x6578;&#x5b57;&#x9760;&#x5de6;&#x4e0d;&#x8db3",{"_index":210,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x500b;&#x76f8;&#x95dc;&#x7684",{"_index":4643,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x500b;&#x7a7a;&#x683c;&#xff0c;&#x4ee5;&#x53ca",{"_index":3829,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x500b;&#x8b8a;&#x6578;&#x7d00;&#x9304;&#x5230;&#x76ee;&#x524d;&#x70ba;&#x6b62;&#x6240;&#x6709",{"_index":3784,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x500b;&#x958f;&#x5e74",{"_index":1117,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x500b;&#xff0c;100",{"_index":1119,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x500b;&#xff0c;400",{"_index":1120,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x500b;)&#x3002",{"_index":1121,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x5047;&#x5982",{"_index":2752,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x5047;&#x8a2d",{"_index":3234,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x5047;&#x8a2d;&#x6709;&#x4e00;&#x51fd;&#x6578",{"_index":1270,"title":{},"body":{"java/array.html#C-語言陣列回顧":{}}}],["x5047;&#x8a2d;&#x6b64;&#x6642",{"_index":4689,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5047;&#x8a2d;people&#x6709;vari",{"_index":4215,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["x505c;&#x4fee",{"_index":2511,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5099;&#x8a3b",{"_index":2531,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x50b3;&#x56de",{"_index":2895,"title":{},"body":{"java/exception.html#簡介":{},"java/java-vs-c.html#迴圈範例":{}}}],["x50b3;&#x56de;&#x503c;&#x7684;&#x610f;&#x7fa9;&#x8aaa;&#x660",{"_index":3760,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["x50b3;&#x56de;&#x6574;&#x6578;&#xff0c;&#x4ee3;&#x8868;&#x6709;&#x5e7e;&#x500b;&#x6210;&#x529f;&#x8b80;&#x5165;&#x3002",{"_index":246,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x50b3;&#x56de;&#x6574;&#x6578;&#xff0c;&#x4ee3;&#x8868;&#x8f38;&#x51fa;&#x7684;&#x5b57;&#x5143;&#x6578",{"_index":242,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x50b3;&#x7d66;&#x8a72",{"_index":5169,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x50b3;&#x7d71;&#x7a0b;&#x5f0f;&#x958b;&#x767c;&#x7684;&#x6d41;&#x7a0b;&#x662f",{"_index":2798,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x50b3;&#x905e",{"_index":3244,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x50b3;&#x905e;&#x7d66;&#x7a0b;&#x5f0f;&#x8a2d;&#x8a08;&#x8005;&#x6240;&#x6307;&#x5b9a;&#x7684",{"_index":5163,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x50b3;&#x905e;&#x8a0a;&#x606f;&#x7d66;&#x5b50;&#x985e;&#x5225;&#x7269;&#x4ef6;&#x6642;&#xff0c;&#x61c9;&#x8a72;&#x8981;&#x547c;&#x53eb;&#x7236;&#x985e;&#x5225;&#x7684;&#x65b9;&#x6cd5;&#x9084;&#x662f;&#x5b50;&#x985e;&#x5225;&#x7684;&#x65b9;&#x6cd5;&#xff1f;&#x5982;&#x679c",{"_index":3146,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x50c5;&#x80fd;&#x8868;&#x793a",{"_index":579,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x50cf",{"_index":2992,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x50cf;&#x5929;&#x6587;&#x5b78;)&#xff0c;&#x6709;&#x4e9b;&#x8981;&#x8868;&#x9054;&#x5f88;&#x5c0f;&#x7684;&#x6578;&#x5b57",{"_index":716,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x50cf;&#x9ad8;&#x80fd;&#x7269;&#x7406;&#x5b78;)&#xff0c;&#x5982;&#x4f55;&#x8a2d;&#x8a08;&#x4e00;&#x7a2",{"_index":717,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x5118;&#x91cf;&#x7528;&#x5b50;&#x985e;&#x5225;&#x7684;&#x65b9;&#x6cd5;)&#xff0c;&#x53ef;&#x7528;&#x7236;&#x985e;&#x5225",{"_index":3166,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x512a;&#x5148",{"_index":4775,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x512a;&#x5148;&#x6b0a",{"_index":3705,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5141;&#x8a31;&#x6211;&#x5011;&#x4f7f;&#x7528;&#x842c;&#x7528;&#x5b57;&#x5143",{"_index":2770,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x5141;&#x8a31;&#x8a2d;&#x8a08;&#x4eba;&#x54e1;&#x898f;&#x7bc4;&#x985e;&#x5225;&#x6210;&#x54e1;&#x4ee5;&#x53ca;&#x985e;&#x5225;&#x672c;&#x8eab;&#x7684;&#x5b58;&#x53d6;&#x9650;&#x5236;&#x3002",{"_index":2677,"title":{},"body":{"java/encapsulation.html#封裝的意義":{}}}],["x5143;&#x4ef6;&#x524d;&#x9762;&#x52a0;&#x4e0a",{"_index":5208,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x5143;&#x4ef6;&#x70ba;&#x4e3b;&#x3002",{"_index":5181,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x5143;&#x4ef6;&#xff0c;&#x5982",{"_index":5204,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x5143;&#x4f86;&#x8aaa;&#x660e;&#x6b64;&#x7d50;&#x679c",{"_index":4687,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5143;&#x7531",{"_index":4671,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5143;&#xff0c;&#x7576;&#x7136;&#x53e6;&#x5916;&#x7684;&#x57f7;&#x884c;&#x9806;&#x5e8f;&#x53ef;&#x80fd;&#x9020;&#x6210;&#x5176;&#x4ed6;&#x4e0d;&#x6b63;&#x78ba;&#x7684;&#x7d50;&#x679c;&#x3002",{"_index":4702,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5148;&#x5c07;&#x6240;&#x6709;&#x8b8a;&#x6578;&#x8a2d;&#x70ba;&#x5167;&#x5b9a;&#x503c;&#x3002;&#x5c0d;&#x6578;&#x503c;&#x578b;&#x614b;&#x4f86;&#x8aaa;&#xff0c;&#x5176;&#x503c;&#x70ba",{"_index":1599,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["x5148;&#x628a;fn_1&#x7d00;&#x9304;&#x5728;tmp",{"_index":3852,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5148;&#x7522;&#x751f;x&#x9663;&#x5217",{"_index":1309,"title":{},"body":{"java/array.html#多維陣列":{}}}],["x5149;&#x789f;&#x6a5f",{"_index":470,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x5167;&#x3002;&#x8a2d;&#x8a08;&#x8005;&#x4e5f;&#x53ef;&#x4ee5;&#x81ea;&#x8a02;&#x81ea;&#x5df1;&#x7684",{"_index":2917,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5167;&#x512a;&#x5148;&#x904b;&#x7b97",{"_index":3702,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5167;&#x57f7;&#x884c;&#xff0c;&#x7136;&#x5f8c;&#x6211;&#x5011;&#x5c31;&#x53ef;&#x4ee5;&#x900f;&#x904e;&#x8f38;&#x5165;&#x88dd;&#x7f6e;&#x4e0b;&#x9054;&#x547d;&#x4ee4;&#xff0c;&#x4ee5;&#x57f7;&#x884c;&#x61c9;&#x7528;&#x7a0b;&#x5f0f;&#x4f86;&#x8655;&#x7406;&#x6211;&#x5011;&#x7684;&#x8cc7;&#x6599;&#x3002",{"_index":486,"title":{},"body":{"c/system-intro.html#軟體元件":{}}}],["x5167;&#x5b9a;&#x662f;&#x87a2;&#x5e55",{"_index":189,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x5167;&#x6240;&#x6709;&#x7684;&#x5143;&#x4ef6;&#x90fd;&#x6709;&#x76f8;&#x5c0d;&#x61c9;&#x4ee5",{"_index":5202,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x5167;&#x7684",{"_index":3162,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{},"java/thread.html#Program-Process-Thread":{}}}],["x5167;&#x7684;&#x5176;&#x4ed6",{"_index":2747,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x5167;&#x7684;&#x6210;&#x54e1;&#x4e00;&#x5b9a;&#x662f",{"_index":3270,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x5167;&#x7684;&#x7a0b;&#x5f0f;&#x78bc;&#xff0c;&#x662f;&#x5728;&#x8a72",{"_index":1622,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x5167;&#x7684;&#x7a0b;&#x5f0f;&#xff0c;&#x6b64;&#x7a0b;&#x5f0f;&#x6703;&#x5f9e;&#x672c;&#x5730;&#x78c1;&#x789f;&#x6a5f;&#x6216;&#x900f;&#x904e;&#x7db2;&#x8def;&#x5f9e;&#x4f3a;&#x670d;&#x5668;&#x7684;&#x78c1;&#x789f;&#x6a5f;&#x4e0a;&#x5c07;&#x4f5c;&#x696d;&#x7cfb;&#x7d71;&#x8f09;&#x5165;&#x8a18;&#x61b6;&#x9ad4",{"_index":485,"title":{},"body":{"c/system-intro.html#軟體元件":{}}}],["x5167;&#x7684;&#x8b8a;&#x6578;&#x4e00;&#x5b9a;&#x662f;&#x5c6c;&#x65bc",{"_index":3277,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x5167;&#x7684;&#x8b8a;&#x6578;&#x5177;&#x6709",{"_index":3302,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x5167;&#x7a0b;&#x5f0f;&#x78bc;&#x7684;&#x6a5f;&#x5236;&#x548c",{"_index":4204,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x5167;&#x7e2e;&#x56db;&#x500b;&#x7a7a;&#x683c",{"_index":3751,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["x5167;&#x90e8;&#x4f7f;&#x7528;&#xff0c;&#x4e0d;&#x7528;&#x7ba1;&#x4ed6",{"_index":5253,"title":{},"body":{"java/gui.html#AWT":{}}}],["x5167;&#x90e8;&#x6bcf;&#x4e00;&#x500b;&#x6578;&#x5b57;&#x90fd;&#x662f;&#x6b63;&#x4e0a;&#x65b9;&#x548c;&#x5de6;&#x4e0a;&#x65b9;&#x6578;&#x5b57;&#xff0c;&#x8acb;&#x554f;&#x6b63;&#x4e0a;&#x65b9;&#x548c;&#x5de6;&#x4e0a;&#x65b9;&#x9019;&#x5169;&#x500b;&#x4f4d;&#x7f6e;&#x7684;&#x9663;&#x5217;&#x7d22;&#x5f15;&#x5982;&#x4f55;&#x8868;&#x9054;&#xff1f",{"_index":1347,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x5167;&#x90e8;&#x72c0;&#x614b;&#x7684;&#x8b8a;&#x6578;&#xff0c;&#x7a31;&#x70ba",{"_index":1479,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x5167;&#x90e8;&#x7528;&#x4f86;&#x5132;&#x5b58;&#x8cc7;&#x6599;&#x7684;&#x5730;&#x65b9;&#x3002",{"_index":463,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x5167;&#x90e8;&#x7684;&#x66ab;&#x5b58;&#x5668;(&#x5982",{"_index":4593,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x5167;&#x90e8;&#x7684;&#x8a18;&#x61b6;&#x9ad4;&#xff0c;&#x4ee5;&#x53ca",{"_index":870,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5167;&#x90e8;&#x8cc7;&#x6599;&#xff0c;&#x4ee5;&#x6307;&#x63ee;&#x5354;&#x8abf",{"_index":459,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x5167;&#xff0c;&#x5176;&#x5ba3;&#x544a;&#x70ba",{"_index":4623,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x5167;&#xff0c;&#x518d;&#x900f;&#x904e",{"_index":4197,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x5167;&#xff0c;&#x56e0;&#x6b64;&#x5fc5;&#x9808;&#x5c0d;&#x5176;&#x57f7;&#x884c;&#x9806;&#x5e8f;&#x6709;&#x6240;&#x4e86;&#x89e3;&#x3002;&#x6b65;&#x9a5f;&#x5982;&#x4e0b;&#xff1a",{"_index":1598,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x5168;&#x73ed;&#x6210;&#x7e3e;&#x672a;&#x5230;\\n&#x8a3b;b",{"_index":2514,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5169;&#x500b",{"_index":2789,"title":{},"body":{"java/encapsulation.html#Package-的引用":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5169;&#x500b;&#x5e38;&#x6578;&#x3002",{"_index":3662,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5169;&#x500b;&#x6307;&#x4ee4;&#x3002;java",{"_index":3714,"title":{},"body":{"java/java-vs-c.html#流程控制敘述":{}}}],["x5169;&#x500b;&#x6578;&#x5b57;&#xff0c;&#x56e0;&#x6b64;&#x6b63;&#x898f;&#x5316;&#x5f8c;&#x7684;&#x79d1;&#x5b78;&#x7b26;&#x865f;&#x8868;&#x793a;&#x6cd5;&#x7684;&#x6574;&#x6578;&#x90e8;&#x4efd;&#x4e00;&#x5b9a;&#x662f",{"_index":733,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x5169;&#x5927;&#x90e8;&#x4efd;&#x3002;&#x63a7;&#x5236;&#x55ae;&#x5143;&#x7528;&#x4f86;&#x89e3;&#x91cb;&#x96fb;&#x8166;&#x6307;&#x4ee4;&#xff0c;&#x642c;&#x79fb",{"_index":458,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x5169;&#x5e33;&#x6236;&#x9032;&#x884c;&#x8f49;&#x5e33;&#xff0c;&#x5047;&#x8a2d;&#x7576",{"_index":4678,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5169;&#x7a2e;&#x503c",{"_index":3683,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5169;&#x7a2e;&#x578b;&#x5225;&#x3002",{"_index":3227,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x5169;&#x908a;&#x4e58",{"_index":546,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x516b;&#x9032;&#x4f4d;&#x52a0;&#x6cd5;&#x8868",{"_index":510,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5176",{"_index":657,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x5176;&#x4e2d",{"_index":745,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x5176;&#x4e2d;&#x4e00;&#x500b;&#x4fee;&#x98fe;&#x5b57;&#xff0c;&#x5247;&#x8a72",{"_index":2697,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x5176;&#x4e2d;&#x6307;&#x6578;&#x90e8;&#x4efd;&#x63a1;&#x7528",{"_index":761,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x5176;&#x4ed6;&#x6578;&#x5b57;&#x7cfb;&#x7d71;&#x9593;&#x7684;&#x8f49;&#x63db;&#xff1a;&#x5148;&#x8f49;&#x6210;&#x5341;&#x9032;&#x4f4d;&#x518d;&#x8f49;&#x6210;&#x53e6;&#x4e00;&#x500b;&#x6578;&#x5b57;&#x7cfb;&#x7d71;&#x3002",{"_index":522,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5176;&#x4ed6;&#x904b;&#x7b97;&#x7b26;&#x865f",{"_index":3691,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5176;&#x4f54;&#x6709",{"_index":4646,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x5176;&#x5b50;&#x985e;&#x5225;&#x7269;&#x4ef6;&#x3002",{"_index":3329,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x5176;&#x898f;&#x5247;&#x662f;&#x6700;&#x5916;&#x5c64;&#x662f;1&#xff0c;&#x88e1;&#x9762;&#x6bcf;&#x500b;&#x6578;&#x5b57;&#x90fd;&#x662f;&#x4e0a;&#x65b9;&#x5169;&#x500b;&#x6578;&#x5b57;&#x7684;&#x548c;&#x3002",{"_index":1339,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x5176;&#x8a2d;&#x8a08;&#x7684;&#x6307;&#x4ee4;&#x96c6;&#x4e5f;&#x4e0d;&#x540c;&#xff0c;&#x6700;&#x5e38;&#x898b;&#x7684",{"_index":853,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5176;&#x8a9e;&#x6cd5;&#x70ba",{"_index":2705,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x5176;&#x975e",{"_index":3340,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x5177;&#x6709",{"_index":3332,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x5177;&#x6709;&#x4e0b;&#x9762;&#x5169;&#x500b;&#x529f;&#x80fd;&#xff0c;&#x53ef;&#x4ee5;&#x5728;&#x6c92;&#x6709;&#x539f;&#x59cb;&#x78bc;&#x7ba1;&#x7406;&#x7cfb;&#x7d71;&#x7684;&#x60c5;&#x6cc1;&#x4e0b;&#xff0c;&#x4e5f;&#x80fd;&#x89e3;&#x6c7a;&#x4e0a;&#x8ff0;&#x554f;&#x984c;&#xff1a",{"_index":2820,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x5177;&#x6709;&#x4ee5;&#x4e0b;&#x7279;&#x8cea",{"_index":3284,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x5177;&#x6709;&#x5176;&#x5167;&#x90e8;&#x72c0;&#x614b;&#xff0c",{"_index":1457,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x5177;&#x6709;&#x96b1;&#x5f62;&#x7684;&#x7269;&#x4ef6;&#x53c3;&#x6578;&#xff0c;&#x56e0;&#x6b64",{"_index":4224,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["x518d;&#x5206;&#x5225;&#x7522;&#x751f;x[i]&#x6240;&#x6307;&#x5230;&#x7684;&#x9663;&#x5217",{"_index":1310,"title":{},"body":{"java/array.html#多維陣列":{}}}],["x51fa;&#x7248;&#x7684;&#x6642;&#x7a0b;&#xff0c;&#x56e0;&#x6b64;&#x5728;&#x8a2d;&#x8a08;&#x4e0a;&#xff0c;&#x662f;&#x5229;&#x7528;&#x8996;&#x7a97;&#x7cfb;&#x7d71;&#x5df2;&#x6709;&#x7684",{"_index":5180,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x51fd;&#x6578",{"_index":178,"title":{"c/c-intro.html#常用的-IO-函數":{}},"body":{"c/c-intro.html#常用的-IO-函數":{},"c/writing-intro.html#程式語言":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x51fd;&#x6578;&#x540d;&#x7a31",{"_index":1100,"title":{},"body":{"c/writing-intro.html#程式語言":{}}}],["x51fd;&#x6578;&#x5ba3;&#x544a",{"_index":1109,"title":{},"body":{"c/writing-intro.html#程式語言":{}}}],["x5206;&#x5225;&#x8f49;&#x5e33",{"_index":4685,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5206;&#x6578;&#xff0c;&#x5747;&#x9054;&#x5404;&#x8a72;&#x5b78;&#x671f;&#x4fee;&#x7fd2;&#x5b78;&#x5206;&#x7e3d;&#x6578;&#x4e09;&#x5206;&#x4e4b;&#x4e8c;&#x8005;&#x3002;\\n(&#x8a73;&#x7d30;&#x898f;&#x5b9a;&#x898b;&#x672c;&#x6821;&#x5b78;&#x5247;&#x7b2c;&#x4e09;&#x5341;&#x4e8c;&#x689d",{"_index":2522,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5217;&#x51fa;&#x6574;&#x6578;&#x9663;&#x5217;&#x6240;&#x6709",{"_index":1349,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x5217;&#x51fa;&#x7531;at&#x5de6;&#x908a;&#x6240;&#x6709;&#x7684;&#x6392;&#x5217",{"_index":1351,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x5217;&#x5370;&#x5168;&#x90e8",{"_index":2499,"title":{},"body":{"java/easy-print.html#Print-java":{}}}],["x5217;&#x5370;&#x5831;&#x8868",{"_index":2495,"title":{},"body":{"java/easy-print.html#Print-java":{}}}],["x5217;&#x5370;&#x5b78;&#x671f;&#x6210;&#x7e3e;&#x55ae;&#x901a;&#x77e5;&#x55ae;(a4&#x7d19;&#x7248;&#x672c",{"_index":2510,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5217;&#x5370;&#x5b78;&#x671f;&#x6210;&#x7e3e;&#x901a;&#x77e5;&#x55a",{"_index":2523,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5217;&#x5370;&#x672c;&#x9801",{"_index":2498,"title":{},"body":{"java/easy-print.html#Print-java":{}}}],["x5217;&#x6709;&#x500b",{"_index":3824,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5217;&#x7b2c",{"_index":3806,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5217;&#x800c;&#x8a00;&#xff0c;&#x6709",{"_index":3828,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5217;&#xff0c",{"_index":3804,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5217;&#xff0c;&#x5c0d;&#x7b2c",{"_index":3827,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5217;&#xff0c;&#x6bcf;&#x5217;&#x6709",{"_index":3814,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5217;&#xff0c;&#x7b2c",{"_index":3823,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x521d;&#x59cb;&#x5316;&#x4e4b;&#x524d;&#x7684;&#x6642;&#x9593;&#x5167;&#x57f7;&#x884c;&#x3002;&#x4e00;&#x822c;&#x6bd4;&#x8f03;&#x6703;&#x4f7f;&#x7528",{"_index":1625,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x521d;&#x59cb;&#x5316;&#x7684;&#x57f7;&#x884c;&#x9806;&#x5e8f",{"_index":1592,"title":{"java/class-and-obj.html#初始化的執行順序":{}},"body":{}}],["x5224;&#x65b7",{"_index":3676,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5224;&#x65b7;&#x6293;&#x5230;&#x7684",{"_index":2933,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5224;&#x65b7;&#x689d;&#x4ef6;&#x662f;&#x5426;&#x6210;&#x7acb",{"_index":3684,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5224;&#x65b7;&#x689d;&#x4ef6;&#x662f;&#x5426;&#x6210;&#x7acb;&#xff0c;&#x5982;&#x5927;&#x65bc;&#xff0c;&#x5c0f;&#x65bc;&#xff0c;&#x7b49;&#x65bc",{"_index":862,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5224;&#x65b7;&#x6b64;&#x79d1;&#x76ee;&#x662f;&#x5426;&#x70ba;&#x8f14;&#x7cfb;&#x7684;&#x5fc5;&#x4fe",{"_index":2555,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5224;&#x65b7;&#x6b64;&#x79d1;&#x76ee;&#x662f;&#x5426;&#x70ba;&#x96d9;&#x4e3b;&#x4fee;&#x7684;&#x5fc5;&#x4fe",{"_index":2553,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5229;&#x7528",{"_index":4636,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x5229;&#x7528;&#x905e;&#x8ff4;&#x6c42;&#x5f97",{"_index":3862,"title":{},"body":{"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x5229;&#x7528;new&#x6307;&#x4ee4;&#x7522;&#x751f;&#x7269;&#x4ef6",{"_index":1279,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x5229;&#x7528;queue&#x4f86;smooth&#x9700;&#x6c42;&#x91cf",{"_index":4404,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["x5230",{"_index":529,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5236;&#x5b9a;&#x3002;&#x5b83;&#x8868;&#x9054;&#x7684;&#x662f;&#x9019;&#x7a2e;&#x5f62;&#x5f0f;&#x7684;&#x79d1;&#x5b78;&#x7b26;&#x865f",{"_index":729,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x5247",{"_index":934,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{},"java/extends.html#基本觀念":{},"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x5247;&#x4e0b;&#x9762;&#x7684;&#x8ff4;&#x5708;&#x57f7;&#x884c;&#x7b2c;&#x4e00;&#x6b21;&#x6642;&#x5c31;&#x6703;&#x4ea4;&#x63db;x,y&#x4e86",{"_index":3839,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5247;&#x53ef;&#x4ee5;&#x7d66;&#x4efb;&#x4f55",{"_index":2749,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x5247;&#x5728",{"_index":647,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x5247;&#x5c07;&#x7d50;&#x679c;&#x518d;&#x52a0",{"_index":686,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x5247;&#x5c08;&#x9580;&#x7531",{"_index":4735,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5247;&#x662f",{"_index":572,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5247;&#x662f;&#x5c07;&#x7236;&#x985e;&#x5225;&#x578b;&#x614b;&#x7684",{"_index":3100,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x5247;&#x662f;&#x6700;&#x5bb9;&#x6613;&#x5be6;&#x4f5c;&#x7684;&#x96fb;&#x8def;&#x3002;99",{"_index":641,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x5247;&#x7528;&#x5230",{"_index":2792,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x5247;&#x7a31;&#x70ba",{"_index":3148,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x5247;&#x8070;&#x660e;&#x4e00;&#x9ede;&#x7684",{"_index":2946,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5247;&#x8868;&#x793a;&#x8a72",{"_index":1560,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x524d;&#x4e00;&#x500b",{"_index":4764,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x524d;&#x5c07;&#x6240;&#x6709;&#x7684",{"_index":2812,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x524d;&#x9762;&#x3002;&#x5982;&#x679c",{"_index":1528,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x524d;&#x9762;&#x4ecb;&#x7d39;&#x4e86;&#x6574;&#x6578;&#x7684;&#x8868;&#x9054;&#x6cd5;&#xff0c;&#x4f46;&#x5c0d;&#x8a31;&#x591a;&#x61c9;&#x7528;&#x4f86;&#x8aaa",{"_index":706,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x524d;&#x9762;&#x63d0;&#x5230",{"_index":2982,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x524d;&#x9762;&#x6709",{"_index":1529,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x524d;&#x9762;&#x8868;&#x793a",{"_index":3177,"title":{},"body":{"java/extends.html#final-修飾字":{}}}],["x524d;&#x9762;&#x8868;&#x793a;&#x6b64",{"_index":1518,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x524d;&#x9762;&#xff0c;&#x8868;&#x793a;&#x53ea;&#x6709;&#x5b9a;&#x7fa9;&#x9019;&#x4e9b",{"_index":1526,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x524d;&#x9762;&#xff0c;&#x8868;&#x793a;&#x6240;&#x6709;&#x7684",{"_index":1523,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x524d;&#x9762;&#xff0c;&#x8868;&#x793a;&#x8981;&#x9396;&#x5b9a",{"_index":4723,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x524d;&#x9762;&#xff1a",{"_index":3175,"title":{},"body":{"java/extends.html#final-修飾字":{}}}],["x529f;&#x80fd;&#x6558;&#x8ff0",{"_index":3664,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x52a0",{"_index":876,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["x52a0;&#x4e00",{"_index":3668,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x52a0;&#x4ee5;&#x8abf;&#x6574;&#x3002",{"_index":5157,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x52a0;&#x5165;&#x6216;&#x79fb;&#x9664",{"_index":5248,"title":{},"body":{"java/gui.html#AWT":{}}}],["x52a0;&#x5165;&#x7db2;&#x8def;&#x8f38;&#x5165;&#x6210;&#x7e3e;&#x4f46;&#x5c1a;&#x672a;&#x81f4;&#x9001;&#x5224;&#x5225",{"_index":2512,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x52a0;&#x5165;mim",{"_index":4399,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["x52d5;&#x7269",{"_index":3640,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x52d5;&#x8a5e",{"_index":1094,"title":{},"body":{"c/writing-intro.html#句子的組成":{}}}],["x5340;&#x57df;&#x8b8a;&#x6578;&#x5ba3;&#x544a",{"_index":1102,"title":{},"body":{"c/writing-intro.html#程式語言":{}}}],["x5340;&#x584a;&#x4e00;&#x5b9a;&#x6703;&#x88ab;&#x57f7;&#x884c;&#x5230;&#x3002",{"_index":2941,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5340;&#x584a;&#x4e86;&#x3002",{"_index":2954,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5340;&#x584a;&#x4ee5;&#x524d;&#xff0c;&#x5982;&#x679c;&#x6709",{"_index":2939,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5340;&#x584a;&#x6514;&#x622a;&#x6b64",{"_index":2971,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5340;&#x584a;&#x6703;&#x7acb;&#x523b;&#x4e2d;&#x65b7;&#x57f7;&#x884c;&#xff0c;&#x7136;&#x5f8c;&#x5230;&#x7b2c;&#x4e00;&#x500b",{"_index":2932,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5340;&#x584a;&#x6c92;&#x6709;&#x8fa6;&#x6cd5;&#x6514;&#x4e0b;&#x5b83;&#x5011;&#xff0c;&#x6700;&#x5f8c;&#x6703;&#x7531",{"_index":2989,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5340;&#x584a;&#x88e1;&#x9762;&#x7684;&#x7a0b;&#x5f0f;&#x78bc;&#x5927;&#x591a;&#x7528;&#x4f86;&#x4f5c;&#x8cc7;&#x6e90;&#x56de;&#x6536;&#xff0c;&#x6216;&#x6e05;&#x7406;&#x8cc7;&#x6599;&#x7d50;&#x69cb;&#x7684;&#x5de5;&#x4f5c;&#xff0c;&#x4ee5;&#x78ba;&#x4fdd;&#x4e0d;&#x8ad6;&#x6709;&#x7121;&#x767c;&#x751f;&#x72c0;&#x6cc1;&#xff0c;&#x7a0b;&#x5f0f;&#x90fd;&#x80fd;&#x7e7c;&#x7e8c;&#x6b63;&#x5e38;&#x57f7;&#x884c;&#x3002",{"_index":2943,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5340;&#x584a;&#xff0c;&#x4f46;&#x57f7;&#x884c;&#x6642;&#x6700;&#x591a;&#x53ea;&#x6709;&#x4e00;&#x584a;&#x6703;&#x57f7;&#x884c;&#x5230;&#x3002",{"_index":2938,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5340;&#x584a;&#xff0c;&#x5247",{"_index":2940,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5340;&#x584a;&#xff1b;&#x5982;&#x679c;&#x4e0d;&#x662f;&#xff0c;&#x5247;&#x9032;&#x4e00;&#x6b65;&#x6bd4;&#x8f03",{"_index":2936,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5341;&#x516d;&#x9032;&#x4f4d;&#x6578;&#x5b57;&#x8207;&#x904b;&#x7b97",{"_index":523,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5341;&#x9032;&#x4f4d",{"_index":499,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5341;&#x9032;&#x4f4d;&#x52a0;&#x6cd5;&#x8868",{"_index":508,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5341;&#x9032;&#x4f4d;&#x6574;&#x6578",{"_index":216,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x5360",{"_index":746,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x5370;&#x51fa",{"_index":241,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x5370;&#x51fa;&#x7b2c;i&#x5217",{"_index":3820,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5370;&#x5237;&#x54c1",{"_index":2588,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5370;&#x8868;&#x516c;&#x7528;&#x7a0b;&#x5f0f",{"_index":2505,"title":{},"body":{"java/easy-print.html#圖形與字型公用程式":{}}}],["x5370;&#x8868;&#x756b;&#x5e03;&#x62bd;&#x8c61;&#x985e;&#x5225",{"_index":2501,"title":{},"body":{"java/easy-print.html#PrintCanvas-java":{}}}],["x5370;&#x8868;&#x7bc4;&#x4f8b",{"_index":2508,"title":{"java/easy-print.html#印表範例":{}},"body":{}}],["x5370;&#x8868;&#x8207;&#x700f;&#x89bd;&#x62bd;&#x8c61;&#x985e;&#x5225",{"_index":2487,"title":{},"body":{"java/easy-print.html#Print-java":{}}}],["x5373;&#x53ef;&#x3002;&#x5982;&#x679c;&#x53c3;&#x6578;&#x5b8c;&#x5168;&#x76f8;&#x540c;&#xff0c;&#x4f46;&#x50b3;&#x56de;&#x503c;&#x4e0d;&#x540c;&#xff0c;&#x5247;&#x9055;&#x53cd;&#x4e86",{"_index":3313,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x5373;&#x53ef;&#x89c0;&#x5bdf;&#x4f60;&#x6240;&#x5beb;&#x7a0b;&#x5f0f;&#x7684;&#x57f7;&#x884c;&#x7d50;&#x679c;&#x3002;&#x6709;&#x6642;&#x5019;&#x82e5;&#x4f60;&#x8a2d;&#x5b9a;&#x7684;&#x74b0;&#x5883;&#x8b8a;&#x6578;&#x4e0d;&#x5c0d;&#xff0c;&#x5247;&#x53ef;&#x80fd;&#x51fa;&#x73f",{"_index":985,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x5373;&#x53ef;&#xff0c;&#x5176;&#x9918",{"_index":5209,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x5373;&#x5c6c;&#x65bc;&#x8a72;&#x7cfb;&#x5217;)&#xff0c;&#x5176;&#x6307;&#x4ee4;&#x96c6;&#x5305;&#x62ec;&#x5e7e;&#x767e;&#x500b;&#x6307;&#x4ee4;&#x3002;&#x4e00;&#x822c;&#x800c;&#x8a00;&#xff0c;&#x96fb;&#x8166;&#x6307;&#x4ee4;&#x53ef;&#x4ee5;&#x5206;&#x985e;&#x70ba;&#x4e0b;&#x9762;&#x5e7e;&#x985e;&#xff1a",{"_index":855,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x537b;&#x662f;&#x5404;&#x81ea;&#x7368;&#x7acb;&#x7684;&#x3002",{"_index":4610,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x539f;&#x5148",{"_index":5206,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x539f;&#x5247;&#x4e0a;&#x662f;&#x7684;&#x3002",{"_index":2957,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x539f;&#x59cb;&#x6a94;&#xff1a",{"_index":3562,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x539f;&#x59cb;&#x7684;&#x8a2d;&#x8a08;&#x7406;&#x5ff5;&#x5177;&#x6709;&#x8de8;&#x5e73;&#x53f0;&#x7684;&#x6027;&#x8cea;&#xff0c;&#x56e0;&#x6b64",{"_index":5182,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x53c3;&#x6578",{"_index":1101,"title":{},"body":{"c/writing-intro.html#程式語言":{}}}],["x53c3;&#x6578;&#x500b;&#x6578;&#x3001;&#x578b;&#x614b;&#x4ee5;&#x53ca;&#x50b3;&#x56de;&#x503c;&#x578b;&#x614b",{"_index":3307,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x53c8;&#x4f8b;&#x5982",{"_index":2899,"title":{},"body":{"java/exception.html#簡介":{}}}],["x53c8;&#x4f8b;&#x5982;&#x9664;&#x6cd5;&#x904b;&#x7b97;&#x6642;&#x5206;&#x6bcd;&#x662f",{"_index":2906,"title":{},"body":{"java/exception.html#簡介":{}}}],["x53c8;&#x591a;&#x91cd;&#x7e7c;&#x627f",{"_index":3237,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x53c8;&#x7531;&#x4e0b;&#x9762;&#x5169;&#x9805;&#x7d44;&#x6210",{"_index":4595,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x53c8;&#x7531;&#x4ee5;&#x4e0b;&#x5169;&#x500b;&#x6771;&#x897f;&#x7d44;&#x6210",{"_index":4584,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x53c9;&#x53c9;&#x8d0f;&#x4e86",{"_index":5275,"title":{},"body":{"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["x53ca",{"_index":564,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x53ca;&#x5176;&#x5b50;&#x985e;&#x5225;&#x53ef;&#x4ee5;&#x4e0d;&#x5fc5;&#x8655;&#x7406;&#x3002",{"_index":2965,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x53cd;&#x8f49;&#x9663;&#x5217",{"_index":1358,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x53d6;&#x5f97",{"_index":4762,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x53d6;&#x5f97;&#x548c;&#x5931;&#x53bb",{"_index":4665,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x53d6;&#x5f97;&#x653e;&#x7f6e;&#x7684;&#x5730;&#x65b9;)&#x3002",{"_index":5213,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x53d6;&#x5f97;lock,&#x5982;&#x679c;&#x5225;&#x7684;thread",{"_index":4715,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x53d6;&#x6d88",{"_index":2492,"title":{},"body":{"java/easy-print.html#Print-java":{}}}],["x53d7;&#x8a5e",{"_index":1095,"title":{},"body":{"c/writing-intro.html#句子的組成":{}}}],["x53e5;&#x5b50",{"_index":1084,"title":{},"body":{"c/writing-intro.html#文章的組成":{}}}],["x53e5;&#x5b50;&#x7684;&#x7d44;&#x6210",{"_index":1090,"title":{"c/writing-intro.html#句子的組成":{}},"body":{}}],["x53e6;&#x4e00;&#x500b",{"_index":2984,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x53e6;&#x4e00;&#x7a2e;&#x65b9;&#x6cd5;&#x662f;&#x898f;&#x7bc4;&#x8a72;&#x9663;&#x5217;&#x5fc5;&#x9808;&#x4ee5;&#x67d0;&#x500b;&#x7279;&#x6b8a;&#x7684;&#x6578;&#x503c;&#x7576;&#x4f5c;&#x7d50;&#x5c3e;&#xff0c;&#x51fd;&#x6578;&#x5fc5;&#x9808;&#x81ea;&#x884c;&#x6aa2;&#x67e5;&#x8a72;&#x6578;&#x503c;&#xff0c;&#x4ee5;&#x78ba;&#x4fdd;&#x7a0b;&#x5f0f;&#x6b63;&#x78ba;&#x3002;c",{"_index":1273,"title":{},"body":{"java/array.html#C-語言陣列回顧":{}}}],["x53ea;&#x5141;&#x8a31;&#x55ae;&#x4e00;&#x7e7c;&#x627f;&#x3002",{"_index":3089,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["x53ea;&#x597d;&#x53d6;&#x5404;&#x5bb6;&#x8996;&#x7a97;&#x7cfb;&#x7d71",{"_index":5183,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x53ea;&#x5b9a;&#x7fa9;&#x4e86",{"_index":569,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x53ea;&#x662f;&#x5ba3;&#x544a",{"_index":1288,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x53ea;&#x662f;&#x5ba3;&#x544a;&#x800c;&#x5df2;&#x3002;&#x6c92;&#x6709;&#x5be6;&#x4f5c;&#x7684",{"_index":3288,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x53ea;&#x662f;&#x900f;&#x904",{"_index":3742,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x53ea;&#x6709",{"_index":3682,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x53ea;&#x6709;&#x4e00;&#x500b;&#xff0c;&#x4f46",{"_index":4221,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["x53ea;&#x6709;&#x4e00;&#x500b;&#xff1b;&#x800c;&#x6bcf;&#x500b",{"_index":1533,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x53ea;&#x6709;&#x53c3;&#x6578;&#x5ba3;&#x544a;&#xff0c;&#x6c92;&#x6709;&#x5be6;&#x4f5c;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x7a31;&#x70ba",{"_index":3316,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x53ea;&#x80fd;&#x5b58;&#x53d6;&#x578b;&#x614b;&#x76f8;&#x7b26;&#x5408;&#x7684;&#x985e;&#x5225;&#x3002;&#x5ba3;&#x544a",{"_index":3629,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x53ea;&#x80fd;&#x6709;&#x55ae;&#x4e00;&#x7e7c;&#x627f;&#xff0c;&#x56e0;&#x6b64;&#x50cf;&#x300c;&#x9644;&#x6709;&#x6a61;&#x76ae;&#x64e6;&#x7684;&#x925b;&#x7b46;&#x300d;&#x540c;&#x6642;&#x5177;&#x6709;&#x300c;&#x66f8;&#x5beb;&#x5de5;&#x5177;&#x300d;&#x548c;&#x300c;&#x64e6;&#x62ed;&#x5de5;&#x5177;&#x300d;&#x5169;&#x7a2e;&#x4e92;&#x4e0d;&#x76f8;&#x95dc;&#x7684;&#x578b;&#x5225;&#xff0c;&#x5c31;&#x7121;&#x6cd5;&#x900f;&#x904",{"_index":3228,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x53ea;&#x80fd;&#x7d66;&#x540c;&#x4e00;&#x500b",{"_index":2746,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x53ea;&#x80fd;&#x900f;&#x904",{"_index":4213,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["x53ea;&#x8981;&#x4e0d;&#x6703;&#x9020;&#x6210;&#x6df7;&#x6dc6",{"_index":2785,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x53ea;&#x8981;&#x5be6;&#x4f5c;&#x4e00;&#x6b21;&#x5373;&#x53ef;&#xff0c;&#x4f8b;&#x5982",{"_index":3309,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x53ea;&#x8981;&#x5be6;&#x4f5c;&#x4e00;&#x6b21;&#x5c31;&#x597d;&#x4e86;&#x3002;&#x5982;&#x679c;&#x540c;&#x540d;&#x51fd;&#x6578;&#x7b26;&#x5408",{"_index":3311,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x53ea;&#x8981;&#x6709;thread&#x60f3;&#x8981;&#x8b80;,&#x6216;&#x662f;&#x6709;thread&#x6b63;&#x5728;&#x5beb;,&#x79ae;&#x8b93",{"_index":4781,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x53ea;&#x8981;&#x7528;&#x5230;&#x7684",{"_index":2958,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x53eb;&#x9192;&#x6240;&#x6709;&#x60f3;&#x8b80;&#x548c;&#x60f3;&#x5beb;&#x7684",{"_index":4787,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x53ef;&#x4ee5",{"_index":1584,"title":{},"body":{"java/class-and-obj.html#Overloading":{}}}],["x53ef;&#x4ee5;&#x4f9b;&#x5176;&#x4ed6",{"_index":1519,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x53ef;&#x4ee5;&#x514d;&#x8cbb;&#x4e0b;&#x8f09;&#x3002;&#x4ee5",{"_index":3560,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x53ef;&#x4ee5;&#x540c;&#x6642;&#x57f7;&#x884c;&#x591a;&#x6b21;&#xff0c;&#x7522;&#x751f;&#x591a;&#x500b;process&#x3002;&#x4ee5;&#x7269;&#x4ef6;&#x5c0e;&#x5411;&#x7684;&#x89c0;&#x5ff5;&#x4f86;&#x985e;&#x6bd4;&#xff0c;&#x76f8;&#x7576;&#x65bc",{"_index":4582,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x53ef;&#x4ee5;&#x5b9a;&#x7fa9;&#x597d;&#x5e7e;&#x500b",{"_index":2740,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x53ef;&#x4ee5;&#x5ba3;&#x544a;&#x5be6;&#x4f5c;&#x591a;&#x500b",{"_index":3255,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x53ef;&#x4ee5;&#x60f3;&#x6210;&#x662f;&#x5728;&#x8a2d;&#x8a08;&#x6216;&#x5be6;&#x4f5c;&#x4e0a;&#x76f8;&#x95dc;&#x7684;&#x4e00;&#x7fa4",{"_index":2702,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x53ef;&#x4ee5;&#x628a;&#x76ee;&#x9304;&#x53ca;&#x5176;&#x5b50;&#x76ee;&#x9304;&#x5167;&#x7684;&#x6a94;&#x6848;&#x90fd;&#x58d3;&#x7e2e;&#x8d77;&#x4f86;&#xff0c;&#x56e0;&#x6b64;&#x53ef;&#x4ee5;&#x900f;&#x904e;&#x9019;&#x985e;&#x6a94;&#x6848;&#x6293;&#x5230;&#x6240;&#x9700;&#x7684",{"_index":2728,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x53ef;&#x4ee5;&#x6307;&#x5230;&#x5b50;&#x985e;&#x5225;&#x7269;&#x4ef6",{"_index":3143,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x53ef;&#x4ee5;&#x6307;&#x5230;&#x5b50;&#x985e;&#x5225;&#x7684",{"_index":3106,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x53ef;&#x4ee5;&#x63a5;&#x6536;&#x300c;&#x8a0a;&#x606f;&#x300d;&#xff0c;&#x4e26;&#x4f9d;&#x64da;&#x8a0a;&#x606f;&#x7684;&#x53c3;&#x6578;&#x4ee5;&#x53ca;&#x8a72;&#x7269;&#x4ef6;&#x7684;&#x5167;&#x90e8;&#x72c0;&#x614b;&#xff0c;&#x505a;&#x51fa;&#x53cd;&#x61c9;&#xff0c;&#x4e26;&#x53ef;&#x80fd;&#x56e0;&#x800c;&#x6539;&#x8b8a;&#x8a72;&#x7269;&#x4ef6;&#x7684;&#x5167;&#x90e8;&#x72c0;&#x614b",{"_index":1460,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x53ef;&#x4ee5;&#x63a5;&#x6536;&#x7684;&#x8a0a;&#x606f;&#xff0c;&#x7a31;&#x70ba",{"_index":1481,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x53ef;&#x4ee5;&#x653e;&#x5165;&#x5176;&#x4ed6;&#x7684",{"_index":5152,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x53ef;&#x4ee5;&#x6709;&#x591a;&#x500b",{"_index":4601,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x53ef;&#x4ee5;&#x6709;&#x5f88;&#x591a;&#x500b;&#xff0c;&#x56e0;&#x6b64;&#x5fc5;&#x9808;&#x4f7f;&#x7528",{"_index":4222,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["x53ef;&#x4ee5;&#x7528;&#x4f86;&#x6c42;&#x5e73;&#x65b9;&#x6839;&#xff0c;&#x4f46;&#x5982;&#x679c;&#x6211;&#x5011;&#x7d66;&#x4ed6;&#x8ca0;&#x6578;&#xff0c",{"_index":2900,"title":{},"body":{"java/exception.html#簡介":{}}}],["x53ef;&#x4ee5;&#x7531;&#x4e0d;&#x540c;&#x7a0b;&#x5f0f;&#x8a9e;&#x8a00;&#x7684",{"_index":971,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x8f49;&#x6210",{"_index":535,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x53ef;&#x4ee5;&#x85c9;&#x7531",{"_index":612,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x53ef;&#x4ee5;&#x88ab;&#x4efb;&#x4f55;&#x5176;&#x4ed6;&#x51fd;&#x6578;&#x547c;&#x53eb;&#xff0c;&#x7a0b;&#x5f0f;&#x8a9e;&#x8a00;&#x4e26;&#x6c92;&#x6709;&#x7279;&#x5225;&#x7684;&#x898f;&#x7bc4;&#x3002",{"_index":4193,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x53ef;&#x4ee5;&#x8a2d;&#x5b9a",{"_index":4640,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{},"java/gui.html#AWT":{}}}],["x53ef;&#x4ee5;&#x8b93;&#x4f7f;&#x7528;&#x8005;&#x81ea;&#x884c;&#x9078;&#x5b9a;&#x5176;&#x6240;&#x559c;&#x611b;&#x7684",{"_index":5197,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x53ef;&#x4ee5;&#x96a8;&#x4fbf;&#x66f4;&#x6539;&#x3002",{"_index":3282,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x53ef;&#x4f7f;&#x7528",{"_index":2821,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x53ef;&#x5b9a;&#x7fa9;&#x5169;&#x8b8a;&#x6578",{"_index":3842,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x53ef;&#x5f97",{"_index":547,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x53ef;&#x7528",{"_index":3617,"title":{},"body":{"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#迴圈範例":{}}}],["x53ef;&#x7528;&#x4f86;&#x4f5c;&#x5206;&#x6790;&#x8a08;&#x7b97;&#x7b49;&#x3002;&#x4f5c;&#x696d;&#x7cfb;&#x7d71;&#x662f;&#x96fb;&#x8166;&#x7cfb;&#x7d71;&#x4e0d;&#x53ef;&#x6216;&#x7f3a;&#x7684;&#x4e00;&#x90e8;&#x4efd;&#xff0c;&#x7576;&#x96fb;&#x8166;&#x555f;&#x52d5;&#x6642;&#xff0c;&#x9996;&#x5148;&#x6703;&#x57f7;&#x884c;&#x5132;&#x5b58;&#x5728;&#x552f;&#x8b80;&#x662f;&#x8a18;&#x61b6;&#x9ad4",{"_index":484,"title":{},"body":{"c/system-intro.html#軟體元件":{}}}],["x53ef;&#x7528;&#x4f86;&#x5c07;&#x9663;&#x5217;&#x5167;&#x7684;&#x51fd;&#x6578;&#x5168;&#x90e8;&#x52a0;&#x7e3d;&#x8d77;&#x4f86;&#xff0c;&#x5247;&#x50c5;&#x9760;&#x50b3;&#x905e;&#x9663;&#x5217;&#x958b;&#x982d;&#x5730;&#x5740;&#x662f;&#x4e0d;&#x5920;&#x7684;&#xff0c;&#x9084;&#x5fc5;&#x9808;&#x50b3;&#x905e;&#x8a72;&#x9663;&#x5217;&#x7684;&#x9577;&#x5ea6;&#x624d;&#x884c;&#x3002;&#x5982",{"_index":1271,"title":{},"body":{"java/array.html#C-語言陣列回顧":{}}}],["x53ef;&#x7528;&#x4f86;&#x7de8;&#x8f2f;&#x6587;&#x66f8;&#xff0c;excel",{"_index":483,"title":{},"body":{"c/system-intro.html#軟體元件":{}}}],["x53ef;&#x80fd;&#x5728;&#x57f7;&#x884c;&#x4efb;&#x4f55;&#x4e00;&#x500b;&#x6a5f;&#x5668;&#x6307;&#x4ee4;&#x6642;&#xff0c;&#x88ab;&#x4f5c;&#x696d;&#x7cfb;&#x7d71;&#x53d6;&#x8d70",{"_index":4668,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x53ef;&#x80fd;&#x57f7;&#x884c;&#x540c;&#x4e00;&#x6bb5;&#x7a0b;&#x5f0f;&#x78bc;&#xff0c;&#x5b58;&#x53d6;&#x540c;&#x4e00;&#x500b;&#x8cc7;&#x6599;&#x7d50;&#x69cb",{"_index":4707,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x53ef;&#x80fd;&#x7528;&#x5230;&#x6a21;&#x7d44",{"_index":2807,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x53ef;&#x8996;&#x70ba",{"_index":1001,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x53ef;&#x8996;&#x70ba;&#x4e00;&#x7a2e;&#x7d04;&#x5b9a;&#x6216;&#x5951;&#x7d04;&#xff0c;&#x6211;&#x5011;&#x81ea;&#x7136;&#x4e0d;&#x5e0c;&#x671b;&#x88e1;&#x9762;&#x7684",{"_index":3281,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x53ef;&#x8996;&#x70ba;&#x6c92;&#x6709;&#x5be6;&#x4f5c;&#x7684;&#x81ea;&#x8a02;&#x578b;&#x5225;&#xff0c;&#x548c",{"_index":3252,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x53f3;&#x908a",{"_index":3699,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5404;&#x81ea;&#x64c1;&#x6709;&#x5176",{"_index":4605,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x5404;&#x8a72;&#x5b78;&#x671f;&#x4fee;&#x7fd2;&#x5b78;&#x5206;&#x7e3d;&#x6578;&#x4e8c;&#x5206;&#x4e4b;&#x4e00;&#x8005;&#x3002;\\n&#x4e8c;&#x3001;&#x50d1;&#x751f;&#x3001;&#x5916;&#x570b;&#x751f;&#xff1a;&#x5b78;&#x671f;&#x5b78;&#x696d;&#x6210;&#x7e3e;&#x7d2f;&#x8a08;&#x4e09;&#x5b78;&#x671f;&#x4e0d;&#x53ca;&#x683c;&#x79d1;&#x76ee;&#x4e4b;&#x5b78;&#x5206;&#x6578",{"_index":2520,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5404;&#x90e8;&#x4efd;&#x7684;&#x904b;&#x4f5c;&#x3002;alu",{"_index":460,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x5408;&#x4f75;&#x5169;&#x500b;&#x904b;&#x7b97;&#x8996;&#x70ba;&#x4e00;&#x500b;&#x6558;&#x8ff0",{"_index":3700,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x540c",{"_index":3689,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x540c;&#x4e00;&#x500b",{"_index":1580,"title":{},"body":{"java/class-and-obj.html#Overloading":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/thread.html#Program-Process-Thread":{}}}],["x540c;&#x4e00;&#x985e;&#x5225;&#x7684;&#x4e0d;&#x540c",{"_index":1458,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x540c;&#x6642;&#x8981;&#x5b58;&#x53d6",{"_index":4676,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x540c;public",{"_index":3260,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x540d;&#x7a31;&#x53ef;&#x4ee5;&#x91cd;&#x8907;&#x4f7f;&#x7528;&#xff0c;&#x53ea;&#x8981;&#x53ef;&#x4ee5;&#x7531",{"_index":1581,"title":{},"body":{"java/class-and-obj.html#Overloading":{}}}],["x5411;&#x53f3;&#x7121;&#x865f",{"_index":3655,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5411;&#x91cf;&#x5716;&#x5f62;&#x8207;&#x5b57;&#x578b",{"_index":560,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x541b;&#x555f",{"_index":2592,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5426;&#x5247",{"_index":935,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5427",{"_index":731,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x542b",{"_index":868,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x544a;&#x8a34;&#x6211;&#x5011;&#x547c;&#x53eb",{"_index":1325,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x544a;&#x8a34;&#x6211;&#x5011;&#x7d22;&#x5f15;&#x503c;&#x662f",{"_index":1323,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x5462",{"_index":710,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x5462;&#xff1f;&#x50cf;&#x662f",{"_index":2967,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x547c;&#x53eb",{"_index":5258,"title":{},"body":{"java/gui.html#AWT":{}}}],["x547c;&#x53eb;&#x51fd;&#x6578;&#x5c07;&#x5169;&#x500b;&#x6578;&#x5b57;&#x76f8;&#x52a0;&#x7684;&#x7bc4;&#x4f8b",{"_index":943,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x547c;&#x53eb;&#x51fd;&#x6578;&#x6642;&#x7d66;&#x4e88;&#x9069;&#x7576;&#x7684;&#x53c3;&#x6578;&#x3002;&#x51fd;&#x6578;&#x548c;&#x8a18;&#x61b6;&#x9ad4;&#x4e4b;&#x9593;&#x6c92;&#x6709;&#x95dc;&#x806f;&#x6027;&#xff0c;&#x800c;&#x4e14;&#x51fd;&#x6578",{"_index":4192,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x547c;&#x53eb;&#x5230;&#x5b50;&#x985e;&#x5225;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x56e0;&#x6b64;&#x589e;&#x52a0;&#x65b0;&#x7684;&#x5b50;&#x985e;&#x5225;&#x6642;&#xff0c;&#x4e0d;&#x9700;&#x8981;&#x4fee;&#x6539;&#x7a0b;&#x5f0f",{"_index":3167,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x547c;&#x53eb;&#x5b50;&#x985e;&#x5225;&#x7684;&#x65b9;&#x6cd5",{"_index":3147,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x547c;&#x53eb;&#x7236;&#x985e;&#x5225;&#x7684",{"_index":1604,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["x547c;&#x53eb;&#x7236;&#x985e;&#x5225;&#x7684;&#x65b9;&#x6cd5",{"_index":3149,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x547d;&#x4ee4;&#x4f86;&#x8655;&#x7406;&#xff0c;&#x5176;&#x5f62;&#x5f0f;&#x70ba;&#x5713;&#x62ec;&#x5f27;&#x88e1;&#x5beb;&#x4e0a;&#x578b;&#x5225;&#x540d;&#x7a31;&#xff0c;&#x5982",{"_index":3607,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x548c",{"_index":183,"title":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}},"body":{"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html#軟體元件":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{},"c/system-intro.html#浮點數表示法":{},"c/system-operation.html#Software-development-process":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/extends.html#final-修飾字":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{},"java/java-vs-c.html#運算符號-Operator":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#Java-語言的寫作風格":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{},"java/thread.html#Program-Process-Thread":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{},"java/gui.html#GUI-簡介":{}}}],["x548c;&#x4e0b;&#x9762;&#x7684;&#x5beb;&#x6cd5;&#x76f8;&#x540c",{"_index":3094,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["x548c;&#x4e4b;&#x9593;&#x662f;&#x7531;&#x532f;&#x6d41;&#x6392",{"_index":473,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x548c;&#x5176;&#x4ed6",{"_index":1489,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x548c;&#x5177;&#x6709;&#x5c0f;&#x6578;&#x9ede;&#x7684;&#x6578;&#x5b57;&#x8868;&#x793a;&#x53f3;&#x5c0d;&#x9f4a;&#x6700;&#x5c11;&#x5e7e;&#x4f4d;&#xff0c;&#x5982",{"_index":240,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x548c;&#x5177;&#x6709;&#x5c0f;&#x6578;&#x9ede;&#x7684;&#x6578;&#x5b57;&#x8868;&#x793a;&#x5de6;&#x5c0d;&#x9f4a;&#x6700;&#x5c11;&#x5e7e;&#x4f4d;&#xff0c;&#x5982",{"_index":238,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x548c;&#x51fd;&#x6578;&#x547c;&#x53eb",{"_index":4188,"title":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}},"body":{}}],["x548c;&#x5b50;&#x985e;&#x5225;&#x4e26;&#x4e0d;&#x76f8;&#x5bb9;&#xff0c;&#x5982",{"_index":3111,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x548c;&#x6578;&#x5b57;&#x8868;&#x793a;&#x53f3;&#x5c0d;&#x9f4a;&#x6700;&#x5c11;&#x5e7e;&#x4f4d;&#xff0c;&#x5982",{"_index":224,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x548c;&#x6578;&#x5b57;&#x8868;&#x793a;&#x5de6;&#x5c0d;&#x9f4a;&#x6700;&#x5c11;&#x5e7e;&#x4f4d;&#xff0c;&#x5982",{"_index":221,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x548c;&#x65b9;&#x6cd5",{"_index":3299,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x548c;&#x7b97;&#x8853;&#x908f;&#x8f2f;&#x55ae;&#x5143",{"_index":457,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x548c;&#x96f6;&#x5230;&#x591a;&#x500b",{"_index":962,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x54ea;&#x4e9b;&#x5c6c;&#x65bc",{"_index":2966,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x555f;&#x52d5;&#x4e0a;&#x8ff0;&#x7684",{"_index":1508,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x555f;&#x52d5;&#x6642;&#xff0c;&#x5b83;&#x6703;&#x53bb;&#x627e;&#x547d;&#x4ee4;&#x5217;&#x4e0a;&#x6240;&#x6307;&#x5b9a;&#x7684",{"_index":1503,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x55ae;&#x4e00;&#x6b04;&#x4f4d;&#x8f38;&#x5165",{"_index":5280,"title":{},"body":{"java/gui.html#鍵盤事件處理範例":{}}}],["x55ae;&#x5b57",{"_index":1091,"title":{},"body":{"c/writing-intro.html#句子的組成":{}}}],["x55ae;&#x884c",{"_index":5236,"title":{},"body":{"java/gui.html#AWT":{}}}],["x56db;&#x500b;&#x6578;&#x5b57;&#xff0c;&#x7136;&#x5f8c;&#x518d",{"_index":915,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x56db;&#x6368;&#x4e94;&#x5165;&#x6210;&#x70ba",{"_index":3779,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["x56db;&#x6b21;&#xff0c;&#x4f60;&#x6703;&#x767c;&#x73fe;&#x62ff;&#x51fa;&#x4f86;&#x7684;&#x9806;&#x5e8f;&#x662f",{"_index":916,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x56db;&#x7d44;&#xff0c;&#x5404;&#x7d44;&#x6578;&#x5b57;&#x7ffb;&#x6210;&#x5341;&#x516d;&#x9032;&#x4f4d;&#x5c31;&#x6210;&#x70ba",{"_index":539,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x56de;&#x6536;&#x6c92;&#x6709;&#x88ab;&#x4efb;&#x4f55",{"_index":1553,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x56e0;&#x5b57;&#x5143;&#x7de8;&#x78bc;&#x4f7f;&#x7528;unicod",{"_index":3642,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x56e0;&#x6b64",{"_index":521,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x56e0;&#x6b64;&#x53ef;&#x6c42;&#x5f97",{"_index":516,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x56e0;&#x6b64;&#x5728;&#x4e8c;&#x9032;&#x4f4d;&#x7684",{"_index":699,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x56e0;&#x6b64;&#x5728;&#x5982;&#x4e0b;&#x7684;&#x7bc4;&#x4f8b;&#x5167",{"_index":1608,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x56e0;&#x6b64;&#x5728;&#x64b0;&#x5beb;&#x591a;&#x57f7;&#x884c;&#x7dd2;&#x7684;&#x7a0b;&#x5f0f;&#x6642;&#xff0c;&#x5fc5;&#x9808;&#x7279;&#x5225;&#x8003;&#x616e;&#x9019;&#x7a2e;&#x72c0;&#x6cc1;(&#x53c8;&#x7a31;&#x70ba",{"_index":4710,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x56e0;&#x6b64;&#x6211;&#x5011;&#x5728;&#x6b64;&#x8aaa;&#x660e;&#x4e0d;&#x540c;&#x5e73;&#x53f0;&#x4e0a;&#x90fd;&#x6703;&#x63d0;&#x4f9b;&#x7684",{"_index":182,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x56e0;&#x6b64;&#x6700;&#x591a",{"_index":655,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x56e0;&#x6b64;&#x6700;&#x5f8c;&#x57f7;&#x884c;&#x7684;&#x7d50;&#x679c;&#x6703;&#x5728;&#x87a2;&#x5e55;&#x4e0a;&#x5370;&#x51fa;&#x6578;&#x5b57",{"_index":1618,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x56e0;&#x6b64;&#x7531;&#x53f3;&#x81f3;&#x5de6;&#x6bcf;&#x4e09;&#x500b;&#x4e00;&#x7d44",{"_index":542,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x570b;&#x7acb;&#x66a8;&#x5357;&#x570b;&#x969b;&#x5927;&#x5b78",{"_index":2587,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5713;&#x5708;&#x8d0f;&#x4e86",{"_index":5274,"title":{},"body":{"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["x5716;&#x4e8c",{"_index":476,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x5716;&#x5f62;&#x8207;&#x5b57;&#x578b;&#x516c;&#x7528;&#x7a0b;&#x5f0f",{"_index":2504,"title":{"java/easy-print.html#圖形與字型公用程式":{}},"body":{}}],["x5728",{"_index":576,"title":{},"body":{"c/system-intro.html#數字系統":{},"c/system-operation.html#Software-development-process":{},"java/encapsulation.html#Package-的引用":{},"java/exception.html#相關語法":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/java-vs-c.html#資料型別":{}}}],["x5728;&#x4e0a;&#x8ff0;&#x7684;&#x4f8b;&#x5b50;&#x4e2d;&#xff0c;&#x6c92;&#x6709;&#x4efb;&#x4f55",{"_index":2973,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5728;&#x4e0a;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#x4e2d",{"_index":3717,"title":{},"body":{"java/java-vs-c.html#流程控制敘述":{}}}],["x5728;&#x4e0d;&#x5f15;&#x9032",{"_index":3248,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x5728;&#x4ecb;&#x7d39",{"_index":4576,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x5728;&#x4ee5;&#x4e0b;&#x7684;&#x7bc4;&#x4f8b;&#x4e2d;&#xff0c;&#x6211;&#x5011;&#x4e3b;&#x8981;&#x63a1;&#x7528",{"_index":5214,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x5728;&#x5341;&#x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x4e2d;&#xff0c;43",{"_index":489,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5728;&#x57f7;&#x884c;&#x671f;&#x9593;&#x624d;&#x6703;&#x6c7a;&#x5b9a;&#x5be6;&#x969b",{"_index":4226,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["x5728;&#x57f7;&#x884c;&#x671f;&#x9593;&#x6703;&#x5c0d;&#x9663;&#x5217;&#x7684;&#x7d22;&#x5f15;&#x505a;&#x6aa2;&#x67e5;&#xff0c;&#x5982;&#x679c;&#x8d85;&#x51fa;&#x4f86;&#x5408;&#x6cd5;&#x7bc4;&#x570d;&#xff0c;&#x5c31;&#x6703;&#x7522;&#x751f",{"_index":1319,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x5728;&#x57f7;&#x884c;&#x671f;&#x9593;&#x80fd;&#x5920;&#x627e;&#x5230;&#x6240;&#x9700;&#x8981;&#x7684",{"_index":2710,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x5728;&#x5be6;&#x52d9;&#x4e0a;&#xff0c;&#x70ba;&#x4e86;&#x8b93",{"_index":3526,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x5728;&#x65bc",{"_index":3681,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5728;&#x6b64;&#x4f8b;&#x4e2d;&#x5c31;&#x662f;&#x6307",{"_index":621,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x5728;&#x7269;&#x4ef6;&#x5c0e;&#x5411;&#x7684;&#x89c0;&#x5ff5;&#x88e1;&#xff0c;&#x7269;&#x4ef6;&#x53ef;&#x4ee5;&#x5177;&#x6709;&#x591a;&#x500b;&#x578b;&#x5225;&#xff0c;&#x4f8b;&#x5982;&#xff1a;&#x300c;&#x9644;&#x6709;&#x6a61;&#x76ae;&#x64e6;&#x7684;&#x925b;&#x7b46;&#x300d;&#xff0c;&#x53ef;&#x4ee5;&#x7576;&#x6210;&#x662f;&#x300c;&#x66f8;&#x5beb;&#x5de5;&#x5177;&#x300d;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x7576;&#x6210;&#x662f;&#x300c;&#x64e6;&#x62ed;&#x5de5;&#x5177;&#x300d;&#x3002",{"_index":3223,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x5728;&#x8a0a;&#x606f;&#x50b3;&#x905e;&#x7684;&#x7ae0;&#x7bc0;&#x88e1;&#xff0c;&#x6211;&#x5011;&#x6709;&#x63d0;&#x5230;&#x904",{"_index":3139,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x5728;&#x8a2d;&#x8a08;&#x4e4b;&#x521d;&#xff0c;&#x8003;&#x91cf;&#x7684;&#x91cd;&#x9ede;&#x4e4b;&#x4e00;&#x5c31;&#x662f;&#x7c21;&#x55ae;&#xff0c;&#x56e0;&#x6b64;&#x548c",{"_index":3588,"title":{},"body":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}}}],["x5728;&#x8b8a;&#x6578;&#x7684;&#x5de6;&#x908a;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x53f3;&#x908a;&#x3002",{"_index":1291,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x5728;&#x904b;&#x7b97;&#x7b26;&#x865f;&#x548c;&#x6558;&#x8ff0;&#x8a9e;&#x6cd5;&#x4e0a;&#x7684;&#x5dee;&#x7570;&#x9ede;&#x51fa;&#x4f86;&#xff0c;&#x76f8;&#x540c;&#x7684;&#x90e8;&#x5206;&#x8acb;&#x53c3;&#x898b",{"_index":3594,"title":{},"body":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}}}],["x5728;&#x9663;&#x5217;&#x8b8a;&#x6578;&#x7684;&#x5ba3;&#x544a;&#x4e2d;&#xff0c;&#x8981;&#x6ce8;&#x610f;&#x548c",{"_index":1284,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x5728;&#x96fb;&#x8166;&#x7cfb;&#x7d71;&#x4e2d;&#x6211;&#x5011;&#x901a;&#x5e38;&#x4ee5;&#x516b;&#x500b",{"_index":524,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5747;&#x53ef;&#x5b58;&#x53d6;&#x6b64",{"_index":1524,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x5747;&#x53ef;&#x6cbf;&#x7528;(&#x9664;&#x4e86",{"_index":5210,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x5747;&#x53ef;&#x8996;&#x70ba;&#x5c6c;&#x65bc;&#x540c;&#x4e00;&#x500b",{"_index":1521,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x5747;&#x5b9a;&#x7fa9",{"_index":3310,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x578b;&#x5225",{"_index":3695,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x578b;&#x5225;&#x540d;&#x7a31",{"_index":3598,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x578b;&#x5225;&#x7684;&#x8b8a;&#x6578;&#x3002;&#x4f8b;&#x5982;&#x7531",{"_index":3612,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x57f7;&#x884c",{"_index":4650,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x57f7;&#x884c;&#x4e0d;&#x5230;)&#x3002",{"_index":2949,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x57f7;&#x884c;&#x5230",{"_index":4679,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x57f7;&#x884c;&#x5f8c;&#x7684;&#x7d50;&#x679c",{"_index":2593,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x57f7;&#x884c;&#x6642;&#x53ef;&#x80fd;&#x5728;&#x67d0;&#x500b;&#x6a5f;&#x5668;&#x6307;&#x4ee4;&#x88ab;&#x4e2d;&#x65b7",{"_index":4706,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x57f7;&#x884c;&#x7684;&#x65b9;&#x6cd5;&#x6709;&#xff1a",{"_index":4648,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x57f7;&#x884c;&#x7dd2",{"_index":2976,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x57f7;&#x884c;&#x81ea;&#x5df1;&#x7684",{"_index":1607,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["x57f7;&#x884c;&#x8b8a;&#x6578;&#x5ba3;&#x544a;&#x7684;&#x521d;&#x59cb;&#x52d5;&#x4f5c;&#xff0c;&#x6210;&#x70ba",{"_index":1616,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x57f7;&#x884c;&#x8b8a;&#x6578;&#x5ba3;&#x544a;&#x7684;&#x521d;&#x59cb;&#x5316;&#x52d5;&#x4f5c;&#x3002",{"_index":1606,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{},"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["x57f7;&#x884c;&#x8d77;&#x4f86;&#x6bd4;&#x8f03;&#x6162",{"_index":3169,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x57f7;&#x884c;&#x9806;&#x5e8f",{"_index":3181,"title":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}},"body":{}}],["x57fa;&#x672c;&#x89c0;&#x5ff5",{"_index":3077,"title":{"java/extends.html#基本觀念":{}},"body":{}}],["x586b;&#x8868;&#x65e5;&#x671f",{"_index":2582,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x58d3;&#x7e2e;&#x5230;&#x6700;&#x9069;&#x7576;&#x7684;&#x5927;&#x5c0f",{"_index":5288,"title":{},"body":{"java/gui.html#文字編輯器":{}}}],["x591a;&#x4e86;&#x4e00;&#x500b;read",{"_index":4799,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x591a;&#x7dad;&#x9663;&#x5217",{"_index":1298,"title":{"java/array.html#多維陣列":{}},"body":{}}],["x591a;&#x884c",{"_index":5237,"title":{},"body":{"java/gui.html#AWT":{}}}],["x591a;&#x91cd;&#x7e7c;&#x627f;&#x7684;&#x524d;&#x63d0;&#x4e0b;&#xff0c;&#x70ba;&#x4e86;&#x8b93;&#x7269;&#x4ef6;&#x5177;&#x6709;&#x591a;&#x7a2e;&#x578b;&#x614b;&#xff0c;java",{"_index":3249,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x591a;&#x91cd;&#x7e7c;&#x627f;&#xff1a",{"_index":3233,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x5927;&#x5beb",{"_index":234,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x5927;&#x65bc",{"_index":3671,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5927;&#x65bc;&#x7b49;&#x65bc",{"_index":3673,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5931;&#x6557;&#x6539;retri",{"_index":4403,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["x5982",{"_index":3533,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x5982;&#x4f55;&#x4ee5;java&#x64b0;&#x5beb;&#x985e;&#x5225",{"_index":1491,"title":{"java/class-and-obj.html#如何以Java撰寫類別":{}},"body":{}}],["x5982;&#x4f55;&#x7522;&#x751f",{"_index":4616,"title":{"java/thread.html#如何產生-Thread":{}},"body":{}}],["x5982;&#x4f55;&#x8868;&#x793a;&#x6574;&#x6578;&#x8cc7;&#x6599",{"_index":598,"title":{"c/system-intro.html#如何表示整數資料":{}},"body":{}}],["x5982;&#x4f55;&#x8b80;&#x5165;&#x8cc7;&#x6599",{"_index":3792,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5982;&#x52a0;&#x6e1b;&#x4e58;&#x9664",{"_index":860,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5982;&#x540c",{"_index":3265,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x5982;&#x679c",{"_index":2695,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Abstract-Class-and-Method":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/gui.html#GUI-簡介":{}}}],["x5982;&#x679c;&#x4f60;&#x6703",{"_index":3737,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x5982;&#x679c;&#x4f60;&#x7684;&#x958b;&#x767c;&#x74b0;&#x5883;&#x662f;&#x5728",{"_index":977,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x5982;&#x679c;&#x5169;&#x500b",{"_index":4675,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5982;&#x679c;&#x540d;&#x7a31;&#x7531;&#x6578;&#x500b;&#x82f1;&#x6587;&#x5b57;&#x7d44;&#x6210;&#xff0c;&#x7b2c;&#x4e8c;&#x500b;&#x82f1;&#x6587;&#x5b57;&#x4ee5;&#x5f8c;&#x9996;&#x5b57;&#x5927;&#x5beb",{"_index":3750,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["x5982;&#x679c;&#x5b50;&#x985e;&#x5225;&#x770b;&#x4e0d;&#x5230;&#x7236;&#x985e;&#x5225;&#x7684;&#x65b9;&#x6cd5",{"_index":3128,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["x5982;&#x679c;&#x5ba3;&#x544a;&#x6210",{"_index":1268,"title":{},"body":{"java/array.html#C-語言陣列回顧":{}}}],["x5982;&#x679c;&#x5df2;&#x7d93;&#x6392;&#x5230;&#x6700;&#x5f8c;&#x4e86;,&#x5370;&#x51fa;&#x7d50;&#x679c",{"_index":1352,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x5982;&#x679c;&#x61c9;&#x7528;&#x8edf;&#x9ad4;&#x53ea;&#x6709;&#x55ae;&#x4e00;&#x7684;&#x9032;&#x5165;&#x9ede;&#xff0c;&#x4f8b;&#x5982",{"_index":2830,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x5982;&#x679c;&#x6211;&#x5011;&#x628a;&#x6240;&#x6709;&#x53ef;&#x5f97;&#x5230;&#x958f;&#x5e74;&#x7684;&#x8def;&#x5f91;&#xff0c;&#x96c6;&#x5408;&#x5728;&#x4e00;&#x8d77;&#xff0c;&#x5247;&#x66f4;&#x7c21;&#x6f54;&#x7684;&#x5beb;&#x6cd5;&#x662f",{"_index":1129,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x5982;&#x679c;&#x628a;&#x4e0a;&#x9762;&#x4f8b;&#x5b50;&#x7a0d;&#x5fae;&#x6539;&#x4e00;&#x4e0b;&#xff1a",{"_index":2945,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5982;&#x679c;&#x66ab;&#x5b58;&#x5668;&#x7684;&#x5167;&#x5bb9",{"_index":933,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5982;&#x679c;&#x6c92;&#x6709;&#x5ba3;&#x544a",{"_index":2706,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x5982;&#x679c;&#x6c92;&#x6709;&#x6b63;&#x5728;&#x8b80;&#x7684;,&#x53eb;&#x9192;&#x6240;&#x6709;&#x7684;(&#x5305;&#x62ec;&#x60f3;&#x5beb;&#x7684",{"_index":4790,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x5982;&#x679c;&#x6c92;&#x6709;&#x8981;&#x8b80;&#x7684;,&#x53eb;&#x9192;&#x60f3;&#x5beb;&#x7684",{"_index":4784,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x5982;&#x679c;&#x7a0b;&#x5f0f;&#x8a9e;&#x8a00;&#x4e0d;&#x652f;&#x63f4",{"_index":3171,"title":{},"body":{"java/extends.html#本章觀念整理範例":{}}}],["x5982;&#x679c;&#x8981;&#x500b;&#x5225;&#x7de8;&#x8b6f;&#x9019;&#x4e9b",{"_index":992,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x5982;&#x679c;&#x8981;&#x6307;&#x5b9a;&#x7236;&#x985e;&#x5225;&#x5176;&#x4ed6;&#x7684",{"_index":3186,"title":{},"body":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["x5982;&#x679c;&#x8981;&#x7528",{"_index":1344,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x5982;&#x679c;&#x8a2d;&#x8a08;&#x8005;&#x6c92;&#x6709;&#x63d0;&#x4f9b;&#x4fdd;&#x8b77;&#x6a5f;&#x5236;&#x7684;&#x8a71;&#xff0c;thread",{"_index":4664,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5982;&#x679c;x",{"_index":3838,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5982;&#x7236;&#x985e;&#x5225;&#x7684",{"_index":3129,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["x59d3;&#x540d",{"_index":2575,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5b50;&#x985e;&#x5225;&#x4e0d;&#x53ef;&#x7e2e;&#x5c0f;&#x7236;&#x985e;&#x5225;&#x65b9;&#x6cd5;&#x7684;&#x5b58;&#x53d6;&#x7bc4;&#x570d",{"_index":3136,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["x5b50;&#x985e;&#x5225;&#x91cd;&#x65b0;&#x5b9a;&#x7fa9;&#x5b83;&#x6240;&#x80fd;&#x770b;&#x5230;&#x7684;&#x7236;&#x985e;&#x5225;&#x4e2d;&#x7684",{"_index":3120,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["x5b57;&#x4e32",{"_index":3724,"title":{"java/java-vs-c.html#字串":{}},"body":{"java/java-vs-c.html#字串":{}}}],["x5b57;&#x5143",{"_index":556,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5b57;&#x5143;&#x3002;unicod",{"_index":584,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5b58;&#x53d6",{"_index":1537,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x5b58;&#x53d6;&#x5230;&#x76f8;&#x540c;&#x7684",{"_index":4608,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x5b58;&#x53d6;&#x7269;&#x4ef6;&#x6216;&#x985e;&#x5225;&#x6210;&#x54e1",{"_index":3703,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5b78;&#x5206",{"_index":2578,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5b78;&#x5e74",{"_index":2524,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5b78;&#x5e74;&#x5ea6;&#x7b2c",{"_index":2568,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5b78;&#x671f",{"_index":2525,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5b78;&#x671f;&#x6210;&#x7e3e;&#x901a;&#x77e5;&#x55a",{"_index":2569,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5b78;&#x696d;&#x6210;&#x7e3e;&#x7e3d;&#x5e73;&#x5747",{"_index":2580,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5b78;&#x751f;&#x540d",{"_index":2572,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5b78;&#x7fd2;&#x8ab2;&#x5802;&#x6578",{"_index":2566,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5b78;&#x865f",{"_index":2538,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5b78;&#x8853;&#x8ad6;&#x6587;&#x7684;&#x7d50;&#x69cb",{"_index":1087,"title":{},"body":{"c/writing-intro.html#文章的組成":{}}}],["x5b8c;&#x5168;&#x6c92;&#x6709;&#x932f;&#x8aa4;&#xff0c;&#x5247;&#x4ee5;&#x4e0a;&#x547d;&#x4ee4;&#x6703;&#x7522;&#x751f;&#x4e00;&#x500b;&#x57f7;&#x884c;&#x6a94",{"_index":983,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x5b8c;&#x5168;&#x76f8;&#x540c;&#xff0c;&#x5247",{"_index":3308,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x5b8c;&#x5168;&#x76f8;&#x5bb9;&#xff0c;&#x53c8;&#x5f88;&#x6ce8;&#x91cd;&#x6548;&#x80fd;&#x554f;&#x984c;&#xff0c;&#x56e0;&#x6b64",{"_index":3586,"title":{},"body":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}}}],["x5b9a;&#x5740;&#x67d0;&#x4e00;&#x584a;&#x8a18;&#x61b6;&#x9ad4;&#x3002",{"_index":467,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x5b9a;&#x7fa9;&#x4e86",{"_index":4642,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x5b9a;&#x7fa9;&#x4e86;&#x56db;&#x7a2e;&#x5b58;&#x53d6;&#x7bc4;&#x570d;&#xff1a",{"_index":2685,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x5b9a;&#x7fa9;&#x4e86;&#x6240;&#x6709;&#x5c6c;&#x65bc;&#x8a72",{"_index":1472,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x5b9a;&#x7fa9;&#x65bc",{"_index":1549,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x5b9a;&#x7fa9;&#x70ba",{"_index":3868,"title":{},"body":{"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x5b9a;&#x7fa9;&#x7269;&#x4ef6;&#x63a5;&#x53d7;&#x5230;&#x8a0a;&#x606f;&#x6642;&#x7684;&#x53cd;&#x61c9;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x57f7;&#x884c",{"_index":4206,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x5b9a;&#x7fa9;&#x7684",{"_index":5240,"title":{},"body":{"java/gui.html#AWT":{}}}],["x5ba3;&#x544a",{"_index":3259,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{},"java/java-vs-c.html#資料型別":{}}}],["x5ba3;&#x544a;&#x6642;&#x6c92;&#x6709;&#x6307;&#x5b9a",{"_index":3092,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["x5ba3;&#x544a;&#x67d0",{"_index":2921,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5ba3;&#x544a;&#x70ba",{"_index":1303,"title":{},"body":{"java/array.html#多維陣列":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/java-vs-c.html#資料型別":{}}}],["x5bb9;&#x6613;&#x5b78;&#x7fd2;&#x3002",{"_index":3590,"title":{},"body":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}}}],["x5bc4",{"_index":2590,"title":{},"body":{"java/easy-print.html#印表範例":{},"java/net.html#SMTP-Client":{}}}],["x5bc4;&#x4ef6;&#x5730;&#x5740",{"_index":2570,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5bc4;&#x4fe1;&#x7a0b;&#x5f0f",{"_index":4398,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["x5be6;&#x4f5c",{"_index":2837,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html#範例":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/interface.html#Abstract-Class-and-Method":{}}}],["x5be6;&#x4f5c;&#x591a;&#x500b",{"_index":3296,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x5be6;&#x5728;&#x592a;&#x5c0f;&#x4e86;&#xff0c;&#x73fe;&#x5728;&#x8a18;&#x61b6;&#x9ad4;&#x7684;&#x6700;&#x5c0f;&#x5132;&#x5b58;&#x55ae;&#x4f4d;&#x901a;&#x5e38;&#x70ba",{"_index":494,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5be6;&#x5f97;&#x5b78;&#x5206;&#x6578",{"_index":2564,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5beb;&#x4e00;&#x51fd;&#x6578;&#x65bc;&#x87a2;&#x5e55;&#x4e0a;&#x756b;&#x51fa;&#x4e5d;&#x4e5d;&#x4e58;&#x6cd5;&#x8868;&#x3002;&#x89e3;&#x6790;&#xff1a",{"_index":3802,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5beb;&#x4e00;&#x51fd;&#x6578;&#x6c42;&#x5169;&#x500b;&#x6574;&#x6578;&#x7684;&#x6700;&#x5927;&#x516c;&#x56e0;&#x6578;&#xff0c;&#x89e3;&#x6790;&#xff1a",{"_index":3830,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5beb;&#x4e00;&#x51fd;&#x6578;&#x6c42;&#x5169;&#x500b;&#x6574;&#x6578;&#x7684;&#x6700;&#x5c0f;&#x516c;&#x500d;&#x6578",{"_index":3840,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5beb;&#x4e00;&#x51fd;&#x6578;&#x6c42;&#x8cbb;&#x6c0f;&#x6578;&#xff0c;&#x89e3;&#x6790;&#xff1a",{"_index":3841,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5beb;&#x4e00;&#x51fd;&#x6578;&#x8f38;&#x5165;&#x53c3;&#x6578",{"_index":3793,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5beb;&#x4e00;&#x7a0b;&#x5f0f;&#x8f38;&#x5165",{"_index":3781,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5beb;&#x4f5c",{"_index":3746,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["x5beb;&#x4f5c;&#x7a0b;&#x5f0f;&#x6642;&#xff0c;&#x5beb;&#x4f5c;&#x7684;&#x4e3b;&#x9ad4;&#x662f",{"_index":1471,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x5beb;&#x597d;&#x7684",{"_index":3561,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x5beb;&#x7a0b;&#x5f0f;&#x6642;&#x5047;&#x8a2d;&#x6307;&#x4ee4;&#x6703;&#x5faa;&#x5e8f;&#x57f7;&#x884c",{"_index":4704,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5beb;&#x8d77;&#x4f86;&#x5c31;&#x50cf",{"_index":4202,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x5c01;&#x88dd;&#x7684;&#x610f;&#x7fa9",{"_index":2675,"title":{"java/encapsulation.html#封裝的意義":{}},"body":{}}],["x5c07",{"_index":874,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5c07;&#x5169;&#x908a;&#x9664;&#x4ee5",{"_index":513,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5c07;&#x53f3;&#x908a;&#x7684;&#x503c;&#x8907;&#x88fd;&#x5230;&#x5de6;&#x908a;&#x7684;&#x8b8a;&#x6578",{"_index":3692,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5c07;&#x53f3;&#x908a;&#x7684;&#x6578;&#x503c;&#x52a0;&#x4e0a;&#x5de6;&#x908a;&#x7684;&#x6578;&#x503c;&#x7136;&#x5f8c;&#x6307;&#x5b9a;&#x7d66;&#x5de6;&#x908a;&#x7684;&#x8b8a;&#x6578",{"_index":3696,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5c07;&#x53f3;&#x908a;&#x7684;&#x6578;&#x503c;&#x6216",{"_index":3693,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5c07;&#x66ab;&#x5b58;&#x5668;&#x5167;&#x7684;&#x6578;&#x503c;&#x6e1b;&#x6389;&#x8a18;&#x61b6;&#x9ad4",{"_index":884,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5c07;&#x66ab;&#x5b58;&#x5668;&#x7684;&#x5167;&#x5bb9;&#x52a0;&#x4e0a;&#x8a18;&#x61b6;&#x9ad4",{"_index":950,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5c07;&#x66ab;&#x5b58;&#x5668;&#x7684;&#x5167;&#x5bb9;&#x6e1b;&#x6389;&#x8a18;&#x61b6;&#x9ad4",{"_index":931,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5c07;&#x66ab;&#x5b58;&#x5668;&#x7684;&#x5167;&#x5bb9;&#x8907;&#x88fd;&#x5230",{"_index":878,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5c07;&#x66ab;&#x5b58;&#x5668;&#x7684;&#x5167;&#x5bb9;&#x8907;&#x88fd;&#x5230;&#x8a18;&#x61b6;&#x9ad4",{"_index":926,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5c07;&#x66ab;&#x5b58;&#x5668;&#x7684;&#x5167;&#x5bb9;&#x8f38;&#x51fa",{"_index":942,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5c07;&#x66ab;&#x5b58;&#x5668;&#x7684;&#x5167;&#x5bb9;&#x8f38;&#x51fa;&#xff0c;program",{"_index":929,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5c07;&#x66ab;&#x5b58;&#x5668;&#x7684;&#x8907;&#x88fd;&#x5230;&#x4e3b;&#x8a18;&#x61b6;&#x9ad4",{"_index":857,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5c07;&#x8a18;&#x61b6;&#x9ad4",{"_index":881,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5c07;reader&#x90fd;&#x653e;&#x5230;&#x76ee;&#x524d;&#x8981;&#x8655;&#x7406;&#x7684;&#x9019;&#x4e00;&#x6279",{"_index":4793,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x5c08;&#x9580;&#x8ca0;&#x8cac;&#x8b80;&#x53d6;&#x4f7f;&#x7528;&#x8005;&#x7684;&#x9700;&#x6c42;&#xff0c;&#x4e26;&#x628a;&#x5de5;&#x4f5c;&#x653e;&#x5230",{"_index":4733,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5c0d;&#x61c9",{"_index":5205,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x5c0d;&#x6578;&#x503c;&#x578b;&#x614b;&#x7684;&#x8f49;&#x63db;&#x6bd4",{"_index":3603,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x5c0d;&#x65bc;&#x5beb;&#x904",{"_index":1328,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x5c0f;&#x5beb",{"_index":233,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x5c0f;&#x6578;&#x90e8;&#x4efd",{"_index":754,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x5c0f;&#x6578;&#x9ede;&#x7684;&#x8655;&#x7406",{"_index":544,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5c0f;&#x65bc",{"_index":3672,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5c0f;&#x65bc;&#x7b49;&#x65bc",{"_index":3674,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5c11;&#x4e86;&#x4e00;&#x500b;read",{"_index":4802,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x5c24;&#x5176;&#x662f;&#x79d1;&#x5b78;&#x904b;&#x7b97;)&#xff0c;&#x6574;&#x6578;&#x662f;&#x4e0d;&#x5920;&#x7528;&#x7684;&#xff0c;&#x5fc5;&#x9808;&#x7528;&#x5230;&#x6d6e;&#x9ede;&#x6578;&#x624d;&#x884c;&#x3002;&#x70ba;&#x751a;&#x9ebc;&#x4e0d;&#x8aaa;&#x662f",{"_index":707,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x5c24;&#x5176;&#x6a21;&#x7d44;&#x9593;&#x5b58;&#x5728;&#x76f8;&#x4f9d;&#x6027;&#xff0c;&#x5982;&#x6a21;&#x7d44",{"_index":2806,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x5c31;&#x4e0d;&#x6703;&#x57f7;&#x884c;&#x4e86;&#xff1b;&#x82e5;&#x7522;&#x751f;&#x7684;&#x4f8b;&#x5916;&#x4e0d;&#x662f",{"_index":2952,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5c31;&#x53ef;&#x4ee5;&#x5229;&#x7528",{"_index":3568,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x5c31;&#x53ef;&#x7531",{"_index":627,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x5c31;&#x5df2;&#x7d93;&#x6c7a;&#x5b9a;&#x597d;&#x4e86;&#xff0c;&#x4f46;&#x5c0d",{"_index":4209,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x5c31;&#x5df2;&#x7d93;&#x6c7a;&#x5b9a;&#x597d;&#x4e86;&#xff0c;&#x800c;&#x5728",{"_index":4191,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x5c31;&#x5fc5;&#x9808;&#x5beb;&#x5728",{"_index":1495,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x5c31;&#x662f;&#x4e00;&#x500b;&#x8907;&#x96dc;&#x7684",{"_index":2738,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x5c31;&#x662f;&#x4e00;&#x7a2e;&#x4f7f;&#x7528;&#x8005;&#x81ea;&#x5b9a;&#x7684;&#x578b;&#x5225;&#x3002;java",{"_index":3218,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x5c31;&#x662f;&#x5176;&#x4e2d;&#x4e4b;&#x4e00;&#xff0c;&#x5b83;&#x767c;&#x751f;&#x5728;&#x9663;&#x5217;&#x7d22;&#x5f15;&#x4e0d;&#x5408;&#x6cd5;&#x7684;&#x60c5;&#x6cc1;&#x4e0b;&#xff1a",{"_index":2968,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x5c31;&#x662f;&#x88dc;&#x6578;&#x7cfb;&#x7d71;&#x3002",{"_index":606,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x5c31;&#x662f;&#x9019;&#x5169;&#x500b;&#x6578;&#x7684;&#x6700;&#x5927;&#x516c;&#x56e0;&#x6578",{"_index":3837,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5c31;&#x662f;&#x9019;&#x5e7e;&#x500b;&#x5b57;&#x7684;&#x7e2e;&#x5beb;&#x3002",{"_index":741,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x5c31;&#x6703;&#x7522;&#x751f;&#x5982;&#x4e0b;&#x7684;&#x932f;&#x8aa4;&#x8a0a;&#x606f;&#xff0c;&#x4e26;&#x4e14;&#x7d42;&#x6b62;&#x8a72;&#x7a0b;&#x5f0f",{"_index":1321,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x5c31;&#x6703;&#x81ea;&#x52d5;&#x7de8;&#x8b6f;&#x5176;&#x4ed6;&#x9700;&#x8981;&#x91cd;&#x65b0;&#x7de8;&#x8b6f;&#x7684",{"_index":2832,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x5c31;&#x6703;&#x88ab;&#x56de;&#x6536;&#x3002",{"_index":1571,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x5c31;&#x6703;&#x88ab;&#x91cd;&#x65b0;&#x7de8;&#x8b6f",{"_index":2829,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x5c31;&#x6709;&#x4e00;&#x4e9b;&#x554f;&#x984c;&#x7522;&#x751f;&#x4e86",{"_index":1265,"title":{},"body":{"java/array.html#C-語言陣列回顧":{}}}],["x5c31;&#x6c92;&#x6709;&#x652f;&#x63f4;&#xff0c;&#x5fc5;&#x9808;&#x4e00;&#x53f0;&#x4e00;&#x53f0;&#x704c;&#x7a0b;&#x5f0f;&#x5eab;&#x624d;&#x884c;&#xff0c;&#x5f88;&#x53ef;&#x80fd;&#x9084;&#x8981;&#x82b1;&#x9322;&#x8cb7;)&#xff0c;&#x5c31;&#x5fc5;&#x9808;&#x91cd;&#x5beb;&#x624d;&#x884c;&#x3002",{"_index":3536,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x5c31;&#x767c;&#x751f",{"_index":619,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x5c31;&#x76f8;&#x7576;&#x65bc",{"_index":1579,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x5c31;&#x7a31;&#x70ba;&#x662f",{"_index":5154,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x5c31;&#x7b49;&#x540c",{"_index":2779,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x5c31;&#x7d44;&#x6210;&#x4e86;&#x4e00;&#x500b;&#x5b8c;&#x6574;&#x7684;&#x500b;&#x9ad4;&#x3002",{"_index":4200,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x5c31;&#x80fd;&#x57f7;&#x884c;&#x7684;&#x7406;&#x60f3;&#xff0c;&#x9084;&#x8981;&#x914d;&#x5408;&#x6a19;&#x6e96;&#x7684;&#x7a0b;&#x5f0f;&#x5eab;&#x624d;&#x884c;&#x3002",{"_index":3544,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x5c6c;&#x65bc",{"_index":1484,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/encapsulation.html#Package-的定義":{}}}],["x5c6c;&#x65bc;&#x540c;&#x4e00;&#x500b",{"_index":1461,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x5c6c;&#x65bc;&#x5ba3;&#x544a;&#x578b;&#x614b;&#x7684;&#x4e00;&#x90e8;&#x4efd;&#xff0c;&#x4e0d;&#x727d;&#x626f;&#x7a7a;&#x9593;&#x5206;&#x914d;&#xff0c;&#x4e5f;&#x4e0d;&#x50cf",{"_index":1292,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x5c6c;&#x65bc;&#x67d0",{"_index":2704,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x5de6;&#x908a;&#x5426;&#x5247;&#x505a",{"_index":3698,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5de6;&#x908a;&#x6210;&#x7acb;&#x5247;&#x505a",{"_index":3697,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x5df2;&#x7d93;&#x6c92;&#x6709;&#x8cc7;&#x6599;&#x4e86;&#xff0c;&#x537b;&#x9084;&#x60f3;&#x62ff;&#x51fa;&#x4f86;&#xff1b;&#x6216;&#x662f",{"_index":4728,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5e0c;&#x671b;&#x6bcf;&#x4e00;&#x500b;&#x7de8;&#x8b6f;&#x7684;&#x55ae;&#x5143",{"_index":2743,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x5e0c;&#x671b;&#x8996;&#x7a97;&#x51fa;&#x4f86;&#x4e0d;&#x8981;&#x592a;&#x5927;&#x6216;&#x592a;&#x5c0f",{"_index":5276,"title":{},"body":{"java/gui.html#井字遊戲":{}}}],["x5e33;&#x6236;&#x5230",{"_index":4672,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5e33;&#x6236;&#xff0c;&#x8f49;&#x5e33;&#x524d;&#x5f8c;&#x9019;&#x5169;&#x500b;&#x5e33;&#x6236;&#x7684;&#x7e3d;&#x91d1;&#x984d;&#x5fc5;&#x9808;&#x76f8;&#x540c;&#xff0c;&#x4f46;&#x4ee5;&#x7a0b;&#x5f0f;&#x4f86;&#x5be6;&#x4f5c;&#x6642;&#xff0c;&#x537b;&#x7121;&#x6cd5;&#x7528;&#x4e00;&#x500b;&#x6307;&#x4ee4;&#x5c31;&#x5b8c;&#x6210;&#xff0c;&#x5982;&#x8f49;&#x5e33;&#x53ef;&#x80fd;&#x8981;&#x5beb;&#x6210;&#x4e0b;&#x9762;&#x7684;&#x9019;&#x4e00;&#x6bb5;&#x7a0b;&#x5f0f;&#x78bc",{"_index":4673,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5e38;&#x6578;&#x3001;&#x8b8a;&#x6578;&#x3001;&#x904b;&#x7b97;&#x7b26;&#x865f;&#x3001;&#x5206;&#x865f",{"_index":1105,"title":{},"body":{"c/writing-intro.html#程式語言":{}}}],["x5e38;&#x7528;&#x7684",{"_index":177,"title":{"c/c-intro.html#常用的-IO-函數":{}},"body":{}}],["x5e38;&#x898b;&#x7684;&#x5b57;&#x5143;&#x8f38;&#x5165;&#x88dd;&#x7f6e;&#xff1a;&#x9375;&#x76e4",{"_index":590,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5e73;&#x5747;&#x6578;&#x70ba",{"_index":3791,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x5e74",{"_index":2583,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5e74;&#x4e2d;&#xff0c;&#x53ea;&#x6709",{"_index":1116,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x5e74;&#x7d1a",{"_index":2528,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5efa;&#x69cb;&#x5b50",{"_index":1475,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x5f15;&#x7528;&#x3002",{"_index":2750,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x5f15;&#x7528;&#x6587;&#x737b",{"_index":1089,"title":{},"body":{"c/writing-intro.html#文章的組成":{}}}],["x5f15;&#x7528;&#xff0c",{"_index":2748,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x5f71;&#x50cf",{"_index":557,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5f85;&#x9001;&#x90f5;&#x4ef6;&#x6578;&#x76e",{"_index":4405,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["x5f88;&#x591a;&#x7a0b;&#x8a2d;&#x66f8;&#x7684;&#x9644;&#x9304;&#x90fd;&#x6709;&#x8868;&#x53ef;&#x67e5;)&#xff0c;&#x76ee;&#x524d;&#x5ee3;&#x6cdb;&#x4f7f;&#x7528;&#x65bc;&#x5404;&#x7a2e;&#x96fb;&#x8166;&#x548c;&#x7d42;&#x7aef;&#x6a5f;&#x3002;&#x8fd1;&#x5e74;&#x4f86",{"_index":575,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5f88;&#x985e;&#x4f3c;&#xff0c;&#x4f46;&#x8981;&#x8a18;&#x5f97",{"_index":244,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x5f8c;&#x4e58",{"_index":550,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x5f8c;&#x6210;&#x70ba;&#x53e6;&#x4e00;&#x500b;&#x4fee;&#x6539;&#x904e;&#x7684",{"_index":964,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x5f8c;&#x88ab;&#x4e2d;&#x65b7;&#xff0c;thread",{"_index":4680,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5f8c;&#x9762;&#x6c92;&#x6709",{"_index":3720,"title":{},"body":{"java/java-vs-c.html#流程控制敘述":{}}}],["x5f8c;&#x9762;&#x7684;&#x90e8;&#x5206;&#x662f;&#x8a3b;&#x89e3;&#xff0c;&#x662f;&#x7d66;&#x4eba;&#x770b;&#x7684;&#xff0c;&#x96fb;&#x8166;&#x4e0d;&#x4e88;&#x8655;&#x7406;&#xff1a",{"_index":923,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x5f8c;&#xff0c;&#x5c31;&#x6703;&#x81ea;&#x52d5;&#x53d6;&#x5f97;&#x7236;&#x985e;&#x5225;&#x7279;&#x6027;&#x3002;&#x5982;&#x679c;&#x5b50;&#x985e;&#x5225;&#x7e7c;&#x627f;&#x4e86;&#x4e00;&#x500b;&#x4ee5;&#x4e0a;&#x7684;&#x7236;&#x985e;&#x5225;&#xff0c;&#x5247;&#x7a31;&#x70ba",{"_index":3086,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["x5f97;&#x5230",{"_index":630,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x5f97;&#x5230;&#x5b78;&#x5206",{"_index":2562,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5f9e",{"_index":3722,"title":{},"body":{"java/java-vs-c.html#流程控制敘述":{}}}],["x5fc5;&#x4fee",{"_index":2552,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x5fc5;&#x9808;&#x4f9d;&#x9644;&#x5728",{"_index":5226,"title":{},"body":{"java/gui.html#AWT":{}}}],["x5fc5;&#x9808;&#x5728",{"_index":4211,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x5fc5;&#x9808;&#x5ba3;&#x544a;&#x70ba",{"_index":3322,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x5fc5;&#x9808;&#x5be6;&#x4f5c",{"_index":3336,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x5fc5;&#x9808;&#x5beb;&#x5728;&#x8a72;&#x516c;&#x5171;&#x985e;&#x5225;&#x540d;&#x7a31;&#x7684",{"_index":1493,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x5fc5;&#x9808;&#x5f15;&#x5165",{"_index":2758,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x5fc5;&#x9808;&#x64c1;&#x6709;&#x8a72;&#x7269;&#x4ef6;&#x7684",{"_index":4749,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x5fc5;&#x9808;&#x91cb;&#x653e;&#x6240;&#x6709;&#x624b;&#x4e2d;&#x7684",{"_index":4752,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x600e;&#x9ebc;&#x5beb",{"_index":3776,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x600e;&#x9ebc;&#x5beb;&#x5462",{"_index":3765,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["x60f3;&#x5beb;&#x7684;&#x5c11;&#x4e00;&#x500b",{"_index":4786,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x60f3;&#x8981;&#x5beb;&#x7684;thread&#x53c8;&#x591a;&#x4e86;&#x4e00;&#x500b",{"_index":4780,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x60f3;&#x8981;&#x8b80;&#x7684;&#x5c11;&#x4e00;&#x500b",{"_index":4783,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x60f3;&#x8981;read&#x7684;thread&#x53c8;&#x591a;&#x4e86;&#x4e00;&#x500b",{"_index":4776,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x61c9;&#x7528;&#x7a0b;&#x5f0f;&#x7684;&#x5de5;&#x5177;&#x4e2d;&#xff0c;&#x6700;&#x5e38;&#x898b;&#x7684;&#x662f;&#x7531",{"_index":3556,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x61c9;&#x8a72;&#x52a0;&#x4e0a;&#x5b8c;&#x6574;&#x7684",{"_index":2783,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x6210;&#x70ba;&#x57f7;&#x884c;&#x6a94;&#x3002;&#x5c0d;&#x5927;&#x578b;&#x7684;&#x61c9;&#x7528;&#x7a0b;&#x5f0f;&#x4f86;&#x8aaa;&#xff0c;&#x5e38;&#x898b;&#x7684;&#x554f;&#x984c;&#x4e4b;&#x4e00;&#x662f;&#x5982;&#x4f55;&#x78ba;&#x5b9a",{"_index":2802,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x6210;&#x7e3e",{"_index":2579,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x6210;&#x7e3e;&#x6846",{"_index":2573,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x6211;&#x5011;&#x4e5f;&#x53ef;&#x4ee5;&#x5728;&#x8b8a;&#x6578;&#x5ba3;&#x544a;&#x6216;&#x662f",{"_index":1296,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x6211;&#x5011;&#x4ee5",{"_index":4683,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x6211;&#x5011;&#x5148;&#x4ee5;&#x6700;&#x591a;&#x5169;&#x500b;&#x6578;&#x5b57;&#x7684",{"_index":608,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x6211;&#x5011;&#x628a;&#x9019;&#x554f;&#x984c;&#x518d;&#x6574;&#x7406;&#x4e00;&#x4e0b;&#xff1a",{"_index":4703,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x6211;&#x5011;&#x7576;&#x7136;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":4730,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x6216",{"_index":197,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html#硬體元件":{},"c/system-intro.html#數字系統":{},"c/system-intro.html#浮點數表示法":{},"java/encapsulation.html#Package-的定義":{},"java/exception.html#相關語法":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#運算符號-Operator":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{},"java/thread.html#如何產生-Thread":{},"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x6216;&#x662f",{"_index":2691,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x6216;&#x71d2;&#x9304;&#x6a5f",{"_index":471,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x6216;&#x975e",{"_index":3686,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x6236;&#x7c4d;&#x5730;&#x5740",{"_index":2543,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x6236;&#x7c4d;&#x5730;&#x5740;zipcod",{"_index":2544,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x6240;&#x4ee3;&#x8868;&#x7684;&#x503c",{"_index":755,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x6240;&#x4ee5",{"_index":551,"title":{},"body":{"c/system-intro.html#數字系統":{},"java/thread.html#Program-Process-Thread":{}}}],["x6240;&#x4ee5;&#x53ea;&#x8981;&#x4f60;&#x80fd;&#x56de;&#x7b54;&#x4e0b;&#x9762;&#x554f;&#x984c;&#xff0c;&#x7a0b;&#x5f0f;&#x5c31;&#x5beb;&#x5b8c;&#x4e86;&#xff1a",{"_index":1343,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x6240;&#x4ee5;&#x53ef;&#x7528;&#x4e2d;&#x6587;&#x7576;&#x8b8a;&#x6578;&#x540d;&#x7a31",{"_index":3643,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x6240;&#x4ee5;&#x6bcf",{"_index":532,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x6240;&#x51fa;&#x7248;&#x7684",{"_index":3558,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x6240;&#x5236;&#x8a02;&#x7684",{"_index":563,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x6240;&#x5b9a;&#x7fa9",{"_index":565,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x6240;&#x5b9a;&#x7fa9;&#x7684;&#x4ee5;&#x4e0a;&#x4e09;&#x7a2e;&#x7279;&#x8cea;&#x3002",{"_index":1463,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x6240;&#x627e;&#x5230;&#x7684;&#x9663;&#x5217;&#xff0c;&#x5176;&#x9577;&#x5ea6;&#x4e0d;&#x5fc5;&#x7136;&#x76f8;&#x540c",{"_index":1314,"title":{},"body":{"java/array.html#多維陣列":{}}}],["x6240;&#x6307;&#x5230;&#x7684;&#x7269;&#x4ef6;&#x5176;&#x578b;&#x614b;&#x662f;&#x5426;&#x548c",{"_index":3677,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x6240;&#x6307;&#x5230;&#x7684;&#x7269;&#x4ef6;&#xff0c;&#x5176;&#x578b;&#x614b;&#x548c;&#x67d0",{"_index":3221,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x6240;&#x6307;&#x5230;&#x7684;&#x9663;&#x5217;&#x7269;&#x4ef6;&#x5167;&#x7684;&#x7b2c",{"_index":1306,"title":{},"body":{"java/array.html#多維陣列":{}}}],["x6240;&#x63d0;&#x4f9b;&#x7684;&#x6a19;&#x6e96;&#x61c9;&#x7528;&#x7a0b;&#x5f0f;&#x4ecb;&#x9762",{"_index":2737,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x6240;&#x63d0;&#x51fa;&#x4f86;&#x6709;&#x95dc",{"_index":5174,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x6240;&#x6709;&#x7236;&#x985e;&#x5225;&#x7684",{"_index":3334,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x6240;&#x6709;&#x7684",{"_index":2801,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x6240;&#x7522;&#x751f;&#x7684;&#x57f7;&#x884c;&#x500b;&#x9ad4;&#xff0c;&#x4e00;&#x500b",{"_index":4581,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x6240;&#x7528;&#x5230;&#x7684;&#x5176;&#x4ed6",{"_index":2825,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x6240;&#x7d44;&#x6210;&#x3002;&#x9019;&#x4e9b;&#x7a0b;&#x5f0f;&#x662f;&#x7528;&#x4f86;&#x6307;&#x63ee;&#x96fb;&#x8166;&#x786c;&#x9ad4;&#x7684;&#x904b;&#x4f5c;&#xff0c;&#x4ee5;&#x9054;&#x6211;&#x5011;&#x7684;&#x5de5;&#x4f5c;&#x3002;&#x6211;&#x5011;&#x4e00;&#x822c;&#x5c07;&#x8edf;&#x9ad4;&#x5206;&#x70ba;&#x7cfb;&#x7d71;&#x8edf;&#x9ad4;&#x548c;&#x61c9;&#x7528;&#x8edf;&#x9ad4;&#x5169;&#x5927;&#x985e;&#x3002;&#x7cfb;&#x7d71;&#x8edf;&#x9ad4;&#x5e6b;&#x6211;&#x5011;&#x7ba1;&#x7406;&#x6a94;&#x6848;&#x3001;&#x5206;&#x914d;&#x96fb;&#x8166;&#x7684;&#x5404;&#x7a2e;&#x8cc7;&#x6e90;&#x3001;&#x57f7;&#x884c;&#x7a0b;&#x5f0f;&#x4ee5;&#x53ca;&#x5f9e;&#x9375;&#x76e4;&#x63a5;&#x6536;&#x6211;&#x5011;&#x7684;&#x547d;&#x4ee4;&#x3002;&#x5176;&#x4e2d;&#x548c;&#x7ba1;&#x7406;&#x96fb;&#x8166;&#x76f8;&#x95dc;&#x7684;&#x4e00;&#x4e9b;&#x7a0b;&#x5f0f;&#x6211;&#x5011;&#x7a31;&#x70ba;&#x4f5c;&#x696d;&#x7cfb;&#x7d71",{"_index":480,"title":{},"body":{"c/system-intro.html#軟體元件":{}}}],["x6240;&#x7d44;&#x6210;&#x7684;&#x3002",{"_index":5150,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x6240;&#x80fd;&#x8655;&#x7406;&#x7684;&#x904b;&#x7b97;&#x3002",{"_index":596,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x6240;&#x8981;&#x6aa2;&#x67e5;&#x7684;&#x985e;&#x5225;&#x5b9a;&#x7fa9;&#x5728;&#x54ea;&#x88e1;&#x3002;&#x4f46;&#x6709;&#x6642;&#x5019;&#x6211;&#x5011;&#x7de8;&#x8b6f;&#x7684;&#x74b0;&#x5883;&#x548c;&#x57f7;&#x884c;&#x7684;&#x74b0;&#x5883;&#x53ef;&#x80fd;&#x4e0d;&#x540c;&#xff0c;&#x4f8b;&#x5982;&#x7de8;&#x8b6f;&#x6642;&#x7528",{"_index":2762,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x6240;&#x8b02",{"_index":2701,"title":{},"body":{"java/encapsulation.html#Package-的定義":{},"java/exception.html#相關語法":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x6240;&#x8b02;&#x4f8b;&#x5916",{"_index":2888,"title":{},"body":{"java/exception.html#簡介":{}}}],["x6240;&#x8b02;&#x5806;&#x758a",{"_index":908,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x6240;&#x8b02;&#x5c01;&#x88dd",{"_index":2679,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x6240;&#x8b02;&#x7269;&#x4ef6;&#xff0c;&#x8aaa;&#x5f97;&#x767d;&#x8a71;&#x4e00;&#x9ede;&#xff0c;&#x53ef;&#x7a31;&#x4e4b;&#x70ba;&#x300c;&#x6771;&#x897f;&#x300d;&#x3002;&#x9019;&#x662f;&#x500b;&#x5f88;&#x62bd;&#x8c61;&#x7684;&#x540d;&#x8a5e;&#xff0c;&#x6211;&#x5011;&#x82e5;&#x4ee5;&#x5b83;&#x5177;&#x9ad4;&#x7684;&#x7279;&#x6027;&#x4f86;&#x63cf;&#x8ff0;&#xff0c;&#x6703;&#x6bd4;&#x8f03;&#x6e05;&#x695a;&#xff1a",{"_index":1455,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x624b;&#x6307;&#x982d",{"_index":3641,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x624d;&#x53ef;&#x4ee5;&#x5b58;&#x53d6;&#xff0c;&#x6c92;&#x6709;&#x76f8;&#x5c0d;&#x61c9;&#x7684",{"_index":2689,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x624d;&#x53ef;&#x5b58;&#x53d6;&#x3002",{"_index":1527,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x624d;&#x6709;&#x7684",{"_index":2765,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x624d;&#x6c7a;&#x5b9a;&#x5be6;&#x969b;&#x6240;&#x8981;&#x547c;&#x53eb;&#x7684",{"_index":3141,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x627e;&#x4e0d;&#x5230;&#x7269;&#x4ef6",{"_index":4427,"title":{},"body":{"java/net.html#HTTP-Server":{}}}],["x627e;&#x4e0d;&#x5230;&#x7269;&#x4ef6;\\n",{"_index":4426,"title":{},"body":{"java/net.html#HTTP-Server":{}}}],["x627e;&#x4e0d;&#x5230;&#xff1a;&#x8acb;&#x78ba;&#x5b9a;&#x4f60;&#x7684;&#x6a94;&#x540d;&#x662f;&#x5927;&#x5beb",{"_index":3576,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x627e;&#x4e0d;&#x5230;&#xff1a;&#x8acb;&#x8a2d;&#x5b9a",{"_index":3573,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x627e;&#x5230;&#x6700;&#x65b0;&#x7684;&#x8cbb;&#x6c0f;&#x6578;&#x5f8c",{"_index":3845,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x628a;&#x6d6e;&#x9ede;&#x6578;&#x56db;&#x6368;&#x4e94;&#x5165;&#x70ba;&#x6574;&#x6578",{"_index":3777,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["x6293;&#x5230;&#x4f8b;&#x5916;&#x5f8c;&#xff0c;&#x53ef;&#x900f;&#x904e;&#x8a72;&#x4f8b;&#x5916;&#x7269;&#x4ef6;&#xff0c;&#x5f97;&#x5230;&#x6709;&#x8da3;&#x7684;&#x8cc7;&#x8a0a",{"_index":2978,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x62b1;&#x6028",{"_index":3575,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x62b1;&#x6028;&#x627e;&#x4e0d;&#x5230",{"_index":3579,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x62dc;&#x8a2a;&#x5230;&#x9019;&#x4e9b;&#x6578;&#x5b57;&#x6642;&#xff0c;&#x5c31;&#x628a;&#x5b83;&#x5011;&#x52a0;&#x8d77;&#x4f86",{"_index":3798,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x62ff;&#x56de;&#x63a7;&#x5236;&#x6b0a;&#xff0c;a",{"_index":4697,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x6307;&#x4ee4",{"_index":872,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x6307;&#x4ee4;&#x4f86;&#x6d88;&#x6ec5;&#x7269;&#x4ef6;&#x3002;java",{"_index":1566,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x6307;&#x4ee4;&#x4f86;&#x7522;&#x751f;&#x7269;&#x4ef6;&#xff0c;&#x4f46;&#x4e0d;&#x50cf",{"_index":1564,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x6307;&#x4ee4;&#x544a;&#x77e5",{"_index":2761,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x6307;&#x4ee4;&#x5f8c;&#x9762;&#x53ef;&#x4ee5;&#x52a0;&#x4e0a;&#x6a19;&#x7c64",{"_index":3715,"title":{},"body":{"java/java-vs-c.html#流程控制敘述":{}}}],["x6307;&#x4ee4;&#x6703;&#x8df3;&#x51fa;&#x6700;&#x5916;&#x9762;&#x7684;&#x8ff4;&#x5708;&#xff0c;&#x76f4;&#x63a5;&#x5370;&#x51fa;&#x8ff4;&#x5708;&#x7d42;&#x6b62;&#x8a0a;&#x606f;&#x3002;&#x5982;&#x679c",{"_index":3719,"title":{},"body":{"java/java-vs-c.html#流程控制敘述":{}}}],["x6307;&#x4ee4;&#x7522;&#x751f;&#x7269;&#x4ef6;&#xff0c",{"_index":1287,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x6307;&#x4ee4;&#xff0c;&#x5224;&#x65b7;&#x4e0d;&#x540c;&#x74b0;&#x5883;&#x7684;&#x9069;&#x7576;&#x5beb;&#x6cd5;&#x3002;&#x5982;&#x679c;&#x60f3;&#x628a;&#x5728",{"_index":3529,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x6307;&#x5230",{"_index":3242,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x6307;&#x5230;&#x5176;&#x4ed6;&#x7684;&#x4e00;&#x7dad;&#x9663;&#x5217;&#x7269;&#x4ef6;&#x4f86;&#x9054;&#x6210;&#x3002",{"_index":1301,"title":{},"body":{"java/array.html#多維陣列":{}}}],["x6307;&#x5230;&#x7684",{"_index":1570,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x6307;&#x5230;&#x7684;&#x7269;&#x4ef6;&#x3002;&#x7576;&#x7269;&#x4ef6;&#x88ab;&#x56de;&#x6536;&#x6642;&#xff0c;&#x8a72;&#x7269;&#x4ef6;&#x7684",{"_index":1554,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x6307;&#x5230;&#x7684;&#x7269;&#x4ef6;&#x5916;&#xff0c;synchron",{"_index":4721,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x6307;&#x5411;&#x67d0;&#x96bb",{"_index":3649,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x6307;&#x6578;&#x90e8;&#x4efd",{"_index":753,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x6307;&#x7684;&#x662f;&#x548c;&#x786c;&#x9ad4;&#x76f8;&#x95dc;&#x7684;&#x6a5f;&#x5668;&#x6307;&#x4ee4;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x7576;&#x6211;&#x5011;&#x60f3;&#x8981;&#x628a",{"_index":3522,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x6307;&#x7684;&#x662f;&#x56b4;&#x91cd;&#x7684;&#x932f;&#x8aa4;&#x60c5;&#x6cc1;&#x3002;&#x7576",{"_index":2986,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x6307;&#x7684;&#x662f;&#x5916;&#x754c;&#x89c0;&#x770b;&#x67d0;&#x7269;&#x4ef6;&#x6642;&#xff0c;&#x6240;&#x80fd;&#x770b;&#x5230;&#x7684;&#x8868;&#x8c61;&#x4ee5;&#x53ca;&#x6e9d;&#x901a;&#x7684;&#x7ba1;&#x9053;&#xff0c;&#x56e0;&#x6b64",{"_index":3269,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x63a1;&#x7528",{"_index":1567,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{},"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x63a1;&#x7528;&#x9019;&#x7a2e;&#x6a5f;&#x5236;&#xff0c;&#x56e0;&#x6b64;&#x4e0b;&#x9762;&#x7684;&#x6709;&#x8da3;&#x60c5;&#x5f62;&#x5c31;&#x767c;&#x751f;&#x4e86;&#xff1a",{"_index":1308,"title":{},"body":{"java/array.html#多維陣列":{}}}],["x63a5;&#x53d7;&#x5230;&#x8a0a;&#x606f;&#x5f8c;&#xff0c;&#x624d;&#x80fd;&#x6c7a;&#x5b9a;&#x5be6;&#x969b;&#x8981;&#x57f7;&#x884c;&#x7684",{"_index":4212,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x63a5;&#x53d7;&#x8a0a;&#x606f;&#xff0c;class",{"_index":4220,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["x63a5;&#x624b;&#x57f7;&#x884c;&#x5b8c;&#x6210;&#x53e6;&#x4e00;&#x500b;&#x8f49;&#x5e33;&#x8981;&#x6c42;&#xff0c;&#x7136;&#x5f8c",{"_index":4681,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x63a5;&#x624b;&#xff0c;&#x56e0;&#x70ba",{"_index":4691,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x63a5;&#x6536;&#x5230;&#x8a0a;&#x606f;&#x5f8c;&#xff0c;&#x662f;&#x5728",{"_index":3140,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x63a5;&#x6536;&#x65b0;&#x7684;&#x7db2;&#x8def;&#x9023;&#x7dda",{"_index":4428,"title":{},"body":{"java/net.html#HTTP-Server":{}}}],["x63a7;&#x5236;&#x6b0a;&#x7684;&#x6642;&#x6a5f;&#x662f;&#x7531;&#x4f5c;&#x696d;&#x7cfb;&#x7d71;&#x4f86;&#x6c7a;&#x5b9a;&#x3002",{"_index":4666,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x63a7;&#x5236;&#x6b0a;&#xff0c;&#x4e26;&#x4ea4;&#x7d66;&#x53e6;&#x4e00;&#x500b",{"_index":4669,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x63d0;&#x4f9b",{"_index":3216,"title":{"java/interface.html#為什麼-Java-提供-Interface":{}},"body":{}}],["x63d0;&#x4f9b;&#x4e86",{"_index":3219,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x63d0;&#x4f9b;&#x4e86;&#x4e0b;&#x9762;&#x4e09;&#x500b",{"_index":4742,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x63d0;&#x4f9b;&#x4e86;&#x4f8b;&#x5916;&#x8655;&#x7406;&#x7684;&#x6a5f;&#x5236;&#x3002",{"_index":2910,"title":{},"body":{"java/exception.html#簡介":{}}}],["x63d0;&#x4f9b;&#x7684",{"_index":5238,"title":{},"body":{"java/gui.html#AWT":{}}}],["x63d0;&#x51fa;&#x4e86",{"_index":581,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x63d0;&#x793a;&#x4f7f;&#x7528;&#x8005;&#x8f38;&#x5165;&#x8cc7;&#x6599",{"_index":1124,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x63d0;&#x793a;&#xff1a;&#x5982;&#x679c;&#x628a;&#x4e0a;&#x5716;&#x5de6;&#x908a;&#x7684;&#x7a7a;&#x767d;&#x62ff;&#x6389;&#x5247;&#x6703;&#x8b8a;&#x6210;&#x4e0b;&#x9762;&#x7684;&#x5716;&#x5f62;&#xff0c;&#x9664;&#x4e86;&#x6700;&#x5de6;&#x908a;&#x548c;&#x6700;&#x53f3;&#x908a;&#x7684;&#x6578;&#x5b57;&#x662f",{"_index":1341,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x6458;&#x8981",{"_index":1088,"title":{},"body":{"c/writing-intro.html#文章的組成":{}}}],["x64b0;&#x5beb;&#x4e00;&#x51fd;&#x6578;&#x8f38;&#x5165",{"_index":3825,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x64b0;&#x5beb;&#x5927;&#x578b;&#x7a0b;&#x5f0f;&#x6642;&#xff0c;&#x5f88;&#x53ef;&#x80fd;&#x6703;&#x6709;&#x591a;&#x500b",{"_index":990,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x64b0;&#x5beb;&#x7a0b;&#x5f0f;&#x7684;&#x6d41;&#x7a0b;&#x5982;&#x4e0b;&#x5716;&#xff0c;&#x6240;&#x9700;&#x8981;&#x7684;&#x5de5;&#x5177;&#x5305;&#x62ec",{"_index":955,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x64cd;&#x884c",{"_index":2567,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x64cd;&#x884c;&#x6210;&#x7e3e",{"_index":2581,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x6514;&#x622a",{"_index":2925,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x651d;&#x6c0f;&#x6eab;&#x5ea6;&#x8f49;&#x83ef;&#x6c0f;&#x6eab;&#x5ea6",{"_index":3763,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["x652f;&#x63f4",{"_index":3740,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x652f;&#x63f4;jdk1.2&#x4ee5;&#x5f8c;&#x7248;&#x672c;&#x4f7f;&#x7528;ctrl",{"_index":5281,"title":{},"body":{"java/gui.html#鍵盤事件處理範例":{}}}],["x6536",{"_index":4410,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["x6536;&#x4ef6;&#x8005;&#x59d3;&#x540d",{"_index":2540,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x6539;&#x56de;&#x7528;big5",{"_index":4402,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["x6539;&#x70ba",{"_index":684,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{},"c/system-operation.html#虛擬機器的指令集":{}}}],["x6539;&#x7528;utf",{"_index":4400,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["x653e;&#x5230;&#x5806;&#x758a;&#x4e0a",{"_index":947,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x653e;&#x5230;&#x5806;&#x758a;&#x4e0a;&#xff0c;&#x7136;&#x5f8c",{"_index":899,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x653e;&#x5230;&#x6700;&#x524d;&#x9762;&#xff0c;&#x5426;&#x5247;&#x5c31;&#x627e;&#x4e0d;&#x5230;&#x300c;&#x533f;&#x540d;&#x300d",{"_index":2722,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x653e;&#x5728",{"_index":3176,"title":{},"body":{"java/extends.html#final-修飾字":{}}}],["x653e;&#x5728;&#x8b8a;&#x6578;&#x5de6;&#x908a;&#xff0c;&#x65b9;&#x4fbf;&#x5224;&#x8b80;&#x3002",{"_index":1295,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x653e;&#x5927;&#x9810;&#x89bd",{"_index":2494,"title":{},"body":{"java/easy-print.html#Print-java":{}}}],["x6558;&#x8ff0",{"_index":1103,"title":{},"body":{"c/writing-intro.html#程式語言":{}}}],["x6558;&#x8ff0;&#x7528;&#x4f86;&#x7522;&#x751f;&#x7269;&#x4ef6",{"_index":1514,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x6558;&#x8ff0;&#x7684;&#x7d44;&#x6210",{"_index":1104,"title":{},"body":{"c/writing-intro.html#程式語言":{}}}],["x6559;&#x52d9;&#x8655",{"_index":2589,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x6574;&#x5408;&#x5728;&#x4e00;&#x8d77;&#xff0c",{"_index":1006,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x6574;&#x9664;&#x7684;&#x8a71;&#xff0c;&#x90a3;&#x9ebc;&#x70ba;&#x4e86;&#x7b26;&#x5408;&#x8a08;&#x7b97;&#x7d50;&#x679c;&#x5fc5;&#x9808;&#x662f;&#x6574;&#x6578;&#x7684;&#x9650;&#x5236;&#xff0c;&#x5247;&#x5c0f;&#x6578;&#x9ede;&#x7684;&#x90e8;&#x4efd;&#x5c31;&#x6703;&#x7121;&#x689d;&#x4ef6;&#x6368;&#x53bb;&#xff0c;&#x4f7f;&#x5f97;&#x8a08;&#x7b97;&#x7684;&#x7d50;&#x679c;&#x932f;&#x8aa4;&#x3002;&#x4e0b;&#x9762;&#x7684;&#x7bc4;&#x4f8b;&#x4e00;&#x6a23;&#x8981;&#x6ce8;&#x610f;&#x76f8;&#x540c;&#x7684;&#x554f;&#x984c;&#x3002",{"_index":3774,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["x6578;&#x5b57",{"_index":519,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x6578;&#x5b57;&#x7cfb;&#x7d71",{"_index":487,"title":{"c/system-intro.html#數字系統":{}},"body":{}}],["x6578;&#x5b57;&#x8868;&#x793a;&#x6cd5",{"_index":488,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x6587;&#x5b57;&#x63cf;&#x8ff0;&#x5982;&#x4f55;&#x5224;&#x65b7;&#x958f;&#x5e74",{"_index":1111,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x6587;&#x5b57;&#x6a94",{"_index":4423,"title":{},"body":{"java/net.html#HTTP-Server":{}}}],["x6587;&#x5b57;&#x7de8;&#x8f2f;&#x5668",{"_index":5286,"title":{"java/gui.html#文字編輯器":{}},"body":{}}],["x6587;&#x6cd5",{"_index":1092,"title":{},"body":{"c/writing-intro.html#句子的組成":{}}}],["x6587;&#x7ae0;&#x7684;&#x7d44;&#x6210",{"_index":1075,"title":{"c/writing-intro.html#文章的組成":{}},"body":{}}],["x65b0;&#x904a;&#x6232",{"_index":5267,"title":{},"body":{"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["x65b7;&#x7dda",{"_index":4416,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["x65b9;&#x584a;&#x5b57",{"_index":2507,"title":{},"body":{"java/easy-print.html#圖形與字型公用程式":{}}}],["x65b9;&#x6cd5;&#x628a;&#x5916;&#x754c;&#x7684;&#x7a0b;&#x5f0f;&#x78bc;&#x8f09;&#x5165;&#x6642;&#x3002;&#x9019;&#x6a23;&#x5beb;&#x7684;&#x597d;&#x8655;&#x662f;&#x53ea;&#x6709;&#x7576;&#x8a72",{"_index":1629,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x65b9;&#x6cd5;&#x6703;&#x88ab;&#x547c;&#x53eb;&#x3002",{"_index":1555,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x6216;&#x5b50;&#x7236;&#x985e;&#x5225;&#x4e0d;&#x5728;&#x540c;&#x4e00;&#x500b",{"_index":3130,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x7576;&#x505a;&#x662f;&#x7a0b;&#x5f0f;&#x7684;&#x9032;&#x5165;&#x9ede;&#x3002;&#x9019;&#x6709;&#x9ede;&#x50cf;&#x662f",{"_index":1504,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x800c",{"_index":3241,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x65e5",{"_index":2585,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x660e;&#x660e;&#x767d;&#x767d;&#x7684;&#x544a;&#x8a34;&#x6211;&#x5011;&#x54ea;&#x4e00;&#x884c;&#x51fa;&#x4e86;&#x751a;&#x9ebc;&#x932f;&#x8aa4;&#xff0c;&#x8981;&#x9664;&#x932f;&#x5c31;&#x7c21;&#x55ae;&#x591a;&#x4e86;&#x3002",{"_index":1330,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x662f",{"_index":567,"title":{},"body":{"c/system-intro.html#數字系統":{},"c/system-operation.html#Software-development-process":{},"java/array.html#陣列範例":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/exception.html#相關語法":{},"java/gui.html#GUI-簡介":{}}}],["x662f;&#x4e00;&#x500b",{"_index":1289,"title":{},"body":{"java/array.html#Java-陣列的特性":{},"java/exception.html#相關語法":{},"java/thread.html#如何產生-Thread":{}}}],["x662f;&#x4e00;&#x500b;&#x4e0a;&#x65b9;&#x53ea;&#x6709;&#x4e00;&#x500b;&#x958b;&#x53e3;&#x7684;&#x5bb9;&#x5668;&#xff0c;&#x7576;&#x8981;&#x628a;&#x8cc7;&#x6599;&#x653e;&#x5165;&#x5806;&#x758a;&#x6642;&#xff0c;&#x662f;&#x653e;&#x5728;&#x5806;&#x758a;&#x7684;&#x6700;&#x4e0a;&#x9762;&#xff0c;&#x7576;&#x8981;&#x5f9e;&#x5806;&#x758a;&#x62ff;&#x8cc7;&#x6599;&#x6642;&#xff0c;&#x662f;&#x5f9e;&#x6700;&#x4e0a;&#x9762;&#x62ff;&#x3002;&#x653e;&#x5165;&#x7684;&#x52d5;&#x4f5c;&#x7a31;&#x70ba",{"_index":909,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x662f;&#x4e00;&#x500b;&#x578b;&#x614b;&#x70ba",{"_index":3631,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x662f;&#x4ee5",{"_index":695,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{},"java/gui.html#GUI-簡介":{}}}],["x662f;&#x5169;&#x7a2e;&#x5e38;&#x7528;&#x7684;&#x82f1;&#x6587;&#x6587;&#x6578;&#x5b57;&#x5143;&#x7de8;&#x78bc;&#x65b9;&#x5f0f;&#x3002;ebcd",{"_index":566,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x662f;&#x5426",{"_index":2934,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x662f;&#x5426;&#x6240;&#x6709;&#x7684",{"_index":2955,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x662f;&#x5426;&#x76f8;&#x5bb9;&#xff1a",{"_index":3222,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x662f;&#x5728;&#x8a72;&#x985e;&#x5225;&#x8f09;&#x5165",{"_index":1593,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x662f;&#x5c07;&#x5b50;&#x985e;&#x5225;&#x578b;&#x614b;&#x7684",{"_index":3098,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x662f;&#x6307",{"_index":2680,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x662f;&#x6307;&#x578b;&#x614b;&#x8f49;&#x63db;&#xff0c;upcast",{"_index":3097,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x662f;&#x6307;&#x6578;&#x5b57;&#x8a08;&#x7b97;&#x7684;&#x7d50;&#x679c;&#x8d85;&#x904e;&#x786c;&#x9ad4;&#x7dda;&#x8def;&#x6240;&#x80fd;&#x8868;&#x9054;&#x7684;&#x7bc4;&#x570d;&#xff0c;&#x4ee5;&#x5169;&#x500b;&#x6578;&#x5b57;&#x7684",{"_index":616,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x662f;&#x6307;&#x8a72",{"_index":4758,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x662f;&#x64b0;&#x5beb;&#x7a0b;&#x5f0f;&#x5e7e;&#x4e4e;&#x4e00;&#x5b9a;&#x8981;&#x7528;&#x5230;&#x7684;&#x529f;&#x80fd",{"_index":181,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x662f;&#x653e;&#x5728;&#x985e;&#x4f3c;&#x6a39;&#x72c0;&#x7d50;&#x69cb;&#x7684",{"_index":2781,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x662f;&#x69cb;&#x6210",{"_index":3079,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["x662f;&#x7269;&#x4ef6;&#x5c0e;&#x5411",{"_index":3582,"title":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}},"body":{}}],["x662f;&#x7269;&#x4ef6;&#x800c;&#x4e0d;&#x662f;&#x9663;&#x5217;&#x3002;&#x7531;&#x65bc;&#x6211;&#x5011;&#x7d93;&#x5e38;&#x4f7f;&#x7528;&#x5b57;&#x4e32;&#xff0c;&#x70ba;&#x4e86;&#x5beb;&#x4f5c;&#x7a0b;&#x5f0f;&#x65b9;&#x4fbf;&#x8d77;&#x898b;&#xff0c;java",{"_index":3729,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x662f;&#x7528",{"_index":920,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x662f;&#x7531",{"_index":3583,"title":{},"body":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{},"java/gui.html#GUI-簡介":{}}}],["x662f;&#x7531;&#x6700;&#x65b0;&#x7684",{"_index":2804,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x662f;&#x756b;&#x9762;&#x7684;&#x4e3b;&#x8981;&#x7d44;&#x6210;&#x6210;&#x5206;&#xff0c;&#x672c;&#x8eab;&#x4e26;&#x6c92;&#x6709;&#x53ef;&#x898b;&#x7684;&#x5be6;&#x9ad4;&#xff0c;&#x5176;&#x5b50;&#x985e;&#x5225;&#x624d;&#x6709;&#x986f;&#x73fe;&#x7684;&#x6548;&#x679c;&#x3002",{"_index":5151,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x662f;&#x8868;&#x793a",{"_index":724,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x662f;&#x958f;&#x5e74",{"_index":1132,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x662f;&#x96fb;&#x8166;&#x6307;&#x4ee4;&#x4e3b;&#x8981;&#x7684;&#x57f7;&#x884c;&#x90e8;&#x4efd;&#xff0c;&#x5b83;&#x53c8;&#x53ef;&#x7d30;&#x5206;&#x6210;&#x52a0;&#x6cd5;&#x5668;&#x3001;&#x4e58;&#x6cd5;&#x5668;&#x3001;&#x53ca;&#x591a;&#x500b;&#x66ab;&#x5b58;&#x5668",{"_index":461,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x6642;&#x53c8;&#x4fee;&#x6539;&#x4e86",{"_index":5176,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x6642;&#x5728",{"_index":1326,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x6642;&#x6240;&#x9700;&#x7684",{"_index":2803,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x6642;&#x6709;&#x4e00;&#x500b;&#x96b1;&#x5f62;&#x7684;&#x53c3;&#x6578;&#xff0c;&#x610f;&#x5373;&#x9019;&#x500b;&#x7269;&#x4ef6",{"_index":4207,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x6642;&#x7684;&#x53ef;&#x80fd;&#x6392;&#x7a0b;&#x6cd5;&#x3002",{"_index":4771,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x6642;&#x9032;&#x884c;&#x521d;&#x59cb;&#x5316;&#x7684;&#xff0c;&#x4f46;&#x521d;&#x59cb;&#x5316;&#x7684;&#x6b65;&#x9a5f;&#x53ef;&#x4ee5;&#x5beb;&#x5728;&#x8b8a;&#x6578;&#x5ba3;&#x544a;&#x5f8c;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x5beb;&#x5728",{"_index":1597,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x6642;&#x9032;&#x884c;&#x521d;&#x59cb;&#x5316;&#x7684;&#xff0c;&#x56e0;&#x6b64;&#x5beb;&#x4f5c;&#x4e0a;&#x7d93;&#x5e38;&#x5728",{"_index":1594,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x6642;&#x9593;&#xff0c;&#x5728;&#x4e0d;&#x540c;&#x7684",{"_index":4613,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x6642;&#xff0c",{"_index":2931,"title":{},"body":{"java/exception.html#相關語法":{},"java/java-vs-c.html#流程控制敘述":{}}}],["x6642;&#xff0c;&#x5982;&#x679c;&#x6709;&#x591a;&#x500b;&#x540c;&#x540d;&#x7684;&#x51fd;&#x6578;&#x6216;&#x8b8a;&#x6578;&#x6642;&#xff0c;&#x61c9;&#x8a72;&#x5982;&#x4f55;&#x8655;&#x7406;&#xff1f;&#x4f8b;&#x5982",{"_index":3297,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x6642;&#xff0c;&#x5c07",{"_index":3833,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x6642;&#xff0c;&#x5c31;&#x6703;&#x628a",{"_index":3732,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x6642;&#xff0c;&#x6703;&#x7522;&#x751f;&#x76f8;&#x5c0d;&#x61c9;&#x7684",{"_index":5161,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x6642;&#xff0c;&#x6703;&#x81ea;&#x52d5;&#x6aa2;&#x67e5",{"_index":2824,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x6642;&#xff0c;&#x6b64;&#x7269;&#x4ef6;&#x5167;&#x5404;&#x500b;&#x8b8a;&#x6578;&#x7684;&#x8b8a;&#x5316;&#x5982;&#x4e0b",{"_index":3192,"title":{},"body":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["x6642;&#xff0c;&#x6c92;&#x6709;&#x88ab;&#x4efb;&#x4f55",{"_index":1569,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x6642;&#xff0c;&#x7e3d;&#x5408;&#x70ba",{"_index":3858,"title":{},"body":{"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x6642;&#xff0c;&#x8996;&#x7a97;&#x7cfb;&#x7d71;&#x6703;&#x5c07",{"_index":5168,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x6642;&#xff0c;&#x8a72",{"_index":4748,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x6642;&#xff0c;jvm",{"_index":1509,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x6642;,&#x5247;&#x5fc5;&#x9808;&#x4ee5",{"_index":1538,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x66f4;&#x6539",{"_index":863,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x66f8;&#x540d",{"_index":1077,"title":{},"body":{"c/writing-intro.html#文章的組成":{}}}],["x66f8;&#x7684;&#x7d50;&#x69cb",{"_index":1076,"title":{},"body":{"c/writing-intro.html#文章的組成":{}}}],["x6700;&#x5de6;&#x908a;&#x548c;&#x6700;&#x53f3;&#x908a;&#x5982;&#x4f55;&#x8868;&#x9054;&#xff1f",{"_index":1346,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x6700;&#x65b0;&#x7684;&#x8cbb;&#x6c0f;&#x6578;&#x662f;&#x524d;&#x9762;&#x5169;&#x500b;&#x76f8;&#x52a0",{"_index":3853,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x6700;&#x7c21;&#x55ae;&#x7684",{"_index":186,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x6700;&#x8fd1;&#x7684;&#x5169;&#x500b;&#x8cbb;&#x6c0f;&#x6578;&#x5c31;&#x8b8a;&#x6210;&#x4e86",{"_index":3846,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x6703;&#x5148;&#x8a08;&#x7b97",{"_index":3771,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["x6703;&#x53bb;&#x57f7;&#x884c",{"_index":1510,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x6703;&#x5728;&#x6bcf;&#x500b;&#x7269;&#x4ef6;&#x4e0a;&#x64fa;&#x4e00;&#x628a;&#x9396;(lock)&#xff0c;&#x7136;&#x5f8c;&#x7a0b;&#x5f0f;&#x8a2d;&#x8a08;&#x8005;&#x53ef;&#x4ee5;&#x5ba3;&#x544a;&#x57f7;&#x884c;&#x67d0;&#x4e00;&#x6bb5;&#x7a0b;&#x5f0f;(&#x901a;&#x5e38;&#x662f;&#x7528;&#x4f86;&#x5b58;&#x53d6;&#x5171;&#x540c;&#x8cc7;&#x6599;&#x7d50;&#x69cb;&#x7684;&#x7a0b;&#x5f0f;&#x78bc;&#xff0c;&#x53c8;&#x7a31;&#x70ba",{"_index":4713,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x6703;&#x5e6b;&#x6211;&#x5011;&#x7522;&#x751f;&#x4e00;&#x500b;&#x4e0d;&#x505a;&#x4efb;&#x4f55;&#x4e8b;&#x7684",{"_index":1577,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x6703;&#x5f97;&#x5230",{"_index":514,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x6703;&#x62b1;&#x6028",{"_index":2947,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x6703;&#x653e;&#x5728",{"_index":2734,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x6703;&#x653e;&#x5728;&#x540c;&#x4e00;&#x500b;&#x76ee;&#x9304;&#x4e0b;&#x3002;&#x4e0d;&#x904e;&#x53ea;&#x77e5;&#x9053;&#x76ee;&#x9304;&#x7684;&#x540d;&#x7a31;&#x9084;&#x4e0d;&#x5920;&#xff0c;&#x9084;&#x9700;&#x8981;&#x6307;&#x5b9a;&#x8a72;&#x76ee;&#x9304;&#x5728;&#x6a94;&#x6848;&#x7cfb;&#x7d71;&#x5167;&#x7684;&#x8def;&#x5f91;&#x3002",{"_index":2712,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x6703;&#x7522;&#x751f;&#x4f8b;&#x5916",{"_index":2922,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x6703;&#x7531;&#x5806;&#x758a;&#x8ffd;&#x8e64;&#x6b64;&#x932f;&#x8aa4;&#x9ede;&#x7684;&#x547c;&#x53eb;&#x8cc7;&#x8a0a;&#xff0c;&#x4e26;&#x4e00;&#x4e00;&#x5411;&#x5916;&#x6aa2;&#x67e5;&#xff0c;&#x76f4;&#x5230;&#x6709",{"_index":2970,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x6703;&#x7d42;&#x6b62;&#x8a72",{"_index":2975,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x6703;&#x7ffb;&#x8b6f;&#x6210;&#xff1a",{"_index":3736,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x6703;&#x81ea;&#x52d5",{"_index":3093,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["x6703;&#x81ea;&#x52d5;&#x5e6b;&#x6211;&#x5011;&#x5f15;&#x5165",{"_index":2778,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x6708",{"_index":2584,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x6709;&#x4e00;&#x7a2e;&#x65b9;&#x6cd5;&#x7a31;&#x70ba",{"_index":600,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x6709;&#x4e9b;&#x7a0b;&#x5f0f;&#x8a9e;&#x8a00;&#xff0c;&#x5982",{"_index":3150,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x6709;&#x5169;&#x500b",{"_index":4618,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x6709;&#x5ba3;&#x544a",{"_index":2959,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x6709;&#x63d0;&#x4f9b;&#x76f8;&#x5c0d;&#x61c9;&#x7684",{"_index":1565,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x6709;&#x6642;&#x5019;&#x5373;&#x4f7f;&#x6c92;&#x6709",{"_index":3324,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x6709;&#x6642;&#x5019;&#x6211;&#x5011;&#x6703;&#x5f15;&#x7528;&#x76f8;&#x7576;&#x591a;&#x500b;&#x540c;&#x5c6c;&#x67d0",{"_index":2767,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x6709;&#x6c92;&#x6709;&#x5927;&#x5c0f;&#x5beb;&#x7684;&#x554f;&#x984c;&#x3002",{"_index":3578,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x6709;&#x7279;&#x6b8a;&#x610f;&#x7fa9;&#xff0c;&#x6240;&#x4ee5;&#x5be6;&#x969b;&#x7bc4;&#x570d;&#x70ba",{"_index":752,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x6709;&#x751f;&#x547d;&#x9031;&#x671f;&#xff0c;&#x6703;&#x300c;&#x7522;&#x751f;&#x300d;&#x548c;&#x300c;&#x6d88;&#x6ec5;&#x300d",{"_index":1456,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x6709;&#x865f;&#x6574;&#x6578",{"_index":599,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x6709;&#x9078;&#x8d77;&#x4f86",{"_index":5283,"title":{},"body":{"java/gui.html#鍵盤事件處理範例":{}}}],["x6709;&#x95dc",{"_index":3258,"title":{"java/interface.html#Java-有關-Interface-的語法":{}},"body":{}}],["x6709;&#xff1a",{"_index":5239,"title":{},"body":{"java/gui.html#AWT":{}}}],["x6709;thread&#x6b63;&#x5728;&#x8b80;,&#x6216;&#x662f;&#x6709;thread&#x6b63;&#x5728;&#x5beb",{"_index":4789,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x672a;&#x5230",{"_index":2586,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x672c;&#x7ae0;&#x89c0;&#x5ff5;&#x6574;&#x7406;&#x7bc4;&#x4f8b",{"_index":3170,"title":{"java/extends.html#本章觀念整理範例":{}},"body":{}}],["x672c;&#x7bc0;&#x662f;&#x70ba;&#x4e86;&#x5b8c;&#x6574;&#x6558;&#x8ff0;&#x5404;&#x7a2e;&#x6578;&#x5b57;&#x7684;&#x8868;&#x9054;&#x6cd5;&#x800c;&#x5beb;&#x7684;&#xff0c;&#x8b80;&#x8005;&#x82e5;&#x770b;&#x4e0d;&#x61c2;&#xff0c;&#x4e26;&#x4e0d;&#x6703;&#x5f71;&#x97ff;&#x5c0d",{"_index":704,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x672c;&#x7bc0;&#x8209;&#x51fa;&#x5e7e;&#x500b;&#x4e0d;&#x540c;&#x7684;&#x4f8b;&#x5b50;&#xff0c;&#x8aaa;&#x660e;&#x591a;&#x500b",{"_index":4770,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x67d0;&#x4e9b;&#x4e0d;&#x53ef;&#x5206;&#x5272;&#x7684;&#x52d5;&#x4f5c;&#xff0c;&#x9700;&#x8981;&#x4ee5;&#x591a;&#x500b;&#x6a5f;&#x5668;&#x6307;&#x4ee4;&#x4f86;&#x5b8c;&#x6210",{"_index":4705,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x67d0;&#x4e9b;&#x60c5;&#x6cc1;&#x4e0b;&#xff0c;&#x96d6;&#x7136;&#x6709;&#x5be6;&#x4f5c;&#xff0c;&#x4f46;&#x6211;&#x5011;&#x5e0c;&#x671b;&#x5f37;&#x8feb;&#x5b50;&#x985e;&#x5225;&#x5fc5;&#x9808",{"_index":3317,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x67e5;&#x8a62;&#x5fc5;&#x4fe",{"_index":2549,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x6821;&#x5740",{"_index":2591,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x6839;&#x64da;&#x624b;&#x518a;&#xff0c",{"_index":2902,"title":{},"body":{"java/exception.html#簡介":{}}}],["x683c;&#x5f0f;&#x5370;&#x51fa",{"_index":237,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x683c;&#x5f0f;&#x7684",{"_index":3566,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x683c;&#x5f0f;&#x7684;&#x6a94;&#x6848;&#x3002;zip",{"_index":2727,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x683c;&#x5f0f;&#x76f8;&#x540c;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa",{"_index":970,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x6a19",{"_index":4412,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["x6a19;&#x6e96",{"_index":555,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x6a19;&#x6e96;&#x7684;&#x7a0b;&#x5f0f;&#x5eab;&#xff0c;&#x5247;&#x4e0d;&#x9700;&#x8981;&#x6307;&#x5b9a",{"_index":2718,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x6a19;&#x984c",{"_index":1081,"title":{},"body":{"c/writing-intro.html#文章的組成":{}}}],["x6a21;&#x5f0f;&#x3002",{"_index":5173,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x6a21;&#x7d44;&#x4e5f;&#x8981;&#x91cd;&#x65b0;&#x7de8;&#x8b6f;&#x3002;&#x63db;&#x53e5;&#x8a71;&#x8aaa;&#x55ae;&#x770b",{"_index":2810,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x6a6b;&#x5370",{"_index":2503,"title":{},"body":{"java/easy-print.html#PrintCanvas-java":{}}}],["x6a94",{"_index":961,"title":{},"body":{"c/system-operation.html#Software-development-process":{},"java/encapsulation.html#Package-的定義":{}}}],["x6a94;&#x3002",{"_index":2729,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x6a94;&#x3002;&#x5982;&#x679c;&#x61c9;&#x7528;&#x8edf;&#x9ad4;&#x6709;&#x5169;&#x500b;&#x4ee5;&#x4e0a;&#x7684;&#x9032;&#x5165;&#x9ede;&#xff0c;&#x5982;&#x7db2;&#x8def;&#x7a0b;&#x5f0f;&#x7684",{"_index":2833,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x6a94;&#x5373;&#x53ef;&#x3002",{"_index":2836,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x6a94;&#x548c",{"_index":2796,"title":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}},"body":{}}],["x6a94;&#x6848",{"_index":2823,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x6a94;&#x6848;&#x5167;&#xff0c;&#x4f8b;&#x5982",{"_index":1494,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x6a94;&#x7684;&#x5de5;&#x5177;&#x3002",{"_index":959,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x6a94;&#x7684;&#x76f8;&#x4f9d;&#x6027",{"_index":2797,"title":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}},"body":{}}],["x6a94;&#x88e1;&#x9762",{"_index":2739,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x6a94;)&#x3002",{"_index":976,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x6a94;)&#xff0c;&#x7d93;&#x904e;&#x7de8;&#x8f2f",{"_index":963,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x6aa2;&#x67e5;&#x5e74;&#x9f61;&#x662f;&#x5426;&#x5408;&#x6cd5",{"_index":4217,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["x6b21;&#x65b9",{"_index":763,"title":{},"body":{"c/system-intro.html#浮點數表示法":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x6b21;&#xff0c;&#x53ef;&#x7528",{"_index":3817,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x6b21;&#xff0c;&#x6bcf;&#x6b21;&#x8f38;&#x5165;&#x6578;&#x5b57;&#x52a0;&#x7e3d;&#x5230",{"_index":3788,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x6b63;&#x5728;&#x7b49;&#x5f85;&#x67d0;&#x500b;&#x4e8b;&#x4ef6;&#x767c;&#x751f;&#xff0c;&#x4f5c;&#x696d;&#x7cfb;&#x7d71;&#x4e0d;&#x6703;&#x8b93;&#x9019;&#x7a2",{"_index":4761,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x6b63;&#x5728;&#x8b80;&#x7684;&#x5c11;&#x4e00;&#x500b",{"_index":4782,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x6b63;&#x5728;&#x8b80;&#x7684;thread&#x591a;&#x4e86;&#x4e00;&#x500b",{"_index":4779,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x6b64;&#x4f4d;&#x7f6e;&#x53ef;&#x4ee5;&#x4e0b",{"_index":5273,"title":{},"body":{"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["x6b64;&#x51fd;&#x6578;&#x9700;&#x8981;&#x5169;&#x500b;&#x53c3;&#x6578",{"_index":3831,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x6b64;&#x5716;&#x5f62;&#x5171;&#x6709",{"_index":3813,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x6b64;&#x5916",{"_index":3549,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x6b64;&#x6642",{"_index":3836,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x6b64;&#x6bb5;&#x8a3b;&#x89e3;&#x6703;&#x8b8a;&#x6210;&#x63cf;&#x8ff0;main&#x65b9;&#x6cd5;&#x7684;&#x4e00;&#x90e8;&#x5206",{"_index":3757,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["x6b64;&#x7269;&#x4ef6;&#x6709;&#x4e00;&#x500b;object",{"_index":1280,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x6b65;&#x9a5f",{"_index":3193,"title":{},"body":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["x6bb5;&#x843d",{"_index":1083,"title":{},"body":{"c/writing-intro.html#文章的組成":{}}}],["x6bcf;&#x4e00;&#x500b",{"_index":4583,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x6bcf;&#x4e00;&#x500b;&#x5c0d;&#x61c9;&#x7684",{"_index":637,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x6bcf;&#x500b;&#x9805;&#x6b21;&#x7684;&#x4fc2;&#x6578;&#x3002",{"_index":1340,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x6bd4;&#x8d77;&#x4f86;&#xff0c;&#x4e0d;&#x50c5;&#x66f4;&#x70ba;&#x7269;&#x4ef6;&#x5c0e;&#x5411;&#xff0c;&#x800c;&#x4e14;&#x6bd4",{"_index":3589,"title":{},"body":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}}}],["x6bd4;&#x8f03;&#x5b8c;&#x6574;&#x7684;&#x7bc4;&#x4f8b;&#x5982;&#x4e0b",{"_index":3118,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x6bd4;&#x8f03;&#x65b0;&#x5247",{"_index":2828,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x6bd4;&#x8f03;&#x9069;&#x5408;&#x3002",{"_index":3744,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x6beb;&#x7121;&#x932f;&#x8aa4;&#x3002",{"_index":3581,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x6c42",{"_index":3856,"title":{},"body":{"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x6c7a;&#x5b9a;&#x63a1;&#x53d6;&#x7684;&#x6b65;&#x9a5f;&#x3002",{"_index":5171,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x6c92;&#x6709;&#x53c3;&#x6578;&#xff0c;&#x7b2c;&#x4e8c;&#x500b;&#x9700;&#x8981;&#x4e00;&#x500b",{"_index":4620,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x6c92;&#x6709;&#x5b9a;&#x7fa9",{"_index":1575,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x6c92;&#x6709;&#x5ba3;&#x544a;&#x7e7c;&#x627f;&#x4efb;&#x4f55;&#x985e;&#x5225;&#xff0c",{"_index":1612,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x6c92;&#x6709;&#x5be6;&#x4f5c;&#xff0c;&#x5c31;&#x4e0d;&#x53ef;&#x80fd;&#x900f;&#x904",{"_index":3275,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x6c92;&#x6709;&#x5be6;&#x4f5c;&#xff0c;&#x88e1;&#x9762;&#x5b9a;&#x7fa9;&#x7684",{"_index":3287,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x6c92;&#x6709;&#x63d0;&#x4f9b;&#x4f8b;&#x5916;&#x8655;&#x7406;&#x6a5f;&#x5236;&#x7684;&#x8a9e;&#x8a00;&#xff0c;&#x7a0b;&#x5f0f;&#x7684;&#x6b63;&#x78ba;&#x6027;&#x5fc5;&#x9808;&#x9760;&#x6975;&#x7aef;&#x5c0f;&#x5fc3;&#x7684;&#x8a2d;&#x8a08;&#x8005;&#x624d;&#x884c;&#x3002;&#x70ba;&#x4e86;&#x6e1b;&#x5c11;&#x7a0b;&#x5f0f;&#x932f;&#x8aa4;&#x7684;&#x6a5f;&#x6703;&#xff0c;&#x8b93;&#x8edf;&#x9ad4;&#x5f88;&#x5f37;&#x56fa",{"_index":2908,"title":{},"body":{"java/exception.html#簡介":{}}}],["x6c92;&#x6709;&#x6578;&#x5b57;&#x3002;&#x56e0;&#x70ba;&#x9663;&#x5217;&#x662f;&#x4e00;&#x7a2e;&#x7269;&#x4ef6;&#xff0c;&#x5fc5;&#x9808;&#x4ee5",{"_index":1286,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x6c92;&#x6709;thread&#x6b63;&#x5728;&#x5beb",{"_index":4785,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x6c92;&#x6709;thread&#x8981;writ",{"_index":4792,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x6ce8;&#x610f;&#x4e0a;&#x8ff0;&#x51fd;&#x6578;&#x5ba3;&#x544a;&#x6c92;&#x6709",{"_index":3261,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x6ce8;&#x610f;throw&#x5f8c;&#x9762;&#x6c92;&#x6709;",{"_index":2924,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x6d41;&#x7a0b;&#x63a7;&#x5236;&#x6558;&#x8ff0",{"_index":3710,"title":{"java/java-vs-c.html#流程控制敘述":{}},"body":{}}],["x6d6e;&#x9ede;&#x6578",{"_index":231,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x6d6e;&#x9ede;&#x6578;&#x8868;&#x793a;&#x6cd5",{"_index":703,"title":{"c/system-intro.html#浮點數表示法":{}},"body":{}}],["x6d88;&#x6ec5;&#x9700;&#x8981;&#x547c;&#x53eb;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x7a31;&#x70ba",{"_index":1476,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x6df7;&#x5408;&#x904b;&#x7528;&#x7684;&#x60c5;&#x6cc1;&#xff0c;&#x56e0;&#x6b64;&#x8a9e;&#x6cd5;&#x8981;&#x628a",{"_index":1294,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x6e1b",{"_index":3666,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x6e1b;&#x4e00",{"_index":3669,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x6e1b;&#x4efb;&#x610f;&#x6578;&#x90fd;&#x4e0d;&#x9700;&#x8981;&#x501f;&#x4f4d;&#xff0c;&#x56e0;&#x6b64;&#x7dda;&#x8def;&#x6bd4;&#x8f03;&#x597d;&#x8a2d;&#x8a08;&#x3002;&#x88dc;&#x6578;&#x7684;&#x89c0;&#x5ff5;&#x7528;&#x5230;&#x4e8c;&#x9032;&#x4f4d;&#x6642;&#xff0c;&#x6548;&#x7528;&#x5c31;&#x66f4;&#x5927;&#x4e86;&#x3002;&#x6240;&#x6709;&#x90fd;&#x662f;&#x4e00;&#x7684;&#x4e8c;&#x9032;&#x4f4d;&#x6578",{"_index":633,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x6e1b;&#x6cd5;&#x6bd4;&#x52a0;&#x6cd5;&#x96e3;&#x5be6;&#x4f5c;&#x7684;&#x539f;&#x56e0;&#x662f;&#x6e1b;&#x6cd5;&#x9700;&#x8981;&#x4e00;&#x76f4;&#x501f;&#x4f4d",{"_index":604,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x6e96;&#x5099;&#x6aa2;&#x67e5;&#x4e0b;&#x4e00;&#x500b",{"_index":4800,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x70ba",{"_index":548,"title":{},"body":{"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/interface.html#Abstract-Class-and-Method":{},"java/java-vs-c.html#迴圈範例":{}}}],["x70ba;&#x4e00;&#x500b;&#x55ae;&#x4f4d;&#x7a31;&#x70ba;&#x4f4d;&#x5143;&#x7d44",{"_index":525,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x70ba;&#x4e86;&#x5f4c;&#x88dc",{"_index":5188,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x70ba;&#x4e86;&#x89e3;&#x6c7a;&#x9019;&#x985e;&#x8cc7;&#x6e90;&#x5206;&#x914d;&#x7684;&#x554f;&#x984c;&#xff0c;java",{"_index":4741,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x70ba;&#x4e86;&#x8b93",{"_index":2709,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x70ba;&#x4e86;&#x8b93;&#x539f;&#x5148;&#x4f7f;&#x7528",{"_index":5199,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x70ba;&#x4e86;&#x907f;&#x958b;&#x591a;&#x91cd;&#x7e7c;&#x627f;&#x7684;&#x8907;&#x96dc;&#x6027;&#xff0c;class",{"_index":3088,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["x70ba;&#x4ec0;&#x9ebc",{"_index":3215,"title":{"java/interface.html#為什麼-Java-提供-Interface":{}},"body":{}}],["x70ba;&#x5927;&#x5c0f;&#x3002;&#x7f3a;&#x9ede;&#x662f;&#x4e0d;&#x597d;&#x904b;&#x7b97;&#xff0c;&#x56e0;&#x70ba;&#x52a0;&#x6cd5;&#x7684;&#x904b;&#x7b97;&#x65b9;&#x6cd5;&#x548c;&#x904b;&#x7b97;&#x5143;&#x7684;&#x6b63;&#x8ca0;&#x865f;&#x6709;&#x95dc;&#x3002;&#x7576;&#x5169;&#x500b;&#x904b;&#x7b97;&#x5b50;&#x540c;&#x865f;&#x6642;&#xff0c;&#x53ea;&#x8981;&#x5c07;&#x6578;&#x5b57;&#x5927;&#x5c0f;&#x7684;&#x90e8;&#x4efd;&#x76f8;&#x52a0;&#xff0c;&#x6b63;&#x8ca0;&#x865f;&#x8207;&#x904b;&#x7b97;&#x5143;&#x76f8;&#x540c;&#x5373;&#x53ef;&#xff0c;&#x4f46;&#x7576;&#x5169;&#x500b;&#x904b;&#x7b97;&#x5b50;&#x7684;&#x7b26;&#x865f;&#x4e0d;&#x540c;&#x6642;&#xff0c;&#x5247;&#x8981;&#x4ee5;&#x6e1b;&#x6cd5;&#x4f86;&#x8655;&#x7406;&#x5927;&#x5c0f;&#x7684;&#x90e8;&#x4efd;&#xff0c;&#x6b63;&#x8ca0;&#x865f;&#x5247;&#x8996;&#x76f8;&#x6e1b;&#x7684;&#x7d50;&#x679c;&#x800c;&#x5b9a;&#x3002;&#x9019;&#x7a2e;&#x8868;&#x793a;&#x6cd5;&#x4e5f;&#x6703;&#x9020;&#x6210;&#x96fb;&#x8166;&#x908f;&#x8f2f;&#x7dda;&#x8def;&#x8a2d;&#x8a08;&#x4e0a;&#x7684;&#x56f0;&#x64fe;&#x3002",{"_index":603,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x70ba;&#x5c3e;&#x6578;&#x90e8;&#x4efd;&#x3002",{"_index":760,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x70ba;&#x5c3e;&#x6578;&#x90e8;&#x4efd;&#x3002;&#x5176;&#x4e2d;&#x6307;&#x6578;&#x90e8;&#x4efd;&#x63a1;&#x7528",{"_index":749,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x70ba;&#x5e95;&#x7684",{"_index":501,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x70ba;&#x6307;&#x6578;&#x90e8;&#x4efd;&#xff0c;m",{"_index":748,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x70ba;&#x6b62;&#x3002",{"_index":2972,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x70ba;&#x6b63;&#x8ca0;&#x865f;&#xff0c;",{"_index":747,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x70ba;&#x8aaa;&#x660e;&#x8d77;&#x898b;&#xff0c;&#x6211;&#x5011;&#x5b9a;&#x7fa9;&#x4ee5;&#x4e0b;&#x7684;&#x865b;&#x64ec;&#x6a5f;&#x5668;&#x6307;&#x4ee4;&#x96c6;&#xff1a",{"_index":865,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7136;&#x5f8c",{"_index":3567,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7136;&#x5f8c;&#x905e;&#x8ff4;&#x547c;&#x53eb;,&#x4ee5;&#x627e;&#x51fa;got+1&#x53f3;&#x908a;&#x7684;&#x6240;&#x6709;&#x6392;&#x5217",{"_index":1353,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x7236;&#x985e;&#x5225;&#x7684",{"_index":3105,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x7248;&#x672c",{"_index":5278,"title":{"java/gui.html#井字遊戲的-Swing-版本":{}},"body":{}}],["x7248;&#x672c;&#x4e0a;&#x90fd;&#x80fd;&#x9806;&#x5229;&#x7de8;&#x8b6f;&#xff0c;&#x539f;&#x4f5c;&#x8005;&#x5f80;&#x5f80;&#x5fc5;&#x9808;&#x4f7f;&#x7528;&#x524d;&#x7f6e;&#x8655;&#x7406;&#x5668;&#x7684",{"_index":3528,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7269;&#x4ef6",{"_index":559,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x7269;&#x4ef6;&#x53ef;&#x6709;&#x591a;&#x7a2e;&#x578b;&#x5225;&#x7684;&#x89c0;&#x5ff5;&#xff0c;&#x4e0d;&#x50c5;&#x5728;&#x65e5;&#x5e38;&#x751f;&#x6d3b;&#x4e2d;&#x5e38;&#x898b;&#xff0c;&#x5728;&#x8edf;&#x9ad4;&#x958b;&#x767c;&#x4e0a;&#x4e5f;&#x6709;&#x5be6;&#x969b;&#x7684;&#x9700;&#x6c42;&#xff0c;&#x8981;&#x4f7f;&#x7269;&#x4ef6;&#x5177;&#x6709;&#x591a;&#x7a2e;&#x578b;&#x5225;&#xff0c;&#x53ef;&#x900f;&#x904e;&#x7e7c;&#x627f;&#x4f86;&#x9054;&#x6210;&#x3002",{"_index":3224,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x7269;&#x4ef6;&#x5c0e;&#x5411",{"_index":1470,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x7269;&#x4ef6;&#x5c0e;&#x5411;&#x7a0b;&#x5f0f;&#x8a2d;&#x8a08;&#x7684;&#x539f;&#x5247;&#x4e4b;&#x4e00;&#xff0c;&#x662f;&#x8b93;&#x5be6;&#x4f5c;&#x548c;&#x754c;&#x9762;&#x5206;&#x958b;&#xff0c;&#x4ee5;&#x4fbf;&#x8b93;&#x540c;&#x4e00;&#x754c;&#x9762;&#x4f46;&#x4e0d;&#x540c;&#x7684;&#x5be6;&#x4f5c;&#x7684;&#x7269;&#x4ef6;&#x80fd;&#x4ee5;&#x4e00;&#x81f4;&#x7684;&#x9762;&#x8c8c;&#x8b93;&#x5916;&#x754c;&#x5b58;&#x53d6;&#xff0c;&#x70ba;&#x4e86;&#x9054;&#x5230;&#x6b64;&#x76ee;&#x6a19;&#xff0c;java",{"_index":2676,"title":{},"body":{"java/encapsulation.html#封裝的意義":{}}}],["x7269;&#x4ef6;&#x5c31;&#x540c;&#x6642;&#x5177;&#x6709",{"_index":3226,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x7269;&#x4ef6;&#x624d;&#x80fd;&#x57f7;&#x884c;&#x8a72;&#x65b9;&#x6cd5;&#x3002",{"_index":4724,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x7269;&#x4ef6;&#x7522;&#x751f;&#x6642;&#x9700;&#x8981;&#x547c;&#x53eb;constructor&#x4f86;&#x521d;&#x59cb;&#x5316;&#x7269;&#x4ef6",{"_index":1515,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x7269;&#x4ef6;&#x7576;&#x53c3;&#x6578;&#x3002",{"_index":4621,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x7269;&#x4ef6;&#x7684",{"_index":3638,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7269;&#x4ef6;&#x800c;&#x5df2;&#x3002",{"_index":1290,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x7269;&#x4ef6;&#x88e1;&#x7684",{"_index":4627,"title":{},"body":{"java/thread.html#如何產生-Thread":{},"java/gui.html#AWT":{}}}],["x7279;&#x5225;&#x6ce8;&#x610f;&#x4e0a;&#x8ff0;&#x7684;&#x904b;&#x7b97;&#x5f0f;&#x88e1",{"_index":3767,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["x7279;&#x6027;&#x7684;&#x5bb9;&#x5668;&#xff0c;&#x5c31;&#x53ef;&#x7a31;&#x70ba;&#x5806;&#x758a;&#x3002;&#x96fb;&#x8166;&#x5167;&#x90e8;&#x7684",{"_index":919,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7279;&#x6b8a;&#x72c0;&#x6cc1",{"_index":758,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x73ed;(&#x90e8;)&#x5225",{"_index":2527,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x73fe;&#x5728",{"_index":4688,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x73fe;&#x5728;&#x662f",{"_index":4696,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x74b0;&#x5883;&#x8b8a;&#x6578;&#x6642;&#xff0c;&#x8981;&#x7279;&#x5225;&#x6ce8;&#x610f;&#x7684;&#x662f;&#xff0c;&#x4e0d;&#x8981;&#x5fd8;&#x4e86;&#x628a",{"_index":2720,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x7522;&#x751f",{"_index":968,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x7522;&#x751f;&#x3002",{"_index":972,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x7522;&#x751f;&#x4e00;&#x500b;&#x53ef;&#x57f7;&#x884c;&#x6a94",{"_index":975,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x7522;&#x751f;&#x6642;&#x4e00;&#x5b9a;&#x8981;&#x547c;&#x53eb;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x7a31;&#x70ba",{"_index":1474,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x7522;&#x751f;&#x6642;&#xff0c;&#x5176;&#x884c;&#x70ba;&#x548c",{"_index":2987,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x7522;&#x751f;&#x6642;&#xff0c;jvm",{"_index":2969,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x7522;&#x751f;&#x7269;&#x4ef6",{"_index":3704,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x7522;&#x751f;&#x7269;&#x4ef6;&#x3002;&#x63db;&#x8a00;&#x4e4b;&#xff0c;interfac",{"_index":3276,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x7522;&#x751f;&#x7684",{"_index":4624,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x7522;&#x751f;thread&#x7269;&#x4ef6",{"_index":4632,"title":{},"body":{"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x7528",{"_index":245,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/exception.html#範例":{}}}],["x7528;&#x4f86;&#x4f5c;&#x70ba",{"_index":3253,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x7528;&#x4f86;&#x505a;&#x8f38;&#x5165;&#xff0c;&#x5176;&#x53c3;&#x6578;&#x548c",{"_index":243,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x7528;&#x4f86;&#x5b58;&#x53d6",{"_index":3625,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7528;&#x4f86;&#x5b58;&#x53d6;&#x8a18;&#x61b6;&#x9ad4;&#x6709;&#x9ede;&#x50cf;&#xff0c;&#x4f46;&#x6c92;&#x6709",{"_index":3627,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7528;&#x4f86;&#x7522;&#x751f;&#x61c9;&#x7528;&#x7a0b;&#x5f0f;&#x7684;&#x7a0b;&#x5f0f;&#x8a9e;&#x8a00;&#x6240;&#x80fd;&#x63d0;&#x4f9b;&#x7684;&#x8cc7;&#x6599;&#x578b;&#x614b;&#x3002",{"_index":597,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x7528;&#x5230",{"_index":2753,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x7528;&#x5230;&#x4e00;&#x4e9b;&#x975",{"_index":1627,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x7528;&#x6cd5;&#x5982;&#x4e0b;&#xff1a",{"_index":187,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x7531;&#x4e0a;&#x9762;&#x7684;&#x63cf;&#x8ff0;&#x4e2d;&#xff0c;&#x6211;&#x5011;&#x5728;&#x6b78;&#x7d0d",{"_index":4599,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x7531;&#x5806;&#x758a;&#x4e0a;&#x53d6;&#x51fa;&#x4e00;&#x500b;&#x6578;&#x503c;&#xff0c;&#x7136;&#x5f8c;&#x5c07",{"_index":903,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7531;&#x5806;&#x758a;&#x53d6;&#x51fa;&#x4e00;&#x500b;&#x6578;&#x503c",{"_index":951,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7531;&#x65bc",{"_index":2780,"title":{},"body":{"java/encapsulation.html#Package-的引用":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/java-vs-c.html#資料型別":{},"java/message-passing.html#Message-Passing-的語法":{},"java/gui.html#GUI-簡介":{}}}],["x7531;&#x65bc;&#x4e0a;&#x9762",{"_index":3161,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x7531;&#x65bc;&#x4ee5;&#x4e00;&#x7dad;&#x9663;&#x5217;&#x4f86;&#x6a21;&#x64ec;&#x4e8c;&#x7dad;&#x9663;&#x5217;&#xff0c;&#x56e0;&#x6b64;&#x900f;&#x904e;&#x7b2c;&#x4e00;&#x500b;&#x9663;&#x5217;&#x7684",{"_index":1313,"title":{},"body":{"java/array.html#多維陣列":{}}}],["x7531;&#x65bc;&#x53ea;&#x6709;&#x4e00;&#x500b;&#x958b;&#x53e3;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x89c0;&#x5bdf;&#x5230;&#x5148;&#x653e;&#x9032;&#x53bb;&#x7684;&#x8cc7;&#x6599;&#x6703;&#x6700;&#x5f8c;&#x62ff;&#x51fa;&#x4f86",{"_index":912,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7531;&#x65bc;&#x5ba3;&#x544a;&#x70ba",{"_index":3157,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x7531;&#x65bc;&#x67d0;&#x4e9b;&#x771f;&#x5be6;&#x4e16;&#x754c;&#x7684;&#x52d5;&#x4f5c;&#x662f;&#x4e0d;&#x53ef;&#x5206;&#x5272;&#x7684;&#xff0c;&#x4f8b;&#x5982;&#x8de8;&#x884c;&#x8f49;&#x5e33",{"_index":4670,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x7531;&#x65bc;&#x9019;&#x4e9b;&#x554f;&#x984c;&#x7684;&#x5b58;&#x5728;&#xff0c;&#x67d0;&#x4e9b;&#x539f;&#x59cb;&#x78bc;&#x7ba1;&#x7406;&#x7cfb;&#x7d71;&#x4fbf;&#x56e0;&#x61c9;&#x800c;&#x751f;&#xff0c;&#x4f8b;&#x5982",{"_index":2817,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x7531;&#x65bc;&#x9019;&#x985e;&#x7684;&#x758f;&#x5ffd;&#x5f88;&#x96e3;&#x5b8c;&#x5168;&#x907f;&#x514d;&#xff0c;&#x800c;&#x4e14;&#x4e0d;&#x5bb9;&#x6613;&#x627e;&#x51fa;&#x932f;&#x8aa4;&#xff0c;&#x56e0;&#x6b64",{"_index":1318,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x7531;&#x65bc;&#x9577;&#x5ea6;&#x7684;&#x8cc7;&#x8a0a;&#x4e26;&#x4e0d;&#x5728;&#x9663;&#x5217;&#x5167;&#xff0c;&#x5fc5;&#x9808;&#x9760;&#x8a2d;&#x8a08;&#x8005;&#x53e6;&#x5916;&#x544a;&#x77e5;&#x624d;&#x884c;&#xff0c;&#x4e0d;&#x5c0f;&#x5fc3;&#x7684;&#x8a71;&#x5bb9;&#x6613;&#x767c;&#x751f;&#x4e0d;&#x4e00;&#x81f4;&#x7684;&#x60c5;&#x5f62;&#x3002",{"_index":1272,"title":{},"body":{"java/array.html#C-語言陣列回顧":{}}}],["x7531;&#x65bc;2&#x9032;&#x4f4d;&#x53ea;&#x6709;0&#x548c;1&#x5169;&#x500b;&#x6578;&#x5b57;&#xff0c;&#x4f60;&#x6703;&#x767c;&#x73fe;&#xff1a",{"_index":691,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x7531;&#x66ab;&#x5b58;&#x5668;&#x5c07;&#x8cc7;&#x6599;&#x9001;&#x5230;&#x8f38;&#x51fa;&#x88dd;&#x7f6e;&#xff0c;&#x7136;&#x5f8c",{"_index":897,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7531;&#x8f38;&#x5165;&#x88dd;&#x7f6e;&#x8b80;&#x5165;&#x8cc7;&#x6599;&#x653e;&#x5230;&#x66ab;&#x5b58;&#x5668;&#x4e0a;&#xff0c;&#x7136;&#x5f8c;&#x5c07",{"_index":894,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7531;data.length&#x53d6;n&#x500b",{"_index":1355,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x754c;&#x9762",{"_index":3250,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Java-有關-Interface-的語法":{}}}],["x7576",{"_index":2929,"title":{},"body":{"java/exception.html#相關語法":{},"java/interface.html#Java-有關-Interface-的語法":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#迴圈範例":{},"java/thread.html#如何產生-Thread":{}}}],["x7576;&#x521d;&#x70ba;&#x4e86;&#x5feb;&#x901f;&#x958b;&#x767c;&#x51fa",{"_index":5178,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x7576;&#x57f7;&#x884c",{"_index":3191,"title":{},"body":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["x7576;&#x7136;&#x50cf;&#x662f",{"_index":2963,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x7576;&#x7136;&#x9019;&#x6a23;&#x7684;&#x4fbf;&#x5229;&#x6027;&#x662f;&#x7528;&#x6548;&#x80fd;&#x63db;&#x4f86;&#x7684;&#x3002;&#x5982;&#x679c;&#x4f60;&#x7684;&#x61c9;&#x7528;&#x9700;&#x8981;&#x5927;&#x91cf;&#x5b58;&#x53d6;&#x9663;&#x5217;&#xff0c;&#x800c;&#x4e14;&#x901f;&#x5ea6;&#x975e;&#x5e38;&#x91cd;&#x8981;&#xff0c;&#x9023;&#x5e7e;&#x500b",{"_index":1331,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x767c;&#x73fe;&#x67d0",{"_index":1574,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x7684",{"_index":582,"title":{},"body":{"c/system-intro.html#數字系統":{},"c/system-intro.html#如何表示整數資料":{},"java/class-and-obj.html#類別與物件的基本概念":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#初始化的執行順序":{},"java/encapsulation.html#類別成員的存取":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/extends.html#Virtual-Function-虛擬函數":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Abstract-Class-and-Method":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#資料型別":{},"java/java-vs-c.html#流程控制敘述":{},"java/java-vs-c.html#遞迴-recursion-範例":{},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{},"java/thread.html#Program-Process-Thread":{},"java/gui.html#GUI-簡介":{}}}],["x7684;&#x4e00;&#x7dad;&#x9663;&#x5217;&#xff0c;&#x4e8c;&#x7dad;&#x4ee5;&#x4e0a;&#x7684;&#x9663;&#x5217;&#x662f;&#x900f;&#x904",{"_index":1300,"title":{},"body":{"java/array.html#多維陣列":{}}}],["x7684;&#x4e09;&#x5927;&#x8981;&#x7d20;&#xff0c;&#x5982;&#x679c;&#x67d0;&#x7a0b;&#x5f0f;&#x8a9e;&#x8a00;&#x53ea;&#x5177;&#x5099;&#x524d;&#x9762;&#x5169;&#x9805;&#x7279;&#x6027;&#xff0c;&#x4e00;&#x822c;&#x6210;&#x70ba",{"_index":3080,"title":{},"body":{"java/extends.html#基本觀念":{}}}],["x7684;&#x4e0d;&#x540c;&#x9ed",{"_index":4189,"title":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}},"body":{}}],["x7684;&#x4e0d;&#x8db3;&#xff0c;jdk",{"_index":5189,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x7684;&#x4e8c;&#x9032;&#x4f4d;&#x8868;&#x793a;&#x6cd5;&#xff0c;&#x5c31;&#x6210;&#x70ba;&#x4e00;&#x9805;&#x6311;&#x6230;&#x3002;&#x5404;&#x4f4d;&#x9084;&#x8a18;&#x5f97;&#x79d1;&#x5b78;&#x7b26;&#x865f;&#x8868;&#x793a;&#x6cd5;&#x55c",{"_index":719,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x7684;&#x4eba;&#x5fc5;&#x9808;&#x8655;&#x7406;&#x4f8b;&#x5916;&#x72c0;&#x6cc1;&#xff0c;&#x4e26;&#x4e0d;&#x65b7;&#x7684;&#x6d88;&#x8017;cpu&#x8cc7;&#x6e90;&#xff1a",{"_index":4740,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x7684;&#x4f7f;&#x7528;&#x8005;&#x4ecb;&#x9762;&#x53ef;&#x80fd;&#x7528;&#x5230",{"_index":3534,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7684;&#x4f8b;&#x5916;&#x3002;&#x82e5;&#x7a0b;&#x5f0f;&#x8a2d;&#x8a08;&#x6642;&#x6c92;&#x6709;&#x6307;&#x5b9a;&#x9019;&#x7a2e;&#x4f8b;&#x5916;&#x7684;&#x8655;&#x7406;&#x65b9;&#x5f0f;&#xff0c;&#x5247;&#x6574;&#x500b;&#x7a0b;&#x5f0f;&#x6703;&#x7d42;&#x6b62;&#xff0c;&#x4e26;&#x65bc;&#x87a2;&#x5e55;&#x4e0a;&#x5370;&#x51fa;&#x76f8;&#x95dc;&#x7684;&#x932f;&#x8aa4;&#x8a0a;&#x606f;&#x3002;&#x4f8b;&#x5982;&#x57f7;&#x884c;&#x4e0b;&#x9762;&#x7684;&#x7a0b;&#x5f0f;&#xff1a",{"_index":1320,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x7684;&#x4fdd;&#x7559;&#x5b57;&#xff0c;&#x7528;&#x4ee5;&#x5224;&#x65b7;&#x67d0",{"_index":3220,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x7684;&#x4fdd;&#x8b77;&#x63aa;&#x65bd",{"_index":4663,"title":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}},"body":{}}],["x7684;&#x500d;&#x6578;&#x6709",{"_index":1118,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x7684;&#x500d;&#x6578;&#x7684;&#x5e74;&#x4efd;&#x662f;&#x5e73;&#x5e74;&#xff0c;400",{"_index":1114,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x7684;&#x500d;&#x6578;&#x7684;&#x5e74;&#x4efd;&#x662f;&#x958f;&#x5e74;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#xff0c;400",{"_index":1115,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x7684;&#x500d;&#x6578;&#x7684;&#x5e74;&#x4efd;&#x662f;&#x958f;&#x5e74;&#xff0c;100",{"_index":1113,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x7684;&#x512a;&#x5148;&#x6b0a;&#x4ee5;&#x53ca;&#x5df2;&#x7d93;&#x7528;&#x6389;&#x7684",{"_index":4612,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x7684;&#x512a;&#x5148;&#x6b0a;&#x8207;&#x5f71;&#x97ff;&#x8cc7;&#x6e90;&#x7684;&#x76f8;&#x95dc;&#x65b9;&#x6cd5",{"_index":4639,"title":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}},"body":{}}],["x7684;&#x512a;&#x5148;&#x6b0a;&#xff0c;&#x6578;&#x5b57;&#x8d8a;&#x5927;&#x512a;&#x5148;&#x6b0a;&#x8d8a;&#x9ad8;&#x3002",{"_index":4641,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x7684;&#x512a;&#x9ed",{"_index":3164,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x7684;&#x5167;&#x5bb9",{"_index":940,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7684;&#x5167;&#x5bb9;&#x3002;&#x800c;&#x5728;&#x8a31;&#x591a;&#x61c9;&#x7528;&#x88e1;&#xff0c;&#x8cc7;&#x6599;&#x7d50;&#x69cb;&#x53ef;&#x4ee5;&#x5141;&#x8a31;&#x540c;&#x6642;&#x591a;&#x500b;&#x8b80;&#x4e00;&#x500b;&#x5beb;&#x3002",{"_index":4769,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x7684;&#x5167;&#x5bb9;&#x52a0;&#x5230;&#x66ab;&#x5b58;&#x5668;&#xff0c;program",{"_index":928,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7684;&#x5167;&#x5bb9;&#x6539;&#x6210",{"_index":900,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7684;&#x5167;&#x5bb9;&#x6539;&#x6210;&#x6b64;&#x6578;&#x503c;&#x3000",{"_index":904,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7684;&#x5167;&#x5bb9;&#x6539;&#x70ba",{"_index":888,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7684;&#x5167;&#x5bb9;&#x8207;&#x66ab;&#x5b58;&#x5668;&#x5167;&#x7684;&#x6578;&#x503c;&#x76f8;&#x52a0;&#xff0c;&#x7d50;&#x679c;&#x653e;&#x5728;&#x66ab;&#x5b58;&#x5668;&#x4e0a;&#xff0c;&#x7136;&#x5f8c",{"_index":882,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7684;&#x5167;&#x5bb9;&#x8907;&#x88fd;&#x5230;&#x66ab;&#x5b58;&#x5668;&#x4e0a;&#xff0c;program",{"_index":949,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7684;&#x5167;&#x5bb9;&#x8907;&#x88fd;&#x5230;&#x66ab;&#x5b58;&#x5668;&#xff0c;program",{"_index":939,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7684;&#x5167;&#x5bb9;&#xff0c;&#x7d50;&#x679c;&#x653e;&#x5728;&#x66ab;&#x5b58;&#x5668;&#x4e0a;&#xff0c;&#x7136;&#x5f8c",{"_index":885,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7684;&#x5167;&#x5bb9;&#xff0c;&#x800c;&#x9019;&#x4e9b;&#x8a18;&#x61b6;&#x9ad4;&#x5c31;&#x6c7a;&#x5b9a;&#x4e86;&#x6307;&#x4ee4;&#x57f7;&#x884c;&#x7684;&#x7d50;&#x679c;&#x3002;&#x63db;&#x53e5;&#x8a71;&#x8aaa;&#xff0c;&#x96fb;&#x8166;&#x4e0d;&#x8a18;&#x5f97;&#x904e;&#x53bb;&#xff0c;&#x4e5f;&#x4e0d;&#x77e5;&#x9053;&#x672a;&#x4f86;&#xff0c;&#x4ed6;&#x53ea;&#x80fd;&#x900f;&#x904e;&#x8a18;&#x61b6;&#x9ad4;&#x7684;&#x5167;&#x5bb9;&#x77e5;&#x9053;&#x73fe;&#x5728;&#x7684;&#x60c5;&#x6cc1;&#x3002",{"_index":871,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7684;&#x5167;&#x5bb9;&#xff0c;program",{"_index":932,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7684;&#x5169;&#x908a;&#x5fc5;&#x9808;&#x662f;&#x540c;&#x6a23;&#x578b;&#x5225;&#x7684;&#x8cc7;&#x6599;&#xff0c;&#x800c;&#x4e14;&#x8a08;&#x7b97;&#x7684;&#x7d50;&#x679c;&#x4e5f;&#x662f;&#x540c;&#x6a23;&#x7684;&#x578b;&#x5225;&#x3002;&#x56e0;&#x6b64",{"_index":3770,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["x7684;&#x51fd;&#x5f0f;&#x5eab;&#xff0c;&#x5728",{"_index":5175,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x7684;&#x51fd;&#x6578;&#x5fc5;&#x9808;&#x7279;&#x5225;&#x6aa2;&#x67e5;&#x8a72;&#x503c;&#xff0c;&#x5426;&#x5247;&#x8a08;&#x7b97;&#x51fa;&#x4f86;&#x7684;&#x6771;&#x897f;&#x90fd;&#x8b8a;&#x6210;&#x4e86",{"_index":2905,"title":{},"body":{"java/exception.html#簡介":{}}}],["x7684;&#x51fd;&#x6578;&#x6709;&#x4fee;&#x6539;&#x53c3;&#x6578;&#xff0c;&#x5247",{"_index":2809,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x7684;&#x524d;&#x9762;&#x6c92;&#x6709",{"_index":2696,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x7684;&#x5340;&#x5225;&#x4f55;&#x5728;&#xff1f",{"_index":2745,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x7684;&#x5340;&#x584a",{"_index":2948,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x7684;&#x539f;&#x5247;&#xff0c;&#x6703;&#x7522;&#x751f",{"_index":3314,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x7684;&#x539f;&#x5275;&#x516c;&#x53f8",{"_index":3557,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7684;&#x539f;&#x59cb;&#x5b9a;&#x7fa9;&#xff0c;&#x8af8;&#x5982;&#x65b9;&#x6cd5;&#x5b58;&#x4e0d;&#x5b58;&#x5728;&#xff0c;&#x53c3;&#x6578;&#x6b63;&#x4e0d;&#x6b63;&#x78ba;&#x7b49;&#x554f;&#x984c;&#xff0c;compil",{"_index":2757,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x7684;&#x539f;&#x59cb;&#x7a0b;&#x5f0f;&#x6a94;&#xff0c;&#x5047;&#x8a2d;&#x4ed6;&#x5011;&#x7684;&#x540d;&#x7a31;&#x662f",{"_index":991,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x7684;&#x53c3;&#x6578;&#x500b;&#x6578;&#x548c;&#x578b;&#x614b;&#x4f86;&#x5340;&#x5206;&#x5c31;&#x53ef;&#x4ee5;&#x4e86;&#x3002;&#x9019;&#x7a2e;&#x89c0;&#x5ff5;&#x7a31;&#x70ba",{"_index":1582,"title":{},"body":{"java/class-and-obj.html#Overloading":{}}}],["x7684;&#x5408;&#x6cd5;&#x503c;&#x70ba",{"_index":3661,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x7684;&#x540d;&#x7a31;&#x5982;&#x679c;&#x548c",{"_index":1558,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x7684;&#x540d;&#x7a31;&#x5c31;&#x53ef;&#x4ee5;&#x627e;&#x5230;&#x6240;&#x9700;&#x8981;&#x7684",{"_index":2716,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x7684;&#x540d;&#x7a31;&#x624d;&#x884c;&#xff0c;&#x5982",{"_index":3304,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x7684;&#x540d;&#x7a31;&#x76f8;&#x540c",{"_index":1559,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x7684;&#x55ae;&#x4e00;&#x7e7c;&#x627f;&#x4f86;&#x9054;&#x6210;&#x4e86;&#x3002",{"_index":3229,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x7684;&#x5730;&#x65b9;&#x5c31;&#x6bd4;&#x9700;&#x4ee5",{"_index":2793,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x7684;&#x5730;&#x65b9;&#xff0c;&#x5c31;&#x8981;&#x4f7f;&#x7528",{"_index":2961,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x7684;&#x5730;&#x65b9;&#xff0c;program",{"_index":927,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7684;&#x578b;&#x5225;&#x3002;refer",{"_index":3624,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7684;&#x578b;&#x614b;&#x76f8;&#x5bb9",{"_index":3117,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x7684;&#x578b;&#x614b;&#x90e8;&#x5206;&#x63a1;&#x7528",{"_index":3608,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7684;&#x57f7;&#x884c;&#x7dd2;&#x6703;&#x7b49;&#x5230",{"_index":4654,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x7684;&#x57fa;&#x790e;&#x4e0a;&#x70ba;&#x4e0d;&#x540c;&#x7684;&#x8a9e;&#x8a00;&#x8a02;&#x5b9a;&#x4e86;&#x4e0d;&#x540c;&#x7684",{"_index":577,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x7684;&#x5834;&#x5408;&#xff0c;&#x662f;&#x8a72",{"_index":1626,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x7684;&#x591a;&#x91cd;&#x7e7c;&#x627f;&#xff0c;&#x4f46",{"_index":3231,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x7684;&#x5927;&#x578b;&#x4e3b;&#x6a5f;&#x548c;&#x7d42;&#x7aef;&#x6a5f;&#x4f7f;&#x7528;&#x3002;ascii",{"_index":571,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x7684;&#x5b50;&#x985e;&#x5225;&#x3002",{"_index":2983,"title":{},"body":{"java/exception.html#相關語法":{},"java/interface.html#Abstract-Class-and-Method":{}}}],["x7684;&#x5b50;&#x985e;&#x5225;&#x5fc5;&#x9808",{"_index":3333,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x7684;&#x5b50;&#x985e;&#x5225;&#x624d;&#x53ef;&#x4ee5;&#x5b58;&#x53d6;&#xff0c;&#x4f7f;&#x7528",{"_index":2692,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x7684;&#x5b50;&#x985e;&#x5225;&#x662f",{"_index":2985,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x7684;&#x5b50;&#x985e;&#x5225;&#x6709;&#xff1a",{"_index":5218,"title":{},"body":{"java/gui.html#AWT":{}}}],["x7684;&#x5b50;&#x985e;&#x5225;&#xff0c;&#x56e0;&#x6b64;&#x5982;&#x679c;&#x7522;&#x751f;&#x7684;&#x4f8b;&#x5916;&#x662f",{"_index":2950,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x7684;&#x5b57;&#x6a23;&#x3002",{"_index":4635,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x7684;&#x5b58;&#x53d6;&#x7bc4;&#x570d;&#x5c31;&#x662f",{"_index":2698,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x7684;&#x5b9a;&#x7fa9",{"_index":2700,"title":{"java/encapsulation.html#Package-的定義":{}},"body":{}}],["x7684;&#x5b9a;&#x7fa9;&#x554a;&#xff0c;&#x600e;&#x9ebc;&#x90fd;&#x6c92;&#x6709;&#x554f;&#x984c;&#xff1f;&#x7531;&#x65bc;&#x5beb;&#x7a0b;&#x5f0f;&#x591a;&#x591a;&#x5c11;&#x5c11;&#x90fd;&#x6703;&#x7528;&#x5230;&#x4e00;&#x9ede;&#x7cfb;&#x7d71;&#x63d0;&#x4f9b;&#x7684;&#x7a0b;&#x5f0f;&#x5eab;&#xff0c;&#x5982;&#x679c;&#x9023;&#x5f88;&#x7c21;&#x55ae;&#x7684;&#x7a0b;&#x5f0f;&#x90fd;&#x8981",{"_index":2775,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x7684;&#x5b9a;&#x7fa9;&#xff0c;&#x4ee5;&#x4fbf;&#x9032;&#x884c;&#x7de8;&#x8b6f;&#x6642;&#x671f;&#x7684;&#x6aa2;&#x67e5;&#x3002;&#x5f15;&#x5165;&#x7684;&#x8a9e;&#x6cd5;&#x70ba",{"_index":2759,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x7684;&#x5ba3;&#x544a",{"_index":3264,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x7684;&#x5ba3;&#x544a;&#x53ef;&#x4ee5;&#x7528",{"_index":2731,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x7684;&#x5ba3;&#x544a;&#x5f8c;&#x9762;&#x52a0;&#x4e0a;&#x521d;&#x59cb;&#x5316;&#x7684;&#x52d5;&#x4f5c;&#x3002;&#x5c0d",{"_index":1595,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x7684;&#x5ba3;&#x544a;&#xff0c;&#x5247",{"_index":2974,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x7684;&#x5ba3;&#x544a;&#xff0c;&#x5c31;&#x6703;&#x9020;&#x6210;&#x7de8;&#x8b6f;&#x932f;&#x8aa4;&#x4e86;&#x3002",{"_index":1591,"title":{},"body":{"java/class-and-obj.html#Overloading":{}}}],["x7684;&#x5bb9;&#x5668",{"_index":5231,"title":{},"body":{"java/gui.html#AWT":{}}}],["x7684;&#x5be6;&#x969b;&#x5730;&#x5740;&#x5728",{"_index":4208,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x7684;&#x5beb;&#x6cd5;&#x5982;&#x4e0b;&#xff1a",{"_index":4637,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x7684;&#x5de6;&#x9375;&#x6309;&#x4e0b",{"_index":5166,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x7684;&#x5e38;&#x6578;&#x7684;&#x8868;&#x793a;&#x6cd5;&#x4e5f;&#x548c",{"_index":3658,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x7684;&#x5f15;&#x7528",{"_index":2751,"title":{"java/encapsulation.html#Package-的引用":{}},"body":{}}],["x7684;&#x5f62;&#x5f0f;&#x4f86;&#x9054;&#x6210",{"_index":3818,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x7684;&#x5f62;&#x5f0f;&#x9054;&#x6210;&#x4e0a;&#x8ff0;&#x76ee;&#x6a19",{"_index":3797,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x7684;&#x6027;&#x8cea;&#xff0c;&#x56e0;&#x6b64;&#x4f7f;&#x7528;&#x9019;&#x4e9b;&#x8b8a;&#x6578;&#x6642;&#xff0c;&#x5fc5;&#x9808;&#x52a0;&#x4e0a",{"_index":3303,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x7684;&#x60c5;&#x6cc1",{"_index":1338,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x7684;&#x60c5;&#x6cc1;&#x4e0b;&#xff0c;&#x7236;&#x985e;&#x5225;&#x7684",{"_index":3110,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x7684;&#x60c5;&#x6cc1;&#xff0c;&#x56b4;&#x683c;&#x8aaa;&#x8d77;&#x4f86;&#x4e5f;&#x662f;&#x4e00;&#x7a2e;&#x932f;&#x8aa4;&#xff0c;&#x67d0;&#x4e9b;&#x7cfb;&#x7d71;&#x4e5f;&#x6703;&#x7522;&#x751f",{"_index":2907,"title":{},"body":{"java/exception.html#簡介":{}}}],["x7684;&#x610f;&#x601d;&#x3002;&#x56e0;&#x70ba;&#x9019;&#x7a2e;&#x8868;&#x9054;&#x6cd5;&#x7684;&#x5c0f;&#x6578;&#x9ede;&#x4e0d;&#x6703;&#x56fa;&#x5b9a;&#x653e;&#x5728;&#x500b;&#x4f4d;&#x6578;&#x5f8c;&#x9762;&#xff0c;&#x800c;&#x662f;&#x6703;&#x4f9d;&#x64da;&#x6240;&#x8981;&#x8868;&#x9054;&#x7684;&#x6578;&#x5b57;&#x5927;&#x5c0f;&#x800c",{"_index":725,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x7684;&#x61c9;&#x7528;&#x7a0b;&#x5f0f;&#x80fd;&#x6539;&#x7528",{"_index":5200,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x7684;&#x6240;&#x6709",{"_index":4755,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x7684;&#x6240;&#x6709;&#x7279;&#x6027;&#xff0c;&#x5b50;&#x985e;&#x5225;&#x9084;&#x53ef;&#x4ee5;&#x5b9a;&#x7fa9;&#x5176;&#x5c08;&#x5c6c;&#x7684;&#x7279;&#x6027;&#x3002",{"_index":1468,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x7684;&#x6280;&#x8853;&#x4e0d;&#x65b7;&#x9032;&#x6b65;&#xff0c;&#x8af8;&#x5982",{"_index":3550,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7684;&#x6392;&#x653e;&#x4f4d;&#x7f6e;&#xff0c;&#x53ef;&#x4ee5;&#x7528;&#x7d55;&#x5c0d;&#x5ea7;&#x6a19;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x900f;&#x904",{"_index":5156,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x7684;&#x6548;&#x679c",{"_index":4657,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x7684;&#x6578;&#x503c;&#x81ea;&#x52d5;&#x9078;&#x64c7;&#x4ee5",{"_index":236,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x7684;&#x6578;&#x5b57;&#x3002;&#x5176;&#x52a0;&#x6cd5;&#x8868;&#x548c;&#x4e58;&#x6cd5;&#x8868;&#x8acb;&#x81ea;&#x884c;&#x756b;&#x51fa;&#x3002;&#x4e8c;&#x9032;&#x4f4d;&#x548c;&#x5341;&#x516d;&#x9032;&#x4f4d;&#x9593;&#x5f88;&#x5bb9;&#x6613;&#x8f49;&#x63db",{"_index":530,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x7684;&#x6578;&#x5b57;&#xff0c;&#x5728",{"_index":693,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x7684;&#x65b9;&#x5f0f;&#x3002;&#x9019;&#x7a2e;&#x505a;&#x6cd5;&#x7684;&#x597d;&#x8655;&#x662f;&#x7d22;&#x5f15;&#x904b;&#x7b97;&#x901f;&#x5ea6;&#x5feb;&#xff0c;&#x751a;&#x81f3;&#x80fd;&#x7528",{"_index":1263,"title":{},"body":{"java/array.html#C-語言陣列回顧":{}}}],["x7684;&#x65b9;&#x6cd5;&#xff0c;&#x6210;&#x70ba",{"_index":1487,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x7684;&#x6642;&#x5019;&#x5f15;&#x8d77;&#x4e86;&#x6b64;&#x554f;&#x984c",{"_index":1324,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x7684;&#x6700;&#x5927;&#x516c;&#x56e0;&#x6578",{"_index":3864,"title":{},"body":{"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x7684;&#x67d0;&#x4e00;&#x500b",{"_index":4757,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x7684;&#x67d0;&#x500b",{"_index":2683,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x7684;&#x6a21;&#x677f;&#x6709;&#x6240;&#x4e0d;&#x540c;&#x3002",{"_index":3254,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x7684;&#x6a23;&#x5b50;&#x5982;&#x4e0b",{"_index":3810,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x7684;&#x6a5f;&#x5236;&#x898f;&#x7bc4;&#x5b58;&#x53d6",{"_index":4198,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x7684;&#x6a5f;&#x5236;&#xff0c;&#x6210;&#x70ba;&#x73fe;&#x5728;&#x7684;&#x6a23;&#x5b50;&#x3002",{"_index":5177,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x7684;&#x6a5f;&#x5236;&#xff0c;&#x6211;&#x5011;&#x5c07;&#x5728",{"_index":4227,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["x7684;&#x6a5f;&#x5236;&#xff1a",{"_index":4731,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x7684;&#x6a5f;&#x6703;&#x6bd4;&#x8f03;&#x9ad8;&#xff0c;&#x4f46;&#x512a;&#x5148;&#x6b0a;&#x4f4e;&#x7684;&#x4e5f;&#x90fd;&#x6703;&#x6709;&#x6a5f;&#x6703;&#x57f7;&#x884c;&#x5230;&#x3002;&#x5176;&#x4ed6;&#x6709;&#x95dc",{"_index":4647,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x7684;&#x6a94;&#x6848;&#x3002;&#x8981;&#x5c07;&#x6578;&#x500b",{"_index":995,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x7684;&#x6a94;&#x6848;&#x662f;&#x5426;&#x76f8;&#x5bb9;&#xff0c;&#x4e5f;&#x662f;&#x7a0b;&#x5f0f;&#x80fd;&#x5426;&#x5728;&#x65b0;&#x6a5f;&#x5668;&#x4e0a;&#x9806;&#x5229;&#x7de8;&#x8b6f;&#x548c;&#x57f7;&#x884c;&#x7684;&#x689d;&#x4ef6;&#x4e4b;&#x4e00;&#x3002",{"_index":3525,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7684;&#x6bcf;&#x4e00;&#x500b",{"_index":697,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x7684;&#x6bcf;&#x4e00;&#x500b;&#x6578;&#x5b57;&#x4e00;&#x6b21",{"_index":3796,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x7684;&#x6bcf;&#x4e00;&#x500b;&#x6578;&#x5b57;&#x4e00;&#x6b21;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x5f9",{"_index":3800,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x7684;&#x6ce8;&#x610f;&#x4e8b;&#x9805",{"_index":3155,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x7684;&#x6d41;&#x7a0b;&#x63a7;&#x5236;&#x6558;&#x8ff0;&#x548c",{"_index":3711,"title":{},"body":{"java/java-vs-c.html#流程控制敘述":{}}}],["x7684;&#x7269;&#x4ef6;&#xff0c",{"_index":3646,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7684;&#x7269;&#x4ef6;&#xff0c;&#x53ea;&#x80fd",{"_index":3328,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x7684;&#x7279;&#x6027;&#xff0c;&#x9019;&#x4e9b;&#x7279;&#x6027;&#x53ef;&#x5206;&#x985e;&#x5982;&#x4e0b",{"_index":1473,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x7684;&#x7279;&#x6b8a;&#x4e4b;&#x8655",{"_index":690,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x7684;&#x72c0;&#x614b",{"_index":4598,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x7684;&#x7368;&#x7acb;&#x8996;&#x7a97;)&#x3001",{"_index":5225,"title":{},"body":{"java/gui.html#AWT":{}}}],["x7684;&#x7522;&#x751f;&#x6642;&#x9593;&#x662f;&#x4e0d;&#x884c;&#x7684;&#x3002;&#x6700;&#x7c21;&#x55ae;&#x7684;&#x65b9;&#x6cd5;&#x5c31;&#x662f;&#x5728",{"_index":2811,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x7684;&#x7522;&#x751f;&#x6642;&#x9593;&#xff0c;&#x5982;&#x679c",{"_index":2827,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x7684;&#x7528;&#x6cd5;&#x4e5f;&#x884c;&#x3002;&#x552f;&#x4e00;&#x7684;&#x4f8b;&#x5916;&#x662f",{"_index":2964,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x7684;&#x76ee;&#x7684;&#x78bc;&#x3002;virtu",{"_index":3539,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7684;&#x76f8;&#x95dc;&#x65b9;&#x6cd5",{"_index":2977,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x7684;&#x7a0b;&#x5f0f;&#x53ea;&#x8981;&#x628a",{"_index":5207,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x7684;&#x7a0b;&#x5f0f;&#x5eab",{"_index":5192,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x7684;&#x7a0b;&#x5f0f;&#x5eab;&#xff0c;&#x9700;&#x8981;&#x900f;&#x904",{"_index":1628,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x7684;&#x7a0b;&#x5f0f;&#x5eab;&#xff0c;awt",{"_index":5201,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x7684;&#x7b2c;&#x4e00;&#x500b;&#x53c3;&#x6578;&#x662f;&#x4e00;&#x500b;&#x5b57;&#x4e32;&#xff0c;&#x5b57;&#x4e32;&#x5167;&#x4ee5",{"_index":195,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x7684;&#x7b2c;&#x4e00;&#x884c;&#x4f7f;&#x7528;&#x95dc;&#x9375;&#x5b57",{"_index":3188,"title":{},"body":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["x7684;&#x7b2c;&#x4e94;&#x884c;&#x7522;&#x751f;&#x932f;&#x8aa4",{"_index":1327,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x7684;&#x7bc4;&#x4f8b;&#x5c31;&#x53ef;&#x4ee5;&#x5beb;&#x6210;&#xff1a",{"_index":4765,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x7684;&#x7bc4;&#x4f8b;&#xff0c;&#x4ee5;&#x8aaa;&#x660e;&#x5169;&#x8005;&#x9593;&#x7684;&#x76f8;&#x4f3c;&#x6027;&#x3002",{"_index":5216,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x7684;&#x7bc4;&#x570d;&#xff0c;&#x56e0;&#x6b64",{"_index":4199,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x7684;&#x7d50;&#x69cb;&#x3002",{"_index":2928,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x7684;&#x7de8;&#x78bc",{"_index":573,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x7684;&#x7de8;&#x78bc;&#x65b9;&#x5f0f",{"_index":568,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x7684;&#x7e3d;&#x5408",{"_index":3766,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["x7684;&#x7e3d;&#x5408;&#x3002;&#x89e3;&#x6790;&#xff1a",{"_index":3794,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x7684;&#x7e3d;&#x548c",{"_index":3775,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["x7684;&#x7e3d;&#x548c;&#xff0c;&#x7a31;&#x6b64;&#x8b8a;&#x6578;&#x70ba",{"_index":3785,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x7684;&#x7e7c;&#x627f",{"_index":3263,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x7684;&#x7f3a;&#x9ede;&#x4e4b;&#x4e00;&#xff0c;&#x662f;&#x57f7;&#x884c;&#x7684;&#x901f;&#x5ea6;&#x8f03;&#x6162;&#xff0c;&#x4ee3;&#x50f9;&#x662f;&#x958b;&#x767c;&#x7684;&#x901f;&#x5ea6;&#x8b8a;&#x5feb;&#x4e86;&#x3002;&#x4ee5;&#x73fe;&#x5728;&#x7684;&#x786c;&#x9ad4;&#x4f86;&#x8aaa;&#xff0c;&#x5927;&#x90e8;&#x5206;&#x61c9;&#x7528;&#x7a0b;&#x5f0f;&#x7684;&#x57f7;&#x884c;&#x901f;&#x5ea6;&#x5df2;&#x7d93;&#x6c92;&#x6709;&#x90a3;&#x9ebc;&#x91cd;&#x8981;&#xff0c;&#x53cd;&#x5012;&#x662f;&#x8edf;&#x9ad4;&#x7684;&#x958b;&#x767c;&#x901f;&#x5ea6;&#x548c;&#x54c1;&#x8cea;&#x8d8a;&#x4f86;&#x8d8a;&#x503c;&#x5f97;&#x91cd;&#x8996;&#x3002",{"_index":3548,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7684;&#x898f;&#x5247;&#x5916;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x6307;&#x5b9a",{"_index":3610,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7684;&#x89c0;&#x5ff5;&#x3002",{"_index":3251,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x7684;&#x89c0;&#x5ff5;&#xff0c;&#x7576;&#x7cfb;&#x7d71;&#x65bc;&#x9592;&#x7f6e;&#x671f;&#x9593;&#x81ea;&#x52d5;&#x547c;&#x53eb;&#x6216;&#x7531;&#x4f7f;&#x7528;&#x8005;&#x5f37;&#x5236;&#x547c;&#x53eb",{"_index":1568,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x7684;&#x89e3;&#x6c7a;&#x8fa6;&#x6cd5;&#x662f;&#xff0c;jvm",{"_index":4712,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x7684;&#x8a2d;&#x8a08;&#x8005;&#x53ef;&#x4ee5;&#x6307;&#x5b9a;&#x5176;&#x4ed6;&#x7684",{"_index":2681,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x7684;&#x8a71;&#xff0c;&#x5247;&#x4e0a;&#x9762;&#x7684;&#x7bc4;&#x4f8b;&#x5c31;&#x5f97;&#x5beb;&#x6210;&#x4e0b;&#x9762;&#x7684;&#x5f62;&#x5f0f;&#x624d;&#x884c",{"_index":3172,"title":{},"body":{"java/extends.html#本章觀念整理範例":{}}}],["x7684;&#x8a71;&#xff0c;&#x53ea;&#x6703;&#x8df3;&#x51fa;&#x88e1;&#x9762;&#x7684;&#x8ff4;&#x5708;&#xff0c;&#x7136;&#x5f8c",{"_index":3721,"title":{},"body":{"java/java-vs-c.html#流程控制敘述":{}}}],["x7684;&#x8a71;&#xff0c;&#x5982;&#x4e0b;&#x9762;&#x9019;&#x5169;&#x500b",{"_index":2707,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x7684;&#x8a73;&#x7d30;&#x8aaa;&#x660e;&#xff0c;&#x8acb;&#x898b",{"_index":3292,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x7684;&#x8a9e;&#x6cd5",{"_index":2926,"title":{"java/interface.html#Java-有關-Interface-的語法":{},"java/message-passing.html#Message-Passing-的語法":{}},"body":{"java/exception.html#相關語法":{}}}],["x7684;&#x8a9e;&#x6cd5;&#x3002",{"_index":2962,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x7684;&#x8a9e;&#x6cd5;&#x53ef;&#x4ee5;&#x9396;&#x5b9a",{"_index":4720,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x7684;&#x8a9e;&#x6cd5;&#x662f",{"_index":1536,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{},"java/java-vs-c.html#資料型別":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["x7684;&#x8aaa;&#x660e;&#x53ef;&#x4ee5;&#x8df3;&#x904e;&#x3002",{"_index":979,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x7684;&#x8b8a;&#x5316;&#x5982;&#x4e0b;&#xff1a",{"_index":1609,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x7684;&#x8b8a;&#x6578;&#x4e5f;&#x53ef;&#x4ee5;&#x7528",{"_index":3619,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7684;&#x8b8a;&#x6578;&#xff0c;&#x7a31;&#x70ba",{"_index":1485,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x7684;&#x8b8a;&#x6578;&#xff0c;&#x9019;&#x8868;&#x793a;&#x6211;&#x5011;&#x53ef;&#x900f;&#x904",{"_index":3632,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7684;&#x8ca0;&#x6578;&#x5247;&#x5b9a;&#x7fa9;&#x70ba",{"_index":672,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x7684;&#x8ca0;&#x6578;&#x662f;&#x4ee5",{"_index":649,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x7684;&#x8cc7;&#x6599;&#x578b;&#x614b;&#x88e1;&#x6c92;&#x6709",{"_index":3601,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7684;&#x901f;&#x5ea6;&#x57f7;&#x884c;&#x3002;&#x56e0;&#x6b64;&#x4e0d;&#x8981;&#x56e0;&#x70ba;&#x67d0;&#x4e9b;&#x504f;&#x9817;&#x7684;&#x5831;&#x544a;&#x6216;&#x76f4;&#x89ba;&#xff0c;&#x5c31;&#x4e0d;&#x4f7f;&#x7528",{"_index":3554,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7684;&#x904b;&#x7b97",{"_index":683,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x7684;&#x90e8;&#x5206;&#x662f;&#x5426;&#x7b26;&#x5408",{"_index":2756,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x7684;&#x91cd;&#x9ede;&#x5982;&#x4e0b",{"_index":4600,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x7684;&#x932f;&#x8aa4;&#xff0c;&#x6b64;&#x6642;&#x4f60;&#x53ef;&#x8f38;&#x5165",{"_index":986,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x7684;&#x958b;&#x767c;&#x74b0;&#x5883;&#x3002;&#x56e0;&#x70ba",{"_index":1000,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x7684;&#x9663;&#x5217;&#x4e26;&#x4e0d;&#x4ee5;&#x4e00;&#x584a;&#x9023;&#x7e8c;&#x7684;&#x8a18;&#x61b6;&#x9ad4;&#x7a7a;&#x9593;&#x4f86;&#x8868;&#x9054;&#xff0c;&#x800c;&#x662f;&#x628a;&#x9663;&#x5217;&#x8996;&#x70ba;&#x7279;&#x6b8a;&#x7684;&#x7269;&#x4ef6;&#x3002;&#x6b64;&#x7269;&#x4ef6;&#x4e0d;&#x4f46;&#x53ef;&#x5b58;&#x653e;&#x8cc7;&#x6599;&#xff0c;&#x9084;&#x5229;&#x7528",{"_index":1277,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x7684;&#x985e;&#x5225;&#xff0c;&#x5982;&#x679c;&#x8981;&#x4e00;&#x500b;&#x4e00;&#x500b",{"_index":2768,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x76ee;&#x524d",{"_index":4597,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x76ee;&#x524d;&#x6700;&#x4e0a;&#x9762;&#x7684;&#x70ba",{"_index":952,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x76ee;&#x524d;&#x9019;&#x6279;&#x7684;reader&#x90fd;&#x8b80;&#x5b8c;&#x4e86;,&#x627e;&#x4e0b;&#x4e00;&#x500b;writ",{"_index":4794,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x76ee;&#x524d;&#x9019;&#x6279;&#x9084;&#x6c92;&#x5b8c;,&#x6216;&#x6709;thread&#x6b63;&#x5728;&#x5beb",{"_index":4795,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x76ee;&#x7684;&#x78bc;&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x4e86;&#x3002;&#x7576;&#x7136;&#x8981;&#x9054;&#x5230;&#x5b8c;&#x5168;&#x4e0d;&#x7528;&#x91cd;&#x65b0",{"_index":3543,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x76ee;&#x9304",{"_index":1079,"title":{},"body":{"c/writing-intro.html#文章的組成":{}}}],["x76ee;&#x9304;&#x4e0b;&#x7684",{"_index":2735,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x76ee;&#x9304;&#x5167;&#x3002;java",{"_index":2736,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x76f4;&#x5370",{"_index":2502,"title":{},"body":{"java/easy-print.html#PrintCanvas-java":{}}}],["x76f8;&#x540c;&#x51fd;&#x6578;&#x540d;&#x7a31;&#xff1a;&#x5982;&#x679c",{"_index":3306,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x76f8;&#x540c;&#x8b8a;&#x6578;&#x540d;&#x7a31;&#xff1a;&#x7531;&#x65bc",{"_index":3301,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x76f8;&#x540c;&#xff0c;&#x800c",{"_index":3659,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x76f8;&#x5bb9",{"_index":3678,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x76f8;&#x5c0d;&#x61c9;&#x7684;&#x662f",{"_index":5264,"title":{},"body":{"java/gui.html#AWT":{}}}],["x76f8;&#x95dc;&#x53c3;&#x6578;&#x5982;&#x4e0b",{"_index":215,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x76f8;&#x95dc;&#x7684;&#x904b;&#x7b97;&#x7b26;&#x865f;&#x5916;&#xff0c;&#x53e6;&#x5916;&#x65b0;&#x589e;&#x4e86",{"_index":3654,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x76f8;&#x95dc;&#x8a9e;&#x6cd5",{"_index":2911,"title":{"java/exception.html#相關語法":{}},"body":{}}],["x773c;&#x5c16;&#x7684;&#x8b80;&#x8005;&#x6703;&#x767c;&#x73fe;&#x6211;&#x5011;&#x4e26;&#x6c92;&#x6709",{"_index":2774,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x786c;&#x9ad4;&#x5143;&#x4ef6",{"_index":454,"title":{"c/system-intro.html#硬體元件":{}},"body":{}}],["x78b0;&#x5230",{"_index":3730,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x78b0;&#x5de7;&#x90fd;&#x5b9a;&#x7fa9;&#x4e86;&#x540c;&#x540d;&#x7684",{"_index":2791,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x78ba;&#x5b9a",{"_index":2491,"title":{},"body":{"java/easy-print.html#Print-java":{},"java/gui.html#井字遊戲":{}}}],["x79d1;&#x5b78;&#x8868;&#x793a;&#x6cd5;&#x6d6e;&#x9ede;&#x6578",{"_index":232,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x7a0b;&#x5f0f;&#x3002;&#x9019;&#x985e;&#x8996;&#x89ba;&#x5316;&#x7684;&#x958b;&#x767c;&#x5de5;&#x5177",{"_index":1004,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x7a0b;&#x5f0f;&#x4e2d;&#x53ef;&#x67e5;&#x5230;&#x8c61;&#x68cb;&#x4e2d;&#x7684;&#x7d05;&#x8eca;&#x7684",{"_index":3614,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7a0b;&#x5f0f;&#x4ee5;&#x975e;&#x5e38;&#x63a5;&#x8fd1;&#x539f;&#x751f;&#x78bc",{"_index":3553,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7a0b;&#x5f0f;&#x505c;&#x6b62;&#x57f7;&#x884c",{"_index":906,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7a0b;&#x5f0f;&#x53ef;&#x4ee5;&#x7528;&#x4efb;&#x610f;&#x7684;&#x683c;&#x5f0f;&#x4f86;&#x5132;&#x5b58;&#x548c;&#x8655;&#x7406;&#x8cc7;&#x6599;&#xff0c;&#x9019;&#x6a23;&#x7684;&#x683c;&#x5f0f;&#x6211;&#x5011;&#x7a31;&#x70ba;&#x5c08;&#x5c6c;&#x683c;&#x5f0f;&#x3002;&#x4f46;&#x70ba;&#x4e86;&#x4fbf;&#x65bc;&#x5728;&#x4e0d;&#x540c;&#x7684;&#x786c;&#x9ad4;&#x548c;&#x8edf;&#x9ad4;&#x5e73;&#x53f0;&#x9593;&#x4ea4;&#x63db;&#x8cc7;&#x6599;&#xff0c;&#x6211;&#x5011;&#x5fc5;&#x9808;&#x7528;&#x6a19;&#x6e96;&#x7684;&#x683c;&#x5f0f;&#x4f86;&#x8868;&#x793a;&#x8cc7;&#x6599;&#x3002;&#x6a19;&#x6e96;&#x683c;&#x5f0f;&#x901a;&#x5e38;&#x662f;&#x7531;&#x570b;&#x969b;&#x6a19;&#x6e96;&#x7d44;&#x7e54;&#x8a02;&#x5b9a;&#xff0c;&#x6216;&#x56e0;&#x67d0;&#x985e;&#x8edf;&#x9ad4;&#x5ee3;&#x70ba;&#x6d41;&#x884c;&#x800c;&#x5f8c;&#x6210;&#x70ba;&#x6a19;&#x6e96;&#x3002;&#x5e38;&#x898b;&#x7684;&#x8cc7;&#x6599;&#x578b;&#x614b;&#x548c;&#x6a19;&#x6e96;&#x5982;&#x4e0b;&#x8868;&#xff1a",{"_index":553,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x7a0b;&#x5f0f;&#x6642;&#xff0c;&#x8acb;&#x6ce8;&#x610f;&#x4e0b;&#x5217;&#x5e7e;&#x7a2e;&#x98a8;&#x683c",{"_index":3747,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["x7a0b;&#x5f0f;&#x79fb;&#x690d;&#x5230",{"_index":3531,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7a0b;&#x5f0f;&#x79fb;&#x690d;&#x5230;&#x4e0d;&#x540c;&#x7684;&#x786c;&#x9ad4;&#x6642;&#xff0c;&#x5fc5;&#x9808;&#x8981;&#x91cd;&#x65b0",{"_index":3523,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7a0b;&#x5f0f;&#x80fd;&#x5426;&#x6b63;&#x78ba;&#x57f7;&#x884c;&#x8981;&#x9760;&#x547c;&#x53eb;&#x6b63;&#x78ba;&#x7684;start&#x548c;stop",{"_index":4774,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x7a0b;&#x5f0f;&#x80fd;&#x5728;&#x4e0d;&#x540c;&#x7684",{"_index":3527,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7a0b;&#x5f0f;&#x8a9e;&#x8a00",{"_index":1096,"title":{"c/writing-intro.html#程式語言":{},"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}},"body":{}}],["x7a0d;&#x5fae;&#x56b4;&#x683c;&#x4e00;&#x9ede;&#xff0c;&#x4e0b;&#x5217;&#x5de6;&#x908a;&#x7684;&#x90e8;&#x5206;&#x90fd;&#x53ef;&#x4ee5;&#x6307;&#x5b9a",{"_index":3604,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7a2e;&#x985",{"_index":3706,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x7a31;&#x70ba",{"_index":642,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{},"c/system-intro.html#浮點數表示法":{}}}],["x7a7a;&#x6389;&#x6216;&#x7206;&#x6389;&#x7684;&#x60c5;&#x6cc1;&#x4e26;&#x4e0d;&#x5408;&#x9069;&#xff0c;&#x56e0;&#x70ba;&#x4f7f;&#x7528",{"_index":4739,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x7ae0",{"_index":1080,"title":{},"body":{"c/writing-intro.html#文章的組成":{}}}],["x7aef;&#x548c",{"_index":2834,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x7aef;&#x7684;&#x9032;&#x5165;&#x9ede;&#x6703;&#x4e0d;&#x4e00;&#x6a23;&#xff0c;&#x53ea;&#x8981;&#x5beb;&#x500b;&#x6279;&#x6b21;&#x6a94;&#x7de8;&#x8b6f;&#x76f8;&#x95dc;&#x9032;&#x5165;&#x9ede;&#x7684",{"_index":2835,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x7b26;&#x865f;&#x67d0;&#x4e00;&#x908a;&#x7684;&#x578b;&#x614b;&#x662f",{"_index":3731,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x7b26;&#x865f;&#x7684;&#x8a9e;&#x6cd5;&#xff0c;&#x5343;&#x842c;&#x4e0d;&#x8981;&#x4ee5;&#x70ba",{"_index":3739,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x7b2c",{"_index":625,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x7b2c;&#x4e00;&#x500b",{"_index":4619,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x7b2c;&#x4e00;&#x6b21;&#x88ab;&#x4f7f;&#x7528;&#x5230;&#x6642;&#xff0c;&#x624d;&#x6703;&#x4e0b;&#x8f09;&#x76f8;&#x95dc;&#x8edf;&#x9ad4;&#xff0c;&#x4ee5;&#x7bc0;&#x7701;&#x8a18;&#x61b6;&#x9ad4;&#x7a7a;&#x9593;&#xff0c;&#x907f;&#x514d;&#x91cd;&#x8907;&#x4e0b;&#x8f09;&#xff0c;&#x4e26;&#x53ef;&#x4ee5;&#x628a;&#x5be6;&#x4f5c;&#x7684;&#x7d30;&#x7bc0;&#x548c;&#x5916;&#x754c;&#x9694;&#x96e2;&#x958b;&#x4f86;&#x3002;&#x5c0d;&#x6c92;&#x6709;&#x9019;&#x7a2e;&#x6a5f;&#x5236;&#x7684",{"_index":1630,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x7b2c;&#x4e00;&#x884c;&#x7684;&#x5169;&#x500b;**&#x7528;&#x4f86;&#x544a;&#x8a34;javadoc&#x6b64;&#x90e8;&#x4efd;&#x8a3b;&#x89e3;&#x8981;&#x8b8a;&#x6210;html&#x6587;&#x4ef6;&#x7684;&#x4e00;&#x90e8;&#x4efd",{"_index":3754,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["x7b2c;&#x4e8c;&#x65b0;&#x7684;&#x5c31;&#x662f;&#x539f;&#x5148;&#x7684;fn_1",{"_index":3854,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x7b2c;i&#x5217;&#x6709;size&#x500b",{"_index":3821,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x7b2c;i&#x5217;,&#x7b2c;j&#x884c",{"_index":3819,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x7b49;&#x3002;&#x5e38;&#x898b;&#x7684;&#x8f38;&#x51fa;&#x5143;&#x4ef6;&#x6709;&#x87a2;&#x5e55;&#x3001;&#x5370;&#x8868;&#x6a5f;&#x3001;&#x5587;&#x53ed;&#x7b49;&#x3002;&#x53ef;&#x540c;&#x6642;&#x505a;&#x8f38;&#x5165;&#x8f38;&#x51fa;&#x7684;&#x5143;&#x4ef6;&#x6709;&#x78c1;&#x789f;&#x6a5f;&#x3001;&#x78c1;&#x5e36;&#x6a5f;&#x7b49;&#x5132;&#x5b58;&#x5a92;&#x4ecb;&#x53ca;&#x7db2;&#x8def;&#x5361;&#x7b49;&#x3002;cpu&#x3001;ram",{"_index":472,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x7b49;&#x529f;&#x80fd;&#xff0c;&#x56e0;&#x6b64;&#x9019;&#x985e;&#x5de5;&#x5177;&#x53c8;&#x7a31;&#x70ba",{"_index":1009,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x7b49;&#x56db;&#x7a2e",{"_index":956,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x7b49;&#x5b50;&#x985e;&#x5225",{"_index":5228,"title":{},"body":{"java/gui.html#AWT":{}}}],["x7b49;&#x5f85;t1&#x7d50;&#x675f",{"_index":4660,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x7b49;&#x5f85;t2&#x7d50;&#x675f",{"_index":4661,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x7b49;&#x6280;&#x8853;&#x90fd;&#x53ef;&#x4ee5;&#x8b93",{"_index":3552,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7b49;&#x64cd;&#x4f5c",{"_index":5160,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x7b49;&#x65bc",{"_index":498,"title":{},"body":{"c/system-intro.html#數字系統":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["x7b49;&#x6700;&#x4e0a;&#x5c64;&#x7684",{"_index":5211,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x7b49;&#x7b49;&#x3002",{"_index":5194,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x7b49;&#x904b;&#x7b97;&#x7b26;&#x865f;&#xff0c;&#x800c;&#x4e14",{"_index":3628,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7b49;&#x90e8;&#x4efd;&#x3002;&#x66ab;&#x5b58;&#x5668;&#x662f",{"_index":462,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x7b49;)&#x4e5f;&#x9700;&#x8981;&#x4e00;&#x8d77;&#x7d00;&#x9304;&#x3002",{"_index":4594,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x7b97;&#x6578;&#x904b;&#x7b97",{"_index":859,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7b97;&#x662f;&#x5f88;&#x8907;&#x96dc;&#x7684;&#x7a0b;&#x5f0f;&#x8a9e;&#x8a00;&#x3002;java",{"_index":3587,"title":{},"body":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}}}],["x7b97;&#x8853",{"_index":3663,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x7bc0",{"_index":1082,"title":{},"body":{"c/writing-intro.html#文章的組成":{}}}],["x7bc4;&#x4f8b",{"_index":1110,"title":{"c/writing-intro.html#範例":{},"java/exception.html#範例":{},"java/io.html#範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{}},"body":{}}],["x7bc4;&#x4f8b;&#x7a0b;&#x5f0f",{"_index":1686,"title":{"java/container.html#範例程式":{}},"body":{}}],["x7bc4;&#x570d",{"_index":3600,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7c21;&#x4ecb",{"_index":2887,"title":{"java/exception.html#簡介":{},"java/gui.html#GUI-簡介":{}},"body":{}}],["x7c21;&#x5316;&#x4f86;&#x7684;&#x3002;&#x7531;&#x65bc",{"_index":3584,"title":{},"body":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}}}],["x7c21;&#x7a31;&#x3002;&#x4f46;&#x662f;&#x5982;&#x679c;&#x6211;&#x5011",{"_index":2788,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x7cfb;&#x5217",{"_index":854,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7cfb;&#x6240",{"_index":2526,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x7cfb;&#x6240;&#x5225",{"_index":2574,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x7d00;&#x9304;&#x5230;&#x76ee;&#x524d;&#x70ba;&#x6b62;&#x7684;&#x7e3d;&#x548c",{"_index":3799,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x7d00;&#x9304;&#x6700;&#x8fd1;&#x627e;&#x5230;&#x7684;&#x5169;&#x500b;&#x8cbb;&#x6c0f;&#x6578",{"_index":3850,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x7d00;&#x9304;&#x76ee;&#x524d;&#x8981;&#x6c42;&#x7684;&#x662f;&#x54ea;&#x4e00;&#x500b;&#x8cbb;&#x6c0f;&#x6578",{"_index":3848,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x7d04;&#x7b49;&#x65bc",{"_index":506,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x7d22;&#x5f15",{"_index":1086,"title":{},"body":{"c/writing-intro.html#文章的組成":{}}}],["x7d30;&#x660e;&#x9ad4",{"_index":5287,"title":{},"body":{"java/gui.html#文字編輯器":{}}}],["x7d50;&#x5408;&#x9806;&#x5e8f",{"_index":3707,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x7d50;&#x5c3e;&#x7684;&#x5b57;&#x5143;&#x9663;&#x5217;&#x5c31;&#x662f;&#x5b57;&#x4e32;&#x3002;&#x4f46;&#x5c0d",{"_index":3726,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x7d50;&#x5c3e;&#x7684;&#x9663;&#x5217;&#x4f86;&#x8868;&#x9054;&#x3002",{"_index":1275,"title":{},"body":{"java/array.html#C-語言陣列回顧":{}}}],["x7d50;&#x675f",{"_index":5268,"title":{},"body":{"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["x7d50;&#x675f;&#x5b78;&#x865f",{"_index":2530,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x7d50;&#x675f;&#x5f8c;&#xff0c;&#x624d;&#x80fd;&#x7e7c;&#x7e8c;&#x57f7;&#x884c",{"_index":4655,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x7d50;&#x675f;&#x6642;&#xff0c;&#x9019;&#x500b",{"_index":4628,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x7d50;&#x675f;&#x6709;&#x76f8;&#x540c;&#x7684;&#x6548;&#x679c;&#x3002;&#x5176;&#x7528;&#x6cd5;&#x4ee5;&#x4e0b;&#x9762;&#x7bc4;&#x4f8b;&#x8aaa;&#x660e;&#xff1a",{"_index":4630,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x7d50;&#x675f;&#x7a0b;&#x5f0f",{"_index":948,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x7d50;&#x69cb;&#x7684;&#x7bc4;&#x4f8b;&#xff1a",{"_index":4726,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x7d66;&#x53f3;&#x908a;&#x7684;&#x578b;&#x5225",{"_index":3605,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7d66;&#x865f;&#x4f9d;&#x5e8f;&#x57f7;&#x884c",{"_index":4797,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x7d93;&#x904e;&#xff1a",{"_index":3564,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7d9c;&#x5408;&#x4ee5;&#x4e0a;&#x6240;&#x8ff0;&#xff0c;&#x53ef;&#x5217;&#x51fa;&#x4ee5;&#x4e0b;&#x5e7e;&#x9ede;&#x7279;&#x5fb5",{"_index":3331,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x7db2;&#x8def;&#x8f38;&#x5165;&#x6210;&#x7e3e;,&#x5c1a;&#x672a;&#x81f4;&#x9001;&#x6559;&#x52d9;&#x8655",{"_index":2548,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x7de8;&#x78bc;&#x3002;&#x4e0d;&#x904",{"_index":578,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x7de8;&#x78bc;&#x70ba",{"_index":3615,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7de8;&#x78bc;&#x7d66",{"_index":3611,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x7de8;&#x8b6f",{"_index":967,"title":{},"body":{"c/system-operation.html#Software-development-process":{},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x7de8;&#x8b6f;&#x51fa;&#x4f86;&#x7684;&#x57f7;&#x884c;&#x6a94;&#x53eb;&#x505a",{"_index":988,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x7de8;&#x8b6f;&#x5b8c;&#x6210;&#x5f8c;&#x6703;&#x7522;&#x751f",{"_index":3565,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7de8;&#x8b6f;&#x6210",{"_index":3520,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x7de8;&#x8b6f;&#x800c;&#x4f86",{"_index":2805,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x7e3d;&#x5171;&#x6709",{"_index":3803,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x7e3d;&#x5b78;&#x5206;&#x6578",{"_index":2565,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x7e7c;&#x627f",{"_index":3084,"title":{},"body":{"java/extends.html#基本觀念":{},"java/interface.html#為什麼-Java-提供-Interface":{},"java/interface.html#Abstract-Class-and-Method":{}}}],["x7e7c;&#x627f;&#x591a;&#x500b",{"_index":3294,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x7e7c;&#x627f;&#x7236;&#x985e;&#x5225",{"_index":1467,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x7e7c;&#x627f;&#x95dc;&#x4fc2;&#x4e0b;&#x7684",{"_index":3180,"title":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}},"body":{}}],["x7e7c;&#x7e8c;&#x505a;&#x4e0b;&#x53bb;&#x3002",{"_index":3723,"title":{},"body":{"java/java-vs-c.html#流程控制敘述":{}}}],["x7e7c;&#x7e8c;&#x57f7;&#x884c;&#x672a;&#x5b8c;&#x6210;&#x7684;&#x52d5;&#x4f5c;&#xff0c;&#x8acb;&#x554f;&#x9019;&#x5169;&#x500b;&#x8f49;&#x5e33;&#x52d5;&#x4f5c;&#x6b63;&#x78ba;&#x55ce;&#xff1f",{"_index":4682,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x7f3a;&#x8003;\\n&#x8a3b;",{"_index":2517,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x7f3a;&#x9ed",{"_index":3168,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x7ffb;&#x8b6f;&#x6210",{"_index":3733,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x7ffb;&#x8b6f;&#x6210;3&#x500b;&#x6a5f;&#x5668;&#x6307;&#x4ee4;load",{"_index":4674,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x8003;&#x91cf;&#x8af8;&#x5982;&#x4e0b;&#x9762;&#x7684;&#x591a;&#x91cd;&#x7e7c;&#x627f;&#x554f;&#x984c;&#xff0c;&#x9078;&#x64c7;&#x4e0d;&#x5f15;&#x9032",{"_index":3232,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x800c",{"_index":611,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["x800c;&#x4e14;&#x7531;&#x65bc",{"_index":5195,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x800c;&#x52a0;&#x6cd5;&#x53ea;&#x8981;&#x8a18;&#x5f97;&#x524d;&#x4e00;&#x5c0d;&#x6578;&#x5b57;&#x52a0;&#x8d77;&#x4f86;&#x6709;&#x6c92;&#x6709;&#x9032;&#x4f4d;&#x5373;&#x53ef;&#x3002;&#x6709;&#x4eba;&#x5c31;&#x60f3;&#x51fa;&#x4e00;&#x7a2e;&#x6578;&#x5b57;&#x7cfb;&#x7d71;&#xff0c;&#x53ef;&#x4ee5;&#x7528;&#x4e8c;&#x9032;&#x4f4d;&#x7684;&#x52a0;&#x6cd5;&#x53d6;&#x4ee3;&#x6e1b;&#x6cd5;&#xff0c;&#x8b93;&#x908f;&#x8f2f;&#x7dda;&#x8def;&#x8a2d;&#x8a08;&#x7c21;&#x55ae;&#xff0c;&#x8dd1;&#x8d77;&#x4f86;&#x53c8;&#x5feb;&#x7684;&#x3002",{"_index":605,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x800c;&#x5b50;&#x985e;&#x5225;&#x5b9a;&#x7fa9;&#x4e86;&#x7236;&#x985e;&#x5225;&#x5167;&#x7684",{"_index":3131,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["x800c;&#x9019;&#x5169;&#x500b",{"_index":2790,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x8072;&#x97f3",{"_index":561,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x80fd;&#x5426;&#x5b58;&#x53d6",{"_index":2682,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x80fd;&#x5920;&#x5ba3;&#x544a;&#x70ba",{"_index":1498,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x80fd;&#x900f;&#x904e",{"_index":4607,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x81ea",{"_index":5190,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x81ea;&#x52d5;&#x5c0b;&#x627e;&#x6700;&#x7279;&#x5b9a;&#x7684;&#x65b9;&#x6cd5",{"_index":3165,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x81ea;&#x52d5;&#x8655;&#x7406;&#xff0c;&#x4e0d;&#x7528;&#x7ba1;&#x4ed6",{"_index":5256,"title":{},"body":{"java/gui.html#AWT":{}}}],["x81ea;&#x5df1;&#x624d;&#x53ef;&#x4ee5;&#x5b58;&#x53d6;&#xff0c;&#x4f7f;&#x7528",{"_index":2687,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x81ea;&#x8a02",{"_index":2920,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x81f3;&#x65bc",{"_index":997,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x8207",{"_index":628,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x82e5",{"_index":982,"title":{},"body":{"c/system-operation.html#Software-development-process":{},"java/extends.html#基本觀念":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["x82e5;&#x5bb6;&#x9577;&#x6b04;&#x70ba;&#x7a7a;&#xff0c;&#x7528;&#x5b78;&#x751f;&#x540d",{"_index":2539,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x82e5;&#x66ab;&#x5b58;&#x5668;&#x7684;&#x5167;&#x5bb9",{"_index":890,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x82e5;&#x6709;&#x6ea2;&#x4f4d",{"_index":685,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x82e5;&#x6709;super,&#x5247;&#x5fc5;&#x9808;&#x653e;&#x5728;&#x7b2c;&#x4e00;&#x884c;,&#x9023;&#x8b8a;&#x6578;&#x5ba3;&#x544a;&#x4e5f;&#x4e0d;&#x80fd;&#x64fa;&#x5728;super&#x524d;&#x9762",{"_index":3190,"title":{},"body":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["x82e5;&#x7de8;&#x8b6f;&#x6210;&#x529f;&#xff0c;&#x6703;&#x7522;&#x751f",{"_index":994,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x83ef;&#x6c0f;&#x6eab;&#x5ea6;&#x8f49;&#x651d;&#x6c0f;&#x6eab;&#x5ea6",{"_index":3764,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["x86",{"_index":781,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{}}}],["x865b;&#x64ec;&#x6a5f;&#x5668;&#x7684;&#x6307;&#x4ee4;&#x7684;&#x683c;&#x5f0f;&#xff1a;&#x7531",{"_index":866,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x865b;&#x64ec;&#x6a5f;&#x5668;&#x7684;&#x6307;&#x4ee4;&#x96c6",{"_index":851,"title":{"c/system-operation.html#虛擬機器的指令集":{}},"body":{}}],["x865f;&#x5370;&#x51fa;&#x9019;&#x7a2e;&#x5f62;&#x72c0;&#x7684;&#x4e09;&#x89d2;&#x5f62;&#xff0c;&#x8a72;&#x600e;&#x9ebc;&#x5beb;&#xff1f;&#xff08;&#x8ff4;&#x5708;&#x7bc4;&#x4f8b;&#x88e1;&#x5df2;&#x7d93;&#x7df4;&#x7fd2;&#x904e;&#x4e86;&#xff09",{"_index":1345,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x865f;&#x69cb;&#x6210;&#x8907;&#x96dc;&#x7684",{"_index":2732,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x865f;&#x7684;&#x8a71;&#x600e;&#x9ebc;&#x8fa6;&#xff0c;&#x90a3;&#x5c31;&#x7528",{"_index":213,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x87a2;&#x5e55;&#x4e0a;&#x7684;&#x6e38;&#x6a19;&#x53ea;&#x80fd;&#x7531;&#x4e0a;&#x800c;&#x4e0b;&#xff0c;&#x7531;&#x5de6;&#x800c;&#x53f3;&#xff0c;&#x7121;&#x6cd5;&#x56de;&#x982d;&#x3002",{"_index":3812,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x884c;&#x5143;&#x7d20;&#x4f86;&#x8aaa;&#xff0c;&#x5176;&#x6578;&#x503c;&#x70ba",{"_index":3807,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x884c;&#x7684",{"_index":938,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x884c;&#xff0c;&#x5c0d;&#x7b2c",{"_index":3805,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x8868;&#x793a",{"_index":205,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{},"c/system-intro.html#浮點數表示法":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["x8868;&#x793a;&#x4e0d;&#x53ef;&#x88ab",{"_index":3179,"title":{},"body":{"java/extends.html#final-修飾字":{}}}],["x8868;&#x793a;&#x53f3;&#x5207;&#x9f4a;&#x6700;&#x5c11;&#x5370",{"_index":225,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x8868;&#x793a;&#x5b57;&#x4e32;&#xff0c",{"_index":204,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x8868;&#x793a;&#x5b57;&#x5143;&#xff0c",{"_index":203,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x8868;&#x793a;&#x5de6;&#x5207;&#x9f4a;&#x6700;&#x5c11;&#x5370",{"_index":222,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x8868;&#x793a;&#x63a5;&#x6536;&#x5230;&#x6b64;&#x8a0a;&#x606f;&#x7684;&#x7269;&#x4ef6;&#x3002;&#x7531;&#x65bc;&#x8a2d;&#x8a08;&#x6642;&#x662f;&#x5b9a;&#x7fa9",{"_index":4218,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["x8868;&#x793a;&#x63db;&#x884c;&#x5b57;&#x5143;&#x3002;&#x5982;&#x679c;&#x6211;&#x5011;&#x8981;&#x5370;&#x51fa;&#x8b8a;&#x6578;&#x7684;&#x5167;&#x5bb9;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x5982;&#x4e0b;&#x7684;&#x5f62;&#x5f0f",{"_index":193,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x8868;&#x793a;&#x6700;&#x5c11",{"_index":207,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x8868;&#x793a;&#x6700;&#x8fd1;&#x5169;&#x500b;&#x627e;&#x51fa;&#x7684;&#x8cbb;&#x6c0f;&#x6578",{"_index":3843,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x8868;&#x793a;&#x6cd5;&#xff0c;&#x5373;&#x7bc4;&#x570d;&#x70ba",{"_index":750,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x8868;&#x793a;&#x6d6e;&#x9ede;&#x6578",{"_index":201,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x8868;&#x793a;&#x76ee;&#x524d;&#x7684;&#x7269;&#x4ef6;&#x3002;&#x4f46;&#x5728",{"_index":1541,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x8868;&#x793a;&#x7bc4;&#x570d;&#x8d85;&#x904",{"_index":762,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x8868;&#x793a;&#x8a72",{"_index":4760,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x8868;&#x9054",{"_index":1478,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x8868;&#x9054;&#x73fe;&#x5728;&#x63a5;&#x6536;&#x5230;&#x6b64;&#x8a0a;&#x606f;&#x7684;&#x7269;&#x4ef6;&#x3002",{"_index":4223,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["x8868;&#x9054;&#x7bc4;&#x570d",{"_index":505,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x88ab;&#x4e2d;&#x65b7;&#xff0c;thread",{"_index":4690,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x88ab;&#x62c9;&#x52d5",{"_index":5245,"title":{},"body":{"java/gui.html#AWT":{}}}],["x88dc;&#x6578",{"_index":607,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["x88dc;&#x6578;&#x3002",{"_index":644,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x88dc;&#x6578;&#x4e2d",{"_index":648,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x88dc;&#x6578;&#x4e2d;&#xff0c",{"_index":694,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x88dc;&#x6578;&#x4ee5",{"_index":654,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x88dc;&#x6578;&#x5c0d;&#x7167;&#x8868;&#x5982;&#x4e0b",{"_index":675,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x88dc;&#x6578;&#x6709;&#x5169;&#x500b",{"_index":668,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x88dc;&#x6578;&#x6e1b;&#x6cd5;&#x5247;&#x4e0d;&#x5fc5;&#x8003;&#x616e;&#x6ea2;&#x4f4d",{"_index":687,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x88dc;&#x6578;&#x6e1b;&#x6cd5;&#xff1a;&#x5c07",{"_index":682,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x88dc;&#x6578;&#x7684;&#x5c0d;&#x7167;&#x8868;&#x5982;&#x4e0b",{"_index":658,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x88dc;&#x6578;&#x7cfb;&#x7d71;&#x4e2d;&#xff0c;&#x4e0d;&#x9700;&#x8981;&#x7528;&#x5230;&#x6e1b;&#x6cd5;&#xff0c;&#x53ea;&#x8981;&#x5c07",{"_index":700,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x88dc;&#x6578;&#x80fd;&#x8868;&#x9054;&#x7684;&#x7bc4;&#x570d;&#x5728",{"_index":681,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x88dc;&#x6578;&#xff0c;99",{"_index":643,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x88dd;&#x7f6e;&#x662f;&#x6211;&#x5011;&#x6700;&#x5e38;&#x898b;&#x7684;&#x786c;&#x9ad4;&#x5143;&#x4ef6;&#x3002;&#x5e38;&#x898b;&#x7684;&#x8f38;&#x5165;&#x5143;&#x4ef6;&#x6709;&#x9375;&#x76e4;&#x3001;&#x6ed1;&#x9f20;&#x3001;&#x6416;&#x687f;&#x3001;dvd",{"_index":469,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x88e1;&#x5c31;&#x4e0d;&#x80fd;&#x5b58;&#x53d6",{"_index":1542,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x88e1;&#x5df2;&#x7d93;&#x585e;&#x6eff;&#x4e86;&#x8cc7;&#x6599;&#xff0c;&#x4f7f;&#x7528;&#x8005;&#x537b;&#x9084;&#x8981;&#x653e;&#x9032;&#x53bb;&#xff1f",{"_index":4729,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x88e1;&#x6293;&#x53d6;&#x5de5;&#x4f5c;&#x9700;&#x6c42;&#x505a;&#x9032;&#x4e00;&#x6b65;&#x8655;&#x7406;&#x3002",{"_index":4736,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x88e1;&#x6558;&#x8ff0;&#x3002",{"_index":4229,"title":{},"body":{"java/message-passing.html#Message-Passing-的語法":{}}}],["x88e1;&#x6709;&#x4e00;&#x500b;&#x4ee5;&#x4e0a;&#x7684",{"_index":3320,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x88e1;&#x6c92;&#x6709;&#x6307;&#x5b9a;&#x7236;&#x985e;&#x5225;&#x7684",{"_index":3184,"title":{},"body":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["x88e1;&#x7528",{"_index":3290,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x88e1;&#x7684",{"_index":1500,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{},"java/class-and-obj.html#Overloading":{},"java/encapsulation.html#Package-的定義":{},"java/encapsulation.html#Package-的引用":{},"java/thread.html#如何產生-Thread":{}}}],["x88e1;&#x7684;&#x51fd;&#x6578;&#xff0c;&#x5982;&#x679c",{"_index":2808,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x88e1;&#x7684;&#x6240;&#x6709",{"_index":2772,"title":{},"body":{"java/encapsulation.html#Package-的引用":{},"java/interface.html#Abstract-Class-and-Method":{}}}],["x88e1;&#x7684;&#x65b0;&#x8cc7;&#x6599;&#x578b;&#x614b",{"_index":3660,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x88e1;&#x7684;&#x65b9;&#x6cd5;&#x4e00;&#x5b9a;&#x6c92;&#x6709;&#x5be6;&#x4f5c;&#xff0c;&#x56e0;&#x6b64;&#x5fc5;&#x7136;&#x70ba",{"_index":3319,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x88e1;&#x7684;&#x985e;&#x5225;&#x4f7f;&#x7528;&#x3002;&#x540c;&#x4e00;&#x500b;&#x76ee;&#x9304;&#x4e0b;&#x7684",{"_index":1520,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x88e1;&#x9664;&#x4e86;&#x8def;&#x5f91;&#x5916;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x6307;&#x5b9a",{"_index":2726,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x88e1;&#x9762;&#x4e00;&#x5b9a;&#x8981;&#x5b9a;&#x7fa9;&#x4e00;&#x500b;&#x4ee5;&#x4e0a;&#x7684",{"_index":1572,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x88e1;&#x9762;&#x4e5f;&#x53ef;&#x4ee5;&#x5b9a;&#x7fa9;&#x5176;&#x4ed6;&#x7684;&#x985e;&#x5225;&#xff0c;&#x4f46;&#x662f;&#x53ea;&#x6709",{"_index":1497,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x88e1;&#x9762;&#x67d0;&#x4e00;&#x884c;&#x6307;&#x4ee4;&#x7522;&#x751f",{"_index":2930,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x88e1;&#x9762;&#x7684",{"_index":1550,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{},"java/gui.html#GUI-簡介":{}}}],["x88e1;&#x9762;&#x7684;&#x4e00;&#x500b",{"_index":1547,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x88e1;&#x9762;&#xff0c;&#x56e0;&#x6b64;&#x5f15;&#x7528;&#x7684",{"_index":2782,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x88e1;&#x9762;&#xff0c;&#x67d0;&#x4e9b",{"_index":4734,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x88e1;&#xff0c;&#x5247;&#x6c92;&#x6709;&#x4fee;&#x98fe;&#x5b57;&#x7684",{"_index":3123,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["x88e1;&#xff0c;&#x53ef;&#x7528",{"_index":1540,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x88e1;&#xff0c;except",{"_index":2912,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x8981;&#x548c",{"_index":3585,"title":{},"body":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}}}],["x8981;&#x5c0d;&#x6bcf;&#x500b",{"_index":2815,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x8981;&#x60f3;&#x8fa6;&#x6cd5;&#x62dc;&#x8a2a",{"_index":3795,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x8981;&#x63d0;&#x9192;&#x8b80;&#x8005;&#x7684;&#x662f;&#xff0c;&#x512a;&#x5148;&#x6b0a;&#x9ad8;&#x7684",{"_index":4645,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x8981;&#x653e;&#x5230;&#x6700;&#x5f8c;&#x9762;&#xff0c;&#x5982;&#x679c;&#x5beb;&#x6210",{"_index":3768,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["x8981;&#x7279;&#x5225;&#x5f37;&#x8abf;&#x7684;&#x662f",{"_index":3127,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["x8981;&#x7279;&#x5225;&#x5f37;&#x8abf;&#x7684;&#x662f;&#xff0c",{"_index":3636,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x8981;&#x7b49;&#x6240;&#x6709;&#x7684;reader&#x7d50;&#x675f",{"_index":4801,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x8981;&#x8b93;&#x4e00;&#x500b;&#x6558;&#x8ff0;&#x57f7;&#x884c",{"_index":3816,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x8981;&#x9644;&#x5e36;&#x8aaa;&#x660e;&#x7684;&#x662f;&#xff0c;java",{"_index":1563,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x898f;&#x5b9a;&#x516c;&#x5171;&#x985e;&#x5225",{"_index":1492,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x898f;&#x5b9a;&#x6b64;&#x60c5;&#x6cc1;&#x6703;&#x81ea;&#x52d5;&#x7e7c;&#x627f",{"_index":1613,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x8996;&#x8a0a",{"_index":562,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x89c0;&#x770b",{"_index":4658,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x89e3;&#x6790",{"_index":3811,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{},"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x89e3;&#x69cb;&#x5b50",{"_index":1477,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x89e3;&#x6c7a;&#x6b64;&#x985e;&#x554f;&#x984c;&#x7684;&#x65b9;&#x6cd5;&#x4e4b;&#x4e00;&#xff0c;&#x662f;&#x5b9a;&#x7fa9;&#x4e00;&#x7a2",{"_index":3537,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x8a08;&#x7b97",{"_index":930,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x8a0a;&#x606f;&#x50b3;&#x905",{"_index":4187,"title":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}},"body":{}}],["x8a0a;&#x606f;&#x6642;&#xff0c;&#x61c9;&#x8a72;&#x4f7f;&#x7528",{"_index":3245,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x8a18;&#x61b6;&#x9ad4;&#x662f;&#x7528;&#x4f86;&#x5132;&#x5b58;&#x7a0b;&#x5f0f;&#x548c;&#x8cc7;&#x6599;&#x7684;&#x5730;&#x65b9;&#x3002;&#x4e00;&#x822c;&#x53c8;&#x7a31;&#x70ba",{"_index":464,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x8a18;&#x61b6;&#x9ad4;&#x7684;&#x5167;&#x5bb9;&#x8907;&#x88fd;&#x5230;&#x66ab;&#x5b58;&#x5668;&#x5167;&#xff0c;&#x7136;&#x5f8c;&#x5c07",{"_index":875,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x8a18;&#x61b6;&#x9ad4;&#xff0c;&#x7136;&#x5f8c;&#x5c07",{"_index":879,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x8a18;&#x9304;&#x8457;&#x8a72;&#x9663;&#x5217;&#x7684;&#x9577;&#x5ea6;&#x3002",{"_index":1278,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x8a2d;&#x6210;&#x70ba",{"_index":3834,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x8a2d;&#x70ba",{"_index":936,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{},"java/java-vs-c.html#迴圈範例":{}}}],["x8a2d;&#x70ba;&#x5167;&#x5b9a;&#x503c",{"_index":1610,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x8a2d;&#x70ba;&#x8a72;&#x6578;&#x503c",{"_index":954,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x8a2d;&#x8a08;&#x8005;&#x5be6;&#x4f5c;&#x7684;&#x7269;&#x4ef6;)&#xff0c;&#x7531",{"_index":5170,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x8a31;&#x591a;&#x8a9e;&#x8a00;&#x63d0;&#x4f9b",{"_index":3230,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x8a31;&#x591a;&#x904b;&#x7b97;&#x7b26;&#x865f;&#x548c;&#x6558;&#x8ff0;&#x8a9e;&#x6cd5;&#x90fd;&#x662f;&#x4f86;&#x81ea",{"_index":3591,"title":{},"body":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}}}],["x8a3b;",{"_index":2561,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x8a3b;&#x89e3",{"_index":1098,"title":{},"body":{"c/writing-intro.html#程式語言":{}}}],["x8a3b;&#x89e3;&#x90e8;&#x5206;&#x5982;&#x8981;&#x8b8a;&#x6210;&#x8aaa;&#x660e;&#x6587;&#x4ef6;&#xff0c;&#x8acb;&#x9075;&#x7167",{"_index":3752,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["x8a3b;&#x8a18;&#x6703;&#x7522;&#x751f;&#x53c3;&#x6578;(parameter)argv&#x7684;&#x76f8;&#x95dc;&#x8aaa;&#x660",{"_index":3759,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["x8a3b;a",{"_index":2513,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x8a3b;b",{"_index":2558,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x8a3b;c",{"_index":2559,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x8a3b;d",{"_index":2560,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x8a66;&#x554f",{"_index":545,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x8a66;&#x5716;&#x5c07;&#x4e16;&#x754c;&#x4e0a;&#x7684;&#x4e3b;&#x8981;&#x8a9e;&#x8a00;&#x5168;&#x90e8;&#x7d0d;&#x5165;&#xff0c;&#x5728;&#x4e00;&#x500b;&#x7de8;&#x78bc;&#x7a7a;&#x9593;&#x4e0b;&#x8868;&#x9054;&#x6240;&#x6709;&#x7684;&#x8a9e;&#x8a00;&#x6587;&#x5b57;&#x3002;&#x76ee;&#x524d",{"_index":585,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x8a72",{"_index":3327,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x8a72;&#x51fd;&#x6578;&#x53ef;&#x5b9a;&#x6210",{"_index":3859,"title":{},"body":{"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x8a72;&#x5982;&#x4f55;&#x8655;&#x7406;&#xff1f",{"_index":2901,"title":{},"body":{"java/exception.html#簡介":{}}}],["x8a72;&#x65b9;&#x6cd5;&#x6642;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x5ba3;&#x544a;&#x70ba",{"_index":3318,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["x8a9e;&#x6cd5;&#x4f86;&#x505a;&#x5f37;&#x8feb;&#x8f49;&#x63db;&#x3002",{"_index":3114,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x8a9e;&#x6cd5;&#x5982;&#x4e0b;&#xff1a",{"_index":2919,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x8a9e;&#x8a00;&#x4e0d;&#x6703;&#x5c0d;&#x9663;&#x5217;&#x7684;&#x7d22;&#x5f15;&#x9032;&#x884c;&#x4efb;&#x4f55;&#x6aa2;&#x67e5;&#xff0c;&#x4fdd;&#x8b49;&#x7d22;&#x5f15;&#x503c;&#x5728;&#x9663;&#x5217;&#x7684;&#x5408;&#x6cd5;&#x7bc4;&#x570d;&#x5167;&#xff0c;&#x662f;&#x8a2d;&#x8a08;&#x8005;&#x7684;&#x8cac;&#x4efb;&#x3002;&#x50cf;&#x662f;&#x4e0b;&#x5217;&#x7684;&#x7bc4;&#x4f8b;&#x5c31;&#x5f88;&#x53ef;&#x80fd;&#x7522;&#x751f",{"_index":1316,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x8a9e;&#x8a00;&#x4ee5;&#x9023;&#x7e8c;&#x7684;&#x8a18;&#x61b6;&#x9ad4;&#x7a7a;&#x9593;&#x4f86;&#x8868;&#x9054;&#x9663;&#x5217;&#xff0c;&#x591a;&#x7dad;&#x9663;&#x5217;&#x7684;&#x5730;&#x5740;&#x904b;&#x7b97;&#x63a1;&#x7528",{"_index":1262,"title":{},"body":{"java/array.html#C-語言陣列回顧":{}}}],["x8a9e;&#x8a00;&#x4f86;&#x8aaa;&#xff0c;&#x5f88;&#x53ef;&#x80fd;&#x5c31;&#x5fc5;&#x9808;&#x5728;&#x4e3b;&#x7a0b;&#x5f0f;&#x5167;&#x5beb;&#x4e0a;&#x4e00;&#x5806;&#x5f88;&#x96e3;&#x61c2;&#x7684;&#x555f;&#x52d5;&#x7a0b;&#x5f0f;&#x78bc;&#x3002",{"_index":1631,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x8a9e;&#x8a00;&#x53ea;&#x80fd;&#x4f7f;&#x7528",{"_index":3685,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x8a9e;&#x8a00;&#x548c",{"_index":3679,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x8a9e;&#x8a00;&#x5728;&#x904b;&#x7b97;&#x5f0f;&#x7684;&#x90e8;&#x5206;&#xff0c;&#x548c",{"_index":3652,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x8a9e;&#x8a00;&#x57fa;&#x65bc;&#x4e0a;&#x8ff0;&#x7406;&#x5ff5;&#xff0c;&#x5b9a;&#x7fa9;&#x4e86",{"_index":3545,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x8a9e;&#x8a00;&#x5b9a;&#x7fa9;&#x4ee5",{"_index":3725,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x8a9e;&#x8a00;&#x5b9a;&#x7fa9;&#x7684;&#x6a19;&#x6e96;&#x7a0b;&#x5f0f;&#x5eab;&#x3002",{"_index":1546,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x8a9e;&#x8a00;&#x6240;&#x5b9a;&#x7fa9;&#x7684;&#x57fa;&#x672c;&#x8cc7;&#x6599;&#x578b;&#x5225;&#x6709",{"_index":3597,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x8a9e;&#x8a00;&#x6240;&#x5beb;&#x51fa;&#x4f86;&#x7684;&#xff0c;&#x56e0;&#x6b64;&#x63d0;&#x4f9b;&#x4e86;&#x66f4;&#x591a;&#x6a23;&#x5316;&#x800c;&#x8907;&#x96dc;&#x7684;&#x5143;&#x4ef6;&#xff0c;&#x5982",{"_index":5193,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x8a9e;&#x8a00;&#x662f;&#x63a1;&#x7528",{"_index":586,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x8a9e;&#x8a00;&#x6709;&#x548c",{"_index":1293,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x8a9e;&#x8a00;&#x6709;&#x6240;&#x4e86;&#x89e3;&#xff0c;&#x672c;&#x7ae0;&#x5f8c;&#x9762;&#x7684;&#x90e8;&#x5206;&#x53ea;&#x5c07",{"_index":3593,"title":{},"body":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}}}],["x8a9e;&#x8a00;&#x6709;&#x95dc;&#x908f;&#x8f2f;&#x904b;&#x7b97;&#x6700;&#x5927;&#x7684;&#x4e0d;&#x540c",{"_index":3680,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x8a9e;&#x8a00;&#x6975;&#x70ba;&#x985e;&#x4f3c",{"_index":3712,"title":{},"body":{"java/java-vs-c.html#流程控制敘述":{}}}],["x8a9e;&#x8a00;&#x6975;&#x70ba;&#x985e;&#x4f3c;&#xff0c;&#x9664;&#x4e86;&#x6c92;&#x6709",{"_index":3653,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x8a9e;&#x8a00;&#x6c92;&#x6709;&#x5b9a;&#x7fa9;&#x6a19;&#x6e96;&#x51fd;&#x6578;&#x5eab",{"_index":179,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x8a9e;&#x8a00;&#x70ba;&#x4e86;&#x9075;&#x5faa;&#x7269;&#x4ef6;&#x5c0e;&#x5411;&#x7684;&#x7cbe;&#x795e;&#xff0c;&#x4e26;&#x907f;&#x514d;&#x8a2d;&#x8a08;&#x8005;&#x56e0;&#x8a9e;&#x8a00;&#x8a2d;&#x8a08;&#x8907;&#x96dc;&#x800c;&#x72af;&#x932f;&#xff0c;&#x56e0;&#x6b64;&#x53ea;&#x63d0;&#x4f9b;&#x4e86",{"_index":3152,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x8a9e;&#x8a00;&#x7279;&#x5225;&#x4e0d;&#x540c;&#x7684;&#x5730;&#x65b9;&#x662f;&#xff1a",{"_index":1285,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x8a9e;&#x8a00;&#x7684",{"_index":1505,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{},"java/java-vs-c.html#資料型別":{}}}],["x8a9e;&#x8a00;&#x7684;&#x4eba;&#x4f86;&#x8aaa;&#xff0c;&#x7b2c;&#x4e00;&#x6b21;&#x770b;&#x5230;&#x9019;&#x6a23;&#x7684;&#x8a0a;&#x606f;&#x90fd;&#x6703;&#x5f88;&#x8208;&#x596e;&#xff0c;&#x56e0;&#x70ba",{"_index":1329,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x8a9e;&#x8a00;&#x7684;&#x5b57;&#x4e32;&#x5c31;&#x662f;&#x5229;&#x7528;&#x4ee5",{"_index":1274,"title":{},"body":{"java/array.html#C-語言陣列回顧":{}}}],["x8a9e;&#x8a00;&#x7684;&#x5beb;&#x4f5c;&#x98a8;&#x683c",{"_index":3745,"title":{"java/java-vs-c.html#Java-語言的寫作風格":{}},"body":{}}],["x8a9e;&#x8a00;&#x7684;&#x7236;&#x96c6;&#x5408;&#xff0c;&#x56e0;&#x6b64;&#x4f60;&#x4e5f;&#x53ef;&#x4ee5;&#x7528",{"_index":1002,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x8a9e;&#x8a00;&#x7684;&#x77ad;&#x89e3;&#xff0c;&#x56e0;&#x6b64;&#x53ef;&#x8df3;&#x904e;&#x6b64;&#x7bc0;&#x7684;&#x7d30;&#x7bc0;&#x90e8;&#x4efd;&#x3002",{"_index":705,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x8a9e;&#x8a00;&#x7684;&#x7d50;&#x69cb",{"_index":1106,"title":{},"body":{"c/writing-intro.html#程式語言":{}}}],["x8a9e;&#x8a00;&#x7684;&#x8ab2;&#x7a0b;&#x5167;&#x5bb9;&#x3002",{"_index":3595,"title":{},"body":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}}}],["x8a9e;&#x8a00;&#x7684;&#x958b;&#x767c;&#x6a21;&#x5f0f;&#xff0c;&#x662f;&#x7de8;&#x5beb",{"_index":3518,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x8a9e;&#x8a00;&#x88e1;&#x4e26;&#x6c92;&#x6709;&#x4f8b;&#x5916;&#x8655;&#x7406;&#x7684;&#x6a5f;&#x5236;&#xff0c;&#x4f7f;&#x7528;&#x51fd;&#x6578;&#x5eab;&#x6642;&#xff0c;&#x53ef;&#x80fd;&#x6703;&#x767c;&#x751f;&#x7121;&#x6cd5;&#x8655;&#x7406;&#x7684;&#x72c0;&#x6cc1;&#xff0c;&#x6b64;&#x6642;&#x5fc5;&#x9808;&#x7531;&#x547c;&#x53eb;&#x8005;&#x5c0f;&#x5fc3;&#x6aa2;&#x67e5;&#x50b3;&#x56de;&#x503c;&#x624d;&#x884c;&#x3002;&#x5982;&#x679c;&#x4e0d;&#x6aa2;&#x67e5;&#xff0c;&#x5c31;&#x6703;&#x767c;&#x751f;&#x7121;&#x6cd5;&#x9810;&#x671f;&#x7684;&#x7d50;&#x679c",{"_index":2892,"title":{},"body":{"java/exception.html#簡介":{}}}],["x8a9e;&#x8a00;&#x898f;&#x5b9a;&#x6d6e;&#x9ede;&#x6578;&#x8f49;&#x6574;&#x6578;&#x6642;&#xff0c;&#x5c0f;&#x6578;&#x9ede;&#x90e8;&#x5206;&#x7121;&#x689d;&#x4ef6;&#x6368;&#x53bb;&#x3002;&#x5982;&#x679c;&#x8981;&#x9054;&#x5230;&#x6d6e;&#x9ede;&#x6578;&#x56db;&#x6368;&#x4e94;&#x5165;&#x70ba;&#x6574;&#x6578;&#x7684;&#x6548;&#x679c;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x4e0b;&#x9762;&#x7684;&#x5c0f;&#x6280;&#x5de7",{"_index":3778,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["x8a9e;&#x8a00;&#x9084;&#x53ef;&#x4ee5;&#x5b9a;&#x7fa9",{"_index":1620,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x8a9e;&#x8a00;&#x9663;&#x5217;&#x56de;&#x9867",{"_index":1261,"title":{"java/array.html#C-語言陣列回顧":{}},"body":{}}],["x8a9e;&#x8a00;&#xff0c;&#x5047;&#x8a2d;&#x5404;&#x4f4d;&#x5df2;&#x7d93;&#x5c0d",{"_index":3592,"title":{},"body":{"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{}}}],["x8aaa;&#x660",{"_index":5269,"title":{},"body":{"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["x8aaa;&#x660e;&#x5982;&#x4f55;&#x5b9a;&#x7fa9",{"_index":1512,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x8aaa;&#x660e;&#xff1a;&#x5b78;&#x751f;&#x5b78;&#x671f;&#x5b78;&#x696d;&#x6210;&#x7e3e;&#x4ee5;&#x5404;&#x79d1;&#x4efb;&#x8ab2;&#x6559;&#x5e2b;&#x9001;&#x4ea4;&#x672c;&#x8655;&#x4e4b;&#x539f;&#x59cb;&#x6210;&#x7e3e;&#x518a;&#x70ba;&#x6191;&#xff1b;&#x672c;&#x901a;&#x77e5;&#x55ae;&#x50c5;&#x70ba;&#x63d0;&#x4f9b;&#x53c3;&#x8003;&#xff0c;&#x82e5;&#x9700;&#x6b63;&#x5f0f;&#x8b49;&#x660e;&#x8acb;&#x81f3;&#x672c;&#x8655;&#x8a3b;&#x518a;&#x7d44;&#x7533;&#x8acb;&#x6210;&#x7e3e;&#x55ae;&#x3002;\\n",{"_index":2518,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x8ab2;&#x7a0b;&#x540d;&#x7a31",{"_index":2577,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x8acb;&#x5047;\\n&#x8a3b;d",{"_index":2516,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x8acb;&#x6ce8;&#x610f;&#x4e0a;&#x4e00;&#x5c0f;&#x7bc0;&#x6240;&#x63d0;&#x5230",{"_index":3154,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["x8acb;&#x6ce8;&#x610f;throws&#x6700;&#x5f8c;&#x9762;&#x662f;",{"_index":2923,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x8acb;&#x9996;&#x5b57;&#x5927;&#x5beb",{"_index":3748,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["x8acb;&#x9996;&#x5b57;&#x5c0f;&#x5beb",{"_index":3749,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["x8b8a;&#x6578",{"_index":3644,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x8b8a;&#x6578;&#x5ba3;&#x544a",{"_index":1108,"title":{},"body":{"c/writing-intro.html#程式語言":{},"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["x8b8a;&#x6578;&#x5ba3;&#x544a;&#x70ba",{"_index":1282,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x8cbb;&#x5f0f;&#x6578;&#x5217",{"_index":3866,"title":{},"body":{"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x8cbb;&#x6c0f;&#x6578",{"_index":1336,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x8cbb;&#x6c0f;&#x6578;&#x5217;&#x7684;&#x5b9a;&#x7fa9;&#x70ba",{"_index":3867,"title":{},"body":{"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x8cc7;&#x6599;&#x578b;&#x5225",{"_index":3596,"title":{"java/java-vs-c.html#資料型別":{}},"body":{}}],["x8cc7;&#x6599;&#x578b;&#x614b",{"_index":554,"title":{},"body":{"c/system-intro.html#數字系統":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["x8cc7;&#x6599;&#x683c;&#x5f0f",{"_index":552,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x8cc7;&#x6599;&#x7d50;&#x675f",{"_index":4415,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["x8cc7;&#x6599;&#x7d50;&#x69cb;&#xff0c;&#x4e0d;&#x8ad6;&#x662f",{"_index":4767,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x8cc7;&#x6599;&#x8907;&#x88fd",{"_index":856,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x8cc7;&#x6e90;&#x3002",{"_index":4763,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x8d85;&#x904e;&#x908a;&#x754c",{"_index":5272,"title":{},"body":{"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["x8def;&#x5f91;&#x624d;&#x662f;&#x5168;&#x540d;&#xff0c;&#x4f8b;&#x5982",{"_index":2784,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x8def;&#x5f91;&#x7684",{"_index":2787,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x8edf;&#x9ad4;&#x5143;&#x4ef6",{"_index":478,"title":{"c/system-intro.html#軟體元件":{}},"body":{}}],["x8edf;&#x9ad4;&#x5143;&#x4ef6;&#x662f;&#x7531;&#x8a31;&#x591a;&#x7684;&#x7a0b;&#x5f0f",{"_index":479,"title":{},"body":{"c/system-intro.html#軟體元件":{}}}],["x8f09;&#x5165",{"_index":1623,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x8f38;&#x5165;&#x53c3;&#x6578",{"_index":3808,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x8f38;&#x5165;&#x5e74;&#x4efd;year",{"_index":1125,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x8f38;&#x5165;&#x6578;&#x5b57;&#x5230;&#x66ab;&#x5b58;&#x5668;&#xff0c;program",{"_index":925,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x8f38;&#x5165;&#x8f38;&#x51fa",{"_index":468,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x8f38;&#x5165;&#x932f;&#x8aa4",{"_index":1131,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x8f38;&#x5165;&#x932f;&#x8aa4;\\n",{"_index":1126,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x8f38;&#x51fa;&#x5165",{"_index":864,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x8f49;&#x578b;&#x6210;&#x5b50;&#x985e;&#x5225;&#x578b;&#x614b;&#x3002;&#x7531;&#x65bc;&#x5b50;&#x985e;&#x5225;&#x53ef;&#x4ee5;&#x8996;&#x70ba;&#x548c;&#x7236;&#x985e;&#x5225;&#x76f8;&#x5bb9;&#xff0c;&#x5982",{"_index":3101,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x8f49;&#x578b;&#x70ba;&#x7236;&#x985e;&#x5225;&#x578b;&#x614b;&#xff0c;downcast",{"_index":3099,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x8f49;&#x63db;&#x6210",{"_index":3694,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x8ff4;&#x5708;&#x7bc4;&#x4f8b",{"_index":3780,"title":{"java/java-vs-c.html#迴圈範例":{}},"body":{}}],["x900f;&#x904e",{"_index":2714,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x900f;&#x904e;&#x897f;&#x5143;&#x5e7e;&#x5e74;&#x4f86;&#x5224;&#x65b7;&#x958f;&#x5e74;&#xff1a;4",{"_index":1112,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x9019;&#x500b",{"_index":2916,"title":{},"body":{"java/exception.html#相關語法":{},"java/message-passing.html#Message-Passing-的語法":{}}}],["x9019;&#x500b;&#x4e8c;&#x9032;&#x4f4d;&#x6578;&#x5b57;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x7531;&#x53f3;&#x81f3;&#x5de6;&#x628a;&#x4ed6;&#x5206;&#x70ba",{"_index":538,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x9019;&#x500b;&#x57f7;&#x884c;&#x6a94",{"_index":3570,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x9019;&#x500b;&#x5de5;&#x5177;&#x7684;&#x5beb;&#x4f5c;&#x898f;&#x5247",{"_index":3753,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["x9019;&#x500b;&#x6578;&#x5b57;&#x7684;&#x79d1;&#x5b78;&#x7b26;&#x865f;&#x8868;&#x793a;&#x6cd5;&#x662f",{"_index":720,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x9019;&#x500b;&#x6709;&#x7406;&#x6578;&#x3002;&#x800c;&#x4e14;&#x5404;&#x7a2e;&#x61c9;&#x7528;&#x6240;&#x9700;&#x7684;&#x6578;&#x5b57;&#x5927;&#x5c0f;&#x548c;&#x7cbe;&#x6e96;&#x5ea6;&#x4e0d;&#x540c;&#xff0c;&#x6709;&#x4e9b;&#x8981;&#x8868;&#x9054;&#x5f88;&#x5927;&#x6578;&#x5b57",{"_index":715,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x9019;&#x500b;&#x6a94;&#x6848;&#x5167;&#x3002",{"_index":1496,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x9019;&#x500b;&#x74b0;&#x5883;&#x8b8a;&#x6578;&#x3002",{"_index":3574,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x9019;&#x500b;&#x74b0;&#x5883;&#x8b8a;&#x6578;&#x662f;&#x7531;&#x591a;&#x500b;&#x4ee5;&#x5206;&#x865f;&#x9694;&#x958b;&#x7684;&#x8def;&#x5f91;&#x6240;&#x7d44;&#x6210;&#xff0c;jvm",{"_index":2713,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x9019;&#x500b;&#x95dc;&#x9375;&#x5b57;&#x4f86;&#x8868;&#x9054;&#x3002;&#x6709;&#x95dc",{"_index":3291,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x9019;&#x500b;&#x985e;&#x5225;&#x3002",{"_index":1614,"title":{},"body":{"java/class-and-obj.html#初始化的執行順序":{}}}],["x9019;&#x500b;&#x985e;&#x5225;&#x4f86;&#x8868;&#x793a",{"_index":4617,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x9019;&#x5169;&#x500b;&#x754c;&#x9762;&#x90fd;&#x5b9a;&#x7fa9;&#x4e86;&#x8b8a;&#x6578",{"_index":3298,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x9019;&#x5169;&#x500b;&#x89c0;&#x5ff5;&#x4f5c;&#x4e00;&#x500b;&#x91d0;&#x6e05;&#x3002",{"_index":4578,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x9019;&#x5169;&#x500b;&#x985e;&#x5225;&#x5747;&#x5b9a;&#x7fa9;&#x65bc",{"_index":2915,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x9019;&#x662f;&#x4e00;&#x500b;&#x4f7f;&#x7528;&#x7bc4;&#x4f8b",{"_index":4773,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x9019;&#x662f;&#x56e0;&#x70ba",{"_index":531,"title":{},"body":{"c/system-intro.html#數字系統":{},"java/exception.html#相關語法":{}}}],["x9019;&#x662f;&#x56e0;&#x70ba;&#x4e8c;&#x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x4e2d;&#x53ea;&#x6709",{"_index":732,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x9019;&#x662f;&#x56e0;&#x70ba;&#x96fb;&#x8166;&#x662f",{"_index":711,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x9019;&#x6703;&#x5728;&#x6a19;&#x6e96;&#x8f38;&#x51fa;&#x88dd;&#x7f6",{"_index":188,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x9019;&#x6a23;&#x5c31;&#x7834;&#x58de;&#x4e86;&#x7b2c",{"_index":4708,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x9019;&#x6bb5;&#x8a3b;&#x89e3;&#x88e1;&#x7684;&#x6240;&#x6709;&#x6587;&#x5b57;&#x90fd;&#x6703;&#x8b8a;&#x6210;&#x6b64;&#x985e;&#x5225;&#x4e00;&#x958b;&#x982d;&#x7684;&#x8aaa;&#x660",{"_index":3755,"title":{},"body":{"java/java-vs-c.html#Java-語言的寫作風格":{}}}],["x9019;&#x7a0b;&#x5f0f;&#x7684;c&#x7248;&#x672c;&#x5982;&#x4e0b",{"_index":3563,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x9019;&#x7a2e;&#x67b6;&#x69cb;&#x7684;&#x597d;&#x8655;&#x662f;&#xff0c;&#x53ef;&#x4ee5;&#x628a;&#x6162;&#x901f;&#x6216;&#x4e0d;&#x5b9a;&#x901f;&#x7684;&#x8f38;&#x5165;(&#x5982;&#x900f;&#x904e;&#x7db2;&#x8def;&#x8b80;&#x8cc7;&#x6599;&#xff0c;&#x9023;&#x7dda;&#x901f;&#x5ea6;&#x53ef;&#x80fd;&#x5dee;&#x5f88;&#x591a;)&#x548c;&#x5feb;&#x901f;&#x7684;&#x8655;&#x7406;&#x5206;&#x958b;&#xff0c;&#x53ef;&#x4f7f;&#x7cfb;&#x7d71;&#x7684;&#x53cd;&#x61c9;&#x901f;&#x5ea6;&#x66f4;&#x5feb;&#xff0c;&#x66f4;&#x7bc0;&#x7701;&#x8cc7;&#x6e90;&#x3002",{"_index":4737,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x9019;&#x7a2e;&#x7121;&#x7406;&#x6578;&#xff0c;&#x751a;&#x81f3;&#x7121;&#x6cd5;&#x8868;&#x9054",{"_index":714,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x9019;&#x7a2e;&#x7531;&#x4f7f;&#x7528;&#x8005;&#x89f8;&#x767c;&#x7684;&#x57f7;&#x884c;&#x52d5;&#x4f5c;&#xff0c;&#x548c;&#x7a0b;&#x5e8f;&#x5f0f;&#x8a9e;&#x8a00;&#x7531;&#x4e3b;&#x7a0b;&#x5f0f;&#x958b;&#x59cb;&#x547c;&#x53eb;&#x5176;&#x4ed6;&#x7a0b;&#x5e8f;&#x7684;&#x6a21;&#x5f0f;&#x4e0d;&#x540c;&#xff0c;&#x6211;&#x5011;&#x7a31;&#x4e4b;&#x70ba;&#x4e8b;&#x4ef6;&#x9a45;&#x52d5",{"_index":5172,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x9019;&#x88e1;&#x8981;&#x5f37;&#x8abf;&#x7684;&#x662f;&#xff0c",{"_index":2760,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["x901a;&#x8a0a;&#x5730;&#x5740",{"_index":2541,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x901a;&#x8a0a;&#x5730;&#x5740;zipcod",{"_index":2542,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x9023;&#x63a5;&#x8d77;&#x4f86;&#x3002;bu",{"_index":474,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x9023;&#x7d50",{"_index":974,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x9023;&#x7d50;&#x6210;&#x70ba;&#x4e00;&#x500b;&#x53ef;&#x57f7;&#x884c;&#x6a94;&#xff0c;&#x5247;&#x4e0b;&#x9054;&#x4ee5;&#x4e0b;&#x547d;&#x4ee4;&#xff1a",{"_index":996,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["x9032;&#x4f4d",{"_index":518,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x9032;&#x4f4d;&#x6240;&#x80fd;&#x8868;&#x9054;&#x7684;&#x6700;&#x5927;&#x6578;&#x5b57",{"_index":646,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x9032;&#x4f4d;&#x6574;&#x6578",{"_index":219,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x9032;&#x4f4d;&#x6574;&#x6578;&#xff0c;&#x5927;&#x5beb;&#x8868;&#x793a",{"_index":218,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x9032;&#x4f4d;&#x6574;&#x6578;&#xff0c;&#x5c0f;&#x5beb;&#x8868;&#x793a",{"_index":217,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x9032;&#x4f4d;&#x6578;&#x5b57",{"_index":534,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x9032;&#x4f4d;&#x6578;&#x5b57;&#x7cfb;&#x7d71;&#x70ba;&#x4f8b;&#x3002",{"_index":609,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x9032;&#x4f4d;&#x6578;&#x5b57;&#x7cfb;&#x7d71;&#x70ba;&#x4f8b;&#xff0c;&#x53ea;&#x80fd;&#x8868;&#x9054",{"_index":617,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x9032;&#x4f4d;&#x7684;&#x6578;&#x5b57;&#x3002;&#x5982",{"_index":537,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x4e2d",{"_index":656,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x4e2d;&#xff0c;&#x5176",{"_index":674,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x4e2d;&#xff0c;300",{"_index":653,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x9032;&#x4f4d;&#x88dc;&#x6578",{"_index":688,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x9032;&#x4f4d;&#xff0c;&#x7531;&#x65bc",{"_index":541,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x9032;&#x5165",{"_index":4745,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x9047;&#x5230;&#x8ca0;&#x6578;&#x53c3;&#x6578;&#xff0c;&#x6703;&#x50b3;&#x56d",{"_index":2903,"title":{},"body":{"java/exception.html#簡介":{}}}],["x904a;&#x6232",{"_index":5266,"title":{},"body":{"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["x904b;&#x7b97;&#x5f0f",{"_index":3701,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x904b;&#x7b97;&#x7b26;&#x865f",{"_index":3651,"title":{"java/java-vs-c.html#運算符號-Operator":{}},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x904b;&#x7b97;&#x7b26;&#x865f;&#x7bc4;&#x4f8b",{"_index":3762,"title":{"java/java-vs-c.html#運算符號範例":{}},"body":{}}],["x904e;&#x6ffe;&#x6389;&#x7b2c;&#x4e00;&#x500b",{"_index":4420,"title":{},"body":{"java/net.html#HTTP-Server":{}}}],["x905e;&#x8ff4",{"_index":3855,"title":{"java/java-vs-c.html#遞迴-recursion-範例":{}},"body":{}}],["x9078;&#x4fee",{"_index":2547,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x9078;&#x7b2c;i&#x500b",{"_index":1356,"title":{},"body":{"java/array.html#陣列範例":{}}}],["x9084;&#x662f",{"_index":3246,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x9084;&#x6709;&#x4e00;&#x500b;&#x7a31;&#x70ba",{"_index":3622,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x9084;&#x6709;thread&#x60f3;&#x8981;writ",{"_index":4788,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x9084;&#x6709;write",{"_index":4777,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x9084;&#x6c92;&#x6709;&#x57f7;&#x884c",{"_index":4692,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x9084;&#x6c92;&#x8f2a;&#x5230;&#x6211",{"_index":4798,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x908a;&#x969b;&#x689d;&#x4ef6;&#x662f",{"_index":3857,"title":{},"body":{"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["x908f;&#x8f2f",{"_index":3670,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x908f;&#x8f2f;&#x904b;&#x7b97",{"_index":861,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x90a3;&#x624d;&#x8981;&#x8003;&#x616e;&#x4e0d;&#x7528",{"_index":1333,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x90a3;&#x9ebc;&#x4ee5",{"_index":4738,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x90e8;&#x4efd;&#x7a31;&#x70ba",{"_index":738,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x90e8;&#x4efd;&#xff0c;&#x6240;&#x4ee5",{"_index":723,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x90f5;&#x905e;&#x5340;&#x865f",{"_index":2571,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x90fd;&#x4e0d;&#x80fd;&#x5ba3;&#x544a;&#x70ba",{"_index":1501,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x90fd;&#x53cd;&#x904e;&#x4f86;&#xff0c;&#x5c31;&#x53ef;&#x5f97;&#x5230",{"_index":701,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x90fd;&#x53ef;&#x4ee5;&#x5b58;&#x53d6;&#xff0c;&#x4f7f;&#x7528",{"_index":2694,"title":{},"body":{"java/encapsulation.html#類別成員的存取":{}}}],["x90fd;&#x53ef;&#x4ee5;&#x5b9a;&#x7fa9;&#x81ea;&#x5df1;&#x7684",{"_index":1507,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x90fd;&#x662f",{"_index":2993,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x90fd;&#x662f;&#x4e00;&#x7a2",{"_index":3102,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x90fd;&#x662f;&#x4e00;&#x7a2e;&#x4f5c;&#x696d;&#x7cfb;&#x7d71;&#x3002;&#x800c;&#x61c9;&#x7528;&#x8edf;&#x9ad4;&#x5247;&#x5e6b;&#x52a9;&#x6211;&#x5011;&#x5b8c;&#x6210;&#x7279;&#x5b9a;&#x7684;&#x5de5;&#x4f5c;&#xff0c;&#x5982",{"_index":482,"title":{},"body":{"c/system-intro.html#軟體元件":{}}}],["x90fd;&#x662f;&#x4e0d;&#x4e00;&#x6a23;&#x7684;&#x3002;&#x4f8b;&#x5982;&#xff1a",{"_index":698,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x90fd;&#x662f;&#x76f8;&#x53cd;&#x7684;&#xff0c;&#x5982",{"_index":638,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["x90fd;&#x6703;&#x66f4;&#x52d5;&#x5230",{"_index":4768,"title":{},"body":{"java/thread.html#Multiple-Reader-Writer-Monitors":{}}}],["x90fd;&#x6709",{"_index":3240,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x90fd;&#x6709;&#x5176",{"_index":1534,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["x90fd;&#x6709;&#x552f;&#x4e00;&#x7684;&#x754c;&#x9762;&#x5ba3;&#x544a;&#x3002;&#x90a3;&#x9ebc",{"_index":2744,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x90fd;&#x6709;&#x6a5f;&#x6703;&#x57f7;&#x884c;&#x3002",{"_index":4615,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["x90fd;&#x6709;&#x76f8;&#x5c0d;&#x61c9;&#x7684",{"_index":5262,"title":{},"body":{"java/gui.html#AWT":{}}}],["x90fd;&#x8981;&#x8655;&#x7406;&#xff1f",{"_index":2956,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x90fd;&#x8981;&#x8a08;&#x8f03",{"_index":1332,"title":{},"body":{"java/array.html#陣列索引的檢查":{}}}],["x914d;&#x5408",{"_index":2715,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["x91cd;&#x65b0;&#x7de8;&#x8b6f;&#x4e00;&#x6b21;&#xff0c;&#x4f46;&#x9019;&#x6a23;&#x505a;&#x6709;&#x4ee5;&#x4e0b;&#x5e7e;&#x500b;&#x554f;&#x984c",{"_index":2813,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x91cd;&#x65b0;&#x7de8;&#x8b6f;&#x5927;&#x578b;&#x5c08;&#x6848;&#x5168;&#x90e8;&#x7684;&#x7a0b;&#x5f0f;&#x78bc;&#x53ef;&#x80fd;&#x6703;&#x6d6a;&#x8cbb;&#x4e0d;&#x5c11;&#x6642;&#x9593",{"_index":2814,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["x91cd;&#x8907;&#x5b9a;&#x7fa9",{"_index":3134,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["x91cd;&#x8907;&#x6b64;&#x904e;&#x7a0b;&#x53ef;&#x5f97;&#x89e3;&#x5982;&#x4e0b;&#xff1a",{"_index":517,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x91cd;&#x8907;&#x6b64;&#x904e;&#x7a0b;&#x5f97;&#x89e3;&#x5982;&#x4e0b;&#xff1a",{"_index":549,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x9375;&#x76e4;&#x4e8b;&#x4ef6;&#x8655;&#x7406;&#x7bc4;&#x4f8b",{"_index":5279,"title":{"java/gui.html#鍵盤事件處理範例":{}},"body":{}}],["x958b;&#x59cb;&#x57f7;&#x884c;runnable.run",{"_index":4638,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["x958b;&#x59cb;&#x57f7;&#x884c;t.run",{"_index":4633,"title":{},"body":{"java/thread.html#如何產生-Thread":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x958b;&#x59cb;&#x57f7;&#x884c;t1.run",{"_index":4659,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["x958b;&#x59cb;&#x5b78;&#x865f",{"_index":2529,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["x958b;&#x59cb;&#x6bcf;&#x6b21;&#x52a0",{"_index":3801,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x958b;&#x767c",{"_index":3555,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["x958b;&#x982d;&#x7684",{"_index":5203,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x958b;&#x982d;&#x7684;&#x6578;&#x5b57;&#x8868;&#x793a;&#x53f3;&#x5c0d;&#x9f4a;&#x6700;&#x5c11;&#x5e7e;&#x4f4d;&#xff0c;&#x4e0d;&#x8db3;&#x88dc",{"_index":227,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x958b;&#x982d;&#x7684;&#x7b26;&#x865f;&#x6709;&#x7279;&#x5225;&#x610f;&#x7fa9;&#xff0c;&#x8868;&#x793a;&#x6b64;&#x90e8;&#x4efd;&#x8981;&#x7528;&#x5f8c;&#x9762;&#x7684;&#x53c3;&#x6578;&#x53d6;&#x4ee3;&#x3002",{"_index":196,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{}}}],["x958f;&#x5e74;mod4(no",{"_index":1141,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x958f;&#x5e74;no400=oper",{"_index":1139,"title":{},"body":{"c/writing-intro.html#範例":{}}}],["x9593;&#x7684;&#x7e7c;&#x627f;&#x95dc;&#x4fc2",{"_index":1490,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x95dc;&#x4fc2;&#xff0c;&#x5b50;&#x985e;&#x5225",{"_index":1466,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x95dc;&#x65bc;&#x672c;&#x904a;&#x6232",{"_index":5270,"title":{},"body":{"java/gui.html#井字遊戲":{},"java/gui.html#井字遊戲的-Swing-版本":{}}}],["x95dc;&#x9375;&#x5b57",{"_index":1632,"title":{"java/class-and-obj.html#final-關鍵字":{}},"body":{}}],["x95dc;&#x9375;&#x5b57;&#x7528;&#x5728;&#x8b8a;&#x6578;&#x5ba3;&#x544a;&#x6642;&#xff0c;&#x8868;&#x793a;&#x8a72;&#x8b8a;&#x6578;&#x7684;&#x503c;&#x53ea;&#x80fd;&#x5728;&#x5ba3;&#x544a;&#x6642;&#x7d66;&#x5b9a;&#xff0c;&#x7136;&#x5f8c;&#x5c31;&#x4e0d;&#x80fd;&#x518d;&#x66f4;&#x6539;&#x4e86;&#x3002",{"_index":1633,"title":{},"body":{"java/class-and-obj.html#final-關鍵字":{}}}],["x95dc;&#x9375;&#x5b57;&#xff0c;compil",{"_index":3272,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["x95dc;&#x9375;&#x6642;&#x523b",{"_index":4662,"title":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}},"body":{}}],["x9644;&#x8a3b;&#xff1a",{"_index":907,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["x9644;&#x9304",{"_index":1085,"title":{},"body":{"c/writing-intro.html#文章的組成":{}}}],["x9663;&#x5217;&#x6642;&#x5c31;&#x7d66;&#x5b9a;&#x521d;&#x59cb;&#x503c",{"_index":1297,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["x9663;&#x5217;&#x7269;&#x4ef6;&#x662f;&#x53ea;&#x80fd;&#x5132;&#x5b58;&#x57fa;&#x672c;&#x8cc7;&#x6599;&#x578b;&#x614b;&#x6216",{"_index":1299,"title":{},"body":{"java/array.html#多維陣列":{}}}],["x9663;&#x5217;&#x7684;&#x7279;&#x6027",{"_index":1276,"title":{"java/array.html#Java-陣列的特性":{}},"body":{}}],["x9663;&#x5217;&#x7684;&#x9577;&#x5ea6;&#x53ef;&#x4ee5;&#x70ba",{"_index":1312,"title":{},"body":{"java/array.html#多維陣列":{}}}],["x9663;&#x5217;&#x7bc4;&#x4f8b",{"_index":1335,"title":{"java/array.html#陣列範例":{}},"body":{}}],["x9663;&#x5217;&#x7d22;&#x5f15;&#x7684;&#x6aa2;&#x67e5",{"_index":1315,"title":{"java/array.html#陣列索引的檢查":{}},"body":{}}],["x9664",{"_index":3667,"title":{},"body":{"java/java-vs-c.html#運算符號-Operator":{}}}],["x9664;&#x4e0a;&#x8ff0;&#x5916;&#xff0c;&#x5176;&#x4ed6;&#x578b;&#x5225;&#x9593;&#x7684;&#x8f49;&#x63db;&#x90fd;&#x5fc5;&#x9808;&#x4e0b;&#x9054;&#x578b;&#x5225;&#x8f49;&#x63db",{"_index":3606,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x9664;&#x4e86",{"_index":4719,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x9664;&#x4e86;&#x5fc5;&#x9808;&#x7531;&#x8a2d;&#x8a08;&#x8005;&#x4e0b;&#x9054;&#x5916",{"_index":3115,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["x9664;&#x4e86;&#x9019;&#x4e9b;&#x57fa;&#x672c;&#x8cc7;&#x6599;&#x578b;&#x5225;&#x5916;&#xff0c;java",{"_index":3621,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x9664;&#x53ef;&#x7528;&#x4f86;&#x4fee;&#x98fe;&#x8b8a;&#x6578;&#x5916;&#xff0c;&#x4e5f;&#x53ef;&#x653e;&#x5728",{"_index":3174,"title":{},"body":{"java/extends.html#final-修飾字":{}}}],["x9664;&#x6b64;&#x4e4b;&#x5916;&#xff0c",{"_index":1464,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x96a8;&#x6642;&#x53ef;&#x7531;&#x4f5c;&#x696d;&#x7cfb;&#x7d71;&#x5206;&#x914d;cpu&#x8cc7;&#x6e90;&#x3002",{"_index":4759,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x96d6;&#x7136",{"_index":4201,"title":{},"body":{"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{}}}],["x96d6;&#x7136;&#x4e0a;&#x9762;&#x7684;&#x7a0b;&#x5f0f;&#x6b63;&#x78ba;&#x7121;&#x8aa4;&#xff0c;&#x4f46;&#x4e26;&#x672a;&#x8003;&#x616e;&#x8cc7;&#x6e90;&#x4e0d;&#x8db3;&#x6642;&#x8a72;&#x5982;&#x4f55;&#x8655;&#x7406;&#x3002",{"_index":4727,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x96d6;&#x7136;&#x7a0b;&#x5f0f;&#x8a9e;&#x8a00;&#x63d0;&#x4f9b;&#x4e86;&#x57fa;&#x672c;&#x8cc7;&#x6599;&#x578b;&#x5225;&#xff0c;&#x4f46;&#x7531;&#x65bc;&#x5404;&#x7a2e;&#x61c9;&#x7528;&#x90fd;&#x6709;&#x5176;&#x7279;&#x5b9a;&#x7684;&#x8cc7;&#x6599;&#x7d50;&#x69cb;&#x9700;&#x6c42;&#xff0c;&#x56e0;&#x6b64;&#x7a0b;&#x5f0f;&#x8a9e;&#x8a00;&#x90fd;&#x63d0;&#x4f9b;&#x4f7f;&#x7528;&#x8005;&#x81ea;&#x8a02;&#x578b;&#x5225;&#x7684;&#x80fd;&#x529b;&#x3002;&#x578b;&#x5225;&#x81ea;&#x8a02;&#x5f8c;&#xff0c;&#x5176;&#x4f7f;&#x7528;&#x7684;&#x65b9;&#x6cd5;&#x548c;&#x57fa;&#x672c;&#x8cc7;&#x6599;&#x578b;&#x614b;&#x985e;&#x4f3c;&#x3002",{"_index":3217,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x96e2;&#x958b",{"_index":2500,"title":{},"body":{"java/easy-print.html#Print-java":{},"java/exception.html#相關語法":{}}}],["x96e2;&#x958b;synchronized&#x5340;&#x584a;&#x5f8c;,&#x6b64;thread&#x6703;&#x81ea;&#x52d5;&#x91cb;&#x653e;lock",{"_index":4718,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x96fb;&#x8166;&#x7cfb;&#x7d71;&#x67b6;&#x69cb",{"_index":477,"title":{},"body":{"c/system-intro.html#硬體元件":{}}}],["x9700;&#x8981",{"_index":3783,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["x975e",{"_index":756,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["x9810;&#x89bd",{"_index":2493,"title":{},"body":{"java/easy-print.html#Print-java":{}}}],["x9810;&#x89bd;&#x5831;&#x8868",{"_index":2490,"title":{},"body":{"java/easy-print.html#Print-java":{}}}],["x9817;&#x70ba;&#x967d;&#x6625;&#x3002",{"_index":5187,"title":{},"body":{"java/gui.html#GUI-簡介":{}}}],["x984c",{"_index":4413,"title":{},"body":{"java/net.html#SMTP-Client":{}}}],["x985e;&#x4f3c;&#x50cf",{"_index":2927,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x985e;&#x4f3c;&#xff0c;&#x4f46;&#x662f",{"_index":2988,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x985e;&#x5225",{"_index":1107,"title":{},"body":{"c/writing-intro.html#程式語言":{},"java/exception.html#相關語法":{}}}],["x985e;&#x5225;&#x3002;&#x76f8;&#x95dc;&#x7684",{"_index":2918,"title":{},"body":{"java/exception.html#相關語法":{}}}],["x985e;&#x5225;&#x4f86;&#x8868;&#x9054;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa",{"_index":3728,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x985e;&#x5225;&#x6210;&#x54e1;&#x7684;&#x5b58;&#x53d6",{"_index":2678,"title":{"java/encapsulation.html#類別成員的存取":{}},"body":{}}],["x985e;&#x5225;&#x65b9;&#x6cd5",{"_index":1488,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x985e;&#x5225;&#x7684;&#x7269;&#x4ef6",{"_index":3634,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["x985e;&#x5225;&#x7684;&#x7269;&#x4ef6;&#xff0c;&#x8acb;&#x554f;&#x900f;&#x904",{"_index":3243,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["x985e;&#x5225;&#x8207;&#x7269;&#x4ef6;&#x7684;&#x57fa;&#x672c;&#x6982;&#x5ff5",{"_index":1454,"title":{"java/class-and-obj.html#類別與物件的基本概念":{}},"body":{}}],["x985e;&#x5225;&#x88e1;&#x76f8;&#x5c0d;&#x61c9;&#x7684",{"_index":3734,"title":{},"body":{"java/java-vs-c.html#字串":{}}}],["x985e;&#x5225;&#x8b8a;&#x6578",{"_index":1486,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["x9867;&#x540d;&#x601d;&#x7fa9;&#xff0c;&#x5c31;&#x662f;&#x7576;&#x4f8b;&#x5916;&#x767c;&#x751f;&#x6642;&#x7684;&#x8655;&#x7406;&#x6a5f;&#x5236;&#x3002",{"_index":2891,"title":{},"body":{"java/exception.html#簡介":{}}}],["x986f;&#x793a;jfram",{"_index":5289,"title":{},"body":{"java/gui.html#文字編輯器":{}}}],["x9918",{"_index":515,"title":{},"body":{"c/system-intro.html#數字系統":{}}}],["x9918;&#x6578",{"_index":520,"title":{},"body":{"c/system-intro.html#數字系統":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["x9ede;&#x7684;&#x5047;&#x8a2d",{"_index":4709,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["x=fin.readlin",{"_index":5109,"title":{},"body":{"java/gui.html":{},"java/gui.html#文字編輯器":{},"java/examples/editor.html":{}}}],["x[100])&#x5247;&#x6b64;&#x51fd;&#x6578;&#x5c31;&#x53ea;&#x80fd;&#x63a5;&#x53d7;&#x9577;&#x5ea6;&#x70ba;100&#x7684;&#x9663;&#x5217",{"_index":1269,"title":{},"body":{"java/array.html#C-語言陣列回顧":{}}}],["x[100])則此函數就只能接受長度為100",{"_index":1151,"title":{},"body":{"java/array.html":{}}}],["x[i",{"_index":1156,"title":{},"body":{"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#Java-陣列的特性":{},"java/array.html#多維陣列":{},"java/array.html#陣列索引的檢查":{},"java/examples/guess-sever-client.html":{}}}],["x[i].length",{"_index":1170,"title":{},"body":{"java/array.html":{},"java/array.html#多維陣列":{}}}],["x[i][j",{"_index":1171,"title":{},"body":{"java/array.html":{},"java/array.html#多維陣列":{},"java/examples/matrix.html":{}}}],["x][i",{"_index":3379,"title":{},"body":{"java/io.html":{},"java/io.html#範例":{},"java/examples/file-handler.html":{},"java/examples/matrix.html":{}}}],["xb1",{"_index":736,"title":{},"body":{"c/system-intro.html#浮點數表示法":{}}}],["xff08;&#x5225;&#x5fd8;&#x4e86;&#x7d55;&#x5927;&#x90e8;&#x5206;&#x7c21;&#x55ae;&#x7684;&#x7bc4;&#x4f8b;&#x90fd;&#x6c92;&#x6709;&#x5ba3;&#x544a",{"_index":2723,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["xff0c",{"_index":206,"title":{},"body":{"c/c-intro.html#常用的-IO-函數":{},"java/class-and-obj.html#如何以Java撰寫類別":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#迴圈範例":{}}}],["xff0c;&#x4e26;&#x5728;&#x87a2;&#x5e55;&#x4e0a;&#x5370;&#x51fa;&#x6b63;&#x65b9;&#x5f62;&#xff0c",{"_index":3809,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["xff0c;&#x4e26;&#x5728;&#x87a2;&#x5e55;&#x4e0a;&#x5370;&#x51fa;&#x76f4;&#x89d2;&#x4e09;&#x89d2;&#x5f62;&#xff0c",{"_index":3822,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["xff0c;&#x4e26;&#x5728;&#x87a2;&#x5e55;&#x4e0a;&#x5370;&#x51fa;&#x7b49;&#x8170;&#x7684;&#x4e09;&#x89d2;&#x5f62;&#xff0c",{"_index":3826,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x5ba3;&#x544a;&#x8a72",{"_index":3325,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x6c92;&#x6709;&#x5be6;&#x4f5c;&#x7684;&#x610f;&#x601d;&#x3002",{"_index":3262,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["xff0c;&#x4e5f;&#x771f;&#x7169;&#x4eba;&#x3002;&#x56e0;&#x6b64",{"_index":2777,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["xff0c;&#x4ee5;&#x4fbf;&#x9032;&#x884c;&#x521d;&#x59cb;&#x5316;&#x7684;&#x52d5;&#x4f5c;&#x3002",{"_index":1557,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["xff0c;&#x4f46;&#x6700;&#x591a;&#x53ea;&#x80fd;&#x6709;&#x4e00;&#x500b;&#x5ba3;&#x544a;&#x70ba",{"_index":2741,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["xff0c;&#x4f8b;&#x5982",{"_index":3630,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["xff0c;&#x5176;&#x4e0b;&#x53c8;&#x6709;&#x8a31;&#x591a;&#x5b50;&#x985e;&#x5225",{"_index":5242,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff0c;&#x5176;&#x4ed6",{"_index":1499,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["xff0c;&#x5176;&#x521d;&#x59cb;&#x503c;&#x70ba",{"_index":3786,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["xff0c;&#x5176;&#x7684;&#x5167;&#x90e8;&#x72c0;&#x614b;&#x53ef;&#x80fd;&#x90fd;&#x4e0d;&#x4e00;&#x6a23",{"_index":1459,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["xff0c;&#x518d;&#x627e",{"_index":1305,"title":{},"body":{"java/array.html#多維陣列":{}}}],["xff0c;&#x5230;&#x76ee;&#x524d;&#x70ba;&#x6b62;&#x6240;&#x6709;&#x51fd;&#x6578;&#x7684;&#x547c;&#x53eb;&#x8def;&#x5f91;&#xff0c;&#x4ee5;&#x53ca;&#x9019;&#x4e9b;&#x547c;&#x53eb;&#x8def;&#x5f91;&#x4e0a;&#x6240;&#x7528;&#x5230;&#x7684;&#x5340;&#x57df;&#x8b8a;&#x6578;&#x3002;&#x7576;&#x7136;&#x7a0b;&#x5f0f;&#x7684;&#x57f7;&#x884c;&#x72c0;&#x614b;&#xff0c;&#x9664;&#x4e86;&#x7d00;&#x9304;&#x5728;&#x4e3b;&#x8a18;&#x61b6;&#x9ad4;&#x5916;&#xff0c;cpu",{"_index":4592,"title":{},"body":{"java/thread.html#Program-Process-Thread":{}}}],["xff0c;&#x5247",{"_index":2951,"title":{},"body":{"java/exception.html#相關語法":{}}}],["xff0c;&#x5247;&#x53ea;&#x8981;&#x7de8;&#x8b6f",{"_index":2831,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["xff0c;&#x5247;&#x53ef;&#x4e0b;&#x9054;&#x4ee5;&#x4e0b;&#x547d;&#x4ee4;&#xff1a",{"_index":989,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["xff0c;&#x5247;&#x6700;&#x5927;&#x516c;&#x56e0;&#x6578;&#x70ba",{"_index":3865,"title":{},"body":{"java/java-vs-c.html#遞迴-recursion-範例":{}}}],["xff0c;&#x5247;&#x8a72",{"_index":3321,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["xff0c;&#x540c;&#x4e00;&#x500b",{"_index":2711,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["xff0c;&#x5426;&#x5247;&#x5b50;&#x985e;&#x5225;&#x4e5f;&#x5fc5;&#x9808;&#x5ba3;&#x544a;&#x70ba",{"_index":3335,"title":{},"body":{"java/interface.html#Abstract-Class-and-Method":{}}}],["xff0c;&#x5426;&#x5247;&#x5c6c;&#x65bc",{"_index":1531,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["xff0c;&#x56e0;&#x6b64",{"_index":3103,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{},"java/interface.html#Java-有關-Interface-的語法":{}}}],["xff0c;&#x56e0;&#x6b64;&#x4e0d;&#x6703;&#x9020;&#x6210;&#x4efb;&#x4f55;&#x6df7;&#x6dc6;&#x3002",{"_index":3305,"title":{},"body":{"java/interface.html#Java-有關-Interface-的語法":{}}}],["xff0c;&#x56e0;&#x6b64;&#x53ef;&#x7528;&#x5169;&#x5c64;&#x8ff4;&#x5708;&#x4f86;&#x505a;&#x3002",{"_index":3815,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["xff0c;&#x56e0;&#x6b64;&#x57f7;&#x884c;&#x6642;&#x5370;&#x51fa",{"_index":3163,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["xff0c;&#x56e0;&#x6b64;&#x5fc5;&#x9808;&#x4f7f;&#x7528",{"_index":3113,"title":{},"body":{"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{}}}],["xff0c;&#x56e0;&#x6b64;&#x662f;&#x4f9d;&#x7167",{"_index":3158,"title":{},"body":{"java/extends.html#Virtual-Function-虛擬函數":{}}}],["xff0c;&#x56e0;&#x6b64;&#x9663;&#x5217;&#x7269;&#x4ef6;&#x7522;&#x751f;&#x5f8c;&#xff0c;&#x5c31;&#x4e0d;&#x80fd;&#x518d;&#x8b8a;&#x66f4;&#x5176;&#x9577;&#x5ea6;&#x4e86",{"_index":1283,"title":{},"body":{"java/array.html#Java-陣列的特性":{}}}],["xff0c;&#x5728;&#x547d;&#x4ee4;&#x5217;&#x4e0b;&#x6253",{"_index":984,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["xff0c;&#x5747;&#x9054;&#x5404;&#x8a72;&#x5b78;&#x671f;&#x4fee;&#x7fd2;&#x5b78;&#x5206;&#x7e3d;&#x6578;&#x4e8c;&#x5206;&#x4e4b;&#x4e00;&#x8005;&#x3002;\\n&#x4e09;&#x3001;&#x8996;&#x3001;&#x807d;&#x3001;&#x8a9e;&#x969c;&#x7919;&#x751f;&#xff1a;&#x5b78;&#x671f;&#x5b78;&#x696d;&#x6210;&#x7e3e;&#x7d2f;&#x8a08;&#x4e09;&#x5b78;&#x671f;&#x4e0d;&#x53ca;&#x683c;&#x79d1;&#x76ee;&#x4e4b;&#x5b78",{"_index":2521,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["xff0c;&#x5982;&#x679c",{"_index":3772,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["xff0c;&#x5982;&#x679c;&#x5b50;&#x985e;&#x5225;&#x548c;&#x7236;&#x985e;&#x5225;&#x5728;&#x540c;&#x4e00;&#x500b",{"_index":3122,"title":{},"body":{"java/extends.html#Override-覆寫":{}}}],["xff0c;&#x5982;&#x679c;&#x662f;&#x5247;&#x57f7;&#x884c;&#x8a72",{"_index":2935,"title":{},"body":{"java/exception.html#相關語法":{}}}],["xff0c;&#x5c31;&#x6703;&#x88ab;&#x6b78;&#x985e;&#x70ba;&#x300c;&#x533f;&#x540d;&#x300d;&#x7684",{"_index":2708,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["xff0c;&#x5f9e;&#x6578;&#x5b78;&#x5f0f;&#x5b50;&#x7684;&#x89d2;&#x5ea6;&#x770b;&#x597d;&#x50cf;&#x6c92;&#x554f;&#x984c;&#xff0c;&#x4f46;&#x5225;&#x5fd8;&#x4e86;&#xff0c;binari",{"_index":3769,"title":{},"body":{"java/java-vs-c.html#運算符號範例":{}}}],["xff0c;&#x6240;&#x4ee5;&#x90fd;&#x662f;&#x533f;&#x540d;&#x7684;&#xff09;&#x3002",{"_index":2724,"title":{},"body":{"java/encapsulation.html#Package-的定義":{}}}],["xff0c;&#x6703;&#x5177;&#x6709;&#x8a72",{"_index":1462,"title":{},"body":{"java/class-and-obj.html#類別與物件的基本概念":{}}}],["xff0c;&#x6703;&#x5f88;&#x7169;&#x4eba;&#xff0c;&#x56e0;&#x6b64",{"_index":2769,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["xff0c;&#x6bd4;&#x8f03",{"_index":2826,"title":{},"body":{"java/encapsulation.html#Java-檔和-Class-檔的相依性":{}}}],["xff0c;&#x70ba;&#x4e86;&#x6aa2;&#x67e5",{"_index":2754,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["xff0c;&#x7a0b;&#x5f0f;&#x5167;&#x7684",{"_index":3577,"title":{},"body":{"java/java-vs-c.html#Java-Virtual-Machine":{}}}],["xff0c;&#x800c;&#x662f;&#x7528",{"_index":3648,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["xff0c;&#x8868;&#x793a;&#x8a72",{"_index":1530,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["xff0c;&#x8ff4;&#x5708;&#x57f7;&#x884c;&#x7684;&#x6b21;&#x6578;&#x4ee5;&#x8b8a;&#x6578",{"_index":3789,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["xff0c;&#x90a3;&#x5c31;&#x66f4;&#x4e0d;&#x6703;&#x57f7;&#x884c;&#x5230",{"_index":2953,"title":{},"body":{"java/exception.html#相關語法":{}}}],["xff0c;&#x91cd;&#x8907;&#x6b64;&#x6b65;&#x9a5f;&#x76f4;&#x5230",{"_index":3835,"title":{},"body":{"java/java-vs-c.html#迴圈範例":{}}}],["xff0c;c",{"_index":3235,"title":{},"body":{"java/interface.html#為什麼-Java-提供-Interface":{}}}],["xff0c;java",{"_index":3616,"title":{},"body":{"java/java-vs-c.html#資料型別":{}}}],["xff0c;program",{"_index":941,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["xff1a",{"_index":2773,"title":{},"body":{"java/encapsulation.html#Package-的引用":{}}}],["xff1a;&#x4e00;&#x822c;&#x4e0d;&#x76f4;&#x63a5;&#x4f7f;&#x7528;&#xff0c;&#x5176;&#x5b50;&#x985e;&#x5225;&#x6709",{"_index":5246,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x4ee5;&#x7c21;&#x55ae;&#x7684;&#x5b57;&#x4e32;&#x63cf;&#x8ff0;&#x8a72;&#x4f8b;&#x5916",{"_index":2979,"title":{},"body":{"java/exception.html#相關語法":{}}}],["xff1a;&#x4f11;&#x606f",{"_index":4651,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["xff1a;&#x4f7f;&#x547c;&#x53eb;&#x6b64;&#x65b9;&#x6cd5;&#x7684",{"_index":4744,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["xff1a;&#x4f9b",{"_index":5252,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x5148;&#x8b93;&#x7d66;&#x5225;&#x7684",{"_index":4649,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["xff1a;&#x5177;&#x6709",{"_index":5230,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x5217;&#x51fa;&#x7d30;&#x7bc0;&#x8a0a;&#x606f",{"_index":2980,"title":{},"body":{"java/exception.html#相關語法":{}}}],["xff1a;&#x52fe;&#x9078",{"_index":5220,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x53ef;&#x4ee5;&#x986f;&#x793a;&#x6587;&#x5b57",{"_index":5232,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x53ef;&#x7528;&#x4ee5;&#x7de8;&#x8f2f;&#x6587;&#x5b57;&#xff0c;&#x5176;&#x5b50;&#x985e;&#x5225;&#x6709",{"_index":5235,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x53ef;&#x7528;&#x5728",{"_index":1517,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["xff1a;&#x547c;&#x53eb",{"_index":4653,"title":{},"body":{"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["xff1a;&#x5b9a;&#x7fa9;&#x65bc",{"_index":1544,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["xff1a;&#x5c07",{"_index":966,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["xff1a;&#x5c07;&#x5806;&#x758a;&#x8cc7;&#x8a0a;&#x5370;&#x5728;&#x87a2;&#x5e55;&#x4e0a;&#xff0c;&#x53ef;&#x5e6b;&#x52a9;&#x8a2d;&#x8a08;&#x8005;&#x5feb;&#x901f;&#x627e;&#x5230;&#x932f;&#x8aa4;&#x9ed",{"_index":2981,"title":{},"body":{"java/exception.html#相關語法":{}}}],["xff1a;&#x5c07;&#x5e7e;&#x500b",{"_index":973,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["xff1a;&#x62c9;&#x4e0b;&#x5f0f;&#x8868;&#x55a",{"_index":5221,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x6372;&#x8ef8",{"_index":5234,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x6372;&#x8ef8;&#x8868;&#x55a",{"_index":5233,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x6700;&#x4e0a;&#x5c64;&#x7684;&#x8996;&#x7a97;&#xff0c;&#x53c8;&#x6709",{"_index":5224,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x6709;&#x5169;&#x500b;&#x5b50;&#x985e;&#x5225",{"_index":5251,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x6c92;&#x6709;&#x986f;&#x793a;&#x7684;&#x5bb9;&#x5668",{"_index":5229,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x7528;&#x4f86;&#x7522;&#x751f;&#x65b0;&#x7684;&#x7269;&#x4ef6;&#x3002;&#x5f8c;&#x9762;&#x5fc5;&#x9808;&#x8ddf;&#x8457;&#x67d0;&#x500b",{"_index":1556,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["xff1a;&#x7531",{"_index":5257,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x7a0b;&#x5f0f;&#x8a2d;&#x8a08;&#x5e2b;&#x5229;&#x7528;&#x6b64;&#x5de5;&#x5177;&#x7de8;&#x8f2f",{"_index":957,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["xff1a;&#x7a7a;&#x767d;&#x7684;&#x65b9;&#x5f62;&#x5340;&#x57df",{"_index":5219,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x7d50;&#x5408",{"_index":960,"title":{},"body":{"c/system-operation.html#Software-development-process":{}}}],["xff1a;&#x8868;&#x793a;&#x76ee;&#x524d;&#x9019;&#x500b;&#x7269;&#x4ef6",{"_index":1543,"title":{},"body":{"java/class-and-obj.html#如何以Java撰寫類別":{}}}],["xff1a;&#x88e1;&#x9762;&#x9084;&#x53ef;&#x4ee5;&#x653e;&#x5165;&#x5176;&#x4ed6",{"_index":5222,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x8996;&#x7a97;&#x72c0;&#x614b;&#x6539;&#x8b8a",{"_index":5254,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;&#x8b93;&#x7b49;&#x5f85;&#x8a72",{"_index":4754,"title":{},"body":{"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{}}}],["xff1a;an",{"_index":5259,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;awt",{"_index":5255,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;compon",{"_index":5243,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;contain",{"_index":5247,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;gain",{"_index":5250,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1a;scrollbar",{"_index":5244,"title":{},"body":{"java/gui.html#AWT":{}}}],["xff1b;&#x4f7f;&#x7528",{"_index":4626,"title":{},"body":{"java/thread.html#如何產生-Thread":{}}}],["xff1b;&#x5c0d",{"_index":3182,"title":{},"body":{"java/extends.html#繼承關係下的-Constructor-執行順序":{}}}],["xij",{"_index":5705,"title":{},"body":{"java/examples/matrix.html":{}}}],["xik*ykj",{"_index":5712,"title":{},"body":{"java/examples/matrix.html":{}}}],["xor",{"_index":3445,"title":{},"body":{"java/java-vs-c.html":{},"java/java-vs-c.html#運算符號-Operator":{}}}],["xx",{"_index":786,"title":{},"body":{"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{}}}],["xx&#x3000",{"_index":901,"title":{},"body":{"c/system-operation.html#虛擬機器的指令集":{}}}],["y",{"_index":25,"title":{},"body":{"c/c-intro.html":{},"c/system-intro.html":{},"c/system-intro.html#如何表示整數資料":{},"c/system-operation.html":{},"c/system-operation.html#虛擬機器的指令集":{},"java/array.html":{},"java/array.html#C-語言陣列回顧":{},"java/array.html#陣列範例":{},"java/container.html":{},"java/container.html#範例程式":{},"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/java-vs-c.html":{},"java/java-vs-c.html#Java-Virtual-Machine":{},"java/java-vs-c.html#字串":{},"java/java-vs-c.html#運算符號範例":{},"java/java-vs-c.html#迴圈範例":{},"java/jdbc.html":{},"c/examples/fibonacci-number.html":{},"c/examples/least-common-multiple.html":{},"java/examples/bingo.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/tower-of-hanoi.html":{}}}],["y&#xff0c;&#x6b64;&#x6642",{"_index":636,"title":{},"body":{"c/system-intro.html#如何表示整數資料":{}}}],["y'",{"_index":5401,"title":{},"body":{"java/examples/bingo.html":{}}}],["y+(height",{"_index":2161,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["y+(height+f.getheight",{"_index":2169,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#圖形與字型公用程式":{}}}],["y.choos",{"_index":5403,"title":{},"body":{"java/examples/bingo.html":{}}}],["y.print",{"_index":5397,"title":{},"body":{"java/examples/bingo.html":{}}}],["y.setchecked(num",{"_index":5400,"title":{},"body":{"java/examples/bingo.html":{}}}],["y.tablename+sep+y.columnnam",{"_index":4140,"title":{},"body":{"java/jdbc.html":{}}}],["y=foo(x",{"_index":27,"title":{},"body":{"c/c-intro.html":{}}}],["y[j]==x[i",{"_index":5697,"title":{},"body":{"java/examples/guess-sever-client.html":{}}}],["year",{"_index":1025,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{},"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["year+period",{"_index":2345,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["year=\\&apo",{"_index":2557,"title":{},"body":{"java/easy-print.html#印表範例":{}}}],["yes100=>oper",{"_index":1050,"title":{},"body":{"c/writing-intro.html":{}}}],["yes100mod100(y",{"_index":1057,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["yes400",{"_index":1060,"title":{},"body":{"c/writing-intro.html":{},"c/writing-intro.html#範例":{}}}],["yes400=>oper",{"_index":1052,"title":{},"body":{"c/writing-intro.html":{}}}],["yield",{"_index":4446,"title":{},"body":{"java/thread.html":{},"java/thread.html#Thread-的優先權與影響資源的相關方法":{}}}],["yij",{"_index":5706,"title":{},"body":{"java/examples/matrix.html":{}}}],["ylnoticestud",{"_index":2332,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["ylnoticestudent)data.elementat(getdataindex",{"_index":2410,"title":{},"body":{"java/easy-print.html":{},"java/easy-print.html#印表範例":{}}}],["yu",{"_index":101,"title":{},"body":{"c/c-intro.html":{},"java/array.html":{},"java/array.html#陣列範例":{},"java/easy-print.html":{},"java/easy-print.html#Print-java":{},"java/easy-print.html#PrintCanvas-java":{},"java/easy-print.html#圖形與字型公用程式":{},"java/easy-print.html#印表範例":{},"java/io.html":{},"java/io.html#範例":{},"java/jdbc.html":{},"java/net.html":{},"java/net.html#SMTP-Client":{},"java/net.html#HTTP-Server":{},"java/gui.html":{},"java/gui.html#鍵盤事件處理範例":{},"c/examples/find-prime-numbers.html":{},"java/examples/eight-queens-puzzle.html":{},"java/examples/engineering-calculator.html":{},"java/examples/file-handler.html":{},"java/examples/guess-sever-client.html":{},"java/examples/matrix.html":{},"java/examples/minesweeper.html":{},"java/examples/reverse-matrix.html":{},"java/examples/sudoku.html":{},"java/examples/tax-calculate.html":{},"java/examples/tower-of-hanoi.html":{}}}],["y是main裡的i",{"_index":28,"title":{},"body":{"c/c-intro.html":{}}}],["z",{"_index":34,"title":{},"body":{"c/c-intro.html":{},"java/container.html":{},"java/container.html#範例程式":{},"c/examples/fibonacci-number.html":{},"java/examples/engineering-calculator.html":{},"java/examples/matrix.html":{}}}],["zero",{"_index":5589,"title":{},"body":{"java/examples/engineering-calculator.html":{}}}],["zij",{"_index":5704,"title":{},"body":{"java/examples/matrix.html":{}}}],["zip",{"_index":2618,"title":{},"body":{"java/encapsulation.html":{},"java/encapsulation.html#Package-的定義":{}}}],["zipcod",{"_index":2322,"title":{},"body":{"java/easy-print.html":{}}}]],"pipeline":["stemmer"]},"store":{"index.html":{"title":"index","path":"/index.html","body":"Index Page"},"index.html#Index-Page":{"title":"Index Page","path":"/index.html#Index-Page","body":""},"c/c-intro.html":{"title":"C 語言的總覽","path":"/c/c-intro.html","body":"一個 C 語言程式長得如下的範例: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 /* * 註解 */ # include stdio.h int x; int main ()  int y; // main裡的y x = 1 ; y=foo(x); // 這裡的y是main裡的y printf ( \"I have done\\n\" ); return 0 ;  int foo ( int z)  int y; // foo裡的y return z;  C 語言是由一個以上的函數所組成的，函數的名稱只能宣告一次，其中有個特別的函數叫做 main，是 C 程式開始執行的地方。以 /* 註解 */ 括起來的部分，以及 // 後面直到行尾的部分是註解，所謂註解是指該部分只是給人看的，並不會影響 Compiler 的編譯結果。原始程式碼由 # 號開頭的部分，是交由前置處理器來處理； #include 這個前置處理器命令，是把 Source code file 和其後的 Header file 合成為另一個修改過的 Source code file。換言之， #include stdio.h 其功能就好比我們用文字處理器將系統目錄內的 stdio.h 檔案插入到 #include 的位置上。 C 語言並不要求一定要引入 stdio.h ，此範例要寫 #include stdio.h 的原因在於程式內使用了 printf 函數，這個函數是存在於系統程式庫內，為了讓 Compiler 了解 printf 是在別的地方定義的，因此要將宣告 printf 長相的 stdio.h 包含進來。 有時候你會看到 1 # include \"my.h\" #include 後面的檔名可用  或  括起來，其差別在於  表示系統的引入檔，在 UNIX 的 gcc 會去目錄 /usr/include 下面找,  則表示使用者的引入檔，preprocessor 會在和這個 .c 一樣的目錄下尋找。為甚麼要分  或  這兩種呢？硬碟上的空間被分成很多樹狀的目錄，不同的目錄下可以存在同名的目錄，這就像每個系每個年級都有 26 號同學，要區分這些 26 號同學，我們得說 『資管大一 26 號』或『跟我在同一個房間內的 26 號』. #include 26 號 就像說 『資管大一 26 號』， #include 26 號 則像『跟我在同一個房間內的 26 號』。 第二行的 1 int x; 是宣告全域 (global) 變數 x 的型態為 int(整數)。合法的變數名稱是由英文字母或底線開頭，後面可加上不定長的文數字和底線，如 _x123 。所謂變數宣告是要求 compiler 在某個記憶體上配置足夠容納該型態的空間，對 C 語言來說，int 型態比較複雜一點，其大小在不同的平台上可能不同，但以目前 32 bits 的機器而言，int 一般為 4 個 bytes 大小，因此 int x; 這個指令，是要 compiler 在某塊記憶體上 (對程式設計師而言不用管實際上在哪裡) 分配 4 個 bytes 準備放資料，而這 4 個 bytes 的記憶體我們在程式內就以 x 這個符號來代表他。凡是宣告在函數之外的變數，都可稱為全域變數。 函數的宣告包含幾個部分：傳回值、函數名稱、 () 內的參數列、以及 {} 內的程式碼。 1 int main ()  表示 main 這個函數不需要參數，其傳回值的型態為 int 每一個函數寫作的開始和結束點，是由 {} 來表達。函數可以有多行的敘述 (statement)。每一個敘述由分號 ; 或右大括弧 } 結尾。敘述分成兩大類，第一類是變數宣告，第二類是運算指令，運算指令可以是運算式或流程控制敘述。敘述只能寫在函數裡面，不像變數可以宣告在函數外面成為全域變數。C 語言要求運算指令內所用到的變數必須在該運算指令前宣告。變數宣告的寫法為 1 型態名稱 變數名稱 ; C 語言的合法型態名稱及意義請參見型別的詳細說明。 1 int y; 要 compiler 準備 4 個 bytes 的空間，以存放 int，並將該空間以 y 這個符號代表。 1 x = 1 ; 表示將整數 1 複製到 x 所代表的記憶體。此處的 x 指的是宣告在 main 函數之前的 x 1 y=foo(x); 表示將整數 x 的值複製到堆疊上，CALL foo，然後將傳回值 (可能是放在暫存器或某塊記憶體上面) 複製到整數 y 。詳情見函數與遞迴 1 return 0 ; 表示將整數 0 回傳給呼叫 main 的函數。是誰呼叫 main 呢? 這就由作業系統負責了，此處不做詳述。 1 int foo ( int z)  宣告呼叫 foo 這個函數時，需要傳入一個 int 當參數 (事實上此 int 是放在稱為 Stack 的某塊記憶體上)，這個在堆疊上的變數我們稱之為 z。 1 int y; 在堆疊上產生新的變數 y ，此 y 和 main 裡面宣告的 y 是完全不同的變數。 1 return z; 表示將整數 z 記憶體的內容複製到暫存器上，然後以此數值當做 foo 函數的傳回值。 如果一個變數定義在函數的外面 (如範例裡的 x )，則此變數稱為 global variable(全域變數)。全域變數的可見範圍 (意思是哪些函數) 是程式內的所有函數 (前面有 static , extern 等修飾字的情況於後面的章節再討論)；其存在期間從該程式執行就存在，程式結束該變數才會消失。 如果變數是定義在函數裡面 (如範例裡的 y )，則此變數稱為 local variable(區域變數) 或 auto variable(自動變數)。區域變數的可見範圍僅侷限於定義該變數的函數；其存在期間則是開始於該函數被呼叫時，結束於該函數 return 時。換言之，如果 foo() 被呼叫了兩次，則 foo 裡宣告的 y 就會產生兩次。在 C 語言的執行環境下，區域變數會存放在堆疊上。 寫作程式時，需注意以下風格： 程式開頭應加註解，說明用途，建立時間，修改時間與內容，作者，使用工具 函數的開頭也應對此函數註解說明 見到 {應內縮四個空格，以讓程式容易閱讀 每一敘述應獨立一行，也就是說看到;{應該換行 以下是寫作的範例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 /* * Program Name: h2.c * Subject: \"Introduction to Programming\" Homework for practice of loop and I/O. * Since 1997/10/27 * 2004/03/03, add more comment * 2008/09/28, correct comments typing error * ToolKit: gcc * Author: Shiuh-Sheng Yu * Dept. of Information Management * National ChiNan University */ # include stdio.h /** * print out rectangle * @param size length of the rectangle */ void print_rectangle ( int size)  int i, j; for (i = 1 ; i = size; i++)  for (j = 1 ; j = size; j++)  printf ( \"*\" );  printf ( \"\\n\" );   /** * Read size from keyboard as long as the size is between 1 and 40, * then call print_rectangel to print on screen */ int main ()  int size = 0 ; while ( scanf ( \"%d\" ,&amp;size)  0 &amp;&amp; size  0 &amp;&amp; size  = 40 )  print_rectangle(size);   常用的 IO 函數 C 語言沒有定義標準函數庫 (Library), 但因為 IO 是撰寫程式幾乎一定要用到的功能, 因此我們在此說明不同平台上都會提供的 printf 和 scanf 函數, 以方便讀者寫作程式。這兩個函數或許在不同平台上的某些特殊用法會有點小出入, 但大致上是相同的。 最簡單的 printf 用法如下： 1 printf ( \"Hello World.\\n\" ); 這會在標準輸出裝置 (內定是螢幕) 上印出 Hello World。然後換行 &#39;\\n&#39; 表示換行字元。如果我們要印出變數的內容，可以使用如下的形式 1 2 3 4 5 6 7 8 9 10 # include stdio.h int main ()  int varInt = 0 ; long varLong = 0 ; float varFloat = 2 ; double varDouble = 0 ; char varChar = 'A' ; char *varString = \"Hello\" ; printf ( \"varInt=%d, varLong=%ld, varFloat=%f, varDouble=%lf, varChar=%c, varString=%s\\n\" ,varInt, varLong, varFloat, varDouble, varChar, varString);  printf 的第一個參數是一個字串，字串內以 % 開頭的符號有特別意義，表示此部份要用後面的參數取代。 %d 或 %i 以十進位數字表示 int， %x 以十六進位表示 int， %f 表示浮點數 (float or double)， %c 表示字元， %s 表示字串， %% 表示 % ， %3d 表示最少 3 個數字靠右不足 3 個填空白， %-3d 表示最少 3 個數字靠左不足 3 個填空白， %03d 表示最少 3 個數字靠右不足 3 個填 0。如果要印出 % 號的話怎麼辦，那就用 %% 來代表了。 printf 相關參數如下 %d %i 十進位整數 %u unsigned 十進位整數 %x unsigned 16 進位整數，小寫表示 (a-f) %X unsigned 16 進位整數，大寫表示 (A-F) %o unsigned 8 進位整數 以上加 - 和數字表示左對齊最少幾位，如 %-9d 表示左切齊最少印 9 位 以上加 + 和數字表示右對齊最少幾位，如 %+9d 表示右切齊最少印 9 位，不足處補空白 以上加 + 和 0 開頭的數字表示右對齊最少幾位，不足補 0，如 %+09d 表示右切齊最少印 9 位，不足處補 0 %ld 以十進位印出 long %lld 以十進位印出 long long %f 浮點數 float %e %E 科學表示法浮點數 double, %e 小寫 %E 大寫 %g %G 依照 double 的數值自動選擇以 %f 或 %e 格式印出 以上加 - 和具有小數點的數字表示左對齊最少幾位，如 %-9.2f 表示左切齊最少印 9 位，其中小數點以下 2 位 以上加 + 和具有小數點的數字表示右對齊最少幾位，如 %=9.2f 表示右切齊最少印 9 位，其中小數點以下 2 位 %c unsigned char %s string(array of char terminated by 0) %p pointer to void %% 印出 % printf() 傳回整數，代表輸出的字元數 scanf 用來做輸入，其參數和 printf 很類似，但要記得 int 用 %i 或 %d unsigned 用 %u float 用 %f double 用 %lf long 用 %ld long long 用 %lld short 用 %hd scanf() 傳回整數，代表有幾個成功讀入。 1 2 3 4 5 6 7 8 # include stdio.h int main ()  int varInt; long varLong; float varFloat; double varDouble; scanf ( \"%d%l%f%lf\" , &amp;varInt, &amp;varLong, &amp;varFloat, &amp;varDouble); "},"c/c-intro.html#常用的-IO-函數":{"title":"&#x5E38;&#x7528;&#x7684; IO &#x51FD;&#x6578;","path":"/c/c-intro.html#常用的-IO-函數","body":"C &#x8A9E;&#x8A00;&#x6C92;&#x6709;&#x5B9A;&#x7FA9;&#x6A19;&#x6E96;&#x51FD;&#x6578;&#x5EAB; (Library), &#x4F46;&#x56E0;&#x70BA; IO &#x662F;&#x64B0;&#x5BEB;&#x7A0B;&#x5F0F;&#x5E7E;&#x4E4E;&#x4E00;&#x5B9A;&#x8981;&#x7528;&#x5230;&#x7684;&#x529F;&#x80FD;, &#x56E0;&#x6B64;&#x6211;&#x5011;&#x5728;&#x6B64;&#x8AAA;&#x660E;&#x4E0D;&#x540C;&#x5E73;&#x53F0;&#x4E0A;&#x90FD;&#x6703;&#x63D0;&#x4F9B;&#x7684; printf &#x548C; scanf &#x51FD;&#x6578;, &#x4EE5;&#x65B9;&#x4FBF;&#x8B80;&#x8005;&#x5BEB;&#x4F5C;&#x7A0B;&#x5F0F;&#x3002;&#x9019;&#x5169;&#x500B;&#x51FD;&#x6578;&#x6216;&#x8A31;&#x5728;&#x4E0D;&#x540C;&#x5E73;&#x53F0;&#x4E0A;&#x7684;&#x67D0;&#x4E9B;&#x7279;&#x6B8A;&#x7528;&#x6CD5;&#x6703;&#x6709;&#x9EDE;&#x5C0F;&#x51FA;&#x5165;, &#x4F46;&#x5927;&#x81F4;&#x4E0A;&#x662F;&#x76F8;&#x540C;&#x7684;&#x3002; &#x6700;&#x7C21;&#x55AE;&#x7684; printf &#x7528;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; 1 printf ( Hello World.\\n ); &#x9019;&#x6703;&#x5728;&#x6A19;&#x6E96;&#x8F38;&#x51FA;&#x88DD;&#x7F6E; (&#x5167;&#x5B9A;&#x662F;&#x87A2;&#x5E55;) &#x4E0A;&#x5370;&#x51FA; Hello World&#x3002;&#x7136;&#x5F8C;&#x63DB;&#x884C; &apos;\\n&apos; &#x8868;&#x793A;&#x63DB;&#x884C;&#x5B57;&#x5143;&#x3002;&#x5982;&#x679C;&#x6211;&#x5011;&#x8981;&#x5370;&#x51FA;&#x8B8A;&#x6578;&#x7684;&#x5167;&#x5BB9;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x7684;&#x5F62;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 # include stdio.h int main () { int varInt = 0 ; long varLong = 0 ; float varFloat = 2 ; double varDouble = 0 ; char varChar = &apos;A&apos; ; char *varString = Hello ; printf ( varInt=%d, varLong=%ld, varFloat=%f, varDouble=%lf, varChar=%c, varString=%s\\n ,varInt, varLong, varFloat, varDouble, varChar, varString); } printf &#x7684;&#x7B2C;&#x4E00;&#x500B;&#x53C3;&#x6578;&#x662F;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#xFF0C;&#x5B57;&#x4E32;&#x5167;&#x4EE5; % &#x958B;&#x982D;&#x7684;&#x7B26;&#x865F;&#x6709;&#x7279;&#x5225;&#x610F;&#x7FA9;&#xFF0C;&#x8868;&#x793A;&#x6B64;&#x90E8;&#x4EFD;&#x8981;&#x7528;&#x5F8C;&#x9762;&#x7684;&#x53C3;&#x6578;&#x53D6;&#x4EE3;&#x3002; %d &#x6216; %i &#x4EE5;&#x5341;&#x9032;&#x4F4D;&#x6578;&#x5B57;&#x8868;&#x793A; int&#xFF0C; %x &#x4EE5;&#x5341;&#x516D;&#x9032;&#x4F4D;&#x8868;&#x793A; int&#xFF0C; %f &#x8868;&#x793A;&#x6D6E;&#x9EDE;&#x6578; (float or double)&#xFF0C; %c &#x8868;&#x793A;&#x5B57;&#x5143;&#xFF0C; %s &#x8868;&#x793A;&#x5B57;&#x4E32;&#xFF0C; %% &#x8868;&#x793A; % &#xFF0C; %3d &#x8868;&#x793A;&#x6700;&#x5C11; 3 &#x500B;&#x6578;&#x5B57;&#x9760;&#x53F3;&#x4E0D;&#x8DB3; 3 &#x500B;&#x586B;&#x7A7A;&#x767D;&#xFF0C; %-3d &#x8868;&#x793A;&#x6700;&#x5C11; 3 &#x500B;&#x6578;&#x5B57;&#x9760;&#x5DE6;&#x4E0D;&#x8DB3; 3 &#x500B;&#x586B;&#x7A7A;&#x767D;&#xFF0C; %03d &#x8868;&#x793A;&#x6700;&#x5C11; 3 &#x500B;&#x6578;&#x5B57;&#x9760;&#x53F3;&#x4E0D;&#x8DB3; 3 &#x500B;&#x586B; 0&#x3002;&#x5982;&#x679C;&#x8981;&#x5370;&#x51FA; % &#x865F;&#x7684;&#x8A71;&#x600E;&#x9EBC;&#x8FA6;&#xFF0C;&#x90A3;&#x5C31;&#x7528; %% &#x4F86;&#x4EE3;&#x8868;&#x4E86;&#x3002; printf &#x76F8;&#x95DC;&#x53C3;&#x6578;&#x5982;&#x4E0B; %d %i &#x5341;&#x9032;&#x4F4D;&#x6574;&#x6578; %u unsigned &#x5341;&#x9032;&#x4F4D;&#x6574;&#x6578; %x unsigned 16 &#x9032;&#x4F4D;&#x6574;&#x6578;&#xFF0C;&#x5C0F;&#x5BEB;&#x8868;&#x793A; (a-f) %X unsigned 16 &#x9032;&#x4F4D;&#x6574;&#x6578;&#xFF0C;&#x5927;&#x5BEB;&#x8868;&#x793A; (A-F) %o unsigned 8 &#x9032;&#x4F4D;&#x6574;&#x6578; &#x4EE5;&#x4E0A;&#x52A0; - &#x548C;&#x6578;&#x5B57;&#x8868;&#x793A;&#x5DE6;&#x5C0D;&#x9F4A;&#x6700;&#x5C11;&#x5E7E;&#x4F4D;&#xFF0C;&#x5982; %-9d &#x8868;&#x793A;&#x5DE6;&#x5207;&#x9F4A;&#x6700;&#x5C11;&#x5370; 9 &#x4F4D; &#x4EE5;&#x4E0A;&#x52A0; + &#x548C;&#x6578;&#x5B57;&#x8868;&#x793A;&#x53F3;&#x5C0D;&#x9F4A;&#x6700;&#x5C11;&#x5E7E;&#x4F4D;&#xFF0C;&#x5982; %+9d &#x8868;&#x793A;&#x53F3;&#x5207;&#x9F4A;&#x6700;&#x5C11;&#x5370; 9 &#x4F4D;&#xFF0C;&#x4E0D;&#x8DB3;&#x8655;&#x88DC;&#x7A7A;&#x767D; &#x4EE5;&#x4E0A;&#x52A0; + &#x548C; 0 &#x958B;&#x982D;&#x7684;&#x6578;&#x5B57;&#x8868;&#x793A;&#x53F3;&#x5C0D;&#x9F4A;&#x6700;&#x5C11;&#x5E7E;&#x4F4D;&#xFF0C;&#x4E0D;&#x8DB3;&#x88DC; 0&#xFF0C;&#x5982; %+09d &#x8868;&#x793A;&#x53F3;&#x5207;&#x9F4A;&#x6700;&#x5C11;&#x5370; 9 &#x4F4D;&#xFF0C;&#x4E0D;&#x8DB3;&#x8655;&#x88DC; 0 %ld &#x4EE5;&#x5341;&#x9032;&#x4F4D;&#x5370;&#x51FA; long %lld &#x4EE5;&#x5341;&#x9032;&#x4F4D;&#x5370;&#x51FA; long long %f &#x6D6E;&#x9EDE;&#x6578; float %e %E &#x79D1;&#x5B78;&#x8868;&#x793A;&#x6CD5;&#x6D6E;&#x9EDE;&#x6578; double, %e &#x5C0F;&#x5BEB; %E &#x5927;&#x5BEB; %g %G &#x4F9D;&#x7167; double &#x7684;&#x6578;&#x503C;&#x81EA;&#x52D5;&#x9078;&#x64C7;&#x4EE5; %f &#x6216; %e &#x683C;&#x5F0F;&#x5370;&#x51FA; &#x4EE5;&#x4E0A;&#x52A0; - &#x548C;&#x5177;&#x6709;&#x5C0F;&#x6578;&#x9EDE;&#x7684;&#x6578;&#x5B57;&#x8868;&#x793A;&#x5DE6;&#x5C0D;&#x9F4A;&#x6700;&#x5C11;&#x5E7E;&#x4F4D;&#xFF0C;&#x5982; %-9.2f &#x8868;&#x793A;&#x5DE6;&#x5207;&#x9F4A;&#x6700;&#x5C11;&#x5370; 9 &#x4F4D;&#xFF0C;&#x5176;&#x4E2D;&#x5C0F;&#x6578;&#x9EDE;&#x4EE5;&#x4E0B; 2 &#x4F4D; &#x4EE5;&#x4E0A;&#x52A0; + &#x548C;&#x5177;&#x6709;&#x5C0F;&#x6578;&#x9EDE;&#x7684;&#x6578;&#x5B57;&#x8868;&#x793A;&#x53F3;&#x5C0D;&#x9F4A;&#x6700;&#x5C11;&#x5E7E;&#x4F4D;&#xFF0C;&#x5982; %=9.2f &#x8868;&#x793A;&#x53F3;&#x5207;&#x9F4A;&#x6700;&#x5C11;&#x5370; 9 &#x4F4D;&#xFF0C;&#x5176;&#x4E2D;&#x5C0F;&#x6578;&#x9EDE;&#x4EE5;&#x4E0B; 2 &#x4F4D; %c unsigned char %s string(array of char terminated by 0) %p pointer to void %% &#x5370;&#x51FA; % printf() &#x50B3;&#x56DE;&#x6574;&#x6578;&#xFF0C;&#x4EE3;&#x8868;&#x8F38;&#x51FA;&#x7684;&#x5B57;&#x5143;&#x6578; scanf &#x7528;&#x4F86;&#x505A;&#x8F38;&#x5165;&#xFF0C;&#x5176;&#x53C3;&#x6578;&#x548C; printf &#x5F88;&#x985E;&#x4F3C;&#xFF0C;&#x4F46;&#x8981;&#x8A18;&#x5F97; int &#x7528; %i &#x6216; %d unsigned &#x7528; %u float &#x7528; %f double &#x7528; %lf long &#x7528; %ld long long &#x7528; %lld short &#x7528; %hd scanf() &#x50B3;&#x56DE;&#x6574;&#x6578;&#xFF0C;&#x4EE3;&#x8868;&#x6709;&#x5E7E;&#x500B;&#x6210;&#x529F;&#x8B80;&#x5165;&#x3002; 1 2 3 4 5 6 7 8 # include stdio.h int main () { int varInt; long varLong; float varFloat; double varDouble; scanf ( %d%l%f%lf , &amp;varInt, &amp;varLong, &amp;varFloat, &amp;varDouble); }"},"c/system-intro.html":{"title":"電腦系統概論","path":"/c/system-intro.html","body":"電腦是一種用來處理資訊的機器。我們可以用圖一的 “輸入 – 處理 – 輸出” 的模型來描述電腦系統工作的方式。這個 “輸入 – 處理 – 輸出” 的模型是由電腦硬體、軟體和資料等三個元件所組成。電腦硬體是作為輸出入資料和處理資料的實體媒介。系統軟體和應用軟體則提供了電腦硬體執行指令的確實順序。資料是我們用來表達資訊的媒介，他們以用各種不同的格式存在，並可被電腦系統處理。以規腦硬體和系統軟體組成了電腦系統的架構 (Computer System Architecture)，以提供使用者在其上執行應用程式和處理資料。 圖一 電腦系統處理程序 硬體元件 一個簡化的典型的電腦系統架構可由圖二來表示。電腦的運算是由中央處理單元 (Central Processing Unit, CPU) 來執行。它包含了控制單元 (Control Unit, CU) 和算術邏輯單元 (Arithmetic and Logic Unit, ALU) 兩大部份。控制單元用來解釋電腦指令，搬移 CPU 內部資料，以指揮協調 CPU 各部份的運作。ALU 是電腦指令主要的執行部份，它又可細分成加法器、乘法器、及多個暫存器 (Register) 等部份。暫存器是 CPU 內部用來儲存資料的地方。 記憶體是用來儲存程式和資料的地方。一般又稱為 RAM(Random Access Memory) 或 Main Memory(主記憶體)。我們可將記憶體視為由一個個小格子所組成的陣列，每個格子內都儲存著一個二進位數字以代表程式指令或資料。我們給每一個格子一個特有的編號，稱為地址 (Address)，就像我們的門牌號碼一樣，可供 CPU 定址某一塊記憶體。 輸入輸出 (Input / Output, I/O) 裝置是我們最常見的硬體元件。常見的輸入元件有鍵盤、滑鼠、搖桿、DVD 光碟機 (或燒錄機) 等。常見的輸出元件有螢幕、印表機、喇叭等。可同時做輸入輸出的元件有磁碟機、磁帶機等儲存媒介及網路卡等。CPU、RAM 和之間是由匯流排 (Bus) 連接起來。Bus 係作為連接其上各硬體元件交換電子資料的路徑。 圖二 電腦系統架構 軟體元件 軟體元件是由許多的程式 (Program) 所組成。這些程式是用來指揮電腦硬體的運作，以達我們的工作。我們一般將軟體分為系統軟體和應用軟體兩大類。系統軟體幫我們管理檔案、分配電腦的各種資源、執行程式以及從鍵盤接收我們的命令。其中和管理電腦相關的一些程式我們稱為作業系統 (Operating System)，如 Window NT 和 UNIX 都是一種作業系統。而應用軟體則幫助我們完成特定的工作，如 Word 可用來編輯文書，Excel 可用來作分析計算等。作業系統是電腦系統不可或缺的一部份，當電腦啟動時，首先會執行儲存在唯讀是記憶體 (Read Only Memory, ROM) 內的程式，此程式會從本地磁碟機或透過網路從伺服器的磁碟機上將作業系統載入記憶體 (Random Access Memory, RAM) 內執行，然後我們就可以透過輸入裝置下達命令，以執行應用程式來處理我們的資料。 數字系統 數字表示法 在十進位系統中，43 = 4 * 10 + 3，而 527 = 5 * 10 2 + 2 * 10 + 7。目前的電腦大多使用二進位系統，我們稱一個二進位數字為一個位元 (Bit，Binary Digit)。由於 bit 實在太小了，現在記憶體的最小儲存單位通常為 8 bits，又稱為 byte。下圖是二進位系統的計數方式： 二進位 等於 十進位 0 0 * 2 0 0 1 1 * 2 0 1 10 1 * 2 1 + 0 * 2 0 2 11 1 * 2 1 + 1 * 2 0 3 100 1 * 2 2 + 0 * 2 1 + 0 * 2 0 4 101 1 * 2 2 + 0 * 2 1 + 1 * 2 0 5 110 1 * 2 2 + 1 * 2 1 + 0 * 2 0 6 111 1 * 2 2 + 1 * 2 1 + 1 * 2 0 7 1000 1 * 2 3 + 0 * 2 2 + 0 * 2 1 + 0 * 2 0 8 1001 1 * 2 3 + 0 * 2 2 + 0 * 2 1 + 1 * 2 0 9 1010 1 * 2 3 + 0 * 2 2 + 1 * 2 1 + 0 * 2 0 10 一般而言，以 B 為底的 K 個數字所能表達的範圍為 R = BK。以二進位為例，不同的位元數所能表達的數字如下表： 位元數 表達範圍 1 2 4 16 8 256 10 1,024 16 65,536 20 1,048,576 32 4,294,967,296 64 約等於 1.6 * 10 19 128 約等於 2.6 * 10 38 不同數字系統的數值運算 十進位加法表 + 0 1 2 3 4 5 6 7 8 9 0 0 1 2 3 4 5 6 7 8 9 1 1 2 3 4 5 6 7 8 9 10 2 2 3 4 5 6 7 8 9 10 11 3 3 4 5 6 7 8 9 10 11 12 4 4 5 6 7 8 9 10 11 12 13 二進位加法表 + 0 1 0 0 1 1 1 10 八進位加法表 + 0 1 2 3 4 5 6 7 0 0 1 2 3 4 5 6 7 1 1 2 3 4 5 6 7 10 2 2 3 4 5 6 7 10 11 3 3 4 5 6 7 10 11 12 4 4 5 6 7 10 11 12 13 5 5 6 7 10 11 12 13 14 6 6 7 10 11 12 13 14 15 7 7 10 11 12 13 14 15 16 不同數字系統間的轉換 13754 8 = ??? 10 (8 4 ) (8 3 ) (8 2 ) (8 1 ) (8 0 ) 4096 512 64 8 1 X 1 3 7 5 4 4096 + 1536 + 448 + 40 + 4 = 6124 10 6124 10 = ?????? 5 6124 10 = x * 5 n + … + a * 5 1 + b * 5 0 將兩邊除以 5 會得到 1224 餘 4 = x * 5 n-1 + … + a * 5 0 餘 b 因此可求得 b = 4. 重複此過程可得解如下： X 進位 數字 餘數 5 6124 4 5 1224 4 5 244 4 5 48 3 5 9 4 5 1 1 5 0 因此 6124 10 = 143444 5 其他數字系統間的轉換：先轉成十進位再轉成另一個數字系統。 十六進位數字與運算 在電腦系統中我們通常以八個 Bits 為一個單位稱為位元組 (Byte)。因為 2 4 = 16，我們通常以兩個十六進位數字來表示一個位元組，因此十六進位系統是除了二進位系統外另一個常用的數字系統。在十六進位系統中我們以 ABCDEF 來表示 10 到 15 的數字。其加法表和乘法表請自行畫出。二進位和十六進位間很容易轉換, 這是因為 16 = 2 4 , 所以每 4 個一組的 2 進位數字, 可以直接轉成 1 個 16 進位的數字。如 11010111011000 這個二進位數字我們可以由右至左把他分為 11 0101 1101 1000 四組，各組數字翻成十六進位就成為 35D8 16 。若要轉成 8 進位，由於 8 = 2 3 因此由右至左每三個一組 011 010 111 011 000 = 32730 8 。 小數點的處理 試問 0.12201 3 = 0.??? 10 == 0.12201 3 = 1/3 + 2/9 + 2/27 + 0/81 + 1/243 = 0.33333 + 0.22222+0.07407 + 0.00412 = 0.63374 10 或 (81 + 2 * 27 + 2 * 9 + 1) / 243 = 0.63374 試問 0.828125 10 = 0.??? 2 0.828125 10 = a * 2 -1 + b * 2 -2 + c * 2 -3 … 兩邊乘 2 可得 1.656250 = a + b * 2 -1 + c * 2 -2 … 因此 a 為 1. 重複此過程得解如下： 0.828125 * 2 == 1.656250 * 2 (-1 後乘 2) == 1.3125 * 2 (-1 後乘 2) == 0.625 * 2 == 1.25 * 2 (-1 後乘 2) == 0.5 * 2 == 1 所以 0.828125 10 = 0.110101 2 資料格式 程式可以用任意的格式來儲存和處理資料，這樣的格式我們稱為專屬格式。但為了便於在不同的硬體和軟體平台間交換資料，我們必須用標準的格式來表示資料。標準格式通常是由國際標準組織訂定，或因某類軟體廣為流行而後成為標準。常見的資料型態和標準如下表： 資料型態 標準 字元 (character) ASCII, EBCDIC, Unicode 影像 (位元應對 bit map) GIF, JPEG, TIFF, Windows Butmap 影像 (物件) PICT, PostScript 向量圖形與字型 PostScript, TrueType 聲音 Sound Blaster, WAV 視訊 MPEG, QuickTime ANSI(American National Standards Institute) 所制訂的 ASCII(American Standard Code for Information Interchange) 及 IBM 所定義 EBCDIC(Extended Binary Coded Decimal Interchange Code) 是兩種常用的英文文數字元編碼方式。EBCDIC 是 8 bits 的編碼方式 (只定義了 2 8 =256 個字元)，目前僅限於 IBM 的大型主機和終端機使用。ASCII 則是 7 bits 的編碼 (只定義了 2 7 = 128 個字元, 很多程設書的附錄都有表可查)，目前廣泛使用於各種電腦和終端機。近年來 ISO(International StandardsOrganization) 在 ASCII 的基礎上為不同的語言訂定了不同的 8 bits 編碼。不過 8 bits 僅能表示 256 個字元，對象形字語言是不夠的。因此 IOS 提出了 16 bits 的 Unicode 以取代舊有的 7 bits 和 8 bits 字元。Unicode 試圖將世界上的主要語言全部納入，在一個編碼空間下表達所有的語言文字。目前 Java 語言是採用 Unicode 作為其編碼的方式。Windows 也採用 Unicode。 常見的字元輸入裝置：鍵盤 (keyboard)、光學辨識機 (Optical Character Recognition, OCR)、條碼機 (bar code reader)、語音輸入、中文手寫辨識、打孔機 (punched card)。 不管資料的格式為何，電腦內部都是以不同大小的二進位數字來代表。這些二進位數字的解釋方法是由兩個因素來決定： CPU 所能處理的運算。 用來產生應用程式的程式語言所能提供的資料型態。 如何表示整數資料 有號整數 有一種方法稱為 “符號與大小表示法”：第一個 bit 作為正負號，其他的 bits 為大小。缺點是不好運算，因為加法的運算方法和運算元的正負號有關。當兩個運算子同號時，只要將數字大小的部份相加，正負號與運算元相同即可，但當兩個運算子的符號不同時，則要以減法來處理大小的部份，正負號則視相減的結果而定。這種表示法也會造成電腦邏輯線路設計上的困擾。 減法比加法難實作的原因是減法需要一直借位, 而加法只要記得前一對數字加起來有沒有進位即可。有人就想出一種數字系統，可以用二進位的加法取代減法，讓邏輯線路設計簡單，跑起來又快的。 就是補數系統。 補數 (Complement) 我們先以最多兩個數字的 10 進位數字系統為例。 60 - 30 = 60 + 70 - 100。 而 - 100 可以藉由 “忽略溢位” 來達成。所謂 “溢位” 是指數字計算的結果超過硬體線路所能表達的範圍，以兩個數字的 10 進位數字系統為例，只能表達 0-99，所以算出來的結果若大於 99 就發生 “溢位” 。而 “忽略溢位” 在此例中就是指 “丟棄” “忽視” “省略” 第 3 位數的意思。因此 - 30 就可由 + 70 與 “忽略溢位” 來達成。接下來的問題就是如何由 30 得到 70？ 70 = 99 - 30 + 1。讀者此時的疑問是，減法又跑出來了，這樣會比較快嗎？請注意 99 減任意數都不需要借位，因此線路比較好設計。補數的觀念用到二進位時，效用就更大了。所有都是一的二進位數 111111，減去二進位數 X，得到 Y，此時 X 和 Y 每一個對應的 bit 都是相反的，如 1111 - 0101 = 1010。換言之，求二進位的補數可以用 bit inverse 來取代減法，而 bit inverse 則是最容易實作的電路。99 - 30 稱為 30 的 9 補數，99 - 30 + 1 稱為 30 的 10 補數。 令 Y 為 10 進位所能表達的最大數字, 則在 9 補數中 X 的負數是以 (Y-X) 來表達. 例如最多 3 位數的 10 進位系統中，300 的 9 補數以 (999-300)=699 來表達. 因此最多 3 位數的 10 進位系統中, 其 9 補數的對照表如下 500 …999 | 0…499 -499…-000 | 0…499 上表是說 999 代表 - 0，998 代表 - 1，997 代表 - 2，…，500 代表 - 499。9 補數有兩個 0，+0 和 - 0，可表達的範圍在 - 499 ~ +499。 10 補數中 X 的負數則定義為 (Y-X+1)，因此最多 3 位數的 10 進位系統中，其 10 補數對照表如下: 500 …999 | 0…499 -500…-001 | 0…499 上表是說 999 代表 - 1，998 代表 - 2，997 代表 - 3，…，500 代表 - 500。所以 10 補數能表達的範圍在 - 500 ~ +499。 9 補數減法：將 - X 的運算, 改為 + (-X), 若有溢位, 則將結果再加 1 420-170 = 420 + 829 = 1249 = 249 + 1 100 - 350 = 100 + 649 = 749 -100-200 = 899 + 799 = 1698 = 698 + 1 10 補數減法則不必考慮溢位 2 進位補數 (2’ complement) 的特殊之處 由於2進位只有0和1兩個數字，你會發現： 1 - 0 = 1 1 - 1 = 0 二進位所能表達的最大數字Y是一個全部都是 1 的數字，在 1 補數中，-X 是以 (Y-X) 來表達，因此你會發覺 X 和 (Y-X) 的每一個 bit 都是不一樣的。例如： 1 2 3 Y: 11111111 X: 01110011 Y-X: 10001100 因此在二進位的 1 補數系統中，不需要用到減法，只要將 X 的每一個 bit 都反過來，就可得到 -X 了. 浮點數表示法 本節是為了完整敘述各種數字的表達法而寫的，讀者若看不懂，並不會影響對 C 語言的瞭解，因此可跳過此節的細節部份。 前面介紹了整數的表達法，但對許多應用來說 (尤其是科學運算)，整數是不夠用的，必須用到浮點數才行。為甚麼不說是 “實數”，而要說 “浮點數” 呢? 這是因為電腦是 “有限位數的二進位系統”，所以能表達的數字有限，不但不能表達像 π 這種無理數，甚至無法表達 1/3 這個有理數。而且各種應用所需的數字大小和精準度不同，有些要表達很大數字 (像天文學)，有些要表達很小的數字 (像高能物理學)，如何設計一種 “可表達範圍很大且有小數” 的二進位表示法，就成為一項挑戰。各位還記得科學符號表示法嗎? 2008 這個數字的科學符號表示法是 2.008E 3 。E 代表指數 (Exponential) 部份，所以 2.008E3 是表示 2.008 * 103 的意思。因為這種表達法的小數點不會固定放在個位數後面，而是會依據所要表達的數字大小而 “浮動”，所以才會被稱為是 “浮點數”。我們常用 32 bits(C 稱為 float) 或 64 bits(C 稱為 double) 來存放浮點數，其標準由 IEEE 制定。它表達的是這種形式的科學符號: +0.01E10 表示 (1+1/4) * 2 2 。老師你寫錯了吧，應該是 (1/4) * 2 2 吧? 這是因為二進位系統中只有 0 和 1 兩個數字，因此正規化後的科學符號表示法的整數部份一定是 1，換句話說任何數字都長這個樣子，±1.mmmmEee，既然整數一定是 1，那就不要浪費了，以便可以表達更大範圍的數字。上述例子的 ± 稱為 (Sign bit)， ee 部份稱為 Exponential(指數)，mmmm 稱為 Mantissa(尾數)，以下的 SEM 就是這幾個字的縮寫。 一個 IEEE(Institude of Electric and Electronic Engineering，電子電機工程協會，是一個全球最大的學術組織) 32 位元的浮點數以下面的格式來表示： SEM 其中 S 占 1bit 為正負號，E 占 8bits 為指數部份，M 占 23bits 為尾數部份。其中指數部份採用 excess-127 表示法，即範圍為 -127~128，但 0 和 255 有特殊意義，所以實際範圍為 -126 ~ +127 指數部份 小數部份 所代表的值 0 +-0 0 0 非 0 +-2 -126 * 0.M 1 ~ 254 任何值 +-2 E-127 * 1.M 255 +-0 +-infinite 255 非 0 特殊狀況 (NaN) IEEE 64 位元浮點數表示法 SEM 其中 S 占 1bit 為正負號，E 占 11bits 為指數部份，M 占 52bits 為尾數部份。 其中指數部份採用 excess-1023, 表示範圍超過 10 + -300 次方"},"c/system-intro.html#硬體元件":{"title":"&#x786C;&#x9AD4;&#x5143;&#x4EF6;","path":"/c/system-intro.html#硬體元件","body":"&#x4E00;&#x500B;&#x7C21;&#x5316;&#x7684;&#x5178;&#x578B;&#x7684;&#x96FB;&#x8166;&#x7CFB;&#x7D71;&#x67B6;&#x69CB;&#x53EF;&#x7531;&#x5716;&#x4E8C;&#x4F86;&#x8868;&#x793A;&#x3002;&#x96FB;&#x8166;&#x7684;&#x904B;&#x7B97;&#x662F;&#x7531;&#x4E2D;&#x592E;&#x8655;&#x7406;&#x55AE;&#x5143; (Central Processing Unit, CPU) &#x4F86;&#x57F7;&#x884C;&#x3002;&#x5B83;&#x5305;&#x542B;&#x4E86;&#x63A7;&#x5236;&#x55AE;&#x5143; (Control Unit, CU) &#x548C;&#x7B97;&#x8853;&#x908F;&#x8F2F;&#x55AE;&#x5143; (Arithmetic and Logic Unit, ALU) &#x5169;&#x5927;&#x90E8;&#x4EFD;&#x3002;&#x63A7;&#x5236;&#x55AE;&#x5143;&#x7528;&#x4F86;&#x89E3;&#x91CB;&#x96FB;&#x8166;&#x6307;&#x4EE4;&#xFF0C;&#x642C;&#x79FB; CPU &#x5167;&#x90E8;&#x8CC7;&#x6599;&#xFF0C;&#x4EE5;&#x6307;&#x63EE;&#x5354;&#x8ABF; CPU &#x5404;&#x90E8;&#x4EFD;&#x7684;&#x904B;&#x4F5C;&#x3002;ALU &#x662F;&#x96FB;&#x8166;&#x6307;&#x4EE4;&#x4E3B;&#x8981;&#x7684;&#x57F7;&#x884C;&#x90E8;&#x4EFD;&#xFF0C;&#x5B83;&#x53C8;&#x53EF;&#x7D30;&#x5206;&#x6210;&#x52A0;&#x6CD5;&#x5668;&#x3001;&#x4E58;&#x6CD5;&#x5668;&#x3001;&#x53CA;&#x591A;&#x500B;&#x66AB;&#x5B58;&#x5668; (Register) &#x7B49;&#x90E8;&#x4EFD;&#x3002;&#x66AB;&#x5B58;&#x5668;&#x662F; CPU &#x5167;&#x90E8;&#x7528;&#x4F86;&#x5132;&#x5B58;&#x8CC7;&#x6599;&#x7684;&#x5730;&#x65B9;&#x3002; &#x8A18;&#x61B6;&#x9AD4;&#x662F;&#x7528;&#x4F86;&#x5132;&#x5B58;&#x7A0B;&#x5F0F;&#x548C;&#x8CC7;&#x6599;&#x7684;&#x5730;&#x65B9;&#x3002;&#x4E00;&#x822C;&#x53C8;&#x7A31;&#x70BA; RAM(Random Access Memory) &#x6216; Main Memory(&#x4E3B;&#x8A18;&#x61B6;&#x9AD4;)&#x3002;&#x6211;&#x5011;&#x53EF;&#x5C07;&#x8A18;&#x61B6;&#x9AD4;&#x8996;&#x70BA;&#x7531;&#x4E00;&#x500B;&#x500B;&#x5C0F;&#x683C;&#x5B50;&#x6240;&#x7D44;&#x6210;&#x7684;&#x9663;&#x5217;&#xFF0C;&#x6BCF;&#x500B;&#x683C;&#x5B50;&#x5167;&#x90FD;&#x5132;&#x5B58;&#x8457;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x4F4D;&#x6578;&#x5B57;&#x4EE5;&#x4EE3;&#x8868;&#x7A0B;&#x5F0F;&#x6307;&#x4EE4;&#x6216;&#x8CC7;&#x6599;&#x3002;&#x6211;&#x5011;&#x7D66;&#x6BCF;&#x4E00;&#x500B;&#x683C;&#x5B50;&#x4E00;&#x500B;&#x7279;&#x6709;&#x7684;&#x7DE8;&#x865F;&#xFF0C;&#x7A31;&#x70BA;&#x5730;&#x5740; (Address)&#xFF0C;&#x5C31;&#x50CF;&#x6211;&#x5011;&#x7684;&#x9580;&#x724C;&#x865F;&#x78BC;&#x4E00;&#x6A23;&#xFF0C;&#x53EF;&#x4F9B; CPU &#x5B9A;&#x5740;&#x67D0;&#x4E00;&#x584A;&#x8A18;&#x61B6;&#x9AD4;&#x3002; &#x8F38;&#x5165;&#x8F38;&#x51FA; (Input / Output, I/O) &#x88DD;&#x7F6E;&#x662F;&#x6211;&#x5011;&#x6700;&#x5E38;&#x898B;&#x7684;&#x786C;&#x9AD4;&#x5143;&#x4EF6;&#x3002;&#x5E38;&#x898B;&#x7684;&#x8F38;&#x5165;&#x5143;&#x4EF6;&#x6709;&#x9375;&#x76E4;&#x3001;&#x6ED1;&#x9F20;&#x3001;&#x6416;&#x687F;&#x3001;DVD &#x5149;&#x789F;&#x6A5F; (&#x6216;&#x71D2;&#x9304;&#x6A5F;) &#x7B49;&#x3002;&#x5E38;&#x898B;&#x7684;&#x8F38;&#x51FA;&#x5143;&#x4EF6;&#x6709;&#x87A2;&#x5E55;&#x3001;&#x5370;&#x8868;&#x6A5F;&#x3001;&#x5587;&#x53ED;&#x7B49;&#x3002;&#x53EF;&#x540C;&#x6642;&#x505A;&#x8F38;&#x5165;&#x8F38;&#x51FA;&#x7684;&#x5143;&#x4EF6;&#x6709;&#x78C1;&#x789F;&#x6A5F;&#x3001;&#x78C1;&#x5E36;&#x6A5F;&#x7B49;&#x5132;&#x5B58;&#x5A92;&#x4ECB;&#x53CA;&#x7DB2;&#x8DEF;&#x5361;&#x7B49;&#x3002;CPU&#x3001;RAM &#x548C;&#x4E4B;&#x9593;&#x662F;&#x7531;&#x532F;&#x6D41;&#x6392; (Bus) &#x9023;&#x63A5;&#x8D77;&#x4F86;&#x3002;Bus &#x4FC2;&#x4F5C;&#x70BA;&#x9023;&#x63A5;&#x5176;&#x4E0A;&#x5404;&#x786C;&#x9AD4;&#x5143;&#x4EF6;&#x4EA4;&#x63DB;&#x96FB;&#x5B50;&#x8CC7;&#x6599;&#x7684;&#x8DEF;&#x5F91;&#x3002; &#x5716;&#x4E8C; &#x96FB;&#x8166;&#x7CFB;&#x7D71;&#x67B6;&#x69CB;"},"c/system-intro.html#軟體元件":{"title":"&#x8EDF;&#x9AD4;&#x5143;&#x4EF6;","path":"/c/system-intro.html#軟體元件","body":"&#x8EDF;&#x9AD4;&#x5143;&#x4EF6;&#x662F;&#x7531;&#x8A31;&#x591A;&#x7684;&#x7A0B;&#x5F0F; (Program) &#x6240;&#x7D44;&#x6210;&#x3002;&#x9019;&#x4E9B;&#x7A0B;&#x5F0F;&#x662F;&#x7528;&#x4F86;&#x6307;&#x63EE;&#x96FB;&#x8166;&#x786C;&#x9AD4;&#x7684;&#x904B;&#x4F5C;&#xFF0C;&#x4EE5;&#x9054;&#x6211;&#x5011;&#x7684;&#x5DE5;&#x4F5C;&#x3002;&#x6211;&#x5011;&#x4E00;&#x822C;&#x5C07;&#x8EDF;&#x9AD4;&#x5206;&#x70BA;&#x7CFB;&#x7D71;&#x8EDF;&#x9AD4;&#x548C;&#x61C9;&#x7528;&#x8EDF;&#x9AD4;&#x5169;&#x5927;&#x985E;&#x3002;&#x7CFB;&#x7D71;&#x8EDF;&#x9AD4;&#x5E6B;&#x6211;&#x5011;&#x7BA1;&#x7406;&#x6A94;&#x6848;&#x3001;&#x5206;&#x914D;&#x96FB;&#x8166;&#x7684;&#x5404;&#x7A2E;&#x8CC7;&#x6E90;&#x3001;&#x57F7;&#x884C;&#x7A0B;&#x5F0F;&#x4EE5;&#x53CA;&#x5F9E;&#x9375;&#x76E4;&#x63A5;&#x6536;&#x6211;&#x5011;&#x7684;&#x547D;&#x4EE4;&#x3002;&#x5176;&#x4E2D;&#x548C;&#x7BA1;&#x7406;&#x96FB;&#x8166;&#x76F8;&#x95DC;&#x7684;&#x4E00;&#x4E9B;&#x7A0B;&#x5F0F;&#x6211;&#x5011;&#x7A31;&#x70BA;&#x4F5C;&#x696D;&#x7CFB;&#x7D71; (Operating System)&#xFF0C;&#x5982; Window NT &#x548C; UNIX &#x90FD;&#x662F;&#x4E00;&#x7A2E;&#x4F5C;&#x696D;&#x7CFB;&#x7D71;&#x3002;&#x800C;&#x61C9;&#x7528;&#x8EDF;&#x9AD4;&#x5247;&#x5E6B;&#x52A9;&#x6211;&#x5011;&#x5B8C;&#x6210;&#x7279;&#x5B9A;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x5982; Word &#x53EF;&#x7528;&#x4F86;&#x7DE8;&#x8F2F;&#x6587;&#x66F8;&#xFF0C;Excel &#x53EF;&#x7528;&#x4F86;&#x4F5C;&#x5206;&#x6790;&#x8A08;&#x7B97;&#x7B49;&#x3002;&#x4F5C;&#x696D;&#x7CFB;&#x7D71;&#x662F;&#x96FB;&#x8166;&#x7CFB;&#x7D71;&#x4E0D;&#x53EF;&#x6216;&#x7F3A;&#x7684;&#x4E00;&#x90E8;&#x4EFD;&#xFF0C;&#x7576;&#x96FB;&#x8166;&#x555F;&#x52D5;&#x6642;&#xFF0C;&#x9996;&#x5148;&#x6703;&#x57F7;&#x884C;&#x5132;&#x5B58;&#x5728;&#x552F;&#x8B80;&#x662F;&#x8A18;&#x61B6;&#x9AD4; (Read Only Memory, ROM) &#x5167;&#x7684;&#x7A0B;&#x5F0F;&#xFF0C;&#x6B64;&#x7A0B;&#x5F0F;&#x6703;&#x5F9E;&#x672C;&#x5730;&#x78C1;&#x789F;&#x6A5F;&#x6216;&#x900F;&#x904E;&#x7DB2;&#x8DEF;&#x5F9E;&#x4F3A;&#x670D;&#x5668;&#x7684;&#x78C1;&#x789F;&#x6A5F;&#x4E0A;&#x5C07;&#x4F5C;&#x696D;&#x7CFB;&#x7D71;&#x8F09;&#x5165;&#x8A18;&#x61B6;&#x9AD4; (Random Access Memory, RAM) &#x5167;&#x57F7;&#x884C;&#xFF0C;&#x7136;&#x5F8C;&#x6211;&#x5011;&#x5C31;&#x53EF;&#x4EE5;&#x900F;&#x904E;&#x8F38;&#x5165;&#x88DD;&#x7F6E;&#x4E0B;&#x9054;&#x547D;&#x4EE4;&#xFF0C;&#x4EE5;&#x57F7;&#x884C;&#x61C9;&#x7528;&#x7A0B;&#x5F0F;&#x4F86;&#x8655;&#x7406;&#x6211;&#x5011;&#x7684;&#x8CC7;&#x6599;&#x3002;"},"c/system-intro.html#數字系統":{"title":"&#x6578;&#x5B57;&#x7CFB;&#x7D71;","path":"/c/system-intro.html#數字系統","body":"&#x6578;&#x5B57;&#x8868;&#x793A;&#x6CD5; &#x5728;&#x5341;&#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x4E2D;&#xFF0C;43 = 4 * 10 + 3&#xFF0C;&#x800C; 527 = 5 * 10 2 + 2 * 10 + 7&#x3002;&#x76EE;&#x524D;&#x7684;&#x96FB;&#x8166;&#x5927;&#x591A;&#x4F7F;&#x7528;&#x4E8C;&#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#xFF0C;&#x6211;&#x5011;&#x7A31;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x4F4D;&#x6578;&#x5B57;&#x70BA;&#x4E00;&#x500B;&#x4F4D;&#x5143; (Bit&#xFF0C;Binary Digit)&#x3002;&#x7531;&#x65BC; bit &#x5BE6;&#x5728;&#x592A;&#x5C0F;&#x4E86;&#xFF0C;&#x73FE;&#x5728;&#x8A18;&#x61B6;&#x9AD4;&#x7684;&#x6700;&#x5C0F;&#x5132;&#x5B58;&#x55AE;&#x4F4D;&#x901A;&#x5E38;&#x70BA; 8 bits&#xFF0C;&#x53C8;&#x7A31;&#x70BA; byte&#x3002;&#x4E0B;&#x5716;&#x662F;&#x4E8C;&#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x7684;&#x8A08;&#x6578;&#x65B9;&#x5F0F;&#xFF1A; &#x4E8C;&#x9032;&#x4F4D; &#x7B49;&#x65BC; &#x5341;&#x9032;&#x4F4D; 0 0 * 2 0 0 1 1 * 2 0 1 10 1 * 2 1 + 0 * 2 0 2 11 1 * 2 1 + 1 * 2 0 3 100 1 * 2 2 + 0 * 2 1 + 0 * 2 0 4 101 1 * 2 2 + 0 * 2 1 + 1 * 2 0 5 110 1 * 2 2 + 1 * 2 1 + 0 * 2 0 6 111 1 * 2 2 + 1 * 2 1 + 1 * 2 0 7 1000 1 * 2 3 + 0 * 2 2 + 0 * 2 1 + 0 * 2 0 8 1001 1 * 2 3 + 0 * 2 2 + 0 * 2 1 + 1 * 2 0 9 1010 1 * 2 3 + 0 * 2 2 + 1 * 2 1 + 0 * 2 0 10 &#x4E00;&#x822C;&#x800C;&#x8A00;&#xFF0C;&#x4EE5; B &#x70BA;&#x5E95;&#x7684; K &#x500B;&#x6578;&#x5B57;&#x6240;&#x80FD;&#x8868;&#x9054;&#x7684;&#x7BC4;&#x570D;&#x70BA; R = BK&#x3002;&#x4EE5;&#x4E8C;&#x9032;&#x4F4D;&#x70BA;&#x4F8B;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x4F4D;&#x5143;&#x6578;&#x6240;&#x80FD;&#x8868;&#x9054;&#x7684;&#x6578;&#x5B57;&#x5982;&#x4E0B;&#x8868;&#xFF1A; &#x4F4D;&#x5143;&#x6578; &#x8868;&#x9054;&#x7BC4;&#x570D; 1 2 4 16 8 256 10 1,024 16 65,536 20 1,048,576 32 4,294,967,296 64 &#x7D04;&#x7B49;&#x65BC; 1.6 * 10 19 128 &#x7D04;&#x7B49;&#x65BC; 2.6 * 10 38 &#x4E0D;&#x540C;&#x6578;&#x5B57;&#x7CFB;&#x7D71;&#x7684;&#x6578;&#x503C;&#x904B;&#x7B97; &#x5341;&#x9032;&#x4F4D;&#x52A0;&#x6CD5;&#x8868; + 0 1 2 3 4 5 6 7 8 9 0 0 1 2 3 4 5 6 7 8 9 1 1 2 3 4 5 6 7 8 9 10 2 2 3 4 5 6 7 8 9 10 11 3 3 4 5 6 7 8 9 10 11 12 4 4 5 6 7 8 9 10 11 12 13 &#x4E8C;&#x9032;&#x4F4D;&#x52A0;&#x6CD5;&#x8868; + 0 1 0 0 1 1 1 10 &#x516B;&#x9032;&#x4F4D;&#x52A0;&#x6CD5;&#x8868; + 0 1 2 3 4 5 6 7 0 0 1 2 3 4 5 6 7 1 1 2 3 4 5 6 7 10 2 2 3 4 5 6 7 10 11 3 3 4 5 6 7 10 11 12 4 4 5 6 7 10 11 12 13 5 5 6 7 10 11 12 13 14 6 6 7 10 11 12 13 14 15 7 7 10 11 12 13 14 15 16 &#x4E0D;&#x540C;&#x6578;&#x5B57;&#x7CFB;&#x7D71;&#x9593;&#x7684;&#x8F49;&#x63DB; 13754 8 = ??? 10 (8 4 ) (8 3 ) (8 2 ) (8 1 ) (8 0 ) 4096 512 64 8 1 X 1 3 7 5 4 4096 + 1536 + 448 + 40 + 4 = 6124 10 6124 10 = ?????? 5 6124 10 = x * 5 n + &#x2026; + a * 5 1 + b * 5 0 &#x5C07;&#x5169;&#x908A;&#x9664;&#x4EE5; 5 &#x6703;&#x5F97;&#x5230; 1224 &#x9918; 4 = x * 5 n-1 + &#x2026; + a * 5 0 &#x9918; b &#x56E0;&#x6B64;&#x53EF;&#x6C42;&#x5F97; b = 4. &#x91CD;&#x8907;&#x6B64;&#x904E;&#x7A0B;&#x53EF;&#x5F97;&#x89E3;&#x5982;&#x4E0B;&#xFF1A; X &#x9032;&#x4F4D; &#x6578;&#x5B57; &#x9918;&#x6578; 5 6124 4 5 1224 4 5 244 4 5 48 3 5 9 4 5 1 1 5 0 &#x56E0;&#x6B64; 6124 10 = 143444 5 &#x5176;&#x4ED6;&#x6578;&#x5B57;&#x7CFB;&#x7D71;&#x9593;&#x7684;&#x8F49;&#x63DB;&#xFF1A;&#x5148;&#x8F49;&#x6210;&#x5341;&#x9032;&#x4F4D;&#x518D;&#x8F49;&#x6210;&#x53E6;&#x4E00;&#x500B;&#x6578;&#x5B57;&#x7CFB;&#x7D71;&#x3002; &#x5341;&#x516D;&#x9032;&#x4F4D;&#x6578;&#x5B57;&#x8207;&#x904B;&#x7B97; &#x5728;&#x96FB;&#x8166;&#x7CFB;&#x7D71;&#x4E2D;&#x6211;&#x5011;&#x901A;&#x5E38;&#x4EE5;&#x516B;&#x500B; Bits &#x70BA;&#x4E00;&#x500B;&#x55AE;&#x4F4D;&#x7A31;&#x70BA;&#x4F4D;&#x5143;&#x7D44; (Byte)&#x3002;&#x56E0;&#x70BA; 2 4 = 16&#xFF0C;&#x6211;&#x5011;&#x901A;&#x5E38;&#x4EE5;&#x5169;&#x500B;&#x5341;&#x516D;&#x9032;&#x4F4D;&#x6578;&#x5B57;&#x4F86;&#x8868;&#x793A;&#x4E00;&#x500B;&#x4F4D;&#x5143;&#x7D44;&#xFF0C;&#x56E0;&#x6B64;&#x5341;&#x516D;&#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x662F;&#x9664;&#x4E86;&#x4E8C;&#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x5916;&#x53E6;&#x4E00;&#x500B;&#x5E38;&#x7528;&#x7684;&#x6578;&#x5B57;&#x7CFB;&#x7D71;&#x3002;&#x5728;&#x5341;&#x516D;&#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x4E2D;&#x6211;&#x5011;&#x4EE5; ABCDEF &#x4F86;&#x8868;&#x793A; 10 &#x5230; 15 &#x7684;&#x6578;&#x5B57;&#x3002;&#x5176;&#x52A0;&#x6CD5;&#x8868;&#x548C;&#x4E58;&#x6CD5;&#x8868;&#x8ACB;&#x81EA;&#x884C;&#x756B;&#x51FA;&#x3002;&#x4E8C;&#x9032;&#x4F4D;&#x548C;&#x5341;&#x516D;&#x9032;&#x4F4D;&#x9593;&#x5F88;&#x5BB9;&#x6613;&#x8F49;&#x63DB;, &#x9019;&#x662F;&#x56E0;&#x70BA; 16 = 2 4 , &#x6240;&#x4EE5;&#x6BCF; 4 &#x500B;&#x4E00;&#x7D44;&#x7684; 2 &#x9032;&#x4F4D;&#x6578;&#x5B57;, &#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8F49;&#x6210; 1 &#x500B; 16 &#x9032;&#x4F4D;&#x7684;&#x6578;&#x5B57;&#x3002;&#x5982; 11010111011000 &#x9019;&#x500B;&#x4E8C;&#x9032;&#x4F4D;&#x6578;&#x5B57;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x7531;&#x53F3;&#x81F3;&#x5DE6;&#x628A;&#x4ED6;&#x5206;&#x70BA; 11 0101 1101 1000 &#x56DB;&#x7D44;&#xFF0C;&#x5404;&#x7D44;&#x6578;&#x5B57;&#x7FFB;&#x6210;&#x5341;&#x516D;&#x9032;&#x4F4D;&#x5C31;&#x6210;&#x70BA; 35D8 16 &#x3002;&#x82E5;&#x8981;&#x8F49;&#x6210; 8 &#x9032;&#x4F4D;&#xFF0C;&#x7531;&#x65BC; 8 = 2 3 &#x56E0;&#x6B64;&#x7531;&#x53F3;&#x81F3;&#x5DE6;&#x6BCF;&#x4E09;&#x500B;&#x4E00;&#x7D44; 011 010 111 011 000 = 32730 8 &#x3002; &#x5C0F;&#x6578;&#x9EDE;&#x7684;&#x8655;&#x7406; &#x8A66;&#x554F; 0.12201 3 = 0.??? 10 == 0.12201 3 = 1/3 + 2/9 + 2/27 + 0/81 + 1/243 = 0.33333 + 0.22222+0.07407 + 0.00412 = 0.63374 10 &#x6216; (81 + 2 * 27 + 2 * 9 + 1) / 243 = 0.63374 &#x8A66;&#x554F; 0.828125 10 = 0.??? 2 0.828125 10 = a * 2 -1 + b * 2 -2 + c * 2 -3 &#x2026; &#x5169;&#x908A;&#x4E58; 2 &#x53EF;&#x5F97; 1.656250 = a + b * 2 -1 + c * 2 -2 &#x2026; &#x56E0;&#x6B64; a &#x70BA; 1. &#x91CD;&#x8907;&#x6B64;&#x904E;&#x7A0B;&#x5F97;&#x89E3;&#x5982;&#x4E0B;&#xFF1A; 0.828125 * 2 == 1.656250 * 2 (-1 &#x5F8C;&#x4E58; 2) == 1.3125 * 2 (-1 &#x5F8C;&#x4E58; 2) == 0.625 * 2 == 1.25 * 2 (-1 &#x5F8C;&#x4E58; 2) == 0.5 * 2 == 1 &#x6240;&#x4EE5; 0.828125 10 = 0.110101 2 &#x8CC7;&#x6599;&#x683C;&#x5F0F; &#x7A0B;&#x5F0F;&#x53EF;&#x4EE5;&#x7528;&#x4EFB;&#x610F;&#x7684;&#x683C;&#x5F0F;&#x4F86;&#x5132;&#x5B58;&#x548C;&#x8655;&#x7406;&#x8CC7;&#x6599;&#xFF0C;&#x9019;&#x6A23;&#x7684;&#x683C;&#x5F0F;&#x6211;&#x5011;&#x7A31;&#x70BA;&#x5C08;&#x5C6C;&#x683C;&#x5F0F;&#x3002;&#x4F46;&#x70BA;&#x4E86;&#x4FBF;&#x65BC;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x786C;&#x9AD4;&#x548C;&#x8EDF;&#x9AD4;&#x5E73;&#x53F0;&#x9593;&#x4EA4;&#x63DB;&#x8CC7;&#x6599;&#xFF0C;&#x6211;&#x5011;&#x5FC5;&#x9808;&#x7528;&#x6A19;&#x6E96;&#x7684;&#x683C;&#x5F0F;&#x4F86;&#x8868;&#x793A;&#x8CC7;&#x6599;&#x3002;&#x6A19;&#x6E96;&#x683C;&#x5F0F;&#x901A;&#x5E38;&#x662F;&#x7531;&#x570B;&#x969B;&#x6A19;&#x6E96;&#x7D44;&#x7E54;&#x8A02;&#x5B9A;&#xFF0C;&#x6216;&#x56E0;&#x67D0;&#x985E;&#x8EDF;&#x9AD4;&#x5EE3;&#x70BA;&#x6D41;&#x884C;&#x800C;&#x5F8C;&#x6210;&#x70BA;&#x6A19;&#x6E96;&#x3002;&#x5E38;&#x898B;&#x7684;&#x8CC7;&#x6599;&#x578B;&#x614B;&#x548C;&#x6A19;&#x6E96;&#x5982;&#x4E0B;&#x8868;&#xFF1A; &#x8CC7;&#x6599;&#x578B;&#x614B; &#x6A19;&#x6E96; &#x5B57;&#x5143; (character) ASCII, EBCDIC, Unicode &#x5F71;&#x50CF; (&#x4F4D;&#x5143;&#x61C9;&#x5C0D; bit map) GIF, JPEG, TIFF, Windows Butmap &#x5F71;&#x50CF; (&#x7269;&#x4EF6;) PICT, PostScript &#x5411;&#x91CF;&#x5716;&#x5F62;&#x8207;&#x5B57;&#x578B; PostScript, TrueType &#x8072;&#x97F3; Sound Blaster, WAV &#x8996;&#x8A0A; MPEG, QuickTime ANSI(American National Standards Institute) &#x6240;&#x5236;&#x8A02;&#x7684; ASCII(American Standard Code for Information Interchange) &#x53CA; IBM &#x6240;&#x5B9A;&#x7FA9; EBCDIC(Extended Binary Coded Decimal Interchange Code) &#x662F;&#x5169;&#x7A2E;&#x5E38;&#x7528;&#x7684;&#x82F1;&#x6587;&#x6587;&#x6578;&#x5B57;&#x5143;&#x7DE8;&#x78BC;&#x65B9;&#x5F0F;&#x3002;EBCDIC &#x662F; 8 bits &#x7684;&#x7DE8;&#x78BC;&#x65B9;&#x5F0F; (&#x53EA;&#x5B9A;&#x7FA9;&#x4E86; 2 8 =256 &#x500B;&#x5B57;&#x5143;)&#xFF0C;&#x76EE;&#x524D;&#x50C5;&#x9650;&#x65BC; IBM &#x7684;&#x5927;&#x578B;&#x4E3B;&#x6A5F;&#x548C;&#x7D42;&#x7AEF;&#x6A5F;&#x4F7F;&#x7528;&#x3002;ASCII &#x5247;&#x662F; 7 bits &#x7684;&#x7DE8;&#x78BC; (&#x53EA;&#x5B9A;&#x7FA9;&#x4E86; 2 7 = 128 &#x500B;&#x5B57;&#x5143;, &#x5F88;&#x591A;&#x7A0B;&#x8A2D;&#x66F8;&#x7684;&#x9644;&#x9304;&#x90FD;&#x6709;&#x8868;&#x53EF;&#x67E5;)&#xFF0C;&#x76EE;&#x524D;&#x5EE3;&#x6CDB;&#x4F7F;&#x7528;&#x65BC;&#x5404;&#x7A2E;&#x96FB;&#x8166;&#x548C;&#x7D42;&#x7AEF;&#x6A5F;&#x3002;&#x8FD1;&#x5E74;&#x4F86; ISO(International StandardsOrganization) &#x5728; ASCII &#x7684;&#x57FA;&#x790E;&#x4E0A;&#x70BA;&#x4E0D;&#x540C;&#x7684;&#x8A9E;&#x8A00;&#x8A02;&#x5B9A;&#x4E86;&#x4E0D;&#x540C;&#x7684; 8 bits &#x7DE8;&#x78BC;&#x3002;&#x4E0D;&#x904E; 8 bits &#x50C5;&#x80FD;&#x8868;&#x793A; 256 &#x500B;&#x5B57;&#x5143;&#xFF0C;&#x5C0D;&#x8C61;&#x5F62;&#x5B57;&#x8A9E;&#x8A00;&#x662F;&#x4E0D;&#x5920;&#x7684;&#x3002;&#x56E0;&#x6B64; IOS &#x63D0;&#x51FA;&#x4E86; 16 bits &#x7684; Unicode &#x4EE5;&#x53D6;&#x4EE3;&#x820A;&#x6709;&#x7684; 7 bits &#x548C; 8 bits &#x5B57;&#x5143;&#x3002;Unicode &#x8A66;&#x5716;&#x5C07;&#x4E16;&#x754C;&#x4E0A;&#x7684;&#x4E3B;&#x8981;&#x8A9E;&#x8A00;&#x5168;&#x90E8;&#x7D0D;&#x5165;&#xFF0C;&#x5728;&#x4E00;&#x500B;&#x7DE8;&#x78BC;&#x7A7A;&#x9593;&#x4E0B;&#x8868;&#x9054;&#x6240;&#x6709;&#x7684;&#x8A9E;&#x8A00;&#x6587;&#x5B57;&#x3002;&#x76EE;&#x524D; Java &#x8A9E;&#x8A00;&#x662F;&#x63A1;&#x7528; Unicode &#x4F5C;&#x70BA;&#x5176;&#x7DE8;&#x78BC;&#x7684;&#x65B9;&#x5F0F;&#x3002;Windows &#x4E5F;&#x63A1;&#x7528; Unicode&#x3002; &#x5E38;&#x898B;&#x7684;&#x5B57;&#x5143;&#x8F38;&#x5165;&#x88DD;&#x7F6E;&#xFF1A;&#x9375;&#x76E4; (keyboard)&#x3001;&#x5149;&#x5B78;&#x8FA8;&#x8B58;&#x6A5F; (Optical Character Recognition, OCR)&#x3001;&#x689D;&#x78BC;&#x6A5F; (bar code reader)&#x3001;&#x8A9E;&#x97F3;&#x8F38;&#x5165;&#x3001;&#x4E2D;&#x6587;&#x624B;&#x5BEB;&#x8FA8;&#x8B58;&#x3001;&#x6253;&#x5B54;&#x6A5F; (punched card)&#x3002; &#x4E0D;&#x7BA1;&#x8CC7;&#x6599;&#x7684;&#x683C;&#x5F0F;&#x70BA;&#x4F55;&#xFF0C;&#x96FB;&#x8166;&#x5167;&#x90E8;&#x90FD;&#x662F;&#x4EE5;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x4E8C;&#x9032;&#x4F4D;&#x6578;&#x5B57;&#x4F86;&#x4EE3;&#x8868;&#x3002;&#x9019;&#x4E9B;&#x4E8C;&#x9032;&#x4F4D;&#x6578;&#x5B57;&#x7684;&#x89E3;&#x91CB;&#x65B9;&#x6CD5;&#x662F;&#x7531;&#x5169;&#x500B;&#x56E0;&#x7D20;&#x4F86;&#x6C7A;&#x5B9A;&#xFF1A; CPU &#x6240;&#x80FD;&#x8655;&#x7406;&#x7684;&#x904B;&#x7B97;&#x3002; &#x7528;&#x4F86;&#x7522;&#x751F;&#x61C9;&#x7528;&#x7A0B;&#x5F0F;&#x7684;&#x7A0B;&#x5F0F;&#x8A9E;&#x8A00;&#x6240;&#x80FD;&#x63D0;&#x4F9B;&#x7684;&#x8CC7;&#x6599;&#x578B;&#x614B;&#x3002;"},"c/system-intro.html#如何表示整數資料":{"title":"&#x5982;&#x4F55;&#x8868;&#x793A;&#x6574;&#x6578;&#x8CC7;&#x6599;","path":"/c/system-intro.html#如何表示整數資料","body":"&#x6709;&#x865F;&#x6574;&#x6578; &#x6709;&#x4E00;&#x7A2E;&#x65B9;&#x6CD5;&#x7A31;&#x70BA; &#x201C;&#x7B26;&#x865F;&#x8207;&#x5927;&#x5C0F;&#x8868;&#x793A;&#x6CD5;&#x201D;&#xFF1A;&#x7B2C;&#x4E00;&#x500B; bit &#x4F5C;&#x70BA;&#x6B63;&#x8CA0;&#x865F;&#xFF0C;&#x5176;&#x4ED6;&#x7684; bits &#x70BA;&#x5927;&#x5C0F;&#x3002;&#x7F3A;&#x9EDE;&#x662F;&#x4E0D;&#x597D;&#x904B;&#x7B97;&#xFF0C;&#x56E0;&#x70BA;&#x52A0;&#x6CD5;&#x7684;&#x904B;&#x7B97;&#x65B9;&#x6CD5;&#x548C;&#x904B;&#x7B97;&#x5143;&#x7684;&#x6B63;&#x8CA0;&#x865F;&#x6709;&#x95DC;&#x3002;&#x7576;&#x5169;&#x500B;&#x904B;&#x7B97;&#x5B50;&#x540C;&#x865F;&#x6642;&#xFF0C;&#x53EA;&#x8981;&#x5C07;&#x6578;&#x5B57;&#x5927;&#x5C0F;&#x7684;&#x90E8;&#x4EFD;&#x76F8;&#x52A0;&#xFF0C;&#x6B63;&#x8CA0;&#x865F;&#x8207;&#x904B;&#x7B97;&#x5143;&#x76F8;&#x540C;&#x5373;&#x53EF;&#xFF0C;&#x4F46;&#x7576;&#x5169;&#x500B;&#x904B;&#x7B97;&#x5B50;&#x7684;&#x7B26;&#x865F;&#x4E0D;&#x540C;&#x6642;&#xFF0C;&#x5247;&#x8981;&#x4EE5;&#x6E1B;&#x6CD5;&#x4F86;&#x8655;&#x7406;&#x5927;&#x5C0F;&#x7684;&#x90E8;&#x4EFD;&#xFF0C;&#x6B63;&#x8CA0;&#x865F;&#x5247;&#x8996;&#x76F8;&#x6E1B;&#x7684;&#x7D50;&#x679C;&#x800C;&#x5B9A;&#x3002;&#x9019;&#x7A2E;&#x8868;&#x793A;&#x6CD5;&#x4E5F;&#x6703;&#x9020;&#x6210;&#x96FB;&#x8166;&#x908F;&#x8F2F;&#x7DDA;&#x8DEF;&#x8A2D;&#x8A08;&#x4E0A;&#x7684;&#x56F0;&#x64FE;&#x3002; &#x6E1B;&#x6CD5;&#x6BD4;&#x52A0;&#x6CD5;&#x96E3;&#x5BE6;&#x4F5C;&#x7684;&#x539F;&#x56E0;&#x662F;&#x6E1B;&#x6CD5;&#x9700;&#x8981;&#x4E00;&#x76F4;&#x501F;&#x4F4D;, &#x800C;&#x52A0;&#x6CD5;&#x53EA;&#x8981;&#x8A18;&#x5F97;&#x524D;&#x4E00;&#x5C0D;&#x6578;&#x5B57;&#x52A0;&#x8D77;&#x4F86;&#x6709;&#x6C92;&#x6709;&#x9032;&#x4F4D;&#x5373;&#x53EF;&#x3002;&#x6709;&#x4EBA;&#x5C31;&#x60F3;&#x51FA;&#x4E00;&#x7A2E;&#x6578;&#x5B57;&#x7CFB;&#x7D71;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x4E8C;&#x9032;&#x4F4D;&#x7684;&#x52A0;&#x6CD5;&#x53D6;&#x4EE3;&#x6E1B;&#x6CD5;&#xFF0C;&#x8B93;&#x908F;&#x8F2F;&#x7DDA;&#x8DEF;&#x8A2D;&#x8A08;&#x7C21;&#x55AE;&#xFF0C;&#x8DD1;&#x8D77;&#x4F86;&#x53C8;&#x5FEB;&#x7684;&#x3002; &#x5C31;&#x662F;&#x88DC;&#x6578;&#x7CFB;&#x7D71;&#x3002; &#x88DC;&#x6578; (Complement) &#x6211;&#x5011;&#x5148;&#x4EE5;&#x6700;&#x591A;&#x5169;&#x500B;&#x6578;&#x5B57;&#x7684; 10 &#x9032;&#x4F4D;&#x6578;&#x5B57;&#x7CFB;&#x7D71;&#x70BA;&#x4F8B;&#x3002; 60 - 30 = 60 + 70 - 100&#x3002; &#x800C; - 100 &#x53EF;&#x4EE5;&#x85C9;&#x7531; &#x201C;&#x5FFD;&#x7565;&#x6EA2;&#x4F4D;&#x201D; &#x4F86;&#x9054;&#x6210;&#x3002;&#x6240;&#x8B02; &#x201C;&#x6EA2;&#x4F4D;&#x201D; &#x662F;&#x6307;&#x6578;&#x5B57;&#x8A08;&#x7B97;&#x7684;&#x7D50;&#x679C;&#x8D85;&#x904E;&#x786C;&#x9AD4;&#x7DDA;&#x8DEF;&#x6240;&#x80FD;&#x8868;&#x9054;&#x7684;&#x7BC4;&#x570D;&#xFF0C;&#x4EE5;&#x5169;&#x500B;&#x6578;&#x5B57;&#x7684; 10 &#x9032;&#x4F4D;&#x6578;&#x5B57;&#x7CFB;&#x7D71;&#x70BA;&#x4F8B;&#xFF0C;&#x53EA;&#x80FD;&#x8868;&#x9054; 0-99&#xFF0C;&#x6240;&#x4EE5;&#x7B97;&#x51FA;&#x4F86;&#x7684;&#x7D50;&#x679C;&#x82E5;&#x5927;&#x65BC; 99 &#x5C31;&#x767C;&#x751F; &#x201C;&#x6EA2;&#x4F4D;&#x201D; &#x3002;&#x800C; &#x201C;&#x5FFD;&#x7565;&#x6EA2;&#x4F4D;&#x201D; &#x5728;&#x6B64;&#x4F8B;&#x4E2D;&#x5C31;&#x662F;&#x6307; &#x201C;&#x4E1F;&#x68C4;&#x201D; &#x201C;&#x5FFD;&#x8996;&#x201D; &#x201C;&#x7701;&#x7565;&#x201D; &#x7B2C; 3 &#x4F4D;&#x6578;&#x7684;&#x610F;&#x601D;&#x3002;&#x56E0;&#x6B64; - 30 &#x5C31;&#x53EF;&#x7531; + 70 &#x8207; &#x201C;&#x5FFD;&#x7565;&#x6EA2;&#x4F4D;&#x201D; &#x4F86;&#x9054;&#x6210;&#x3002;&#x63A5;&#x4E0B;&#x4F86;&#x7684;&#x554F;&#x984C;&#x5C31;&#x662F;&#x5982;&#x4F55;&#x7531; 30 &#x5F97;&#x5230; 70&#xFF1F; 70 = 99 - 30 + 1&#x3002;&#x8B80;&#x8005;&#x6B64;&#x6642;&#x7684;&#x7591;&#x554F;&#x662F;&#xFF0C;&#x6E1B;&#x6CD5;&#x53C8;&#x8DD1;&#x51FA;&#x4F86;&#x4E86;&#xFF0C;&#x9019;&#x6A23;&#x6703;&#x6BD4;&#x8F03;&#x5FEB;&#x55CE;&#xFF1F;&#x8ACB;&#x6CE8;&#x610F; 99 &#x6E1B;&#x4EFB;&#x610F;&#x6578;&#x90FD;&#x4E0D;&#x9700;&#x8981;&#x501F;&#x4F4D;&#xFF0C;&#x56E0;&#x6B64;&#x7DDA;&#x8DEF;&#x6BD4;&#x8F03;&#x597D;&#x8A2D;&#x8A08;&#x3002;&#x88DC;&#x6578;&#x7684;&#x89C0;&#x5FF5;&#x7528;&#x5230;&#x4E8C;&#x9032;&#x4F4D;&#x6642;&#xFF0C;&#x6548;&#x7528;&#x5C31;&#x66F4;&#x5927;&#x4E86;&#x3002;&#x6240;&#x6709;&#x90FD;&#x662F;&#x4E00;&#x7684;&#x4E8C;&#x9032;&#x4F4D;&#x6578; 111111&#xFF0C;&#x6E1B;&#x53BB;&#x4E8C;&#x9032;&#x4F4D;&#x6578; X&#xFF0C;&#x5F97;&#x5230; Y&#xFF0C;&#x6B64;&#x6642; X &#x548C; Y &#x6BCF;&#x4E00;&#x500B;&#x5C0D;&#x61C9;&#x7684; bit &#x90FD;&#x662F;&#x76F8;&#x53CD;&#x7684;&#xFF0C;&#x5982; 1111 - 0101 = 1010&#x3002;&#x63DB;&#x8A00;&#x4E4B;&#xFF0C;&#x6C42;&#x4E8C;&#x9032;&#x4F4D;&#x7684;&#x88DC;&#x6578;&#x53EF;&#x4EE5;&#x7528; bit inverse &#x4F86;&#x53D6;&#x4EE3;&#x6E1B;&#x6CD5;&#xFF0C;&#x800C; bit inverse &#x5247;&#x662F;&#x6700;&#x5BB9;&#x6613;&#x5BE6;&#x4F5C;&#x7684;&#x96FB;&#x8DEF;&#x3002;99 - 30 &#x7A31;&#x70BA; 30 &#x7684; 9 &#x88DC;&#x6578;&#xFF0C;99 - 30 + 1 &#x7A31;&#x70BA; 30 &#x7684; 10 &#x88DC;&#x6578;&#x3002; &#x4EE4; Y &#x70BA; 10 &#x9032;&#x4F4D;&#x6240;&#x80FD;&#x8868;&#x9054;&#x7684;&#x6700;&#x5927;&#x6578;&#x5B57;, &#x5247;&#x5728; 9 &#x88DC;&#x6578;&#x4E2D; X &#x7684;&#x8CA0;&#x6578;&#x662F;&#x4EE5; (Y-X) &#x4F86;&#x8868;&#x9054;. &#x4F8B;&#x5982;&#x6700;&#x591A; 3 &#x4F4D;&#x6578;&#x7684; 10 &#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x4E2D;&#xFF0C;300 &#x7684; 9 &#x88DC;&#x6578;&#x4EE5; (999-300)=699 &#x4F86;&#x8868;&#x9054;. &#x56E0;&#x6B64;&#x6700;&#x591A; 3 &#x4F4D;&#x6578;&#x7684; 10 &#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x4E2D;, &#x5176; 9 &#x88DC;&#x6578;&#x7684;&#x5C0D;&#x7167;&#x8868;&#x5982;&#x4E0B; 500 &#x2026;999 | 0&#x2026;499 -499&#x2026;-000 | 0&#x2026;499 &#x4E0A;&#x8868;&#x662F;&#x8AAA; 999 &#x4EE3;&#x8868; - 0&#xFF0C;998 &#x4EE3;&#x8868; - 1&#xFF0C;997 &#x4EE3;&#x8868; - 2&#xFF0C;&#x2026;&#xFF0C;500 &#x4EE3;&#x8868; - 499&#x3002;9 &#x88DC;&#x6578;&#x6709;&#x5169;&#x500B; 0&#xFF0C;+0 &#x548C; - 0&#xFF0C;&#x53EF;&#x8868;&#x9054;&#x7684;&#x7BC4;&#x570D;&#x5728; - 499 ~ +499&#x3002; 10 &#x88DC;&#x6578;&#x4E2D; X &#x7684;&#x8CA0;&#x6578;&#x5247;&#x5B9A;&#x7FA9;&#x70BA; (Y-X+1)&#xFF0C;&#x56E0;&#x6B64;&#x6700;&#x591A; 3 &#x4F4D;&#x6578;&#x7684; 10 &#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x4E2D;&#xFF0C;&#x5176; 10 &#x88DC;&#x6578;&#x5C0D;&#x7167;&#x8868;&#x5982;&#x4E0B;: 500 &#x2026;999 | 0&#x2026;499 -500&#x2026;-001 | 0&#x2026;499 &#x4E0A;&#x8868;&#x662F;&#x8AAA; 999 &#x4EE3;&#x8868; - 1&#xFF0C;998 &#x4EE3;&#x8868; - 2&#xFF0C;997 &#x4EE3;&#x8868; - 3&#xFF0C;&#x2026;&#xFF0C;500 &#x4EE3;&#x8868; - 500&#x3002;&#x6240;&#x4EE5; 10 &#x88DC;&#x6578;&#x80FD;&#x8868;&#x9054;&#x7684;&#x7BC4;&#x570D;&#x5728; - 500 ~ +499&#x3002; 9 &#x88DC;&#x6578;&#x6E1B;&#x6CD5;&#xFF1A;&#x5C07; - X &#x7684;&#x904B;&#x7B97;, &#x6539;&#x70BA; + (-X), &#x82E5;&#x6709;&#x6EA2;&#x4F4D;, &#x5247;&#x5C07;&#x7D50;&#x679C;&#x518D;&#x52A0; 1 420-170 = 420 + 829 = 1249 = 249 + 1 100 - 350 = 100 + 649 = 749 -100-200 = 899 + 799 = 1698 = 698 + 1 10 &#x88DC;&#x6578;&#x6E1B;&#x6CD5;&#x5247;&#x4E0D;&#x5FC5;&#x8003;&#x616E;&#x6EA2;&#x4F4D; 2 &#x9032;&#x4F4D;&#x88DC;&#x6578; (2&#x2019; complement) &#x7684;&#x7279;&#x6B8A;&#x4E4B;&#x8655; &#x7531;&#x65BC;2&#x9032;&#x4F4D;&#x53EA;&#x6709;0&#x548C;1&#x5169;&#x500B;&#x6578;&#x5B57;&#xFF0C;&#x4F60;&#x6703;&#x767C;&#x73FE;&#xFF1A; 1 - 0 = 1 1 - 1 = 0 &#x4E8C;&#x9032;&#x4F4D;&#x6240;&#x80FD;&#x8868;&#x9054;&#x7684;&#x6700;&#x5927;&#x6578;&#x5B57;Y&#x662F;&#x4E00;&#x500B;&#x5168;&#x90E8;&#x90FD;&#x662F; 1 &#x7684;&#x6578;&#x5B57;&#xFF0C;&#x5728; 1 &#x88DC;&#x6578;&#x4E2D;&#xFF0C;-X &#x662F;&#x4EE5; (Y-X) &#x4F86;&#x8868;&#x9054;&#xFF0C;&#x56E0;&#x6B64;&#x4F60;&#x6703;&#x767C;&#x89BA; X &#x548C; (Y-X) &#x7684;&#x6BCF;&#x4E00;&#x500B; bit &#x90FD;&#x662F;&#x4E0D;&#x4E00;&#x6A23;&#x7684;&#x3002;&#x4F8B;&#x5982;&#xFF1A; 1 2 3 Y: 11111111 X: 01110011 Y-X: 10001100 &#x56E0;&#x6B64;&#x5728;&#x4E8C;&#x9032;&#x4F4D;&#x7684; 1 &#x88DC;&#x6578;&#x7CFB;&#x7D71;&#x4E2D;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x7528;&#x5230;&#x6E1B;&#x6CD5;&#xFF0C;&#x53EA;&#x8981;&#x5C07; X &#x7684;&#x6BCF;&#x4E00;&#x500B; bit &#x90FD;&#x53CD;&#x904E;&#x4F86;&#xFF0C;&#x5C31;&#x53EF;&#x5F97;&#x5230; -X &#x4E86;."},"c/system-intro.html#浮點數表示法":{"title":"&#x6D6E;&#x9EDE;&#x6578;&#x8868;&#x793A;&#x6CD5;","path":"/c/system-intro.html#浮點數表示法","body":"&#x672C;&#x7BC0;&#x662F;&#x70BA;&#x4E86;&#x5B8C;&#x6574;&#x6558;&#x8FF0;&#x5404;&#x7A2E;&#x6578;&#x5B57;&#x7684;&#x8868;&#x9054;&#x6CD5;&#x800C;&#x5BEB;&#x7684;&#xFF0C;&#x8B80;&#x8005;&#x82E5;&#x770B;&#x4E0D;&#x61C2;&#xFF0C;&#x4E26;&#x4E0D;&#x6703;&#x5F71;&#x97FF;&#x5C0D; C &#x8A9E;&#x8A00;&#x7684;&#x77AD;&#x89E3;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x8DF3;&#x904E;&#x6B64;&#x7BC0;&#x7684;&#x7D30;&#x7BC0;&#x90E8;&#x4EFD;&#x3002; &#x524D;&#x9762;&#x4ECB;&#x7D39;&#x4E86;&#x6574;&#x6578;&#x7684;&#x8868;&#x9054;&#x6CD5;&#xFF0C;&#x4F46;&#x5C0D;&#x8A31;&#x591A;&#x61C9;&#x7528;&#x4F86;&#x8AAA; (&#x5C24;&#x5176;&#x662F;&#x79D1;&#x5B78;&#x904B;&#x7B97;)&#xFF0C;&#x6574;&#x6578;&#x662F;&#x4E0D;&#x5920;&#x7528;&#x7684;&#xFF0C;&#x5FC5;&#x9808;&#x7528;&#x5230;&#x6D6E;&#x9EDE;&#x6578;&#x624D;&#x884C;&#x3002;&#x70BA;&#x751A;&#x9EBC;&#x4E0D;&#x8AAA;&#x662F; &#x201C;&#x5BE6;&#x6578;&#x201D;&#xFF0C;&#x800C;&#x8981;&#x8AAA; &#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x201D; &#x5462;? &#x9019;&#x662F;&#x56E0;&#x70BA;&#x96FB;&#x8166;&#x662F; &#x201C;&#x6709;&#x9650;&#x4F4D;&#x6578;&#x7684;&#x4E8C;&#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x201D;&#xFF0C;&#x6240;&#x4EE5;&#x80FD;&#x8868;&#x9054;&#x7684;&#x6578;&#x5B57;&#x6709;&#x9650;&#xFF0C;&#x4E0D;&#x4F46;&#x4E0D;&#x80FD;&#x8868;&#x9054;&#x50CF; &#x3C0; &#x9019;&#x7A2E;&#x7121;&#x7406;&#x6578;&#xFF0C;&#x751A;&#x81F3;&#x7121;&#x6CD5;&#x8868;&#x9054; 1/3 &#x9019;&#x500B;&#x6709;&#x7406;&#x6578;&#x3002;&#x800C;&#x4E14;&#x5404;&#x7A2E;&#x61C9;&#x7528;&#x6240;&#x9700;&#x7684;&#x6578;&#x5B57;&#x5927;&#x5C0F;&#x548C;&#x7CBE;&#x6E96;&#x5EA6;&#x4E0D;&#x540C;&#xFF0C;&#x6709;&#x4E9B;&#x8981;&#x8868;&#x9054;&#x5F88;&#x5927;&#x6578;&#x5B57; (&#x50CF;&#x5929;&#x6587;&#x5B78;)&#xFF0C;&#x6709;&#x4E9B;&#x8981;&#x8868;&#x9054;&#x5F88;&#x5C0F;&#x7684;&#x6578;&#x5B57; (&#x50CF;&#x9AD8;&#x80FD;&#x7269;&#x7406;&#x5B78;)&#xFF0C;&#x5982;&#x4F55;&#x8A2D;&#x8A08;&#x4E00;&#x7A2E; &#x201C;&#x53EF;&#x8868;&#x9054;&#x7BC4;&#x570D;&#x5F88;&#x5927;&#x4E14;&#x6709;&#x5C0F;&#x6578;&#x201D; &#x7684;&#x4E8C;&#x9032;&#x4F4D;&#x8868;&#x793A;&#x6CD5;&#xFF0C;&#x5C31;&#x6210;&#x70BA;&#x4E00;&#x9805;&#x6311;&#x6230;&#x3002;&#x5404;&#x4F4D;&#x9084;&#x8A18;&#x5F97;&#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8868;&#x793A;&#x6CD5;&#x55CE;? 2008 &#x9019;&#x500B;&#x6578;&#x5B57;&#x7684;&#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8868;&#x793A;&#x6CD5;&#x662F; 2.008E 3 &#x3002;E &#x4EE3;&#x8868;&#x6307;&#x6578; (Exponential) &#x90E8;&#x4EFD;&#xFF0C;&#x6240;&#x4EE5; 2.008E3 &#x662F;&#x8868;&#x793A; 2.008 * 103 &#x7684;&#x610F;&#x601D;&#x3002;&#x56E0;&#x70BA;&#x9019;&#x7A2E;&#x8868;&#x9054;&#x6CD5;&#x7684;&#x5C0F;&#x6578;&#x9EDE;&#x4E0D;&#x6703;&#x56FA;&#x5B9A;&#x653E;&#x5728;&#x500B;&#x4F4D;&#x6578;&#x5F8C;&#x9762;&#xFF0C;&#x800C;&#x662F;&#x6703;&#x4F9D;&#x64DA;&#x6240;&#x8981;&#x8868;&#x9054;&#x7684;&#x6578;&#x5B57;&#x5927;&#x5C0F;&#x800C; &#x201C;&#x6D6E;&#x52D5;&#x201D;&#xFF0C;&#x6240;&#x4EE5;&#x624D;&#x6703;&#x88AB;&#x7A31;&#x70BA;&#x662F; &#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x201D;&#x3002;&#x6211;&#x5011;&#x5E38;&#x7528; 32 bits(C &#x7A31;&#x70BA; float) &#x6216; 64 bits(C &#x7A31;&#x70BA; double) &#x4F86;&#x5B58;&#x653E;&#x6D6E;&#x9EDE;&#x6578;&#xFF0C;&#x5176;&#x6A19;&#x6E96;&#x7531; IEEE &#x5236;&#x5B9A;&#x3002;&#x5B83;&#x8868;&#x9054;&#x7684;&#x662F;&#x9019;&#x7A2E;&#x5F62;&#x5F0F;&#x7684;&#x79D1;&#x5B78;&#x7B26;&#x865F;: +0.01E10 &#x8868;&#x793A; (1+1/4) * 2 2 &#x3002;&#x8001;&#x5E2B;&#x4F60;&#x5BEB;&#x932F;&#x4E86;&#x5427;&#xFF0C;&#x61C9;&#x8A72;&#x662F; (1/4) * 2 2 &#x5427;? &#x9019;&#x662F;&#x56E0;&#x70BA;&#x4E8C;&#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x4E2D;&#x53EA;&#x6709; 0 &#x548C; 1 &#x5169;&#x500B;&#x6578;&#x5B57;&#xFF0C;&#x56E0;&#x6B64;&#x6B63;&#x898F;&#x5316;&#x5F8C;&#x7684;&#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8868;&#x793A;&#x6CD5;&#x7684;&#x6574;&#x6578;&#x90E8;&#x4EFD;&#x4E00;&#x5B9A;&#x662F; 1&#xFF0C;&#x63DB;&#x53E5;&#x8A71;&#x8AAA;&#x4EFB;&#x4F55;&#x6578;&#x5B57;&#x90FD;&#x9577;&#x9019;&#x500B;&#x6A23;&#x5B50;&#xFF0C;&#xB1;1.mmmmEee&#xFF0C;&#x65E2;&#x7136;&#x6574;&#x6578;&#x4E00;&#x5B9A;&#x662F; 1&#xFF0C;&#x90A3;&#x5C31;&#x4E0D;&#x8981;&#x6D6A;&#x8CBB;&#x4E86;&#xFF0C;&#x4EE5;&#x4FBF;&#x53EF;&#x4EE5;&#x8868;&#x9054;&#x66F4;&#x5927;&#x7BC4;&#x570D;&#x7684;&#x6578;&#x5B57;&#x3002;&#x4E0A;&#x8FF0;&#x4F8B;&#x5B50;&#x7684; &#xB1; &#x7A31;&#x70BA; (Sign bit)&#xFF0C; ee &#x90E8;&#x4EFD;&#x7A31;&#x70BA; Exponential(&#x6307;&#x6578;)&#xFF0C;mmmm &#x7A31;&#x70BA; Mantissa(&#x5C3E;&#x6578;)&#xFF0C;&#x4EE5;&#x4E0B;&#x7684; SEM &#x5C31;&#x662F;&#x9019;&#x5E7E;&#x500B;&#x5B57;&#x7684;&#x7E2E;&#x5BEB;&#x3002; &#x4E00;&#x500B; IEEE(Institude of Electric and Electronic Engineering&#xFF0C;&#x96FB;&#x5B50;&#x96FB;&#x6A5F;&#x5DE5;&#x7A0B;&#x5354;&#x6703;&#xFF0C;&#x662F;&#x4E00;&#x500B;&#x5168;&#x7403;&#x6700;&#x5927;&#x7684;&#x5B78;&#x8853;&#x7D44;&#x7E54;) 32 &#x4F4D;&#x5143;&#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4EE5;&#x4E0B;&#x9762;&#x7684;&#x683C;&#x5F0F;&#x4F86;&#x8868;&#x793A;&#xFF1A; SEM &#x5176;&#x4E2D; S &#x5360; 1bit &#x70BA;&#x6B63;&#x8CA0;&#x865F;&#xFF0C;E &#x5360; 8bits &#x70BA;&#x6307;&#x6578;&#x90E8;&#x4EFD;&#xFF0C;M &#x5360; 23bits &#x70BA;&#x5C3E;&#x6578;&#x90E8;&#x4EFD;&#x3002;&#x5176;&#x4E2D;&#x6307;&#x6578;&#x90E8;&#x4EFD;&#x63A1;&#x7528; excess-127 &#x8868;&#x793A;&#x6CD5;&#xFF0C;&#x5373;&#x7BC4;&#x570D;&#x70BA; -127~128&#xFF0C;&#x4F46; 0 &#x548C; 255 &#x6709;&#x7279;&#x6B8A;&#x610F;&#x7FA9;&#xFF0C;&#x6240;&#x4EE5;&#x5BE6;&#x969B;&#x7BC4;&#x570D;&#x70BA; -126 ~ +127 &#x6307;&#x6578;&#x90E8;&#x4EFD; &#x5C0F;&#x6578;&#x90E8;&#x4EFD; &#x6240;&#x4EE3;&#x8868;&#x7684;&#x503C; 0 +-0 0 0 &#x975E; 0 +-2 -126 * 0.M 1 ~ 254 &#x4EFB;&#x4F55;&#x503C; +-2 E-127 * 1.M 255 +-0 +-infinite 255 &#x975E; 0 &#x7279;&#x6B8A;&#x72C0;&#x6CC1; (NaN) IEEE 64 &#x4F4D;&#x5143;&#x6D6E;&#x9EDE;&#x6578;&#x8868;&#x793A;&#x6CD5; SEM &#x5176;&#x4E2D; S &#x5360; 1bit &#x70BA;&#x6B63;&#x8CA0;&#x865F;&#xFF0C;E &#x5360; 11bits &#x70BA;&#x6307;&#x6578;&#x90E8;&#x4EFD;&#xFF0C;M &#x5360; 52bits &#x70BA;&#x5C3E;&#x6578;&#x90E8;&#x4EFD;&#x3002; &#x5176;&#x4E2D;&#x6307;&#x6578;&#x90E8;&#x4EFD;&#x63A1;&#x7528; excess-1023, &#x8868;&#x793A;&#x7BC4;&#x570D;&#x8D85;&#x904E; 10 + -300 &#x6B21;&#x65B9;"},"c/system-operation.html":{"title":"電腦內部運作","path":"/c/system-operation.html","body":"現代的電腦無論其運算速度如何，只要是單一處理器 (CPU, Central Processing Unit)，都可以用下面的圖形來說明其基本架構，至於多處理器電腦系統本文不予討論。 各部分的功能如下所述： Memory(記憶體)：可分成很多個小格子，每個格子都可存放一筆資料。有時也可稱為 Main Memory(主記憶體) I/O interface(輸出入介面)：是電腦和外界的窗口，可以從外界輸入 (Input) 資料，或將資料輸出 (Output) 到外界。常見的輸入裝置如鍵盤，滑鼠; 常見的輸出裝置如螢幕，印表機。 Control Unit(控制單元)：負責指令的擷取和解釋 ALU(Arithmetic and Logic Unit，算數與邏輯單元)：負責算數與邏輯指令的實際執行工作，裡面有一些記憶體供計算所需，特別稱為 Register(暫存器)。暫存器的數量隨硬體而不同，此處說明用的虛擬電腦只有一個暫存器。一般常見的暫存器則有 累加器 (Accumulator)：儲存執行運算的資料 旗標暫存器 (Flag Register)：儲存運算處理後的 CPU 狀態 程式計數器 (Program Counter) ：儲存目前執行指令所在的地址 基底暫存器 (Base Register)：表達某塊記憶體空間的開始位置 索引暫存器 (Index Register)：儲存基底暫存器的相對位置 通用暫存器 (General Purpose Register)：儲存一般資料 指令暫存器 (Instruction Register)：儲存指令。僅供 CPU 內部使用 在上圖的機器中共有 100 個記憶體可用，每個記憶體可以存放 3 個數字。Control Unit, ALU, Program Counter 在現代的硬體設計裡多做在一起，稱為 CPU(Central Processing Unit)。Pentium 4 就是 Intel 這家公司的 CPU 產品。 電腦執行一個機器指令的步驟為： Fetch(擷取指令): 由 Control Unit 讀取 Program Counter 的內容，根據 Program Counter 的數值去相對應的 Memory 抓指令 Decode(解碼): 抓到的指令經 Control Unit 判讀，決定要如何執行該指令 Execute(執行): 在 ALU(Alrithmetic and Logic Unit) 裡執行該指令 Write(寫回): 更改 Program Counter 的內容 虛擬機器的指令集 不同的 CPU 其設計的指令集也不同，最常見的 x86 系列 CPU(Pentium 4 即屬於該系列)，其指令集包括幾百個指令。一般而言，電腦指令可以分類為下面幾類： 資料複製: 將暫存器的複製到主記憶體 (STORE)，將主記憶體複製到暫存器 (LOAD) 算數運算: 如加減乘除 邏輯運算: 判斷條件是否成立，如大於，小於，等於 更改 Program Counter 輸出入 為說明起見，我們定義以下的虛擬機器指令集： 虛擬機器的指令的格式：由 3 個數字組成，第一個數字代表指令，後面兩個數字代表記憶體的地址。機器指令執行時會改變某些記憶體 (含 Program Counter 以及暫存器等 CPU 內部的記憶體，以及 Main Memory) 的內容，而這些記憶體就決定了指令執行的結果。換句話說，電腦不記得過去，也不知道未來，他只能透過記憶體的內容知道現在的情況。 指令 0–LOAD XX 將 XX 記憶體的內容複製到暫存器內，然後將 Program Counter 加 1 指令 1–STORE XX 將暫存器的內容複製到 XX 記憶體，然後將 Program Counter 加 1 指令 2–ADD XX 將記憶體 XX 的內容與暫存器內的數值相加，結果放在暫存器上，然後 Program Counter 加 1 指令 3–SUB XX 將暫存器內的數值減掉記憶體 XX 的內容，結果放在暫存器上，然後 Program Counter 加 1　 指令 4–JUMP XX 將 Program Counter 的內容改為 XX 指令 5–SKIP 若暫存器的內容 =0，則把 Program Counter+1，否則把 Program Counter+2 指令 6–INPUT 由輸入裝置讀入資料放到暫存器上，然後將 Program Counter+1　 指令 7–OUTPUT 由暫存器將資料送到輸出裝置，然後 Program Counter +1　 指令 8–CALL XX 將 (Program Counter+1) 放到堆疊上，然後 Program Counter 的內容改成 XX　 指令 9–RETURN 由堆疊上取出一個數值，然後將 Program Counter 的內容改成此數值　 指令 10–HALT 程式停止執行 附註： 所謂堆疊 (Stack) 是一個上方只有一個開口的容器，當要把資料放入堆疊時，是放在堆疊的最上面，當要從堆疊拿資料時，是從最上面拿。放入的動作稱為 push，拿出來的動作稱為 pop。 由於只有一個開口，你可以觀察到先放進去的資料會最後拿出來 (Firt In Last Out，FILO)。例如依序 push 1，2，3，4 四個數字，然後再 pop 四次，你會發現拿出來的順序是 4，3，2，1 。只要符合 FILO 特性的容器，就可稱為堆疊。電腦內部的 Stack 是用 Main Memory 來模擬的。 以下是以虛擬機器語言所寫的兩數字相加程式，– 後面的部分是註解，是給人看的，電腦不予處理： INPUT – 輸入數字到暫存器，program counter+1 STORE 99 – 將暫存器的內容複製到記憶體 99 的地方，program counter+1 INPUT – 輸入數字到暫存器，program counter+1 ADD 99 – 將記憶體 99 的內容加到暫存器，program counter+1 OUTPUT – 將暫存器的內容輸出，program counter+1 HALT – 程式停止執行 計算 abs(x-y) INPUT – 輸入數字到暫存器，program counter+1 STORE 98 – 將暫存器的內容複製到記憶體 98 的地方，program counter+1 INPUT – 輸入數字到暫存器，program counter+1 STORE 99 – 將暫存器的內容複製到記憶體 99 的地方，program counter+1 SUB 98 – 將暫存器的內容減掉記憶體 98 的內容，program counter+1 SKIP – 如果暫存器的內容 = 0 則 program counter+1; 否則 program coounter+2 JUMP 9 – 將 program counter 設為 9，也就是跑到第 9 行的 OUT 指令 LOAD 98 – 將記憶體 98 的內容複製到暫存器，program counter+1 SUB 99 – 將暫存器的內容減掉記憶體 99 的內容 ，program counter+1 OUTPUT – 將暫存器的內容輸出, program counter + 1 HALT – 程式停止執行 呼叫函數將兩個數字相加的範例 INPUT – 輸入數字到暫存器，program counter+1 STORE 99 – 將暫存器的內容複製到記憶體 99，program counter+1 INPUT – 輸入數字到暫存器，program counter+1 STORE 98 – 將暫存器的內容複製到記憶體 98，program counter+1 CALL 07 – 將 program counter+1(也就是 5) 放到堆疊上 ，program counter 改為 07 OUTPUT – 將暫存器的內容輸出, program counter + 1 HALT – 結束程式 LOAD 99 – 將記憶體 99 的內容複製到暫存器上，program counter+1 ADD 98 – 將暫存器的內容加上記憶體 98 的內容，program counter+1 RETURN – 由堆疊取出一個數值 (目前最上面的為 5)，並將 program counter 設為該數值 Software development process 撰寫程式的流程如下圖，所需要的工具包括 Text Editor, Preprocessor, Compiler, Linker 等四種 Text Editor ：程式設計師利用此工具編輯 (Edit)Source code file(Text Format), 也就是說產生. c 檔的工具。 Preprocessor ：結合 Source code file(.c 檔) 和零到多個 Header files(.h 檔)，經過編輯 (Edit) 後成為另一個修改過的 Source code file。 Compiler ：將 source code 編譯 (compile) 產生 Object code file(.o 檔, Binary Format)，同一個作業平台的 Object code 格式相同，也就是說 Object code file 可以由不同程式語言的 Compiler 產生。 Linker ：將幾個 Object code files 連結 (link) 產生一個可執行檔 (.exe 檔)。 如果你的開發環境是在 Windows 上，下面有關 vi 和 gcc 的說明可以跳過。 在 Unix 作業系統內，最常見的 Text Editor 是 vi。 1 $ gcc hello.c 若 hello.c 完全沒有錯誤，則以上命令會產生一個執行檔 a.out ，在命令列下打 a.out 即可觀察你所寫程式的執行結果。有時候若你設定的環境變數不對，則可能出現 Command Not Found 的錯誤，此時你可輸入 ./a.out 。若不想讓 gcc 編譯出來的執行檔叫做 a.out ，則可下達以下命令： 1 $ gcc -o exename hello.c 撰寫大型程式時，很可能會有多個 .c 的原始程式檔，假設他們的名稱是 source1.c , source2.c , source3.c … 如果要個別編譯這些 source code，則下達如下命令： 1 $ gcc -c source1.c 若編譯成功，會產生 source1.o 的檔案。要將數個 Object Code 連結成為一個可執行檔，則下達以下命令： 1 $ gcc source1.o source2.o source3.o 至於 Windows 作業系統上的程式編寫環境，最常使用的是 Microsoft Visual Studio，裡面就包含了 Visual C++ 的開發環境。因為 C++ 可視為 C 語言的父集合，因此你也可以用 Visual C++ 來開發 C 程式。這類視覺化的開發工具 (Dev C++ 也是其中一種)，已經把 Text Editor, Preprocessor, Compiler, Linker 整合在一起， 並包括 Project Management(專案管理) 等功能，因此這類工具又稱為 Integrated Development Environment(IDE，整合開發環境)。"},"c/system-operation.html#虛擬機器的指令集":{"title":"&#x865B;&#x64EC;&#x6A5F;&#x5668;&#x7684;&#x6307;&#x4EE4;&#x96C6;","path":"/c/system-operation.html#虛擬機器的指令集","body":"&#x4E0D;&#x540C;&#x7684; CPU &#x5176;&#x8A2D;&#x8A08;&#x7684;&#x6307;&#x4EE4;&#x96C6;&#x4E5F;&#x4E0D;&#x540C;&#xFF0C;&#x6700;&#x5E38;&#x898B;&#x7684; x86 &#x7CFB;&#x5217; CPU(Pentium 4 &#x5373;&#x5C6C;&#x65BC;&#x8A72;&#x7CFB;&#x5217;)&#xFF0C;&#x5176;&#x6307;&#x4EE4;&#x96C6;&#x5305;&#x62EC;&#x5E7E;&#x767E;&#x500B;&#x6307;&#x4EE4;&#x3002;&#x4E00;&#x822C;&#x800C;&#x8A00;&#xFF0C;&#x96FB;&#x8166;&#x6307;&#x4EE4;&#x53EF;&#x4EE5;&#x5206;&#x985E;&#x70BA;&#x4E0B;&#x9762;&#x5E7E;&#x985E;&#xFF1A; &#x8CC7;&#x6599;&#x8907;&#x88FD;: &#x5C07;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x8907;&#x88FD;&#x5230;&#x4E3B;&#x8A18;&#x61B6;&#x9AD4; (STORE)&#xFF0C;&#x5C07;&#x4E3B;&#x8A18;&#x61B6;&#x9AD4;&#x8907;&#x88FD;&#x5230;&#x66AB;&#x5B58;&#x5668; (LOAD) &#x7B97;&#x6578;&#x904B;&#x7B97;: &#x5982;&#x52A0;&#x6E1B;&#x4E58;&#x9664; &#x908F;&#x8F2F;&#x904B;&#x7B97;: &#x5224;&#x65B7;&#x689D;&#x4EF6;&#x662F;&#x5426;&#x6210;&#x7ACB;&#xFF0C;&#x5982;&#x5927;&#x65BC;&#xFF0C;&#x5C0F;&#x65BC;&#xFF0C;&#x7B49;&#x65BC; &#x66F4;&#x6539; Program Counter &#x8F38;&#x51FA;&#x5165; &#x70BA;&#x8AAA;&#x660E;&#x8D77;&#x898B;&#xFF0C;&#x6211;&#x5011;&#x5B9A;&#x7FA9;&#x4EE5;&#x4E0B;&#x7684;&#x865B;&#x64EC;&#x6A5F;&#x5668;&#x6307;&#x4EE4;&#x96C6;&#xFF1A; &#x865B;&#x64EC;&#x6A5F;&#x5668;&#x7684;&#x6307;&#x4EE4;&#x7684;&#x683C;&#x5F0F;&#xFF1A;&#x7531; 3 &#x500B;&#x6578;&#x5B57;&#x7D44;&#x6210;&#xFF0C;&#x7B2C;&#x4E00;&#x500B;&#x6578;&#x5B57;&#x4EE3;&#x8868;&#x6307;&#x4EE4;&#xFF0C;&#x5F8C;&#x9762;&#x5169;&#x500B;&#x6578;&#x5B57;&#x4EE3;&#x8868;&#x8A18;&#x61B6;&#x9AD4;&#x7684;&#x5730;&#x5740;&#x3002;&#x6A5F;&#x5668;&#x6307;&#x4EE4;&#x57F7;&#x884C;&#x6642;&#x6703;&#x6539;&#x8B8A;&#x67D0;&#x4E9B;&#x8A18;&#x61B6;&#x9AD4; (&#x542B; Program Counter &#x4EE5;&#x53CA;&#x66AB;&#x5B58;&#x5668;&#x7B49; CPU &#x5167;&#x90E8;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#xFF0C;&#x4EE5;&#x53CA; Main Memory) &#x7684;&#x5167;&#x5BB9;&#xFF0C;&#x800C;&#x9019;&#x4E9B;&#x8A18;&#x61B6;&#x9AD4;&#x5C31;&#x6C7A;&#x5B9A;&#x4E86;&#x6307;&#x4EE4;&#x57F7;&#x884C;&#x7684;&#x7D50;&#x679C;&#x3002;&#x63DB;&#x53E5;&#x8A71;&#x8AAA;&#xFF0C;&#x96FB;&#x8166;&#x4E0D;&#x8A18;&#x5F97;&#x904E;&#x53BB;&#xFF0C;&#x4E5F;&#x4E0D;&#x77E5;&#x9053;&#x672A;&#x4F86;&#xFF0C;&#x4ED6;&#x53EA;&#x80FD;&#x900F;&#x904E;&#x8A18;&#x61B6;&#x9AD4;&#x7684;&#x5167;&#x5BB9;&#x77E5;&#x9053;&#x73FE;&#x5728;&#x7684;&#x60C5;&#x6CC1;&#x3002; &#x6307;&#x4EE4; 0&#x2013;LOAD XX &#x5C07; XX &#x8A18;&#x61B6;&#x9AD4;&#x7684;&#x5167;&#x5BB9;&#x8907;&#x88FD;&#x5230;&#x66AB;&#x5B58;&#x5668;&#x5167;&#xFF0C;&#x7136;&#x5F8C;&#x5C07; Program Counter &#x52A0; 1 &#x6307;&#x4EE4; 1&#x2013;STORE XX &#x5C07;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x5167;&#x5BB9;&#x8907;&#x88FD;&#x5230; XX &#x8A18;&#x61B6;&#x9AD4;&#xFF0C;&#x7136;&#x5F8C;&#x5C07; Program Counter &#x52A0; 1 &#x6307;&#x4EE4; 2&#x2013;ADD XX &#x5C07;&#x8A18;&#x61B6;&#x9AD4; XX &#x7684;&#x5167;&#x5BB9;&#x8207;&#x66AB;&#x5B58;&#x5668;&#x5167;&#x7684;&#x6578;&#x503C;&#x76F8;&#x52A0;&#xFF0C;&#x7D50;&#x679C;&#x653E;&#x5728;&#x66AB;&#x5B58;&#x5668;&#x4E0A;&#xFF0C;&#x7136;&#x5F8C; Program Counter &#x52A0; 1 &#x6307;&#x4EE4; 3&#x2013;SUB XX &#x5C07;&#x66AB;&#x5B58;&#x5668;&#x5167;&#x7684;&#x6578;&#x503C;&#x6E1B;&#x6389;&#x8A18;&#x61B6;&#x9AD4; XX &#x7684;&#x5167;&#x5BB9;&#xFF0C;&#x7D50;&#x679C;&#x653E;&#x5728;&#x66AB;&#x5B58;&#x5668;&#x4E0A;&#xFF0C;&#x7136;&#x5F8C; Program Counter &#x52A0; 1&#x3000; &#x6307;&#x4EE4; 4&#x2013;JUMP XX &#x5C07; Program Counter &#x7684;&#x5167;&#x5BB9;&#x6539;&#x70BA; XX &#x6307;&#x4EE4; 5&#x2013;SKIP &#x82E5;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x5167;&#x5BB9; =0&#xFF0C;&#x5247;&#x628A; Program Counter+1&#xFF0C;&#x5426;&#x5247;&#x628A; Program Counter+2 &#x6307;&#x4EE4; 6&#x2013;INPUT &#x7531;&#x8F38;&#x5165;&#x88DD;&#x7F6E;&#x8B80;&#x5165;&#x8CC7;&#x6599;&#x653E;&#x5230;&#x66AB;&#x5B58;&#x5668;&#x4E0A;&#xFF0C;&#x7136;&#x5F8C;&#x5C07; Program Counter+1&#x3000; &#x6307;&#x4EE4; 7&#x2013;OUTPUT &#x7531;&#x66AB;&#x5B58;&#x5668;&#x5C07;&#x8CC7;&#x6599;&#x9001;&#x5230;&#x8F38;&#x51FA;&#x88DD;&#x7F6E;&#xFF0C;&#x7136;&#x5F8C; Program Counter +1&#x3000; &#x6307;&#x4EE4; 8&#x2013;CALL XX &#x5C07; (Program Counter+1) &#x653E;&#x5230;&#x5806;&#x758A;&#x4E0A;&#xFF0C;&#x7136;&#x5F8C; Program Counter &#x7684;&#x5167;&#x5BB9;&#x6539;&#x6210; XX&#x3000; &#x6307;&#x4EE4; 9&#x2013;RETURN &#x7531;&#x5806;&#x758A;&#x4E0A;&#x53D6;&#x51FA;&#x4E00;&#x500B;&#x6578;&#x503C;&#xFF0C;&#x7136;&#x5F8C;&#x5C07; Program Counter &#x7684;&#x5167;&#x5BB9;&#x6539;&#x6210;&#x6B64;&#x6578;&#x503C;&#x3000; &#x6307;&#x4EE4; 10&#x2013;HALT &#x7A0B;&#x5F0F;&#x505C;&#x6B62;&#x57F7;&#x884C; &#x9644;&#x8A3B;&#xFF1A; &#x6240;&#x8B02;&#x5806;&#x758A; (Stack) &#x662F;&#x4E00;&#x500B;&#x4E0A;&#x65B9;&#x53EA;&#x6709;&#x4E00;&#x500B;&#x958B;&#x53E3;&#x7684;&#x5BB9;&#x5668;&#xFF0C;&#x7576;&#x8981;&#x628A;&#x8CC7;&#x6599;&#x653E;&#x5165;&#x5806;&#x758A;&#x6642;&#xFF0C;&#x662F;&#x653E;&#x5728;&#x5806;&#x758A;&#x7684;&#x6700;&#x4E0A;&#x9762;&#xFF0C;&#x7576;&#x8981;&#x5F9E;&#x5806;&#x758A;&#x62FF;&#x8CC7;&#x6599;&#x6642;&#xFF0C;&#x662F;&#x5F9E;&#x6700;&#x4E0A;&#x9762;&#x62FF;&#x3002;&#x653E;&#x5165;&#x7684;&#x52D5;&#x4F5C;&#x7A31;&#x70BA; push&#xFF0C;&#x62FF;&#x51FA;&#x4F86;&#x7684;&#x52D5;&#x4F5C;&#x7A31;&#x70BA; pop&#x3002; &#x7531;&#x65BC;&#x53EA;&#x6709;&#x4E00;&#x500B;&#x958B;&#x53E3;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x89C0;&#x5BDF;&#x5230;&#x5148;&#x653E;&#x9032;&#x53BB;&#x7684;&#x8CC7;&#x6599;&#x6703;&#x6700;&#x5F8C;&#x62FF;&#x51FA;&#x4F86; (Firt In Last Out&#xFF0C;FILO)&#x3002;&#x4F8B;&#x5982;&#x4F9D;&#x5E8F; push 1&#xFF0C;2&#xFF0C;3&#xFF0C;4 &#x56DB;&#x500B;&#x6578;&#x5B57;&#xFF0C;&#x7136;&#x5F8C;&#x518D; pop &#x56DB;&#x6B21;&#xFF0C;&#x4F60;&#x6703;&#x767C;&#x73FE;&#x62FF;&#x51FA;&#x4F86;&#x7684;&#x9806;&#x5E8F;&#x662F; 4&#xFF0C;3&#xFF0C;2&#xFF0C;1 &#x3002;&#x53EA;&#x8981;&#x7B26;&#x5408; FILO &#x7279;&#x6027;&#x7684;&#x5BB9;&#x5668;&#xFF0C;&#x5C31;&#x53EF;&#x7A31;&#x70BA;&#x5806;&#x758A;&#x3002;&#x96FB;&#x8166;&#x5167;&#x90E8;&#x7684; Stack &#x662F;&#x7528; Main Memory &#x4F86;&#x6A21;&#x64EC;&#x7684;&#x3002; &#x4EE5;&#x4E0B;&#x662F;&#x4EE5;&#x865B;&#x64EC;&#x6A5F;&#x5668;&#x8A9E;&#x8A00;&#x6240;&#x5BEB;&#x7684;&#x5169;&#x6578;&#x5B57;&#x76F8;&#x52A0;&#x7A0B;&#x5F0F;&#xFF0C;&#x2013; &#x5F8C;&#x9762;&#x7684;&#x90E8;&#x5206;&#x662F;&#x8A3B;&#x89E3;&#xFF0C;&#x662F;&#x7D66;&#x4EBA;&#x770B;&#x7684;&#xFF0C;&#x96FB;&#x8166;&#x4E0D;&#x4E88;&#x8655;&#x7406;&#xFF1A; INPUT &#x2013; &#x8F38;&#x5165;&#x6578;&#x5B57;&#x5230;&#x66AB;&#x5B58;&#x5668;&#xFF0C;program counter+1 STORE 99 &#x2013; &#x5C07;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x5167;&#x5BB9;&#x8907;&#x88FD;&#x5230;&#x8A18;&#x61B6;&#x9AD4; 99 &#x7684;&#x5730;&#x65B9;&#xFF0C;program counter+1 INPUT &#x2013; &#x8F38;&#x5165;&#x6578;&#x5B57;&#x5230;&#x66AB;&#x5B58;&#x5668;&#xFF0C;program counter+1 ADD 99 &#x2013; &#x5C07;&#x8A18;&#x61B6;&#x9AD4; 99 &#x7684;&#x5167;&#x5BB9;&#x52A0;&#x5230;&#x66AB;&#x5B58;&#x5668;&#xFF0C;program counter+1 OUTPUT &#x2013; &#x5C07;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x5167;&#x5BB9;&#x8F38;&#x51FA;&#xFF0C;program counter+1 HALT &#x2013; &#x7A0B;&#x5F0F;&#x505C;&#x6B62;&#x57F7;&#x884C; &#x8A08;&#x7B97; abs(x-y) INPUT &#x2013; &#x8F38;&#x5165;&#x6578;&#x5B57;&#x5230;&#x66AB;&#x5B58;&#x5668;&#xFF0C;program counter+1 STORE 98 &#x2013; &#x5C07;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x5167;&#x5BB9;&#x8907;&#x88FD;&#x5230;&#x8A18;&#x61B6;&#x9AD4; 98 &#x7684;&#x5730;&#x65B9;&#xFF0C;program counter+1 INPUT &#x2013; &#x8F38;&#x5165;&#x6578;&#x5B57;&#x5230;&#x66AB;&#x5B58;&#x5668;&#xFF0C;program counter+1 STORE 99 &#x2013; &#x5C07;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x5167;&#x5BB9;&#x8907;&#x88FD;&#x5230;&#x8A18;&#x61B6;&#x9AD4; 99 &#x7684;&#x5730;&#x65B9;&#xFF0C;program counter+1 SUB 98 &#x2013; &#x5C07;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x5167;&#x5BB9;&#x6E1B;&#x6389;&#x8A18;&#x61B6;&#x9AD4; 98 &#x7684;&#x5167;&#x5BB9;&#xFF0C;program counter+1 SKIP &#x2013; &#x5982;&#x679C;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x5167;&#x5BB9; = 0 &#x5247; program counter+1; &#x5426;&#x5247; program coounter+2 JUMP 9 &#x2013; &#x5C07; program counter &#x8A2D;&#x70BA; 9&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8DD1;&#x5230;&#x7B2C; 9 &#x884C;&#x7684; OUT &#x6307;&#x4EE4; LOAD 98 &#x2013; &#x5C07;&#x8A18;&#x61B6;&#x9AD4; 98 &#x7684;&#x5167;&#x5BB9;&#x8907;&#x88FD;&#x5230;&#x66AB;&#x5B58;&#x5668;&#xFF0C;program counter+1 SUB 99 &#x2013; &#x5C07;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x5167;&#x5BB9;&#x6E1B;&#x6389;&#x8A18;&#x61B6;&#x9AD4; 99 &#x7684;&#x5167;&#x5BB9; &#xFF0C;program counter+1 OUTPUT &#x2013; &#x5C07;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x5167;&#x5BB9;&#x8F38;&#x51FA;, program counter + 1 HALT &#x2013; &#x7A0B;&#x5F0F;&#x505C;&#x6B62;&#x57F7;&#x884C; &#x547C;&#x53EB;&#x51FD;&#x6578;&#x5C07;&#x5169;&#x500B;&#x6578;&#x5B57;&#x76F8;&#x52A0;&#x7684;&#x7BC4;&#x4F8B; INPUT &#x2013; &#x8F38;&#x5165;&#x6578;&#x5B57;&#x5230;&#x66AB;&#x5B58;&#x5668;&#xFF0C;program counter+1 STORE 99 &#x2013; &#x5C07;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x5167;&#x5BB9;&#x8907;&#x88FD;&#x5230;&#x8A18;&#x61B6;&#x9AD4; 99&#xFF0C;program counter+1 INPUT &#x2013; &#x8F38;&#x5165;&#x6578;&#x5B57;&#x5230;&#x66AB;&#x5B58;&#x5668;&#xFF0C;program counter+1 STORE 98 &#x2013; &#x5C07;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x5167;&#x5BB9;&#x8907;&#x88FD;&#x5230;&#x8A18;&#x61B6;&#x9AD4; 98&#xFF0C;program counter+1 CALL 07 &#x2013; &#x5C07; program counter+1(&#x4E5F;&#x5C31;&#x662F; 5) &#x653E;&#x5230;&#x5806;&#x758A;&#x4E0A; &#xFF0C;program counter &#x6539;&#x70BA; 07 OUTPUT &#x2013; &#x5C07;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x5167;&#x5BB9;&#x8F38;&#x51FA;, program counter + 1 HALT &#x2013; &#x7D50;&#x675F;&#x7A0B;&#x5F0F; LOAD 99 &#x2013; &#x5C07;&#x8A18;&#x61B6;&#x9AD4; 99 &#x7684;&#x5167;&#x5BB9;&#x8907;&#x88FD;&#x5230;&#x66AB;&#x5B58;&#x5668;&#x4E0A;&#xFF0C;program counter+1 ADD 98 &#x2013; &#x5C07;&#x66AB;&#x5B58;&#x5668;&#x7684;&#x5167;&#x5BB9;&#x52A0;&#x4E0A;&#x8A18;&#x61B6;&#x9AD4; 98 &#x7684;&#x5167;&#x5BB9;&#xFF0C;program counter+1 RETURN &#x2013; &#x7531;&#x5806;&#x758A;&#x53D6;&#x51FA;&#x4E00;&#x500B;&#x6578;&#x503C; (&#x76EE;&#x524D;&#x6700;&#x4E0A;&#x9762;&#x7684;&#x70BA; 5)&#xFF0C;&#x4E26;&#x5C07; program counter &#x8A2D;&#x70BA;&#x8A72;&#x6578;&#x503C;"},"c/system-operation.html#Software-development-process":{"title":"Software development process","path":"/c/system-operation.html#Software-development-process","body":"&#x64B0;&#x5BEB;&#x7A0B;&#x5F0F;&#x7684;&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#x5716;&#xFF0C;&#x6240;&#x9700;&#x8981;&#x7684;&#x5DE5;&#x5177;&#x5305;&#x62EC; Text Editor, Preprocessor, Compiler, Linker &#x7B49;&#x56DB;&#x7A2E; Text Editor &#xFF1A;&#x7A0B;&#x5F0F;&#x8A2D;&#x8A08;&#x5E2B;&#x5229;&#x7528;&#x6B64;&#x5DE5;&#x5177;&#x7DE8;&#x8F2F; (Edit)Source code file(Text Format), &#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x7522;&#x751F;. c &#x6A94;&#x7684;&#x5DE5;&#x5177;&#x3002; Preprocessor &#xFF1A;&#x7D50;&#x5408; Source code file(.c &#x6A94;) &#x548C;&#x96F6;&#x5230;&#x591A;&#x500B; Header files(.h &#x6A94;)&#xFF0C;&#x7D93;&#x904E;&#x7DE8;&#x8F2F; (Edit) &#x5F8C;&#x6210;&#x70BA;&#x53E6;&#x4E00;&#x500B;&#x4FEE;&#x6539;&#x904E;&#x7684; Source code file&#x3002; Compiler &#xFF1A;&#x5C07; source code &#x7DE8;&#x8B6F; (compile) &#x7522;&#x751F; Object code file(.o &#x6A94;, Binary Format)&#xFF0C;&#x540C;&#x4E00;&#x500B;&#x4F5C;&#x696D;&#x5E73;&#x53F0;&#x7684; Object code &#x683C;&#x5F0F;&#x76F8;&#x540C;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA; Object code file &#x53EF;&#x4EE5;&#x7531;&#x4E0D;&#x540C;&#x7A0B;&#x5F0F;&#x8A9E;&#x8A00;&#x7684; Compiler &#x7522;&#x751F;&#x3002; Linker &#xFF1A;&#x5C07;&#x5E7E;&#x500B; Object code files &#x9023;&#x7D50; (link) &#x7522;&#x751F;&#x4E00;&#x500B;&#x53EF;&#x57F7;&#x884C;&#x6A94; (.exe &#x6A94;)&#x3002; &#x5982;&#x679C;&#x4F60;&#x7684;&#x958B;&#x767C;&#x74B0;&#x5883;&#x662F;&#x5728; Windows &#x4E0A;&#xFF0C;&#x4E0B;&#x9762;&#x6709;&#x95DC; vi &#x548C; gcc &#x7684;&#x8AAA;&#x660E;&#x53EF;&#x4EE5;&#x8DF3;&#x904E;&#x3002; &#x5728; Unix &#x4F5C;&#x696D;&#x7CFB;&#x7D71;&#x5167;&#xFF0C;&#x6700;&#x5E38;&#x898B;&#x7684; Text Editor &#x662F; vi&#x3002; 1 $ gcc hello.c &#x82E5; hello.c &#x5B8C;&#x5168;&#x6C92;&#x6709;&#x932F;&#x8AA4;&#xFF0C;&#x5247;&#x4EE5;&#x4E0A;&#x547D;&#x4EE4;&#x6703;&#x7522;&#x751F;&#x4E00;&#x500B;&#x57F7;&#x884C;&#x6A94; a.out &#xFF0C;&#x5728;&#x547D;&#x4EE4;&#x5217;&#x4E0B;&#x6253; a.out &#x5373;&#x53EF;&#x89C0;&#x5BDF;&#x4F60;&#x6240;&#x5BEB;&#x7A0B;&#x5F0F;&#x7684;&#x57F7;&#x884C;&#x7D50;&#x679C;&#x3002;&#x6709;&#x6642;&#x5019;&#x82E5;&#x4F60;&#x8A2D;&#x5B9A;&#x7684;&#x74B0;&#x5883;&#x8B8A;&#x6578;&#x4E0D;&#x5C0D;&#xFF0C;&#x5247;&#x53EF;&#x80FD;&#x51FA;&#x73FE; Command Not Found &#x7684;&#x932F;&#x8AA4;&#xFF0C;&#x6B64;&#x6642;&#x4F60;&#x53EF;&#x8F38;&#x5165; ./a.out &#x3002;&#x82E5;&#x4E0D;&#x60F3;&#x8B93; gcc &#x7DE8;&#x8B6F;&#x51FA;&#x4F86;&#x7684;&#x57F7;&#x884C;&#x6A94;&#x53EB;&#x505A; a.out &#xFF0C;&#x5247;&#x53EF;&#x4E0B;&#x9054;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A; 1 $ gcc -o exename hello.c &#x64B0;&#x5BEB;&#x5927;&#x578B;&#x7A0B;&#x5F0F;&#x6642;&#xFF0C;&#x5F88;&#x53EF;&#x80FD;&#x6703;&#x6709;&#x591A;&#x500B; .c &#x7684;&#x539F;&#x59CB;&#x7A0B;&#x5F0F;&#x6A94;&#xFF0C;&#x5047;&#x8A2D;&#x4ED6;&#x5011;&#x7684;&#x540D;&#x7A31;&#x662F; source1.c , source2.c , source3.c &#x2026; &#x5982;&#x679C;&#x8981;&#x500B;&#x5225;&#x7DE8;&#x8B6F;&#x9019;&#x4E9B; source code&#xFF0C;&#x5247;&#x4E0B;&#x9054;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A; 1 $ gcc -c source1.c &#x82E5;&#x7DE8;&#x8B6F;&#x6210;&#x529F;&#xFF0C;&#x6703;&#x7522;&#x751F; source1.o &#x7684;&#x6A94;&#x6848;&#x3002;&#x8981;&#x5C07;&#x6578;&#x500B; Object Code &#x9023;&#x7D50;&#x6210;&#x70BA;&#x4E00;&#x500B;&#x53EF;&#x57F7;&#x884C;&#x6A94;&#xFF0C;&#x5247;&#x4E0B;&#x9054;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A; 1 $ gcc source1.o source2.o source3.o &#x81F3;&#x65BC; Windows &#x4F5C;&#x696D;&#x7CFB;&#x7D71;&#x4E0A;&#x7684;&#x7A0B;&#x5F0F;&#x7DE8;&#x5BEB;&#x74B0;&#x5883;&#xFF0C;&#x6700;&#x5E38;&#x4F7F;&#x7528;&#x7684;&#x662F; Microsoft Visual Studio&#xFF0C;&#x88E1;&#x9762;&#x5C31;&#x5305;&#x542B;&#x4E86; Visual C++ &#x7684;&#x958B;&#x767C;&#x74B0;&#x5883;&#x3002;&#x56E0;&#x70BA; C++ &#x53EF;&#x8996;&#x70BA; C &#x8A9E;&#x8A00;&#x7684;&#x7236;&#x96C6;&#x5408;&#xFF0C;&#x56E0;&#x6B64;&#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x7528; Visual C++ &#x4F86;&#x958B;&#x767C; C &#x7A0B;&#x5F0F;&#x3002;&#x9019;&#x985E;&#x8996;&#x89BA;&#x5316;&#x7684;&#x958B;&#x767C;&#x5DE5;&#x5177; (Dev C++ &#x4E5F;&#x662F;&#x5176;&#x4E2D;&#x4E00;&#x7A2E;)&#xFF0C;&#x5DF2;&#x7D93;&#x628A; Text Editor, Preprocessor, Compiler, Linker &#x6574;&#x5408;&#x5728;&#x4E00;&#x8D77;&#xFF0C; &#x4E26;&#x5305;&#x62EC; Project Management(&#x5C08;&#x6848;&#x7BA1;&#x7406;) &#x7B49;&#x529F;&#x80FD;&#xFF0C;&#x56E0;&#x6B64;&#x9019;&#x985E;&#x5DE5;&#x5177;&#x53C8;&#x7A31;&#x70BA; Integrated Development Environment(IDE&#xFF0C;&#x6574;&#x5408;&#x958B;&#x767C;&#x74B0;&#x5883;)&#x3002;"},"c/writing-intro.html":{"title":"程式寫作概論","path":"/c/writing-intro.html","body":"文章的組成 書的結構 書名 作者 目錄 章 標題 節 段落 句子 附錄 索引 學術論文的結構 標題 作者 摘要 節 段落 句子 引用文獻 句子的組成 單字 文法: 主詞 + 動詞 + 受詞 程式語言 C語言的結構 註解 (comments)(給人看的) 函數 (functions) 函數名稱 (function name) 參數 (parameters) 區域變數宣告 (local variable declarations) 敘述 (statements) 敘述的組成 常數、變數、運算符號、分號 if () {} else {} while () {} do {} while {} switch () { case 1: case 2: case 3} break continue goto Java 語言的結構 註解 (comments)(給人看的) 類別 (class) 變數宣告 (variable declarations) 函數宣告 (method declarations) 函數名稱 (function name) 參數 (parameters) 區域變數宣告 (local variable declarations) 敘述 (statements) 範例 文字描述如何判斷閏年 透過西元幾年來判斷閏年：4 的倍數的年份是閏年，100 的倍數的年份是平年，400 的倍數的年份是閏年，也就是說，400 年中，只有 97 個閏年 (4 的倍數有 100 個，100 的倍數有 4 個，400 的倍數有 1 個)。 以流程圖 (Flow Chart) 來表示 以程式來表示 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 # include stdio.h int main ()  int year; printf ( \"Please input an the year:\" ); // 提示使用者輸入資料 if ( scanf ( \"%d\" , &amp;year) != 1 )  // 輸入年份year printf ( \"輸入錯誤\\n\" ); return ;  if (year% 4 == 0 )  if (year% 100 == 0 )  if (year% 400 == 0 )  printf ( \"%d是閏年\\n\" , year);  else  printf ( \"%d不是閏年\\n\" , year);   else  printf ( \"%d是閏年\\n\" , year);   else  printf ( \"%d不是閏年\\n\" , year);   如果我們把所有可得到閏年的路徑，集合在一起，則更簡潔的寫法是 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # include stdio.h int main ()  int year; printf ( \"Please input the year:\" ); // 提示使用者輸入資料 if ( scanf ( \"%d\" , &amp;year) != 1 )  // 輸入年份year printf ( \"輸入錯誤\\n\" ); return ;  if (year% 400 == 0 || year% 4 == 0 &amp;&amp; year% 100 != 0 )  printf ( \"%d是閏年\\n\" , year);  else  printf ( \"%d不是閏年\\n\" , year);   Java的範例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import java.util.*; public class Leap  public static void main (String[] argv) throws Exception  int year = 1984 ; System.out.println( \"Please input the year:\" ); Scanner in = new Scanner(System.in); if (!in.hasNextInt())  System.out.println( \"輸入錯誤\" ); return ;  year = in.nextInt(); if (year% 400 == 0 || year% 4 == 0 &amp;&amp; year% 100 != 0 )  System.out.println(year+ \"是閏年\" );  else  System.out.println(year+ \"不是閏年\" );    mod4=>condition: year % 4 == 0mod100=>condition: year % 100 == 0mod400=>condition: year % 400 == 0no4=>operation: 不是閏年yes100=>operation: 閏年no400=>operation: 不是閏年yes400=>operation: 閏年mod4(no, right)->no4mod4(yes)->mod100mod100(no, right)->yes100mod100(yes)->mod400mod400(no, right)->no400mod400(yes)->yes400 {\"theme\":\"simple\",\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-0-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-0-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-0\", options);"},"c/writing-intro.html#文章的組成":{"title":"&#x6587;&#x7AE0;&#x7684;&#x7D44;&#x6210;","path":"/c/writing-intro.html#文章的組成","body":"&#x66F8;&#x7684;&#x7D50;&#x69CB; &#x66F8;&#x540D; &#x4F5C;&#x8005; &#x76EE;&#x9304; &#x7AE0; &#x6A19;&#x984C; &#x7BC0; &#x6BB5;&#x843D; &#x53E5;&#x5B50; &#x9644;&#x9304; &#x7D22;&#x5F15; &#x5B78;&#x8853;&#x8AD6;&#x6587;&#x7684;&#x7D50;&#x69CB; &#x6A19;&#x984C; &#x4F5C;&#x8005; &#x6458;&#x8981; &#x7BC0; &#x6BB5;&#x843D; &#x53E5;&#x5B50; &#x5F15;&#x7528;&#x6587;&#x737B;"},"c/writing-intro.html#句子的組成":{"title":"&#x53E5;&#x5B50;&#x7684;&#x7D44;&#x6210;","path":"/c/writing-intro.html#句子的組成","body":"&#x55AE;&#x5B57; &#x6587;&#x6CD5;: &#x4E3B;&#x8A5E; + &#x52D5;&#x8A5E; + &#x53D7;&#x8A5E;"},"c/writing-intro.html#程式語言":{"title":"&#x7A0B;&#x5F0F;&#x8A9E;&#x8A00;","path":"/c/writing-intro.html#程式語言","body":"C&#x8A9E;&#x8A00;&#x7684;&#x7D50;&#x69CB; &#x8A3B;&#x89E3; (comments)(&#x7D66;&#x4EBA;&#x770B;&#x7684;) &#x51FD;&#x6578; (functions) &#x51FD;&#x6578;&#x540D;&#x7A31; (function name) &#x53C3;&#x6578; (parameters) &#x5340;&#x57DF;&#x8B8A;&#x6578;&#x5BA3;&#x544A; (local variable declarations) &#x6558;&#x8FF0; (statements) &#x6558;&#x8FF0;&#x7684;&#x7D44;&#x6210; &#x5E38;&#x6578;&#x3001;&#x8B8A;&#x6578;&#x3001;&#x904B;&#x7B97;&#x7B26;&#x865F;&#x3001;&#x5206;&#x865F; if () {} else {} while () {} do {} while {} switch () { case 1: case 2: case 3} break continue goto Java &#x8A9E;&#x8A00;&#x7684;&#x7D50;&#x69CB; &#x8A3B;&#x89E3; (comments)(&#x7D66;&#x4EBA;&#x770B;&#x7684;) &#x985E;&#x5225; (class) &#x8B8A;&#x6578;&#x5BA3;&#x544A; (variable declarations) &#x51FD;&#x6578;&#x5BA3;&#x544A; (method declarations) &#x51FD;&#x6578;&#x540D;&#x7A31; (function name) &#x53C3;&#x6578; (parameters) &#x5340;&#x57DF;&#x8B8A;&#x6578;&#x5BA3;&#x544A; (local variable declarations) &#x6558;&#x8FF0; (statements)"},"c/writing-intro.html#範例":{"title":"&#x7BC4;&#x4F8B;","path":"/c/writing-intro.html#範例","body":"&#x6587;&#x5B57;&#x63CF;&#x8FF0;&#x5982;&#x4F55;&#x5224;&#x65B7;&#x958F;&#x5E74; &#x900F;&#x904E;&#x897F;&#x5143;&#x5E7E;&#x5E74;&#x4F86;&#x5224;&#x65B7;&#x958F;&#x5E74;&#xFF1A;4 &#x7684;&#x500D;&#x6578;&#x7684;&#x5E74;&#x4EFD;&#x662F;&#x958F;&#x5E74;&#xFF0C;100 &#x7684;&#x500D;&#x6578;&#x7684;&#x5E74;&#x4EFD;&#x662F;&#x5E73;&#x5E74;&#xFF0C;400 &#x7684;&#x500D;&#x6578;&#x7684;&#x5E74;&#x4EFD;&#x662F;&#x958F;&#x5E74;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#xFF0C;400 &#x5E74;&#x4E2D;&#xFF0C;&#x53EA;&#x6709; 97 &#x500B;&#x958F;&#x5E74; (4 &#x7684;&#x500D;&#x6578;&#x6709; 100 &#x500B;&#xFF0C;100 &#x7684;&#x500D;&#x6578;&#x6709; 4 &#x500B;&#xFF0C;400 &#x7684;&#x500D;&#x6578;&#x6709; 1 &#x500B;)&#x3002; &#x4EE5;&#x6D41;&#x7A0B;&#x5716; (Flow Chart) &#x4F86;&#x8868;&#x793A; &#x4EE5;&#x7A0B;&#x5F0F;&#x4F86;&#x8868;&#x793A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 # include stdio.h int main () { int year; printf ( Please input an the year: ); // &#x63D0;&#x793A;&#x4F7F;&#x7528;&#x8005;&#x8F38;&#x5165;&#x8CC7;&#x6599; if ( scanf ( %d , &amp;year) != 1 ) { // &#x8F38;&#x5165;&#x5E74;&#x4EFD;year printf ( &#x8F38;&#x5165;&#x932F;&#x8AA4;\\n ); return ; } if (year% 4 == 0 ) { if (year% 100 == 0 ) { if (year% 400 == 0 ) { printf ( %d&#x662F;&#x958F;&#x5E74;\\n , year); } else { printf ( %d&#x4E0D;&#x662F;&#x958F;&#x5E74;\\n , year); } } else { printf ( %d&#x662F;&#x958F;&#x5E74;\\n , year); } } else { printf ( %d&#x4E0D;&#x662F;&#x958F;&#x5E74;\\n , year); } } &#x5982;&#x679C;&#x6211;&#x5011;&#x628A;&#x6240;&#x6709;&#x53EF;&#x5F97;&#x5230;&#x958F;&#x5E74;&#x7684;&#x8DEF;&#x5F91;&#xFF0C;&#x96C6;&#x5408;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x5247;&#x66F4;&#x7C21;&#x6F54;&#x7684;&#x5BEB;&#x6CD5;&#x662F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # include stdio.h int main () { int year; printf ( Please input the year: ); // &#x63D0;&#x793A;&#x4F7F;&#x7528;&#x8005;&#x8F38;&#x5165;&#x8CC7;&#x6599; if ( scanf ( %d , &amp;year) != 1 ) { // &#x8F38;&#x5165;&#x5E74;&#x4EFD;year printf ( &#x8F38;&#x5165;&#x932F;&#x8AA4;\\n ); return ; } if (year% 400 == 0 || year% 4 == 0 &amp;&amp; year% 100 != 0 ) { printf ( %d&#x662F;&#x958F;&#x5E74;\\n , year); } else { printf ( %d&#x4E0D;&#x662F;&#x958F;&#x5E74;\\n , year); } } Java&#x7684;&#x7BC4;&#x4F8B; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import java.util.*; public class Leap { public static void main (String[] argv) throws Exception { int year = 1984 ; System.out.println( Please input the year: ); Scanner in = new Scanner(System.in); if (!in.hasNextInt()) { System.out.println( &#x8F38;&#x5165;&#x932F;&#x8AA4; ); return ; } year = in.nextInt(); if (year% 400 == 0 || year% 4 == 0 &amp;&amp; year% 100 != 0 ) { System.out.println(year+ &#x662F;&#x958F;&#x5E74; ); } else { System.out.println(year+ &#x4E0D;&#x662F;&#x958F;&#x5E74; ); } } } mod4=condition: year % 4 == 0mod100=condition: year % 100 == 0mod400=condition: year % 400 == 0no4=operation: &#x4E0D;&#x662F;&#x958F;&#x5E74;yes100=operation: &#x958F;&#x5E74;no400=operation: &#x4E0D;&#x662F;&#x958F;&#x5E74;yes400=operation: &#x958F;&#x5E74;mod4(no, right)-no4mod4(yes)-mod100mod100(no, right)-yes100mod100(yes)-mod400mod400(no, right)-no400mod400(yes)-yes400 {theme:simple,scale:1,line-width:2,line-length:50,text-margin:10,font-size:12} var code = document.getElementById(\"flowchart-0-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-0-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-0\", options);"},"java/array.html":{"title":"陣列","path":"/java/array.html","body":"C 語言陣列回顧 C 語言以連續的記憶體空間來表達陣列，多維陣列的地址運算採用 row major 的方式。這種做法的好處是索引運算速度快，甚至能用 pointer 來逐一檢視其內容。但這種實作方法在傳遞陣列參數時, 就有一些問題產生了 1 2 3 4 5 6 7 8 9 10 int sum ( int x[])  // x的長度到底是多少? 不知道的話程式要怎麼寫? // 如果宣告成 int sum(int x[100])則此函數就只能接受長度為100的陣列  int main ()  int x[ 100 ]; int y[ 200 ]; sum(x); sum(y);  假設有一函數 sum(int x[]) 可用來將陣列內的函數全部加總起來，則僅靠傳遞陣列開頭地址是不夠的，還必須傳遞該陣列的長度才行。如 1 2 3 4 5 6 7 8 9 10 11 12 13 int sum ( int x[], int len)  int i, total = 0 ; for (i = 0 ; i  len; i++)  total += x[i];  return total;  int main ()  int x[ 100 ]; int y[ 200 ]; sum(x, 100 ); sum(y, 200 );  由於長度的資訊並不在陣列內，必須靠設計者另外告知才行，不小心的話容易發生不一致的情形。 另一種方法是規範該陣列必須以某個特殊的數值當作結尾，函數必須自行檢查該數值，以確保程式正確。C 語言的字串就是利用以 0 結尾的陣列來表達。 Java 陣列的特性 Java 的陣列並不以一塊連續的記憶體空間來表達，而是把陣列視為特殊的物件。此物件不但可存放資料，還利用 object variable length 記錄著該陣列的長度。 1 2 3 4 5 6 7 8 9 public class ArrayExample  public static void main (String[] argv)  int [] x; // x is a reference to int[] x = new int [ 10 ]; // 利用new指令產生物件 for ( int i = 0 ; i  x.length; i++)  // 此物件有一個object variable length，用以紀錄該陣列的長度 x[i] = i;    length 變數宣告為 final ，因此陣列物件產生後，就不能再變更其長度了 1 2 3 4 5 6 7 public class ArrayExample  public static void main (String[] argv)  int [] x; // x is a reference to int[] x = new int [ 10 ]; // 利用new指令產生物件 x.length = 1 ; // Compile Error   在陣列變數的宣告中，要注意和 C 語言特別不同的地方是： [] 沒有數字。因為陣列是一種物件，必須以 new 指令產生物件， int[] x 只是宣告 x 是一個 reference to int[] 物件而已。 [] 在變數的左邊，而不是右邊。 [] 屬於宣告型態的一部份，不牽扯空間分配，也不像 C 語言有和 pointer, function 混合運用的情況，因此語法要把 [] 放在變數左邊，方便判讀。 我們也可以在變數宣告或是 new 陣列時就給定初始值: 1 2 3 4 5 6 7 8 9 public class Arrays  public static void main (String[] args)  int [] a1 =  1 , 2 , 3 , 4 , 5 ; Object[] a2 = new Object[]  new Integer( 47 ), new Long( 10 ), new Float( 3.14 ), new Double( 11.11 ) ;   多維陣列 Java 陣列物件是只能儲存基本資料型態或 reference 的一維陣列，二維以上的陣列是透過 reference 指到其他的一維陣列物件來達成。 1 2 3 4 5 6 7 8 9 10 11 public class ArrayExample2  public static void main (String[] argv)  int [][] x; x = new int [ 10 ][ 20 ]; for ( int i = 0 ; i  x.length; i++)  for ( int j = 0 ; j  x[i].length; j++)  x[i][j] = i + j;     上述的範例中， x 宣告為 reference to int[][] , x[i][j] 事實上是先找出 reference x[i] ，再找 x[i] 所指到的陣列物件內的第 j 個元素。由於 Java 採用這種機制，因此下面的有趣情形就發生了： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public class ArrayExample3  public static void main (String[] argv)  int [][] x; x = new int [ 10 ][]; // 先產生x陣列 for ( int i = 0 ; i  x.length; i++)  x[i] = new int [i]; // 再分別產生x[i]所指到的陣列  for ( int i = 0 ; i  x.length; i++)  for ( int j = 0 ; j  x[i].length; j++)  x[i][j] = i + j;     上述範例有兩點要注意 陣列的長度可以為 0 由於以一維陣列來模擬二維陣列，因此透過第一個陣列的 reference 所找到的陣列，其長度不必然相同 陣列索引的檢查 C 語言不會對陣列的索引進行任何檢查，保證索引值在陣列的合法範圍內，是設計者的責任。像是下列的範例就很可能產生 Segmentation Fault。 1 2 3 4 5 6 7 int main ()  int i; int x[ 10 ]; for (i = 0 ; i = 10 ; i++)  x[i] = i;   由於這類的疏忽很難完全避免，而且不容易找出錯誤，因此 Java 在執行期間會對陣列的索引做檢查，如果超出來合法範圍，就會產生 ArrayIndexOutOfBoundException 的例外。若程式設計時沒有指定這種例外的處理方式，則整個程式會終止，並於螢幕上印出相關的錯誤訊息。例如執行下面的程式： 1 2 3 4 5 6 7 8 public class ArrayExample4  public static void main (String[] argv)  int [] x = new int [ 10 ]; for ( int i = 0 ; i = 10 ; i++)  x[i] = i;    就會產生如下的錯誤訊息，並且終止該程式 1 2 3 java.lang.ArrayIndexOutOfBoundsException: 10 \tat ArrayExample4.main(ArrayExample4.java:5) Exception in thread main 上面訊息的意義是： java.lang.ArrayIndexOutOfBoundsException: 10 告訴我們索引值是 10 的時候引起了此問題 at ArrayExample4.main(ArrayExample4.java:5) 告訴我們呼叫 ArrayExample4.main 時在 ArrayExample4.java 的第五行產生錯誤 對於寫過 C 語言的人來說，第一次看到這樣的訊息都會很興奮，因為 JVM 明明白白的告訴我們哪一行出了甚麼錯誤，要除錯就簡單多了。 當然這樣的便利性是用效能換來的。如果你的應用需要大量存取陣列，而且速度非常重要，連幾個 machine cycle 都要計較, 那才要考慮不用 Java 了。 陣列範例 費氏數 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class Fab  private static long [] rel =  0 , 1 , 1 , 2 , 3 , 5 , 8 , 13 , 21 , 34 , 55 , 89 ; \t public static void main (String[] argv)  val( 10 );  public static long val ( int n)  if (rel.length = n)  long [] tt = new long [n+ 1 ]; int i; for (i = 0 ; i  rel.length; i++)  tt[i] = rel[i];  for (; i = n; i++)  tt[i] = tt[i- 1 ] + tt[i- 2 ];  rel = tt;  return rel[n];   Selection sort 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 public class SelectionSort  public static void main (String[] argv)  int [] data =  6 , 3 , 7 , 1 , 4 , 8 ; sort(data); for ( int i = 0 ; i  data.length; i++)  System.out.println(data[i]);   public static void sort ( int [] data)  for ( int i = 0 ; i  data.length - 1 ; i++)  // find minimun in i ~ data.length - 1 int mim = i; for ( int j = i + 1 ; j  data.length; j++)  if (data[min]  data[j])  min = j;   // swap data[i] with data[min] int tmp = data[i]; data[i] = data[min]; data[min] = tmp;    Insertion Sort 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 public class InsertionSort  public static void main (String[] argv)  int [] data =  4 , 1 , 7 , 8 , 9 , 3 , 2 ; sort(data); for ( int i = 0 ; i  data.length; i++)  System.out.println(data[i]);   public static void sort ( int [] data)  int j, pivot; // insert data[i] to sorted array 0 ~ i - 1 // begins from i = 1, because if the array has only one element then it must be sorted. for ( int i = 1 ; i  data.length; i++)  pivot = data[i]; for (j = i - 1 ; j = 0 &amp;&amp; data[j]  pivot; j--)  // shift data[j] larger than pivot to right data[j+ 1 ] = data[j];  data[j+ 1 ] = pivot;    Pascal Triangle 下圖為 n = 6 的情況 1 2 3 4 5 6 7 1 1 1 1 2 1 1 3 3 1 1 4 6 4 1 1 5 10 10 5 1 1 6 15 20 15 6 1 其規則是最外層是1，裡面每個數字都是上方兩個數字的和。 Pascal Triangle 是 (x + y) n 每個項次的係數。 提示：如果把上圖左邊的空白拿掉則會變成下面的圖形，除了最左邊和最右邊的數字是 1 以外，裡面的每一個數字都是其正上方和左上方數字的和。你可以用陣列來計算和儲存這些數字，然後再以上圖的格式印出來。 1 2 3 4 5 6 7 1 1 1 1 2 1 1 3 3 1 1 4 6 4 1 1 5 10 10 5 1 1 6 15 20 15 6 1 所以只要你能回答下面問題，程式就寫完了： 如果要用 * 號印出這種形狀的三角形，該怎麼寫？（迴圈範例裡已經練習過了） 最左邊和最右邊如何表達？ 內部每一個數字都是正上方和左上方數字，請問正上方和左上方這兩個位置的陣列索引如何表達？ 以下是程式的範例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 /** * Program Name: Pascal.java * Purpose: print pascal triangle on screen * Author: Shiuh-Sheng Yu, Department of Information Management * National ChiNan University * Since: 2006/01/23 */ public class Pascal  public static void main (String[] argv)  int n, i, j; int [][] tri = new int [ 51 ][ 51 ]; n = Integer.parseInt(argv[ 0 ]); if (n  0 || n  50 )  System.out.println( \"I can only print Pascal triangle between 0 and 50.\\n\" );  else  for (i = 0 ; i = n; i++)  for (j = 0 ; j = i; j++)  System.out.print( \" \" +(tri[i][j] = (j== 0 || j==i) ? 1 : tri[i- 1 ][j- 1 ]+tri[i- 1 ][j]));  System.out.println();     列出整數陣列所有 n 個數字的排列 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 public class Example  /* 列出由at左邊所有的排列 */ private static void permutation ( int data[], int n, int got)  // 如果已經排到最後了,印出結果 if (n == got)  for ( int i = 0 ; i  n; i++)  System.out.print(data[i]+ \" \" );  System.out.println(); return ;  int tmp; for ( int i = got; i  data.length; i++)  // swap data[i] and data[at] tmp = data[i]; data[i] = data[got]; data[got] = tmp; // 然後遞迴呼叫,以找出got+1右邊的所有排列 permutation(data, n, got + 1 ); // swap back data[i] and data[got] tmp = data[i]; data[i] = data[got]; data[got] = tmp;   public static void permutation ( int data[], int n)  permutation(data, n, 0 );  public static void main (String[] argv)  int data[] =  1 , 2 , 3 , 4 , 5 , 6 ; permutation(data, 4 );   列出整數陣列所有 n 個數字的組合 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 public class Example  /* 由data.length取n個 */ private static void combination ( int [] data, int n, int got, int from)  int tmp; if (n == got)  for ( int i = 0 ; i  n; i++)  System.out.print(data[i] + \" \" );  System.out.println(); return ;  for ( int i = from; i  data.length; i++)  // 選第i個, by swap data[i] and data[got] tmp = data[i]; data[i] = data[got]; data[got] = tmp; combination(data, n, got + 1 , i + 1 ); // swap back data[i] and data[got] // two swaps make data original tmp = data[i]; data[i] = data[got]; data[got] = tmp;   // data裡找出所有n個數字組合 public static void combination ( int data[], int n)  combination(data, n, 0 , 0 );  public static void main (String[] argv)  int [] data =  1 , 2 , 3 , 4 , 5 ; combination(data, 3 );   反轉陣列 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public class Example  public static void main (String[] argv)  char [] data =  '1' , '2' , '3' , '4' ; reverse(data); for ( int i = 0 ; i  data.length; i++)  System.out.print(data[i]+ \" \" );   public static void reverse ( char [] data)  char tmp; for ( int i = 0 , j = data.length - 1 ; i  j; i++, j--)  tmp = data[i]; data[i] = data[j]; data[j] = tmp;    Using array to implement Stack 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 public class Stack  private Object[] data; private int top; public Stack ()  // constructor data = new Object[ 1024 ];  public void push (Object obj)  if (top = data.length)  Object[] tmp = new Object[data.length* 2 ]; System.arraycopy(data, 0 , tmp, 0 , data.length); data = tmp;  data[top++] = obj;  public Object pop ()  return data[--top];  public Object peek ()  return data[top- 1 ];  public int size ()  return top;  "},"java/array.html#C-語言陣列回顧":{"title":"C &#x8A9E;&#x8A00;&#x9663;&#x5217;&#x56DE;&#x9867;","path":"/java/array.html#C-語言陣列回顧","body":"C &#x8A9E;&#x8A00;&#x4EE5;&#x9023;&#x7E8C;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;&#x4F86;&#x8868;&#x9054;&#x9663;&#x5217;&#xFF0C;&#x591A;&#x7DAD;&#x9663;&#x5217;&#x7684;&#x5730;&#x5740;&#x904B;&#x7B97;&#x63A1;&#x7528; row major &#x7684;&#x65B9;&#x5F0F;&#x3002;&#x9019;&#x7A2E;&#x505A;&#x6CD5;&#x7684;&#x597D;&#x8655;&#x662F;&#x7D22;&#x5F15;&#x904B;&#x7B97;&#x901F;&#x5EA6;&#x5FEB;&#xFF0C;&#x751A;&#x81F3;&#x80FD;&#x7528; pointer &#x4F86;&#x9010;&#x4E00;&#x6AA2;&#x8996;&#x5176;&#x5167;&#x5BB9;&#x3002;&#x4F46;&#x9019;&#x7A2E;&#x5BE6;&#x4F5C;&#x65B9;&#x6CD5;&#x5728;&#x50B3;&#x905E;&#x9663;&#x5217;&#x53C3;&#x6578;&#x6642;, &#x5C31;&#x6709;&#x4E00;&#x4E9B;&#x554F;&#x984C;&#x7522;&#x751F;&#x4E86; 1 2 3 4 5 6 7 8 9 10 int sum ( int x[]) { // x&#x7684;&#x9577;&#x5EA6;&#x5230;&#x5E95;&#x662F;&#x591A;&#x5C11;? &#x4E0D;&#x77E5;&#x9053;&#x7684;&#x8A71;&#x7A0B;&#x5F0F;&#x8981;&#x600E;&#x9EBC;&#x5BEB;? // &#x5982;&#x679C;&#x5BA3;&#x544A;&#x6210; int sum(int x[100])&#x5247;&#x6B64;&#x51FD;&#x6578;&#x5C31;&#x53EA;&#x80FD;&#x63A5;&#x53D7;&#x9577;&#x5EA6;&#x70BA;100&#x7684;&#x9663;&#x5217; } int main () { int x[ 100 ]; int y[ 200 ]; sum(x); sum(y); } &#x5047;&#x8A2D;&#x6709;&#x4E00;&#x51FD;&#x6578; sum(int x[]) &#x53EF;&#x7528;&#x4F86;&#x5C07;&#x9663;&#x5217;&#x5167;&#x7684;&#x51FD;&#x6578;&#x5168;&#x90E8;&#x52A0;&#x7E3D;&#x8D77;&#x4F86;&#xFF0C;&#x5247;&#x50C5;&#x9760;&#x50B3;&#x905E;&#x9663;&#x5217;&#x958B;&#x982D;&#x5730;&#x5740;&#x662F;&#x4E0D;&#x5920;&#x7684;&#xFF0C;&#x9084;&#x5FC5;&#x9808;&#x50B3;&#x905E;&#x8A72;&#x9663;&#x5217;&#x7684;&#x9577;&#x5EA6;&#x624D;&#x884C;&#x3002;&#x5982; 1 2 3 4 5 6 7 8 9 10 11 12 13 int sum ( int x[], int len) { int i, total = 0 ; for (i = 0 ; i  len; i++) { total += x[i]; } return total; } int main () { int x[ 100 ]; int y[ 200 ]; sum(x, 100 ); sum(y, 200 ); } &#x7531;&#x65BC;&#x9577;&#x5EA6;&#x7684;&#x8CC7;&#x8A0A;&#x4E26;&#x4E0D;&#x5728;&#x9663;&#x5217;&#x5167;&#xFF0C;&#x5FC5;&#x9808;&#x9760;&#x8A2D;&#x8A08;&#x8005;&#x53E6;&#x5916;&#x544A;&#x77E5;&#x624D;&#x884C;&#xFF0C;&#x4E0D;&#x5C0F;&#x5FC3;&#x7684;&#x8A71;&#x5BB9;&#x6613;&#x767C;&#x751F;&#x4E0D;&#x4E00;&#x81F4;&#x7684;&#x60C5;&#x5F62;&#x3002; &#x53E6;&#x4E00;&#x7A2E;&#x65B9;&#x6CD5;&#x662F;&#x898F;&#x7BC4;&#x8A72;&#x9663;&#x5217;&#x5FC5;&#x9808;&#x4EE5;&#x67D0;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x6578;&#x503C;&#x7576;&#x4F5C;&#x7D50;&#x5C3E;&#xFF0C;&#x51FD;&#x6578;&#x5FC5;&#x9808;&#x81EA;&#x884C;&#x6AA2;&#x67E5;&#x8A72;&#x6578;&#x503C;&#xFF0C;&#x4EE5;&#x78BA;&#x4FDD;&#x7A0B;&#x5F0F;&#x6B63;&#x78BA;&#x3002;C &#x8A9E;&#x8A00;&#x7684;&#x5B57;&#x4E32;&#x5C31;&#x662F;&#x5229;&#x7528;&#x4EE5; 0 &#x7D50;&#x5C3E;&#x7684;&#x9663;&#x5217;&#x4F86;&#x8868;&#x9054;&#x3002;"},"java/array.html#Java-陣列的特性":{"title":"Java &#x9663;&#x5217;&#x7684;&#x7279;&#x6027;","path":"/java/array.html#Java-陣列的特性","body":"Java &#x7684;&#x9663;&#x5217;&#x4E26;&#x4E0D;&#x4EE5;&#x4E00;&#x584A;&#x9023;&#x7E8C;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;&#x4F86;&#x8868;&#x9054;&#xFF0C;&#x800C;&#x662F;&#x628A;&#x9663;&#x5217;&#x8996;&#x70BA;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6;&#x3002;&#x6B64;&#x7269;&#x4EF6;&#x4E0D;&#x4F46;&#x53EF;&#x5B58;&#x653E;&#x8CC7;&#x6599;&#xFF0C;&#x9084;&#x5229;&#x7528; object variable length &#x8A18;&#x9304;&#x8457;&#x8A72;&#x9663;&#x5217;&#x7684;&#x9577;&#x5EA6;&#x3002; 1 2 3 4 5 6 7 8 9 public class ArrayExample { public static void main (String[] argv) { int [] x; // x is a reference to int[] x = new int [ 10 ]; // &#x5229;&#x7528;new&#x6307;&#x4EE4;&#x7522;&#x751F;&#x7269;&#x4EF6; for ( int i = 0 ; i  x.length; i++) { // &#x6B64;&#x7269;&#x4EF6;&#x6709;&#x4E00;&#x500B;object variable length&#xFF0C;&#x7528;&#x4EE5;&#x7D00;&#x9304;&#x8A72;&#x9663;&#x5217;&#x7684;&#x9577;&#x5EA6; x[i] = i; } } } length &#x8B8A;&#x6578;&#x5BA3;&#x544A;&#x70BA; final &#xFF0C;&#x56E0;&#x6B64;&#x9663;&#x5217;&#x7269;&#x4EF6;&#x7522;&#x751F;&#x5F8C;&#xFF0C;&#x5C31;&#x4E0D;&#x80FD;&#x518D;&#x8B8A;&#x66F4;&#x5176;&#x9577;&#x5EA6;&#x4E86; 1 2 3 4 5 6 7 public class ArrayExample { public static void main (String[] argv) { int [] x; // x is a reference to int[] x = new int [ 10 ]; // &#x5229;&#x7528;new&#x6307;&#x4EE4;&#x7522;&#x751F;&#x7269;&#x4EF6; x.length = 1 ; // Compile Error } } &#x5728;&#x9663;&#x5217;&#x8B8A;&#x6578;&#x7684;&#x5BA3;&#x544A;&#x4E2D;&#xFF0C;&#x8981;&#x6CE8;&#x610F;&#x548C; C &#x8A9E;&#x8A00;&#x7279;&#x5225;&#x4E0D;&#x540C;&#x7684;&#x5730;&#x65B9;&#x662F;&#xFF1A; [] &#x6C92;&#x6709;&#x6578;&#x5B57;&#x3002;&#x56E0;&#x70BA;&#x9663;&#x5217;&#x662F;&#x4E00;&#x7A2E;&#x7269;&#x4EF6;&#xFF0C;&#x5FC5;&#x9808;&#x4EE5; new &#x6307;&#x4EE4;&#x7522;&#x751F;&#x7269;&#x4EF6;&#xFF0C; int[] x &#x53EA;&#x662F;&#x5BA3;&#x544A; x &#x662F;&#x4E00;&#x500B; reference to int[] &#x7269;&#x4EF6;&#x800C;&#x5DF2;&#x3002; [] &#x5728;&#x8B8A;&#x6578;&#x7684;&#x5DE6;&#x908A;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x53F3;&#x908A;&#x3002; [] &#x5C6C;&#x65BC;&#x5BA3;&#x544A;&#x578B;&#x614B;&#x7684;&#x4E00;&#x90E8;&#x4EFD;&#xFF0C;&#x4E0D;&#x727D;&#x626F;&#x7A7A;&#x9593;&#x5206;&#x914D;&#xFF0C;&#x4E5F;&#x4E0D;&#x50CF; C &#x8A9E;&#x8A00;&#x6709;&#x548C; pointer, function &#x6DF7;&#x5408;&#x904B;&#x7528;&#x7684;&#x60C5;&#x6CC1;&#xFF0C;&#x56E0;&#x6B64;&#x8A9E;&#x6CD5;&#x8981;&#x628A; [] &#x653E;&#x5728;&#x8B8A;&#x6578;&#x5DE6;&#x908A;&#xFF0C;&#x65B9;&#x4FBF;&#x5224;&#x8B80;&#x3002; &#x6211;&#x5011;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x8B8A;&#x6578;&#x5BA3;&#x544A;&#x6216;&#x662F; new &#x9663;&#x5217;&#x6642;&#x5C31;&#x7D66;&#x5B9A;&#x521D;&#x59CB;&#x503C;: 1 2 3 4 5 6 7 8 9 public class Arrays { public static void main (String[] args) { int [] a1 = { 1 , 2 , 3 , 4 , 5 }; Object[] a2 = new Object[] { new Integer( 47 ), new Long( 10 ), new Float( 3.14 ), new Double( 11.11 ) }; } }"},"java/array.html#多維陣列":{"title":"&#x591A;&#x7DAD;&#x9663;&#x5217;","path":"/java/array.html#多維陣列","body":"Java &#x9663;&#x5217;&#x7269;&#x4EF6;&#x662F;&#x53EA;&#x80FD;&#x5132;&#x5B58;&#x57FA;&#x672C;&#x8CC7;&#x6599;&#x578B;&#x614B;&#x6216; reference &#x7684;&#x4E00;&#x7DAD;&#x9663;&#x5217;&#xFF0C;&#x4E8C;&#x7DAD;&#x4EE5;&#x4E0A;&#x7684;&#x9663;&#x5217;&#x662F;&#x900F;&#x904E; reference &#x6307;&#x5230;&#x5176;&#x4ED6;&#x7684;&#x4E00;&#x7DAD;&#x9663;&#x5217;&#x7269;&#x4EF6;&#x4F86;&#x9054;&#x6210;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 public class ArrayExample2 { public static void main (String[] argv) { int [][] x; x = new int [ 10 ][ 20 ]; for ( int i = 0 ; i  x.length; i++) { for ( int j = 0 ; j  x[i].length; j++) { x[i][j] = i + j; } } } } &#x4E0A;&#x8FF0;&#x7684;&#x7BC4;&#x4F8B;&#x4E2D;&#xFF0C; x &#x5BA3;&#x544A;&#x70BA; reference to int[][] , x[i][j] &#x4E8B;&#x5BE6;&#x4E0A;&#x662F;&#x5148;&#x627E;&#x51FA; reference x[i] &#xFF0C;&#x518D;&#x627E; x[i] &#x6240;&#x6307;&#x5230;&#x7684;&#x9663;&#x5217;&#x7269;&#x4EF6;&#x5167;&#x7684;&#x7B2C; j &#x500B;&#x5143;&#x7D20;&#x3002;&#x7531;&#x65BC; Java &#x63A1;&#x7528;&#x9019;&#x7A2E;&#x6A5F;&#x5236;&#xFF0C;&#x56E0;&#x6B64;&#x4E0B;&#x9762;&#x7684;&#x6709;&#x8DA3;&#x60C5;&#x5F62;&#x5C31;&#x767C;&#x751F;&#x4E86;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public class ArrayExample3 { public static void main (String[] argv) { int [][] x; x = new int [ 10 ][]; // &#x5148;&#x7522;&#x751F;x&#x9663;&#x5217; for ( int i = 0 ; i  x.length; i++) { x[i] = new int [i]; // &#x518D;&#x5206;&#x5225;&#x7522;&#x751F;x[i]&#x6240;&#x6307;&#x5230;&#x7684;&#x9663;&#x5217; } for ( int i = 0 ; i  x.length; i++) { for ( int j = 0 ; j  x[i].length; j++) { x[i][j] = i + j; } } } } &#x4E0A;&#x8FF0;&#x7BC4;&#x4F8B;&#x6709;&#x5169;&#x9EDE;&#x8981;&#x6CE8;&#x610F; &#x9663;&#x5217;&#x7684;&#x9577;&#x5EA6;&#x53EF;&#x4EE5;&#x70BA; 0 &#x7531;&#x65BC;&#x4EE5;&#x4E00;&#x7DAD;&#x9663;&#x5217;&#x4F86;&#x6A21;&#x64EC;&#x4E8C;&#x7DAD;&#x9663;&#x5217;&#xFF0C;&#x56E0;&#x6B64;&#x900F;&#x904E;&#x7B2C;&#x4E00;&#x500B;&#x9663;&#x5217;&#x7684; reference &#x6240;&#x627E;&#x5230;&#x7684;&#x9663;&#x5217;&#xFF0C;&#x5176;&#x9577;&#x5EA6;&#x4E0D;&#x5FC5;&#x7136;&#x76F8;&#x540C;"},"java/array.html#陣列索引的檢查":{"title":"&#x9663;&#x5217;&#x7D22;&#x5F15;&#x7684;&#x6AA2;&#x67E5;","path":"/java/array.html#陣列索引的檢查","body":"C &#x8A9E;&#x8A00;&#x4E0D;&#x6703;&#x5C0D;&#x9663;&#x5217;&#x7684;&#x7D22;&#x5F15;&#x9032;&#x884C;&#x4EFB;&#x4F55;&#x6AA2;&#x67E5;&#xFF0C;&#x4FDD;&#x8B49;&#x7D22;&#x5F15;&#x503C;&#x5728;&#x9663;&#x5217;&#x7684;&#x5408;&#x6CD5;&#x7BC4;&#x570D;&#x5167;&#xFF0C;&#x662F;&#x8A2D;&#x8A08;&#x8005;&#x7684;&#x8CAC;&#x4EFB;&#x3002;&#x50CF;&#x662F;&#x4E0B;&#x5217;&#x7684;&#x7BC4;&#x4F8B;&#x5C31;&#x5F88;&#x53EF;&#x80FD;&#x7522;&#x751F; Segmentation Fault&#x3002; 1 2 3 4 5 6 7 int main () { int i; int x[ 10 ]; for (i = 0 ; i = 10 ; i++) { x[i] = i; } } &#x7531;&#x65BC;&#x9019;&#x985E;&#x7684;&#x758F;&#x5FFD;&#x5F88;&#x96E3;&#x5B8C;&#x5168;&#x907F;&#x514D;&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x5BB9;&#x6613;&#x627E;&#x51FA;&#x932F;&#x8AA4;&#xFF0C;&#x56E0;&#x6B64; Java &#x5728;&#x57F7;&#x884C;&#x671F;&#x9593;&#x6703;&#x5C0D;&#x9663;&#x5217;&#x7684;&#x7D22;&#x5F15;&#x505A;&#x6AA2;&#x67E5;&#xFF0C;&#x5982;&#x679C;&#x8D85;&#x51FA;&#x4F86;&#x5408;&#x6CD5;&#x7BC4;&#x570D;&#xFF0C;&#x5C31;&#x6703;&#x7522;&#x751F; ArrayIndexOutOfBoundException &#x7684;&#x4F8B;&#x5916;&#x3002;&#x82E5;&#x7A0B;&#x5F0F;&#x8A2D;&#x8A08;&#x6642;&#x6C92;&#x6709;&#x6307;&#x5B9A;&#x9019;&#x7A2E;&#x4F8B;&#x5916;&#x7684;&#x8655;&#x7406;&#x65B9;&#x5F0F;&#xFF0C;&#x5247;&#x6574;&#x500B;&#x7A0B;&#x5F0F;&#x6703;&#x7D42;&#x6B62;&#xFF0C;&#x4E26;&#x65BC;&#x87A2;&#x5E55;&#x4E0A;&#x5370;&#x51FA;&#x76F8;&#x95DC;&#x7684;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&#x3002;&#x4F8B;&#x5982;&#x57F7;&#x884C;&#x4E0B;&#x9762;&#x7684;&#x7A0B;&#x5F0F;&#xFF1A; 1 2 3 4 5 6 7 8 public class ArrayExample4 { public static void main (String[] argv) { int [] x = new int [ 10 ]; for ( int i = 0 ; i = 10 ; i++) { x[i] = i; } } } &#x5C31;&#x6703;&#x7522;&#x751F;&#x5982;&#x4E0B;&#x7684;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&#xFF0C;&#x4E26;&#x4E14;&#x7D42;&#x6B62;&#x8A72;&#x7A0B;&#x5F0F; 1 2 3 java.lang.ArrayIndexOutOfBoundsException: 10 \tat ArrayExample4.main(ArrayExample4.java:5) Exception in thread main &#x4E0A;&#x9762;&#x8A0A;&#x606F;&#x7684;&#x610F;&#x7FA9;&#x662F;&#xFF1A; java.lang.ArrayIndexOutOfBoundsException: 10 &#x544A;&#x8A34;&#x6211;&#x5011;&#x7D22;&#x5F15;&#x503C;&#x662F; 10 &#x7684;&#x6642;&#x5019;&#x5F15;&#x8D77;&#x4E86;&#x6B64;&#x554F;&#x984C; at ArrayExample4.main(ArrayExample4.java:5) &#x544A;&#x8A34;&#x6211;&#x5011;&#x547C;&#x53EB; ArrayExample4.main &#x6642;&#x5728; ArrayExample4.java &#x7684;&#x7B2C;&#x4E94;&#x884C;&#x7522;&#x751F;&#x932F;&#x8AA4; &#x5C0D;&#x65BC;&#x5BEB;&#x904E; C &#x8A9E;&#x8A00;&#x7684;&#x4EBA;&#x4F86;&#x8AAA;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x770B;&#x5230;&#x9019;&#x6A23;&#x7684;&#x8A0A;&#x606F;&#x90FD;&#x6703;&#x5F88;&#x8208;&#x596E;&#xFF0C;&#x56E0;&#x70BA; JVM &#x660E;&#x660E;&#x767D;&#x767D;&#x7684;&#x544A;&#x8A34;&#x6211;&#x5011;&#x54EA;&#x4E00;&#x884C;&#x51FA;&#x4E86;&#x751A;&#x9EBC;&#x932F;&#x8AA4;&#xFF0C;&#x8981;&#x9664;&#x932F;&#x5C31;&#x7C21;&#x55AE;&#x591A;&#x4E86;&#x3002; &#x7576;&#x7136;&#x9019;&#x6A23;&#x7684;&#x4FBF;&#x5229;&#x6027;&#x662F;&#x7528;&#x6548;&#x80FD;&#x63DB;&#x4F86;&#x7684;&#x3002;&#x5982;&#x679C;&#x4F60;&#x7684;&#x61C9;&#x7528;&#x9700;&#x8981;&#x5927;&#x91CF;&#x5B58;&#x53D6;&#x9663;&#x5217;&#xFF0C;&#x800C;&#x4E14;&#x901F;&#x5EA6;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x9023;&#x5E7E;&#x500B; machine cycle &#x90FD;&#x8981;&#x8A08;&#x8F03;, &#x90A3;&#x624D;&#x8981;&#x8003;&#x616E;&#x4E0D;&#x7528; Java &#x4E86;&#x3002;"},"java/array.html#陣列範例":{"title":"&#x9663;&#x5217;&#x7BC4;&#x4F8B;","path":"/java/array.html#陣列範例","body":"&#x8CBB;&#x6C0F;&#x6578; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class Fab { private static long [] rel = { 0 , 1 , 1 , 2 , 3 , 5 , 8 , 13 , 21 , 34 , 55 , 89 }; \t public static void main (String[] argv) { val( 10 ); } public static long val ( int n) { if (rel.length = n) { long [] tt = new long [n+ 1 ]; int i; for (i = 0 ; i  rel.length; i++) { tt[i] = rel[i]; } for (; i = n; i++) { tt[i] = tt[i- 1 ] + tt[i- 2 ]; } rel = tt; } return rel[n]; } } Selection sort 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 public class SelectionSort { public static void main (String[] argv) { int [] data = { 6 , 3 , 7 , 1 , 4 , 8 }; sort(data); for ( int i = 0 ; i  data.length; i++) { System.out.println(data[i]); } } public static void sort ( int [] data) { for ( int i = 0 ; i  data.length - 1 ; i++) { // find minimun in i ~ data.length - 1 int mim = i; for ( int j = i + 1 ; j  data.length; j++) { if (data[min]  data[j]) { min = j; } } // swap data[i] with data[min] int tmp = data[i]; data[i] = data[min]; data[min] = tmp; } } } Insertion Sort 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 public class InsertionSort { public static void main (String[] argv) { int [] data = { 4 , 1 , 7 , 8 , 9 , 3 , 2 }; sort(data); for ( int i = 0 ; i  data.length; i++) { System.out.println(data[i]); } } public static void sort ( int [] data) { int j, pivot; // insert data[i] to sorted array 0 ~ i - 1 // begins from i = 1, because if the array has only one element then it must be sorted. for ( int i = 1 ; i  data.length; i++) { pivot = data[i]; for (j = i - 1 ; j = 0 &amp;&amp; data[j]  pivot; j--) { // shift data[j] larger than pivot to right data[j+ 1 ] = data[j]; } data[j+ 1 ] = pivot; } } } Pascal Triangle &#x4E0B;&#x5716;&#x70BA; n = 6 &#x7684;&#x60C5;&#x6CC1; 1 2 3 4 5 6 7 1 1 1 1 2 1 1 3 3 1 1 4 6 4 1 1 5 10 10 5 1 1 6 15 20 15 6 1 &#x5176;&#x898F;&#x5247;&#x662F;&#x6700;&#x5916;&#x5C64;&#x662F;1&#xFF0C;&#x88E1;&#x9762;&#x6BCF;&#x500B;&#x6578;&#x5B57;&#x90FD;&#x662F;&#x4E0A;&#x65B9;&#x5169;&#x500B;&#x6578;&#x5B57;&#x7684;&#x548C;&#x3002; Pascal Triangle &#x662F; (x + y) n &#x6BCF;&#x500B;&#x9805;&#x6B21;&#x7684;&#x4FC2;&#x6578;&#x3002; &#x63D0;&#x793A;&#xFF1A;&#x5982;&#x679C;&#x628A;&#x4E0A;&#x5716;&#x5DE6;&#x908A;&#x7684;&#x7A7A;&#x767D;&#x62FF;&#x6389;&#x5247;&#x6703;&#x8B8A;&#x6210;&#x4E0B;&#x9762;&#x7684;&#x5716;&#x5F62;&#xFF0C;&#x9664;&#x4E86;&#x6700;&#x5DE6;&#x908A;&#x548C;&#x6700;&#x53F3;&#x908A;&#x7684;&#x6578;&#x5B57;&#x662F; 1 &#x4EE5;&#x5916;&#xFF0C;&#x88E1;&#x9762;&#x7684;&#x6BCF;&#x4E00;&#x500B;&#x6578;&#x5B57;&#x90FD;&#x662F;&#x5176;&#x6B63;&#x4E0A;&#x65B9;&#x548C;&#x5DE6;&#x4E0A;&#x65B9;&#x6578;&#x5B57;&#x7684;&#x548C;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x7528;&#x9663;&#x5217;&#x4F86;&#x8A08;&#x7B97;&#x548C;&#x5132;&#x5B58;&#x9019;&#x4E9B;&#x6578;&#x5B57;&#xFF0C;&#x7136;&#x5F8C;&#x518D;&#x4EE5;&#x4E0A;&#x5716;&#x7684;&#x683C;&#x5F0F;&#x5370;&#x51FA;&#x4F86;&#x3002; 1 2 3 4 5 6 7 1 1 1 1 2 1 1 3 3 1 1 4 6 4 1 1 5 10 10 5 1 1 6 15 20 15 6 1 &#x6240;&#x4EE5;&#x53EA;&#x8981;&#x4F60;&#x80FD;&#x56DE;&#x7B54;&#x4E0B;&#x9762;&#x554F;&#x984C;&#xFF0C;&#x7A0B;&#x5F0F;&#x5C31;&#x5BEB;&#x5B8C;&#x4E86;&#xFF1A; &#x5982;&#x679C;&#x8981;&#x7528; * &#x865F;&#x5370;&#x51FA;&#x9019;&#x7A2E;&#x5F62;&#x72C0;&#x7684;&#x4E09;&#x89D2;&#x5F62;&#xFF0C;&#x8A72;&#x600E;&#x9EBC;&#x5BEB;&#xFF1F;&#xFF08;&#x8FF4;&#x5708;&#x7BC4;&#x4F8B;&#x88E1;&#x5DF2;&#x7D93;&#x7DF4;&#x7FD2;&#x904E;&#x4E86;&#xFF09; &#x6700;&#x5DE6;&#x908A;&#x548C;&#x6700;&#x53F3;&#x908A;&#x5982;&#x4F55;&#x8868;&#x9054;&#xFF1F; &#x5167;&#x90E8;&#x6BCF;&#x4E00;&#x500B;&#x6578;&#x5B57;&#x90FD;&#x662F;&#x6B63;&#x4E0A;&#x65B9;&#x548C;&#x5DE6;&#x4E0A;&#x65B9;&#x6578;&#x5B57;&#xFF0C;&#x8ACB;&#x554F;&#x6B63;&#x4E0A;&#x65B9;&#x548C;&#x5DE6;&#x4E0A;&#x65B9;&#x9019;&#x5169;&#x500B;&#x4F4D;&#x7F6E;&#x7684;&#x9663;&#x5217;&#x7D22;&#x5F15;&#x5982;&#x4F55;&#x8868;&#x9054;&#xFF1F; &#x4EE5;&#x4E0B;&#x662F;&#x7A0B;&#x5F0F;&#x7684;&#x7BC4;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 /** * Program Name: Pascal.java * Purpose: print pascal triangle on screen * Author: Shiuh-Sheng Yu, Department of Information Management * National ChiNan University * Since: 2006/01/23 */ public class Pascal { public static void main (String[] argv) { int n, i, j; int [][] tri = new int [ 51 ][ 51 ]; n = Integer.parseInt(argv[ 0 ]); if (n  0 || n  50 ) { System.out.println( I can only print Pascal triangle between 0 and 50.\\n ); } else { for (i = 0 ; i = n; i++) { for (j = 0 ; j = i; j++) { System.out.print(   +(tri[i][j] = (j== 0 || j==i) ? 1 : tri[i- 1 ][j- 1 ]+tri[i- 1 ][j])); } System.out.println(); } } } } &#x5217;&#x51FA;&#x6574;&#x6578;&#x9663;&#x5217;&#x6240;&#x6709; n &#x500B;&#x6578;&#x5B57;&#x7684;&#x6392;&#x5217; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 public class Example { /* &#x5217;&#x51FA;&#x7531;at&#x5DE6;&#x908A;&#x6240;&#x6709;&#x7684;&#x6392;&#x5217; */ private static void permutation ( int data[], int n, int got) { // &#x5982;&#x679C;&#x5DF2;&#x7D93;&#x6392;&#x5230;&#x6700;&#x5F8C;&#x4E86;,&#x5370;&#x51FA;&#x7D50;&#x679C; if (n == got) { for ( int i = 0 ; i  n; i++) { System.out.print(data[i]+   ); } System.out.println(); return ; } int tmp; for ( int i = got; i  data.length; i++) { // swap data[i] and data[at] tmp = data[i]; data[i] = data[got]; data[got] = tmp; // &#x7136;&#x5F8C;&#x905E;&#x8FF4;&#x547C;&#x53EB;,&#x4EE5;&#x627E;&#x51FA;got+1&#x53F3;&#x908A;&#x7684;&#x6240;&#x6709;&#x6392;&#x5217; permutation(data, n, got + 1 ); // swap back data[i] and data[got] tmp = data[i]; data[i] = data[got]; data[got] = tmp; } } public static void permutation ( int data[], int n) { permutation(data, n, 0 ); } public static void main (String[] argv) { int data[] = { 1 , 2 , 3 , 4 , 5 , 6 }; permutation(data, 4 ); } } &#x5217;&#x51FA;&#x6574;&#x6578;&#x9663;&#x5217;&#x6240;&#x6709; n &#x500B;&#x6578;&#x5B57;&#x7684;&#x7D44;&#x5408; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 public class Example { /* &#x7531;data.length&#x53D6;n&#x500B; */ private static void combination ( int [] data, int n, int got, int from) { int tmp; if (n == got) { for ( int i = 0 ; i  n; i++) { System.out.print(data[i] +   ); } System.out.println(); return ; } for ( int i = from; i  data.length; i++) { // &#x9078;&#x7B2C;i&#x500B;, by swap data[i] and data[got] tmp = data[i]; data[i] = data[got]; data[got] = tmp; combination(data, n, got + 1 , i + 1 ); // swap back data[i] and data[got] // two swaps make data original tmp = data[i]; data[i] = data[got]; data[got] = tmp; } } // data&#x88E1;&#x627E;&#x51FA;&#x6240;&#x6709;n&#x500B;&#x6578;&#x5B57;&#x7D44;&#x5408; public static void combination ( int data[], int n) { combination(data, n, 0 , 0 ); } public static void main (String[] argv) { int [] data = { 1 , 2 , 3 , 4 , 5 }; combination(data, 3 ); } } &#x53CD;&#x8F49;&#x9663;&#x5217; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public class Example { public static void main (String[] argv) { char [] data = { &apos;1&apos; , &apos;2&apos; , &apos;3&apos; , &apos;4&apos; }; reverse(data); for ( int i = 0 ; i  data.length; i++) { System.out.print(data[i]+   ); } } public static void reverse ( char [] data) { char tmp; for ( int i = 0 , j = data.length - 1 ; i  j; i++, j--) { tmp = data[i]; data[i] = data[j]; data[j] = tmp; } } } Using array to implement Stack 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 public class Stack { private Object[] data; private int top; public Stack () { // constructor data = new Object[ 1024 ]; } public void push (Object obj) { if (top = data.length) { Object[] tmp = new Object[data.length* 2 ]; System.arraycopy(data, 0 , tmp, 0 , data.length); data = tmp; } data[top++] = obj; } public Object pop () { return data[--top]; } public Object peek () { return data[top- 1 ]; } public int size () { return top; } }"},"java/class-and-obj.html":{"title":"類別與物件","path":"/java/class-and-obj.html","body":"類別與物件的基本概念 所謂物件，說得白話一點，可稱之為「東西」。這是個很抽象的名詞，我們若以它具體的特性來描述，會比較清楚： Object 有生命週期，會「產生」和「消滅」 Object 具有其內部狀態， 同一類別的不同 Object ，其的內部狀態可能都不一樣 Object 可以接收「訊息」，並依據訊息的參數以及該物件的內部狀態，做出反應，並可能因而改變該物件的內部狀態 屬於同一個 Class 的 Object ，會具有該 Class 所定義的以上三種特質。 除此之外， Class 之間可以定義繼承 (Inheritance) 關係，子類別 (Sub Class) 繼承父類別 (Super Class) 的所有特性，子類別還可以定義其專屬的特性。 以 Object-Oriented (物件導向) Language 寫作程式時，寫作的主體是 Class 。 Class 定義了所有屬於該 Class 的 Object 的特性，這些特性可分類如下: Object 產生時一定要呼叫的方法，稱為 Constructor (建構子) Object 消滅需要呼叫的方法，稱為 Destructor (解構子) 表達 Object 內部狀態的變數，稱為 Object Variable(物件變數成員) Object 可以接收的訊息，稱為 Object Method(物件方法成員) 上述兩個可總稱為 Object Member 屬於 Class 的變數，稱為 Class Variable (類別變數) 屬於 Class 的方法，成為 Class Method (類別方法) 上述兩個可總稱為 Class Member 和其他 Class 間的繼承關係 如何以Java撰寫類別 Java 規定公共類別 (public class) 必須寫在該公共類別名稱的 .java 檔案內，例如 public class Example 就必須寫在 Example.java 這個檔案內。 Example.java 裡面也可以定義其他的類別，但是只有 class Example 能夠宣告為 public ，其他 Example.java 裡的 class 都不能宣告為 public 。當 Java Virtual Machine 啟動時，它會去找命令列上所指定的 class 裡的 public static void main(String[] argv) 方法，當做是程式的進入點。這有點像是 C 語言的 main ， 不同處在於每個 java class 都可以定義自己的 public static void main(String[] argv) 。 $ java Example 啟動上述的 JVM 時，JVM 會去執行 class Example 裡的 public static void main(String[] argv) 。以下範例 Example.java 說明如何定義 Java 的 class。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 class Vehicle  private int speed; // Object Variable private String direction; // Object Variable, direction is a reference to String Object private static int numVehicle = 0 ; // Class Variable public Vehicle ()  // Constructor, called when new a Object this ( 0 , \"north\" ); // call another constructor to do initialization  public Vehicle ( int s, String dir)  // Another Constructor. Use overloading to define two constructors float speed; // define a local variable speed = s; // the speed here refers to the above local variable this .speed = s; // If we want to set object variable, use this.speed to refer object variable speed direction = dir; // dir is a reference to object, not the object itself numVehicle++; // increase the Vehicle number  protected void finalize ()  // Destructor, called when the object is garbage collected by JVM System.out.println( \"finalize has been called\" ); numVehicle--;  void setSpeed ( int newSpeed)  // Object Method this .speed = newSpeed;  void setDir (String dir)  // Object Method this .direction = dir;  int getSpeed ()  // Object Method return speed;  String getDir ()  // Object Method return direction;  public static int totalVehicle ()  // Class Method return numVehicle;   public class Example  public static void main (String[] argv)  Vehicle v1 = new Vehicle( 50 , \"west\" ); // new 敘述用來產生物件. 物件產生時需要呼叫Constructor來初始化物件 Vehicle v2; v1.setSpeed( 30 ); v1.setDir( \"north\" ); System.out.println( \"V1: speed is \" +v1.getSpeed()+ \", direction is \" +v1.getDir()+ \".\\n\" ); v2 = new Vehicle( 40 , \"south\" ); System.out.println( \"There are \" +Vehicle.totalVehicle()+ \" Vehicles in the world.\\n\" ); v1 = v2; // let reference v1 point to where v2 is pointing System.out.println( \"V1: speed is \" +v1.getSpeed()+ \", direction is \" +v1.getDir()+ \".\\n\" ); System.gc(); // force system to do garbage collection, the object previously pointed by v1 shall be destroyed System.out.println( \"There are \" +Vehicle.totalVehicle()+ \" Vehicles in the world.\\n\" );   上述例子裡所用到的關鍵字或類別名稱說明如下： public ：可用在 class 前面表示此 class 可以供其他 package 裡的類別使用。同一個目錄下的 class 均可視為屬於同一個 package。 object or class member 前面，表示所有的 class 均可存取此 member。 private ：可用在 object or class member 前面，表示只有定義這些 member 的 class 才可存取。 static ：可用在 member 前面。如果 member 前面有 static ，表示該 member 屬於 class ，否則屬於 object 。不論系統創造了多少 object, class variable 只有一個；而每個 object 都有其 object variable。存取class method 的語法是 ClassName.classMethod(); 存取 object method 時,則必須以 reference.objectMethod() 來呼叫。在 Object Method 裡，可用 this 表示目前的物件。但在 Class Method 裡就不能存取 object member 了。 this ：表示目前這個物件 String ：定義於 java.lang package 下面的類別，屬於 Java 語言定義的標準程式庫。 System ：定義於 java.lang package 下面的類別，屬於 Java 語言定義的標準程式庫。 System.out 是 class System 裡面的一個 Class Variable，其型態為 reference to 定義於 java.io package 裡面的 PrintStream。我們可透過該變數所指到的物件，將訊息印到螢幕上。 System.gc 是 class System 裡面的一個 Class Method，呼叫該方法可強迫 JVM 回收沒有被任何 reference 指到的物件。當物件被回收時，該物件的 finalize 方法會被呼叫。 new ：用來產生新的物件。後面必須跟著某個 constructor ，以便進行初始化的動作。 Object Method 的名稱如果和 Class 的名稱相同, 則表示該 Method 為 Constructor。Constructor 不能宣告傳回值。 要附帶說明的是，Java 以 new 指令來產生物件，但不像 C++ 有提供相對應的 delete 指令來消滅物件。Java 採用 Garbage Collection 的觀念，當系統於閒置期間自動呼叫或由使用者強制呼叫 System.gc() 時，沒有被任何 reference 指到的 Object 就會被回收。 Class 裡面一定要定義一個以上的 Constructor，但為了方便起見，如果 Compiler 發現某 Class 沒有定義 Constructor，則 Compiler 會幫我們產生一個不做任何事的 Constructor： 1 2 public class A   就相當於 1 2 3 public class A  public A ()   Overloading 同一個 class 裡的 Method 名稱可以重複使用，只要可以由 Method 的參數個數和型態來區分就可以了。這種觀念稱為 overloading 。 不只一般的 method 可以 overloading, constructo r也可以 overloading。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public class Overloading  int data; public Overloading ()  this ( 0 ); // call constructor Overloading(int)  public Overloading ( int data)  this .data = data;  public void print ()  this .print( 0 ); // call method print(int)  public void print ( int msg)   public void print ( float msg)   public void print ( int msg, String others)    上面的例子裡說明 constructor 也可以 overloading 。要特別注意的是，傳回值並不能用來分辨要呼叫哪個 method，因此若再加上 public int print() 的宣告，就會造成編譯錯誤了。 初始化的執行順序 Class variable 是在該類別載入 JVM 時進行初始化的，因此寫作上經常在 class variable 的宣告後面加上初始化的動作。對 Object Variable 來說，是在產生 Object 時進行初始化的，但初始化的步驟可以寫在變數宣告後，也可以寫在 constructor 內，因此必須對其執行順序有所了解。步驟如下： 先將所有變數設為內定值。對數值型態來說，其值為 0；對 reference 來說，其值為 null；對 boolean 來說，其值為 false。 呼叫父類別的 constructor。 執行變數宣告的初始化動作。 執行自己的 constructor。 因此在如下的範例內 1 2 3 4 5 6 7 8 9 10 public class InitSequence  int data = 2 ; public InitSequence ( int data)  this .data = data;  public static void main (String[] argv)  InitSequence s = new InitSequence( 3 ); System.out.println(s.data);   data 的變化如下： 設為內定值 0 呼叫父類別的 Constructor。因為類別 InitSequence 沒有宣告繼承任何類別， Java 規定此情況會自動繼承 java.lang.Object 這個類別。 Object 的 Constructor 不做任何事。 執行變數宣告的初始動作，成為 2 執行自己的 constructor，成為 3 因此最後執行的結果會在螢幕上印出數字 3。 Java 語言還可以定義 static block： 1 2 3 4 5 6 7 8 9 public class StaticBlock  static  // this is a static block data = ( int )(Math.random()* 100 );  static int data; public static void main (String[] argv)  System.out.println(data);   static block 內的程式碼，是在該 class 載入 JVM 之後，進行 class variable 初始化之前的時間內執行。一般比較會使用 static block 的場合，是該 class 用到一些非 Java 的程式庫，需要透過 System.loadLibrary(String libName) 方法把外界的程式碼載入時。這樣寫的好處是只有當該 class 第一次被使用到時，才會下載相關軟體，以節省記憶體空間，避免重複下載，並可以把實作的細節和外界隔離開來。對沒有這種機制的 C 語言來說，很可能就必須在主程式內寫上一堆很難懂的啟動程式碼。 1 2 3 4 5 6 7 8 9 class ClassNeedToLoadLibrary  static  System.loadLibrary( \"mylib\" );   public class Main  public static void main (String[] argv)    final 關鍵字 final 關鍵字用在變數宣告時，表示該變數的值只能在宣告時給定，然後就不能再更改了。 1 2 3 4 5 6 7 8 9 10 11 public class Main  public static final double PI = 3.14159 ; public final int x = 10 ; public static void main (String[] argv)  final int local = 10 ; Main m = new Main(); PI = 100 ; // Compile Error, final variable can only be set at initialization m.x = 10 ; // Compile Error local = 100 ; // Compile Error  "},"java/class-and-obj.html#類別與物件的基本概念":{"title":"&#x985E;&#x5225;&#x8207;&#x7269;&#x4EF6;&#x7684;&#x57FA;&#x672C;&#x6982;&#x5FF5;","path":"/java/class-and-obj.html#類別與物件的基本概念","body":"&#x6240;&#x8B02;&#x7269;&#x4EF6;&#xFF0C;&#x8AAA;&#x5F97;&#x767D;&#x8A71;&#x4E00;&#x9EDE;&#xFF0C;&#x53EF;&#x7A31;&#x4E4B;&#x70BA;&#x300C;&#x6771;&#x897F;&#x300D;&#x3002;&#x9019;&#x662F;&#x500B;&#x5F88;&#x62BD;&#x8C61;&#x7684;&#x540D;&#x8A5E;&#xFF0C;&#x6211;&#x5011;&#x82E5;&#x4EE5;&#x5B83;&#x5177;&#x9AD4;&#x7684;&#x7279;&#x6027;&#x4F86;&#x63CF;&#x8FF0;&#xFF0C;&#x6703;&#x6BD4;&#x8F03;&#x6E05;&#x695A;&#xFF1A; Object &#x6709;&#x751F;&#x547D;&#x9031;&#x671F;&#xFF0C;&#x6703;&#x300C;&#x7522;&#x751F;&#x300D;&#x548C;&#x300C;&#x6D88;&#x6EC5;&#x300D; Object &#x5177;&#x6709;&#x5176;&#x5167;&#x90E8;&#x72C0;&#x614B;&#xFF0C; &#x540C;&#x4E00;&#x985E;&#x5225;&#x7684;&#x4E0D;&#x540C; Object &#xFF0C;&#x5176;&#x7684;&#x5167;&#x90E8;&#x72C0;&#x614B;&#x53EF;&#x80FD;&#x90FD;&#x4E0D;&#x4E00;&#x6A23; Object &#x53EF;&#x4EE5;&#x63A5;&#x6536;&#x300C;&#x8A0A;&#x606F;&#x300D;&#xFF0C;&#x4E26;&#x4F9D;&#x64DA;&#x8A0A;&#x606F;&#x7684;&#x53C3;&#x6578;&#x4EE5;&#x53CA;&#x8A72;&#x7269;&#x4EF6;&#x7684;&#x5167;&#x90E8;&#x72C0;&#x614B;&#xFF0C;&#x505A;&#x51FA;&#x53CD;&#x61C9;&#xFF0C;&#x4E26;&#x53EF;&#x80FD;&#x56E0;&#x800C;&#x6539;&#x8B8A;&#x8A72;&#x7269;&#x4EF6;&#x7684;&#x5167;&#x90E8;&#x72C0;&#x614B; &#x5C6C;&#x65BC;&#x540C;&#x4E00;&#x500B; Class &#x7684; Object &#xFF0C;&#x6703;&#x5177;&#x6709;&#x8A72; Class &#x6240;&#x5B9A;&#x7FA9;&#x7684;&#x4EE5;&#x4E0A;&#x4E09;&#x7A2E;&#x7279;&#x8CEA;&#x3002; &#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C; Class &#x4E4B;&#x9593;&#x53EF;&#x4EE5;&#x5B9A;&#x7FA9;&#x7E7C;&#x627F; (Inheritance) &#x95DC;&#x4FC2;&#xFF0C;&#x5B50;&#x985E;&#x5225; (Sub Class) &#x7E7C;&#x627F;&#x7236;&#x985E;&#x5225; (Super Class) &#x7684;&#x6240;&#x6709;&#x7279;&#x6027;&#xFF0C;&#x5B50;&#x985E;&#x5225;&#x9084;&#x53EF;&#x4EE5;&#x5B9A;&#x7FA9;&#x5176;&#x5C08;&#x5C6C;&#x7684;&#x7279;&#x6027;&#x3002; &#x4EE5; Object-Oriented (&#x7269;&#x4EF6;&#x5C0E;&#x5411;) Language &#x5BEB;&#x4F5C;&#x7A0B;&#x5F0F;&#x6642;&#xFF0C;&#x5BEB;&#x4F5C;&#x7684;&#x4E3B;&#x9AD4;&#x662F; Class &#x3002; Class &#x5B9A;&#x7FA9;&#x4E86;&#x6240;&#x6709;&#x5C6C;&#x65BC;&#x8A72; Class &#x7684; Object &#x7684;&#x7279;&#x6027;&#xFF0C;&#x9019;&#x4E9B;&#x7279;&#x6027;&#x53EF;&#x5206;&#x985E;&#x5982;&#x4E0B;: Object &#x7522;&#x751F;&#x6642;&#x4E00;&#x5B9A;&#x8981;&#x547C;&#x53EB;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x7A31;&#x70BA; Constructor (&#x5EFA;&#x69CB;&#x5B50;) Object &#x6D88;&#x6EC5;&#x9700;&#x8981;&#x547C;&#x53EB;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x7A31;&#x70BA; Destructor (&#x89E3;&#x69CB;&#x5B50;) &#x8868;&#x9054; Object &#x5167;&#x90E8;&#x72C0;&#x614B;&#x7684;&#x8B8A;&#x6578;&#xFF0C;&#x7A31;&#x70BA; Object Variable(&#x7269;&#x4EF6;&#x8B8A;&#x6578;&#x6210;&#x54E1;) Object &#x53EF;&#x4EE5;&#x63A5;&#x6536;&#x7684;&#x8A0A;&#x606F;&#xFF0C;&#x7A31;&#x70BA; Object Method(&#x7269;&#x4EF6;&#x65B9;&#x6CD5;&#x6210;&#x54E1;) &#x4E0A;&#x8FF0;&#x5169;&#x500B;&#x53EF;&#x7E3D;&#x7A31;&#x70BA; Object Member &#x5C6C;&#x65BC; Class &#x7684;&#x8B8A;&#x6578;&#xFF0C;&#x7A31;&#x70BA; Class Variable (&#x985E;&#x5225;&#x8B8A;&#x6578;) &#x5C6C;&#x65BC; Class &#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x6210;&#x70BA; Class Method (&#x985E;&#x5225;&#x65B9;&#x6CD5;) &#x4E0A;&#x8FF0;&#x5169;&#x500B;&#x53EF;&#x7E3D;&#x7A31;&#x70BA; Class Member &#x548C;&#x5176;&#x4ED6; Class &#x9593;&#x7684;&#x7E7C;&#x627F;&#x95DC;&#x4FC2;"},"java/class-and-obj.html#如何以Java撰寫類別":{"title":"&#x5982;&#x4F55;&#x4EE5;Java&#x64B0;&#x5BEB;&#x985E;&#x5225;","path":"/java/class-and-obj.html#如何以Java撰寫類別","body":"Java &#x898F;&#x5B9A;&#x516C;&#x5171;&#x985E;&#x5225; (public class) &#x5FC5;&#x9808;&#x5BEB;&#x5728;&#x8A72;&#x516C;&#x5171;&#x985E;&#x5225;&#x540D;&#x7A31;&#x7684; .java &#x6A94;&#x6848;&#x5167;&#xFF0C;&#x4F8B;&#x5982; public class Example &#x5C31;&#x5FC5;&#x9808;&#x5BEB;&#x5728; Example.java &#x9019;&#x500B;&#x6A94;&#x6848;&#x5167;&#x3002; Example.java &#x88E1;&#x9762;&#x4E5F;&#x53EF;&#x4EE5;&#x5B9A;&#x7FA9;&#x5176;&#x4ED6;&#x7684;&#x985E;&#x5225;&#xFF0C;&#x4F46;&#x662F;&#x53EA;&#x6709; class Example &#x80FD;&#x5920;&#x5BA3;&#x544A;&#x70BA; public &#xFF0C;&#x5176;&#x4ED6; Example.java &#x88E1;&#x7684; class &#x90FD;&#x4E0D;&#x80FD;&#x5BA3;&#x544A;&#x70BA; public &#x3002;&#x7576; Java Virtual Machine &#x555F;&#x52D5;&#x6642;&#xFF0C;&#x5B83;&#x6703;&#x53BB;&#x627E;&#x547D;&#x4EE4;&#x5217;&#x4E0A;&#x6240;&#x6307;&#x5B9A;&#x7684; class &#x88E1;&#x7684; public static void main(String[] argv) &#x65B9;&#x6CD5;&#xFF0C;&#x7576;&#x505A;&#x662F;&#x7A0B;&#x5F0F;&#x7684;&#x9032;&#x5165;&#x9EDE;&#x3002;&#x9019;&#x6709;&#x9EDE;&#x50CF;&#x662F; C &#x8A9E;&#x8A00;&#x7684; main &#xFF0C; &#x4E0D;&#x540C;&#x8655;&#x5728;&#x65BC;&#x6BCF;&#x500B; java class &#x90FD;&#x53EF;&#x4EE5;&#x5B9A;&#x7FA9;&#x81EA;&#x5DF1;&#x7684; public static void main(String[] argv) &#x3002; $ java Example &#x555F;&#x52D5;&#x4E0A;&#x8FF0;&#x7684; JVM &#x6642;&#xFF0C;JVM &#x6703;&#x53BB;&#x57F7;&#x884C; class Example &#x88E1;&#x7684; public static void main(String[] argv) &#x3002;&#x4EE5;&#x4E0B;&#x7BC4;&#x4F8B; Example.java &#x8AAA;&#x660E;&#x5982;&#x4F55;&#x5B9A;&#x7FA9; Java &#x7684; class&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 class Vehicle { private int speed; // Object Variable private String direction; // Object Variable, direction is a reference to String Object private static int numVehicle = 0 ; // Class Variable public Vehicle () { // Constructor, called when new a Object this ( 0 , north ); // call another constructor to do initialization } public Vehicle ( int s, String dir) { // Another Constructor. Use overloading to define two constructors float speed; // define a local variable speed = s; // the speed here refers to the above local variable this .speed = s; // If we want to set object variable, use this.speed to refer object variable speed direction = dir; // dir is a reference to object, not the object itself numVehicle++; // increase the Vehicle number } protected void finalize () { // Destructor, called when the object is garbage collected by JVM System.out.println( finalize has been called ); numVehicle--; } void setSpeed ( int newSpeed) { // Object Method this .speed = newSpeed; } void setDir (String dir) { // Object Method this .direction = dir; } int getSpeed () { // Object Method return speed; } String getDir () { // Object Method return direction; } public static int totalVehicle () { // Class Method return numVehicle; } } public class Example { public static void main (String[] argv) { Vehicle v1 = new Vehicle( 50 , west ); // new &#x6558;&#x8FF0;&#x7528;&#x4F86;&#x7522;&#x751F;&#x7269;&#x4EF6;. &#x7269;&#x4EF6;&#x7522;&#x751F;&#x6642;&#x9700;&#x8981;&#x547C;&#x53EB;Constructor&#x4F86;&#x521D;&#x59CB;&#x5316;&#x7269;&#x4EF6; Vehicle v2; v1.setSpeed( 30 ); v1.setDir( north ); System.out.println( V1: speed is  +v1.getSpeed()+ , direction is  +v1.getDir()+ .\\n ); v2 = new Vehicle( 40 , south ); System.out.println( There are  +Vehicle.totalVehicle()+  Vehicles in the world.\\n ); v1 = v2; // let reference v1 point to where v2 is pointing System.out.println( V1: speed is  +v1.getSpeed()+ , direction is  +v1.getDir()+ .\\n ); System.gc(); // force system to do garbage collection, the object previously pointed by v1 shall be destroyed System.out.println( There are  +Vehicle.totalVehicle()+  Vehicles in the world.\\n ); } } &#x4E0A;&#x8FF0;&#x4F8B;&#x5B50;&#x88E1;&#x6240;&#x7528;&#x5230;&#x7684;&#x95DC;&#x9375;&#x5B57;&#x6216;&#x985E;&#x5225;&#x540D;&#x7A31;&#x8AAA;&#x660E;&#x5982;&#x4E0B;&#xFF1A; public &#xFF1A;&#x53EF;&#x7528;&#x5728; class &#x524D;&#x9762;&#x8868;&#x793A;&#x6B64; class &#x53EF;&#x4EE5;&#x4F9B;&#x5176;&#x4ED6; package &#x88E1;&#x7684;&#x985E;&#x5225;&#x4F7F;&#x7528;&#x3002;&#x540C;&#x4E00;&#x500B;&#x76EE;&#x9304;&#x4E0B;&#x7684; class &#x5747;&#x53EF;&#x8996;&#x70BA;&#x5C6C;&#x65BC;&#x540C;&#x4E00;&#x500B; package&#x3002; object or class member &#x524D;&#x9762;&#xFF0C;&#x8868;&#x793A;&#x6240;&#x6709;&#x7684; class &#x5747;&#x53EF;&#x5B58;&#x53D6;&#x6B64; member&#x3002; private &#xFF1A;&#x53EF;&#x7528;&#x5728; object or class member &#x524D;&#x9762;&#xFF0C;&#x8868;&#x793A;&#x53EA;&#x6709;&#x5B9A;&#x7FA9;&#x9019;&#x4E9B; member &#x7684; class &#x624D;&#x53EF;&#x5B58;&#x53D6;&#x3002; static &#xFF1A;&#x53EF;&#x7528;&#x5728; member &#x524D;&#x9762;&#x3002;&#x5982;&#x679C; member &#x524D;&#x9762;&#x6709; static &#xFF0C;&#x8868;&#x793A;&#x8A72; member &#x5C6C;&#x65BC; class &#xFF0C;&#x5426;&#x5247;&#x5C6C;&#x65BC; object &#x3002;&#x4E0D;&#x8AD6;&#x7CFB;&#x7D71;&#x5275;&#x9020;&#x4E86;&#x591A;&#x5C11; object, class variable &#x53EA;&#x6709;&#x4E00;&#x500B;&#xFF1B;&#x800C;&#x6BCF;&#x500B; object &#x90FD;&#x6709;&#x5176; object variable&#x3002;&#x5B58;&#x53D6;class method &#x7684;&#x8A9E;&#x6CD5;&#x662F; ClassName.classMethod(); &#x5B58;&#x53D6; object method &#x6642;,&#x5247;&#x5FC5;&#x9808;&#x4EE5; reference.objectMethod() &#x4F86;&#x547C;&#x53EB;&#x3002;&#x5728; Object Method &#x88E1;&#xFF0C;&#x53EF;&#x7528; this &#x8868;&#x793A;&#x76EE;&#x524D;&#x7684;&#x7269;&#x4EF6;&#x3002;&#x4F46;&#x5728; Class Method &#x88E1;&#x5C31;&#x4E0D;&#x80FD;&#x5B58;&#x53D6; object member &#x4E86;&#x3002; this &#xFF1A;&#x8868;&#x793A;&#x76EE;&#x524D;&#x9019;&#x500B;&#x7269;&#x4EF6; String &#xFF1A;&#x5B9A;&#x7FA9;&#x65BC; java.lang package &#x4E0B;&#x9762;&#x7684;&#x985E;&#x5225;&#xFF0C;&#x5C6C;&#x65BC; Java &#x8A9E;&#x8A00;&#x5B9A;&#x7FA9;&#x7684;&#x6A19;&#x6E96;&#x7A0B;&#x5F0F;&#x5EAB;&#x3002; System &#xFF1A;&#x5B9A;&#x7FA9;&#x65BC; java.lang package &#x4E0B;&#x9762;&#x7684;&#x985E;&#x5225;&#xFF0C;&#x5C6C;&#x65BC; Java &#x8A9E;&#x8A00;&#x5B9A;&#x7FA9;&#x7684;&#x6A19;&#x6E96;&#x7A0B;&#x5F0F;&#x5EAB;&#x3002; System.out &#x662F; class System &#x88E1;&#x9762;&#x7684;&#x4E00;&#x500B; Class Variable&#xFF0C;&#x5176;&#x578B;&#x614B;&#x70BA; reference to &#x5B9A;&#x7FA9;&#x65BC; java.io package &#x88E1;&#x9762;&#x7684; PrintStream&#x3002;&#x6211;&#x5011;&#x53EF;&#x900F;&#x904E;&#x8A72;&#x8B8A;&#x6578;&#x6240;&#x6307;&#x5230;&#x7684;&#x7269;&#x4EF6;&#xFF0C;&#x5C07;&#x8A0A;&#x606F;&#x5370;&#x5230;&#x87A2;&#x5E55;&#x4E0A;&#x3002; System.gc &#x662F; class System &#x88E1;&#x9762;&#x7684;&#x4E00;&#x500B; Class Method&#xFF0C;&#x547C;&#x53EB;&#x8A72;&#x65B9;&#x6CD5;&#x53EF;&#x5F37;&#x8FEB; JVM &#x56DE;&#x6536;&#x6C92;&#x6709;&#x88AB;&#x4EFB;&#x4F55; reference &#x6307;&#x5230;&#x7684;&#x7269;&#x4EF6;&#x3002;&#x7576;&#x7269;&#x4EF6;&#x88AB;&#x56DE;&#x6536;&#x6642;&#xFF0C;&#x8A72;&#x7269;&#x4EF6;&#x7684; finalize &#x65B9;&#x6CD5;&#x6703;&#x88AB;&#x547C;&#x53EB;&#x3002; new &#xFF1A;&#x7528;&#x4F86;&#x7522;&#x751F;&#x65B0;&#x7684;&#x7269;&#x4EF6;&#x3002;&#x5F8C;&#x9762;&#x5FC5;&#x9808;&#x8DDF;&#x8457;&#x67D0;&#x500B; constructor &#xFF0C;&#x4EE5;&#x4FBF;&#x9032;&#x884C;&#x521D;&#x59CB;&#x5316;&#x7684;&#x52D5;&#x4F5C;&#x3002; Object Method &#x7684;&#x540D;&#x7A31;&#x5982;&#x679C;&#x548C; Class &#x7684;&#x540D;&#x7A31;&#x76F8;&#x540C;, &#x5247;&#x8868;&#x793A;&#x8A72; Method &#x70BA; Constructor&#x3002;Constructor &#x4E0D;&#x80FD;&#x5BA3;&#x544A;&#x50B3;&#x56DE;&#x503C;&#x3002; &#x8981;&#x9644;&#x5E36;&#x8AAA;&#x660E;&#x7684;&#x662F;&#xFF0C;Java &#x4EE5; new &#x6307;&#x4EE4;&#x4F86;&#x7522;&#x751F;&#x7269;&#x4EF6;&#xFF0C;&#x4F46;&#x4E0D;&#x50CF; C++ &#x6709;&#x63D0;&#x4F9B;&#x76F8;&#x5C0D;&#x61C9;&#x7684; delete &#x6307;&#x4EE4;&#x4F86;&#x6D88;&#x6EC5;&#x7269;&#x4EF6;&#x3002;Java &#x63A1;&#x7528; Garbage Collection &#x7684;&#x89C0;&#x5FF5;&#xFF0C;&#x7576;&#x7CFB;&#x7D71;&#x65BC;&#x9592;&#x7F6E;&#x671F;&#x9593;&#x81EA;&#x52D5;&#x547C;&#x53EB;&#x6216;&#x7531;&#x4F7F;&#x7528;&#x8005;&#x5F37;&#x5236;&#x547C;&#x53EB; System.gc() &#x6642;&#xFF0C;&#x6C92;&#x6709;&#x88AB;&#x4EFB;&#x4F55; reference &#x6307;&#x5230;&#x7684; Object &#x5C31;&#x6703;&#x88AB;&#x56DE;&#x6536;&#x3002; Class &#x88E1;&#x9762;&#x4E00;&#x5B9A;&#x8981;&#x5B9A;&#x7FA9;&#x4E00;&#x500B;&#x4EE5;&#x4E0A;&#x7684; Constructor&#xFF0C;&#x4F46;&#x70BA;&#x4E86;&#x65B9;&#x4FBF;&#x8D77;&#x898B;&#xFF0C;&#x5982;&#x679C; Compiler &#x767C;&#x73FE;&#x67D0; Class &#x6C92;&#x6709;&#x5B9A;&#x7FA9; Constructor&#xFF0C;&#x5247; Compiler &#x6703;&#x5E6B;&#x6211;&#x5011;&#x7522;&#x751F;&#x4E00;&#x500B;&#x4E0D;&#x505A;&#x4EFB;&#x4F55;&#x4E8B;&#x7684; Constructor&#xFF1A; 1 2 public class A { } &#x5C31;&#x76F8;&#x7576;&#x65BC; 1 2 3 public class A { public A () {} }"},"java/class-and-obj.html#Overloading":{"title":"Overloading","path":"/java/class-and-obj.html#Overloading","body":"&#x540C;&#x4E00;&#x500B; class &#x88E1;&#x7684; Method &#x540D;&#x7A31;&#x53EF;&#x4EE5;&#x91CD;&#x8907;&#x4F7F;&#x7528;&#xFF0C;&#x53EA;&#x8981;&#x53EF;&#x4EE5;&#x7531; Method &#x7684;&#x53C3;&#x6578;&#x500B;&#x6578;&#x548C;&#x578B;&#x614B;&#x4F86;&#x5340;&#x5206;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x9019;&#x7A2E;&#x89C0;&#x5FF5;&#x7A31;&#x70BA; overloading &#x3002; &#x4E0D;&#x53EA;&#x4E00;&#x822C;&#x7684; method &#x53EF;&#x4EE5; overloading, constructo r&#x4E5F;&#x53EF;&#x4EE5; overloading&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public class Overloading { int data; public Overloading () { this ( 0 ); // call constructor Overloading(int) } public Overloading ( int data) { this .data = data; } public void print () { this .print( 0 ); // call method print(int) } public void print ( int msg) { } public void print ( float msg) { } public void print ( int msg, String others) { } } &#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x88E1;&#x8AAA;&#x660E; constructor &#x4E5F;&#x53EF;&#x4EE5; overloading &#x3002;&#x8981;&#x7279;&#x5225;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x50B3;&#x56DE;&#x503C;&#x4E26;&#x4E0D;&#x80FD;&#x7528;&#x4F86;&#x5206;&#x8FA8;&#x8981;&#x547C;&#x53EB;&#x54EA;&#x500B; method&#xFF0C;&#x56E0;&#x6B64;&#x82E5;&#x518D;&#x52A0;&#x4E0A; public int print() &#x7684;&#x5BA3;&#x544A;&#xFF0C;&#x5C31;&#x6703;&#x9020;&#x6210;&#x7DE8;&#x8B6F;&#x932F;&#x8AA4;&#x4E86;&#x3002;"},"java/class-and-obj.html#初始化的執行順序":{"title":"&#x521D;&#x59CB;&#x5316;&#x7684;&#x57F7;&#x884C;&#x9806;&#x5E8F;","path":"/java/class-and-obj.html#初始化的執行順序","body":"Class variable &#x662F;&#x5728;&#x8A72;&#x985E;&#x5225;&#x8F09;&#x5165; JVM &#x6642;&#x9032;&#x884C;&#x521D;&#x59CB;&#x5316;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x5BEB;&#x4F5C;&#x4E0A;&#x7D93;&#x5E38;&#x5728; class variable &#x7684;&#x5BA3;&#x544A;&#x5F8C;&#x9762;&#x52A0;&#x4E0A;&#x521D;&#x59CB;&#x5316;&#x7684;&#x52D5;&#x4F5C;&#x3002;&#x5C0D; Object Variable &#x4F86;&#x8AAA;&#xFF0C;&#x662F;&#x5728;&#x7522;&#x751F; Object &#x6642;&#x9032;&#x884C;&#x521D;&#x59CB;&#x5316;&#x7684;&#xFF0C;&#x4F46;&#x521D;&#x59CB;&#x5316;&#x7684;&#x6B65;&#x9A5F;&#x53EF;&#x4EE5;&#x5BEB;&#x5728;&#x8B8A;&#x6578;&#x5BA3;&#x544A;&#x5F8C;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5BEB;&#x5728; constructor &#x5167;&#xFF0C;&#x56E0;&#x6B64;&#x5FC5;&#x9808;&#x5C0D;&#x5176;&#x57F7;&#x884C;&#x9806;&#x5E8F;&#x6709;&#x6240;&#x4E86;&#x89E3;&#x3002;&#x6B65;&#x9A5F;&#x5982;&#x4E0B;&#xFF1A; &#x5148;&#x5C07;&#x6240;&#x6709;&#x8B8A;&#x6578;&#x8A2D;&#x70BA;&#x5167;&#x5B9A;&#x503C;&#x3002;&#x5C0D;&#x6578;&#x503C;&#x578B;&#x614B;&#x4F86;&#x8AAA;&#xFF0C;&#x5176;&#x503C;&#x70BA; 0&#xFF1B;&#x5C0D; reference &#x4F86;&#x8AAA;&#xFF0C;&#x5176;&#x503C;&#x70BA; null&#xFF1B;&#x5C0D; boolean &#x4F86;&#x8AAA;&#xFF0C;&#x5176;&#x503C;&#x70BA; false&#x3002; &#x547C;&#x53EB;&#x7236;&#x985E;&#x5225;&#x7684; constructor&#x3002; &#x57F7;&#x884C;&#x8B8A;&#x6578;&#x5BA3;&#x544A;&#x7684;&#x521D;&#x59CB;&#x5316;&#x52D5;&#x4F5C;&#x3002; &#x57F7;&#x884C;&#x81EA;&#x5DF1;&#x7684; constructor&#x3002; &#x56E0;&#x6B64;&#x5728;&#x5982;&#x4E0B;&#x7684;&#x7BC4;&#x4F8B;&#x5167; 1 2 3 4 5 6 7 8 9 10 public class InitSequence { int data = 2 ; public InitSequence ( int data) { this .data = data; } public static void main (String[] argv) { InitSequence s = new InitSequence( 3 ); System.out.println(s.data); } } data &#x7684;&#x8B8A;&#x5316;&#x5982;&#x4E0B;&#xFF1A; &#x8A2D;&#x70BA;&#x5167;&#x5B9A;&#x503C; 0 &#x547C;&#x53EB;&#x7236;&#x985E;&#x5225;&#x7684; Constructor&#x3002;&#x56E0;&#x70BA;&#x985E;&#x5225; InitSequence &#x6C92;&#x6709;&#x5BA3;&#x544A;&#x7E7C;&#x627F;&#x4EFB;&#x4F55;&#x985E;&#x5225;&#xFF0C; Java &#x898F;&#x5B9A;&#x6B64;&#x60C5;&#x6CC1;&#x6703;&#x81EA;&#x52D5;&#x7E7C;&#x627F; java.lang.Object &#x9019;&#x500B;&#x985E;&#x5225;&#x3002; Object &#x7684; Constructor &#x4E0D;&#x505A;&#x4EFB;&#x4F55;&#x4E8B;&#x3002; &#x57F7;&#x884C;&#x8B8A;&#x6578;&#x5BA3;&#x544A;&#x7684;&#x521D;&#x59CB;&#x52D5;&#x4F5C;&#xFF0C;&#x6210;&#x70BA; 2 &#x57F7;&#x884C;&#x81EA;&#x5DF1;&#x7684; constructor&#xFF0C;&#x6210;&#x70BA; 3 &#x56E0;&#x6B64;&#x6700;&#x5F8C;&#x57F7;&#x884C;&#x7684;&#x7D50;&#x679C;&#x6703;&#x5728;&#x87A2;&#x5E55;&#x4E0A;&#x5370;&#x51FA;&#x6578;&#x5B57; 3&#x3002; Java &#x8A9E;&#x8A00;&#x9084;&#x53EF;&#x4EE5;&#x5B9A;&#x7FA9; static block&#xFF1A; 1 2 3 4 5 6 7 8 9 public class StaticBlock { static { // this is a static block data = ( int )(Math.random()* 100 ); } static int data; public static void main (String[] argv) { System.out.println(data); } } static block &#x5167;&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#xFF0C;&#x662F;&#x5728;&#x8A72; class &#x8F09;&#x5165; JVM &#x4E4B;&#x5F8C;&#xFF0C;&#x9032;&#x884C; class variable &#x521D;&#x59CB;&#x5316;&#x4E4B;&#x524D;&#x7684;&#x6642;&#x9593;&#x5167;&#x57F7;&#x884C;&#x3002;&#x4E00;&#x822C;&#x6BD4;&#x8F03;&#x6703;&#x4F7F;&#x7528; static block &#x7684;&#x5834;&#x5408;&#xFF0C;&#x662F;&#x8A72; class &#x7528;&#x5230;&#x4E00;&#x4E9B;&#x975E; Java &#x7684;&#x7A0B;&#x5F0F;&#x5EAB;&#xFF0C;&#x9700;&#x8981;&#x900F;&#x904E; System.loadLibrary(String libName) &#x65B9;&#x6CD5;&#x628A;&#x5916;&#x754C;&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#x8F09;&#x5165;&#x6642;&#x3002;&#x9019;&#x6A23;&#x5BEB;&#x7684;&#x597D;&#x8655;&#x662F;&#x53EA;&#x6709;&#x7576;&#x8A72; class &#x7B2C;&#x4E00;&#x6B21;&#x88AB;&#x4F7F;&#x7528;&#x5230;&#x6642;&#xFF0C;&#x624D;&#x6703;&#x4E0B;&#x8F09;&#x76F8;&#x95DC;&#x8EDF;&#x9AD4;&#xFF0C;&#x4EE5;&#x7BC0;&#x7701;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;&#xFF0C;&#x907F;&#x514D;&#x91CD;&#x8907;&#x4E0B;&#x8F09;&#xFF0C;&#x4E26;&#x53EF;&#x4EE5;&#x628A;&#x5BE6;&#x4F5C;&#x7684;&#x7D30;&#x7BC0;&#x548C;&#x5916;&#x754C;&#x9694;&#x96E2;&#x958B;&#x4F86;&#x3002;&#x5C0D;&#x6C92;&#x6709;&#x9019;&#x7A2E;&#x6A5F;&#x5236;&#x7684; C &#x8A9E;&#x8A00;&#x4F86;&#x8AAA;&#xFF0C;&#x5F88;&#x53EF;&#x80FD;&#x5C31;&#x5FC5;&#x9808;&#x5728;&#x4E3B;&#x7A0B;&#x5F0F;&#x5167;&#x5BEB;&#x4E0A;&#x4E00;&#x5806;&#x5F88;&#x96E3;&#x61C2;&#x7684;&#x555F;&#x52D5;&#x7A0B;&#x5F0F;&#x78BC;&#x3002; 1 2 3 4 5 6 7 8 9 class ClassNeedToLoadLibrary { static { System.loadLibrary( mylib ); } } public class Main { public static void main (String[] argv) { } }"},"java/class-and-obj.html#final-關鍵字":{"title":"final &#x95DC;&#x9375;&#x5B57;","path":"/java/class-and-obj.html#final-關鍵字","body":"final &#x95DC;&#x9375;&#x5B57;&#x7528;&#x5728;&#x8B8A;&#x6578;&#x5BA3;&#x544A;&#x6642;&#xFF0C;&#x8868;&#x793A;&#x8A72;&#x8B8A;&#x6578;&#x7684;&#x503C;&#x53EA;&#x80FD;&#x5728;&#x5BA3;&#x544A;&#x6642;&#x7D66;&#x5B9A;&#xFF0C;&#x7136;&#x5F8C;&#x5C31;&#x4E0D;&#x80FD;&#x518D;&#x66F4;&#x6539;&#x4E86;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 public class Main { public static final double PI = 3.14159 ; public final int x = 10 ; public static void main (String[] argv) { final int local = 10 ; Main m = new Main(); PI = 100 ; // Compile Error, final variable can only be set at initialization m.x = 10 ; // Compile Error local = 100 ; // Compile Error } }"},"java/container.html":{"title":"容器類別","path":"/java/container.html","body":"對絕大部分應用來說，資料量的大小，必須等到執行期間才知道。 由於 Java 的陣列一但產生後，就沒有辦法變更其大小，因此 JDK 在 java.util 裡面提供了相關的容器類別，比較常用的類別有： Vector ：可視為長度沒有限制的陣列 Hashtable ：利用 get 和 put 函數把 (key, val) 放進該容器內 Enumeration ：可利用此類別將 Hashtable 內的資料逐一取出 Stack with push() pop() methods 範例程式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 import java.util.*; public class VectorExample  public static void main (String[] argv)  Vector v = new Vector(); for ( int i = 0 ; i  100 ; i++)  v.add( new Integer(i)); // v.add(index, element)  for ( int i = 0 ; i  v.size(); i++)  Integer x = v.get(i);  Integer[] y = (Integer[])v.toArray(); for ( int i = v.size()- 1 ; i = 0 ; i--)  v.remove(i);   public static void fun ()  Vector v = new Vector(); for ( int i = 0 ; i  100 ; i++)  v.add( new Integer(i));  for ( int i = 0 ; i  v.size(); i++)  Integer x = (Integer)v.get(i);  Integer[] y = (Integer[])v.toArray(); for ( int i = v.size()- 1 ; i = 0 ; i--)  v.remove(i);  for ( int i = 0 ; i  100 ; i++)  v.add( new Float(i));  for ( int i = 0 ; i  v.size(); i++)  Float x = (Float)v.get(i);  Float[] z = (Float[])v.toArray(); for ( int i = v.size()- 1 ; i = 0 ; i--)  v.remove(i);    import java.util.*; public class Example3  public static void main (String[] argv)  Vector v = new Vector(); for ( int i = 0 ; i  10 ; i++)  v.add(Integer.toString(i));  for ( int i = 0 ; i  v.size(); i++)  String x = (String)v.get(i); System.out.println(x);  String[] tmp = new String[v.size()]; v.copyInto(tmp); for ( int i = 0 ; i  tmp.length; i++)  System.out.println(tmp[i]);  Hashtable ht = new Hashtable(); for ( int i = 0 ; i  10 ; i++)  ht.put( new Integer(i), Integer.toString(i));  for ( int i = 0 ; i  10 ; i++)  String x = (String)ht.get( new Integer(i)); System.out.println(x);  Enumeration enu = ht.elements(); while (enu.hasMoreElements())  String x = (String)enu.nextElement(); System.out.println(x);   "},"java/container.html#範例程式":{"title":"&#x7BC4;&#x4F8B;&#x7A0B;&#x5F0F;","path":"/java/container.html#範例程式","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 import java.util.*; public class VectorExample { public static void main (String[] argv) { Vector v = new Vector(); for ( int i = 0 ; i  100 ; i++) { v.add( new Integer(i)); // v.add(index, element) } for ( int i = 0 ; i  v.size(); i++) { Integer x = v.get(i); } Integer[] y = (Integer[])v.toArray(); for ( int i = v.size()- 1 ; i = 0 ; i--) { v.remove(i); } } public static void fun () { Vector v = new Vector(); for ( int i = 0 ; i  100 ; i++) { v.add( new Integer(i)); } for ( int i = 0 ; i  v.size(); i++) { Integer x = (Integer)v.get(i); } Integer[] y = (Integer[])v.toArray(); for ( int i = v.size()- 1 ; i = 0 ; i--) { v.remove(i); } for ( int i = 0 ; i  100 ; i++) { v.add( new Float(i)); } for ( int i = 0 ; i  v.size(); i++) { Float x = (Float)v.get(i); } Float[] z = (Float[])v.toArray(); for ( int i = v.size()- 1 ; i = 0 ; i--) { v.remove(i); } } } import java.util.*; public class Example3 { public static void main (String[] argv) { Vector v = new Vector(); for ( int i = 0 ; i  10 ; i++) { v.add(Integer.toString(i)); } for ( int i = 0 ; i  v.size(); i++) { String x = (String)v.get(i); System.out.println(x); } String[] tmp = new String[v.size()]; v.copyInto(tmp); for ( int i = 0 ; i  tmp.length; i++) { System.out.println(tmp[i]); } Hashtable ht = new Hashtable(); for ( int i = 0 ; i  10 ; i++) { ht.put( new Integer(i), Integer.toString(i)); } for ( int i = 0 ; i  10 ; i++) { String x = (String)ht.get( new Integer(i)); System.out.println(x); } Enumeration enu = ht.elements(); while (enu.hasMoreElements()) { String x = (String)enu.nextElement(); System.out.println(x); } } }"},"java/easy-print.html":{"title":"印表","path":"/java/easy-print.html","body":"JDK 對印表的支援不多，主要是以「所視即所得」的觀念，將 AWT 的原先利用 Graphics 繪圖的部分改為利用 PrintGraphics，即可達到印表的需求。 以下是一個提供預覽以及背景列印的程式庫，該程式庫採用 Template Design Pattern ，透過 abstract methods 要求子類別必須實作特定的方法。 本程式另將原始碼公開於 GitHub 歡迎指教 Print.javapackage ncnu.print; /* Program Name: Print.java Subject: 印表與瀏覽抽象類別 Editor: 俞旭昇 Shiuh-Sheng Yu National ChiNan University Department of Information Management Edit Date: 01/05/1998 Modify Date: 05/06/2001 Modify Date: 2004/10/01,加入背景列印 ToolKit: JDK1.1 */ import ncnu.gui.*; import java.awt.*; import java.awt.event.*; import java.sql.*; import java.util.*; public abstract class Print implements ActionListener  ScrollPane sp; protected Connection con; protected SimpleTable fg; protected TableGUI gui; protected boolean completed = true ; protected String printer; protected int copy = 1 ; protected boolean background; public Print (Connection c, String printer, int copy)  this .con = c; this .printer = printer; this .copy = copy; this .background = true ;  public Print (Connection c, Vector data)  this .con = c; if (data != null )  PrintCanvas canvas = createCanvas(data); canvas.setResolution( 144 ); new Preview(canvas, \"預覽報表\" );  else  fg = new SimpleTable( \"\" , this , 16 ); addQueryCondition(); fg.addButton( \"確定\" ); fg.addButton( \"取消\" ); if (completed)  fg.addButton( \"預覽\" ); fg.addButton( \"放大預覽\" );  fg.read();   public Print (Connection c)  this (c, null );  protected abstract Vector getData () ; protected abstract PrintCanvas createCanvas (Vector data) ; protected abstract void addQueryCondition () ; protected void setPrinter (String pname)  printer = pname;  public boolean print ()  Vector data = getData(); if (data== null || data.size()== 0 )  return false ;  PrintCanvas canvas = createCanvas(data); canvas.setResolution( 72 ); PrintJob pjob = getPrintJob(canvas); if (pjob != null )  do  Graphics pg = pjob.getGraphics(); canvas.update(pg); pg.dispose(); // flush page  while (canvas.nextPage()); pjob.end(); return true ;  else  System.out.println( \"Unable to create print job \" +printer); return false ;   protected PrintJob getPrintJob (PrintCanvas canvas)  if (System.getProperty( \"java.version\" ).compareTo( \"1.3\" )  0 )  return gui.getToolkit().getPrintJob(fg, \"列印報表\" , null );  else  PageAttributes pa = new PageAttributes(); String media = canvas.getMedia(); if (media.equalsIgnoreCase( \"letter\" ))  pa.setMedia(PageAttributes.MediaType.LETTER);  else if (media.equalsIgnoreCase( \"B4\" ))  pa.setMedia(PageAttributes.MediaType.JIS_B4);  else if (media.equalsIgnoreCase( \"A4\" ))  pa.setMedia(PageAttributes.MediaType.A4);  else if (media.equalsIgnoreCase( \"A3\" ))  pa.setMedia(PageAttributes.MediaType.A3);  String ori = canvas.getOrientation(); if (ori.equalsIgnoreCase( \"portraint\" ))  pa.setOrientationRequested(PageAttributes.OrientationRequestedType.PORTRAIT);  else if (ori.equalsIgnoreCase( \"landscape\" ))  pa.setOrientationRequested(PageAttributes.OrientationRequestedType.LANDSCAPE);  JobAttributes jAttr = null ; if (printer!= null )  jAttr = new JobAttributes(); jAttr.setDialog(JobAttributes.DialogType.NONE); jAttr.setPrinter(printer); jAttr.setCopies(copy);  if (background)  return Toolkit.getDefaultToolkit().getPrintJob( null , \"列印報表\" , jAttr, pa);  else  return gui.getToolkit().getPrintJob(fg, \"列印報表\" , jAttr, pa);    public void actionPerformed (ActionEvent e)  PrintCanvas canvas; String returnString, query; String cmd = e.getActionCommand(); if (cmd.equals( \"取消\" ))  fg.dispose(); return ;  Vector data = getData(); if (data== null || data.size()== 0 )  fg.dispose(); return ;  if (!completed)  addQueryCondition(); if (completed)  fg.addButton( \"預覽\" ); fg.addButton( \"放大預覽\" );  fg.read(); return ;  if (cmd.equals( \"確定\" ))  canvas = createCanvas(data); canvas.setResolution( 72 ); PrintJob pjob = getPrintJob(canvas); if (pjob != null )  do  Graphics pg = pjob.getGraphics(); canvas.update(pg); pg.dispose(); // flush page  while (canvas.nextPage()); pjob.end();  else  System.out.println( \"User canceled job\" );  fg.dispose();  else  canvas = createCanvas(data); if (cmd.equals( \"預覽\" ))  canvas.setResolution( 72 );  else if (cmd.equals( \"放大預覽\" ))  canvas.setResolution( 144 );  new Preview(canvas, \"預覽報表\" );   class Preview extends WindowAdapter implements ActionListener  Frame f; Button previous, next, printOne, printAll, leave; PrintJob pjob = null ; String title; PrintCanvas pc; ScrollPane sp = new ScrollPane()  public Dimension getPreferredSize ()  Dimension x = Toolkit.getDefaultToolkit().getScreenSize(); return new Dimension(x.width- 20 ,x.height- 50 );  ; public void actionPerformed (ActionEvent e)  String cmd = e.getActionCommand(); if (cmd.equals( \"上一頁\" ))  doPrevious();  else if (cmd.equals( \"下一頁\" ))  doNext();  else if (cmd.equals( \"列印本頁\" ))  doPrintOne();  else if (cmd.equals( \"列印全部\" ))  doPrintAll();  else  System.out.println( \"Unknown command \" +cmd);   Preview(PrintCanvas pc, String title)  this .pc = pc; this .title = title; f = new Frame(title); f.setLayout( new GridBagLayout()); f.addWindowListener( new CloseWindow(f)); sp.add(pc); AddConstraint.addConstraint(f,sp, 0 , 0 , 1 , 1 , GridBagConstraints.BOTH, GridBagConstraints.CENTER, 1 , 1 , 0 , 0 , 0 , 0 ); Panel buttons = new Panel(); buttons.setLayout( new GridLayout( 1 , 5 )); AddConstraint.addConstraint(f,buttons, 0 , 1 , 1 , 1 , GridBagConstraints.HORIZONTAL, GridBagConstraints.CENTER, 1 , 0 , 0 , 0 , 0 , 0 ); ((Button)buttons.add(previous= new Button( \"上一頁\" ))).addActionListener( this ); ((Button))buttons.add(next= new Button( \"下一頁\" ))).addActionListener( this ); ((Button))buttons.add(printOne= new Button( \"列印本頁\" ))).addActionListener( this ); ((Button))buttons.add(printAll= new Button( \"列印全部\" ))).addActionListener( this ); ((Button))buttons.add(leave= new Button( \"離開\" ))).addActionListener( new CloseWindow(f)); previous.setEnabled( false ); if (pc.lastPage())  next.setEnabled( false );  f.pack(); f.show();  void doPrevious ()  pc.previousPage(); if (pc.firstPage())  previous.setEnabled( false );  if (pc.lastPage())  next.setEnabled( false );  else  next.setEnabled( true );  pc.update(pc.getGraphics());  void doNext ()  pc.nextPage(); if (pc.lastPage())  next.setEnabled( false );  if (pc.firstPage())  previous.setEnabled( false );  else  previous.setEnabled( true );  pc.update(pc.getGraphics());  void doPrintOne ()  if (pjob== null )  pjob = Print. this .getPrintJob(pc);  if (pjob != null )  Graphics pg = pjob.getGraphics(); pc.buffer = null ; int rel = pc.getResolution(); pc.setResolution( 72 ); pc.update(pg); pg.dispose(); // flush page pjob.end(); pjob= null ; pc.setResolution(rel);   void doPrintAll ()  if (pjob== null )  pjob = Print. this .getPrintJob(pc);  if (pjob != null )  pc.currentPage = - 1 ; while (pc.nextPage())  Graphics pg = pjob.getGraphics(); pc.buffer = null ; pc.setResolution( 72 ); pc.update(pg); pg.dispose();  pjob.end(); pjob= null ;     PrintCanvas.javapackage ncnu.print; /* Program Name: PrintCanvas.java Subject: 印表畫布抽象類別 Editor: 俞旭昇 Shiuh-Sheng Yu National Chi-Nan University Institute of Management Information Edit Date: 01/05/1998 Last Update Date: 05/06/2001 ToolKit: JDK1.1.4 */ import java.awt.*; import java.util.*; public abstract class PrintCanvas extends Canvas  Image buffer; private int total; protected int dotPerInch= 72 ; protected Vector data; protected  int currentPage; protected Pair pagePositions[]; // cached for previous page class Pair  int data, subpage; Pair( int data, int subpage)  this .data = data; this .subpage = subpage;   public void setResolution ( int rel)  dotPerInch=rel;  public int getResolution ()  return dotPerInch;  public int getDataIndex ()  return pagePositions[currentPage].data;  public int getSubPageIndex ()  return pagePositions[currentPage].subpage;  public int totalPages ()  int total = 0 ; for ( int i= 0 ; i  data.size();)  int sub = pagesPerData(data.elementAt(i)); if (sub 1 )  // multi page per data total += sub; i++;  else  i += dataPerPage(total); total++;   return total;  protected abstract int dataPerPage ( int pageNum) ; /** * How many pages are needed to print out data * @param data Data record to be printed * @return Number of pages for the data, 0 if more data are need to fill this page */ protected abstract int pagesPerData (Object data) ; // return 0 if more than a page per record /** * print a page for a data record * @param pg Print graphics * @param data Data record to be printed * @param */ public PrintCanvas (Vector data)  this .data = data; currentPage= 0 ; total = totalPages(); pagePositions = new Pair[total]; int currentData = 0 ; for ( int i= 0 ; i  total;)  int sub = pagesPerData(data.elementAt(currentData)); if (sub 1 )  // multi page per data for ( int j= 0 ; j  sub; j++)  pagePositions[i+j] = new Pair(currentData,j);  i+=sub; currentData++;  else  // multi data per page pagePositions[i] = new Pair(currentData, 0 ); currentData += dataPerPage(i); i++;    public Dimension getPreferredSize ()  if (getMedia().equals( \"A4\" ))  if (getOrientation().equals( \"portrait\" ))  return new Dimension(( int )( 8.27 *dotPerInch),( int )( 11.69 *dotPerInch)); // A4 直印  else  return new Dimension(( int )( 11.69 *dotPerInch),( int )( 8.27 *dotPerInch)); // A4 橫印   else if (getMedia().equals( \"B4\" ))  if (getOrientation().equals( \"portrait\" ))  return new Dimension(( int )( 9.84 *dotPerInch),( int )( 13.9 *dotPerInch)); // B4 直印  else  return new Dimension(( int )( 13.9 *dotPerInch),( int )( 9.84 *dotPerInch)); // B4 橫印   else if (getMedia().equals( \"A3\" ))  if (getOrientation().equals( \"portrait\" ))  return new Dimension(( int )( 11.69 *dotPerInch),( int )( 16.54 *dotPerInch)); // A3 直印  else  return new Dimension(( int )( 16.54 *dotPerInch),( int )( 11.69 *dotPerInch)); // A3 橫印   else if (getMedia().equals( \"LETTER\" ))  if (getOrientation().equals( \"portrait\" ))  return new Dimension(( int )( 8.5 *dotPerInch), ( int )( 11 *dotPerInch)); // letter 直印  else  return new Dimension(( int )( 11 *dotPerInch), ( int )( 8.5 *dotPerInch)); // letter 橫印   return new Dimension(( int )( 8 *dotPerInch),( int )( 11.2 *dotPerInch)); // A4 直印 size  public String getMedia ()  return \"A4\" ;  public String getOrientation ()  return \"portrait\" ;  public boolean firstPage ()  return (currentPage= 0 );  public boolean lastPage ()  return ((currentPage+ 1 )=total);  public boolean nextPage ()  if (currentPage+ 1 =total)  return false ;  buffer= null ; currentPage++; return true ;  public boolean previousPage ()  if (currentPage == 0 )  return false ;  buffer= null ; currentPage--; return true ;  public void update (Graphics pg)  Graphics g = pg; if (buffer!= null )  pg.drawImage(buffer, 0 , 0 , this ); return ;  else if (!(pg instanceof PrintGraphics))  Dimension d = getPreferredSize(); buffer = createImage(d.width, d.height); if (buffer!= null )  g = buffer.getGraphics();   paint(g); if (buffer!= null )  pg.drawImage(buffer, 0 , 0 , this );    圖形與字型公用程式package ncnu.print; /* Program Name: CharArea.java Subject: 印表公用程式 Editor: 俞旭昇 Shiuh-Sheng Yu National Chi-Nan University Institute of Management Information Edit Date: 01/05/1998 Last Update Date: 05/06/2001 ToolKit: JDK1.1 */ import java.awt.*; /** * The class defines a rectangle area so that users can draw String vertically or * horizontally, and don't have to worry wrapping problem. */ public class CharArea  private Graphics g; private FontMetrics f; private int x, y, width, height, row, col; private int curx, cury; private boolean fromRight; public int fontHeight; /** * @param g Graphics to draw String * @param x x coordinate of the area in points * @param y y coordinate of the area in points * @param width width of the area in points * @param height height of the area in points * @param fromRight draw Lines from right or not */ public CharArea (Graphics g, int x, int y, int width, int height, boolean fromRight)  this .g = g; this .x = x; this .y = y; this .width = width; this .height = height; this .fromRight = fromRight; col = row = 1 ; f = g.getFontMetrics(); // expect font size if (System.getProperty( \"java.version\" ).compareTo( \"1.4\" ) = 0 )  fontHeight = ( int )(f.getAscent()* 1 );  else  fontHeight = ( int )(f.getAscent()* 1.2857 ); // 9/7 for strange differece between 1.3 and 1.4 fontMetrics  if (!fromRight)  curx = x;  else  curx = x + width - fontHeight;  cury = y + fontHeight;  /** * @param g Graphics to draw String * @param x x coordinate of the area in points * @param y y coordinate of the area in points * @param width width of the area in points * @param height height of the area in points */ public CharArea (Graphics g, int x, int y, int width, int height)  this (g, x, y, width, height, false );  /* col and row starts from 1 */ public int getRow ()  return row;  public void setRow ( int row)  this .row = row; cury = y + row*fontHeight;  public int getCol ()  return col;  public void setCol ( int col)  this .col = col; curx = x + (col- 1 )*f.getHeight(); // assume 方塊字  /** * Draw a string vertically, and wrap to right if necessary. Reset row to 1 after drawing. */ public void drawLineV (String s)  if (s== null || s.length()== 0 )  return ;  drawV(s); col = col + 1 ; row = 1 ; curx += f.getHeight(); // assume 方塊字 cury = y + fontHeight;  /** * Draw a string vertically, wrap to right if necessary. */ public void drawV (String s)  int i, strlen; char [] chars; if (s== null || s.length()== 0 )  return ;  strlen = s.length(); chars = new char [strlen]; s.getChars( 0 ,strlen,chars, 0 ); for (i= 0 ; i  strlen; i++)  if ((cury-y)  height)  cury = y + fontHeight; col++; row = 1 ; if (fromRight)  curx -= f.getHeight();  else  curx += f.getHeight();   g.drawChars(chars,i, 1 ,curx,cury); cury +=fontHeight;   /** * Draw a string horizontally, wrap down if necessary. Rest col to 1 after drawing. */ public void drawLineH (String s)  if (s== null || s.length()== 0 )  return ;  drawH(s); col = 1 ; row = row + 1 ; curx = x; cury += fontHeight;  /** * Draw a String horizontally, wrap down if necessary. */ public void drawH (String s)  int i, strlen; char [] chars; if (s== null || s.length()== 0 )  return ;  strlen = s.length(); chars = new char [strlen]; s.getChars( 0 ,strlen,chars, 0 ); f = g.getFontMetrics(); for (i= 0 ; i  strlen; i++)  if (chars[i]== '\\n' )  curx = x; col = 1 ; row = row + 1 ; cury += fontHeight; continue ;  if (((curx-x)+f.charWidth(chars[i]))  width)  curx = x; col = 1 ; row = row + 1 ; cury += fontHeight;  g.drawChars(chars,i, 1 ,curx,cury); curx += f.charWidth(chars[i]);   /** * Fill a string vertically in the specified area, with proper space between characters. */ public static void fillV (Graphics g, String s, int x, int y, int width, int height)  int vlen, hlen, i, strlen; FontMetrics f; double scale, currentPos; char [] chars; if (s== null || s.length()== 0 )  return ;  f = g.getFontMetrics(); strlen = s.length(); vlen = f.getHeight(); chars = new char [strlen]; s.getChars( 0 ,strlen,chars, 0 ); if (strlen == 1 )  g.drawString(s,( int )(x+(width-f.charWidth(chars[ 0 ])+ 1 )/ 2 ),( int )(y+(height-vlen)/ 2 +f.getHeight()));  else  scale = ( double )(height-vlen*strlen)/(strlen); for (i= 0 , currentPos=y+f.getHeight()+scale/ 2 ; i  strlen; i++)  g.drawChars(chars,i, 1 ,( int )(x+(width-f.charWidth(chars[i])+ 1 )/ 2 ),( int )currentPos); currentPos += scale + vlen;    public static void drawCenter (Graphics g, String s, int x, int y)  int len, i, strlen; FontMetrics f; if (s== null || s.length()== 0 )  return ;  f = g.getFontMetrics(); len = f.stringWidth(s); g.drawString(s,x-(len+ 1 )/ 2 ,y);  /** * Fill a string horizontally in the specified area, with proper space between characters. */ public static void fillH (Graphics g, String s, int x, int y, int width, int height)  int len, i, strlen; FontMetrics f; if (s== null || s.length()== 0 )  return ;  f = g.getFontMetrics(); len = f.stringWidth(s); strlen = s.length(); if (strlen== 1 )  len=f.stringWidth(s); g.drawString(s,( int )(x+(width-len+ 1 )/ 2 ),y+(height+f.getHeight())/ 2 );  else  char [] chars = new char [strlen]; s.getChars( 0 ,strlen,chars, 0 ); for (i= 0 , len= 0 ; i  strlen; i++)  len += f.charWidth(chars[i]);  double scale = (( double )(width-len))/(strlen); double currentPoint; y += (height+f.getHeight())/ 2 ; for (i= 0 , currentPoint=x+(scale+ 1 )/ 2 ; i  strlen; i++)  g.drawChars(chars,i, 1 ,( int )currentPoint,y); currentPoint += scale + f.charWidth(chars[i]);     印表範例 使用以上類別的印表程式 PrintYLNoticeA4.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 /* Program Name: PrintYLNoticeA4.java * Subject: 列印學期成績單通知單(A4紙版本) * Author: Shiuh-Sheng Yu * Edit Date: 01/13/2001 * Last Update Date: 02/06/2002 * Last Update Date: 06/12/2003 add 停修 * Modify Date: 2004/07/07 加入網路輸入成績但尚未致送判別 * ToolKit: JDK1.1 */ import ncnu.print.*; import ncnu.sql.*; import ncnu.rule.*; import ncnu.gui.*; import java.util.*; import java.sql.*; import java.awt.*; public class PrintYLNoticeA4 extends Print  static String mynote= \"註A 全班成績未到\\n註B 個人成績未到(請向老師查明)\\n註C 請假\\n註D 缺考\\n註E 停修\" ; static String explain= \"說明：學生學期學業成績以各科任課教師送交本處之原始成績冊為憑；本通知單僅為提供參考，若需正式證明請至本處註冊組申請成績單。\\n\" ; static String explain2= \"\\n※學生學期學業成績有下列情形者，應予退學：\\n一、一般生：學期學業成績累計兩學期不及格科目之學分數，均達 各該學期修習學分總數二分之一者。\\n二、僑生、外國生：學期學業成績累計三學期不及格科目之學分數 ，均達各該學期修習學分總數二分之一者。\\n三、視、聽、語障礙生：學期學業成績累計三學期不及格科目之學 分數，均達各該學期修習學分總數三分之二者。\\n(詳細規定見本校學則第三十二條)\" ; String year; String period; public PrintYLNoticeA4 (Connection con)  super (con);  public void addQueryCondition ()  fg.setTitle( \"列印學期成績通知單\" ); int [] col =  12 , 10 ; gui = fg.newTable(col); String acaYear = NCNUmisc.getAcaYear(); String year = acaYear.substring( 0 ,acaYear.length()- 1 ); String period = acaYear.substring(acaYear.length()- 1 , acaYear.length()); gui.addLabel( \"學年\" ); gui.addTextField( \"year\" ,year, 3 , 3 ,Types.CHAR); gui.addLabel( \"學期\" ); gui.addTextField( \"period\" ,period, 1 , 1 ,Types.CHAR); gui.addLabel( \"系所\" ); gui.addTextField( \"deptid\" , \"\" , 3 , 3 ,Types.CHAR); gui.addLabel( \"班(部)別\" ); gui.addTextField( \"class\" , \"\" , 1 , 1 , Types.CHAR); gui.addLabel( \"年級\" ); gui.addTextField( \"grade\" , \"\" , 1 , 1 ,Types.CHAR); gui.addLabel( \"開始學號\" ); gui.addTextField( \"startid\" , \"\" , 9 , 9 ,Types.CHAR); gui.addLabel( \"結束學號\" ); gui.addTextField( \"endid\" , \"\" , 9 , 9 ,Types.CHAR); gui.addLabel( \"備註\" ); gui.addTextArea( \"note\" ,mynote, true );  protected Vector getData ()  String returnString, query; Statement stmt; ResultSet rs; year = gui.getTextField( \"year\" ).trim(); period = gui.getTextField( \"period\" ).trim(); String startid = gui.getTextField( \"startid\" ).trim(); String endid = gui.getTextField( \"endid\" ).trim(); String classid = gui.getTextField( \"class\" ).trim(); String deptid = gui.getTextField( \"deptid\" ).trim(); String grade = gui.getTextField( \"grade\" ).trim(); mynote = gui.getTextField( \"note\" ); try  stmt = con.createStatement(); StringBuffer sb = new StringBuffer( \"select S.studentid ,D.cname ,S.name, S.pname, S.grade,S.addr2, S.zipcode2,S.addr1, S.zipcode1, S.deptid,S.class from student S,department D where S.deptid=D.deptid and S.status='0'\" ); if (!startid.equals( \"\" ))  sb.append( \" and S.studentid='\" +startid+ \"'\" );  if (!endid.equals( \"\" ))  sb.append( \" and S.studentid='\" +endid+ \"'\" );  if (!classid.equals( \"\" ))  sb.append( \" and S.class='\" +classid+ \"'\" );  if (!deptid.equals( \"\" ))  sb.append( \" and S.deptid='\" +deptid+ \"'\" );  if (!grade.equals( \"\" ))  sb.append( \" and S.grade='\" +grade+ \"'\" );  sb.append( \" order by S.deptid,S.class,S.grade\" ); rs = stmt.executeQuery(sb.toString()); Vector ids = new Vector(); String[] stuinfo; String tmp; while (rs.next())  stuinfo= new String[ 11 ]; stuinfo[ 7 ] = year; stuinfo[ 8 ] = period; stuinfo[ 6 ] = rs.getString( 1 ); // 學號 stuinfo[ 3 ] = SQL.fromSQL(rs.getString( 2 )); // 系所 stuinfo[ 5 ] = SQL.fromSQL (rs.getString( 3 )); // student name tmp = SQL.fromSQL( rs.getString( 4 )); tmp = tmp == null ? \"\" : tmp.trim (); //若家長欄為空，用學生名 stuinfo[ 2 ] = tmp.equals ( \"\" ) ? stuinfo[ 5 ] : tmp; //收件者姓名 stuinfo[ 4 ] = rs.getString( 5 ); // 年級 String currentAddr = SQL.fromSQL(rs.getString( 6 )).trim(); // 通訊地址 String currentZip = SQL.fromSQL(rs.getString( 7 )).trim(); // 通訊地址zipcode String perAddr = SQL.fromSQL(rs.getString( 8 )).trim(); // 戶籍地址 String perZip = SQL.fromSQL(rs.getString( 9 )).trim(); // 戶籍地址zipcode if (!currentAddr.equals( \"\" )) stuinfo[ 0 ] = currentAddr; stuinfo[ 1 ] = currentZip;  else  stuinfo[ 0 ] = perAddr; stuinfo[ 1 ] = perZip;  stuinfo[ 9 ] = SQL.fromSQL(rs.getString( 10 )).trim(); // deptid stuinfo[ 10 ] = SQL.fromSQL(rs.getString( 11 )); // division ids.addElement (stuinfo);  rs.close(); Vector data = new Vector(); for ( int i= 0 ; i  ids.size(); i++)  String[] info = (String[])ids.elementAt(i); YLNoticeStudent stu = new YLNoticeStudent(); stu.info = info; query= \"select E.courseid,E.year,E.score,C.cname,C.credit,C.division, opened.senddate,E.netscore\" + \" from selected E, opened, course C \" + \" where E.courseid=opened.courseid and E.year=opened.year and E.class=opened.class and E.courseid=C.courseid\" + \" and E.studentid=\\'\" +info[ 6 ]+ \"\\'\" + \" and E.year=\\'\" +year+period+ \"\\' order by C.cname asc\" ; rs = stmt.executeQuery(SQL.toSQL(query)); while (rs.next())  String _courseid = SQL.fromSQL(rs.getString( 1 )).trim(); String _year=SQL.fromSQL(rs.getString( 2 )).trim(); double score = rs.getDouble( 3 ); String cname = SQL.fromSQL(rs.getString( 4 )).trim(); double credit = rs.getDouble( 5 ); String division = SQL.fromSQL(rs.getString( 6 )); String type = \"選修\" ; String senddate = SQL.toString(rs.getBytes( 7 )); String netscore = SQL.toString(rs.getBytes( 8 )); // 網路輸入成績,尚未致送教務處 if (senddate.equals( \"\" ) &amp;&amp; netscore.equals( \"Y\" ))  score = - 1 ;  stu.instLearning (type, cname, credit, score, _courseid, _year,division);  rs.close(); for ( int j = 0 ; j  stu.learning.size (); j++) String[] learning = (String[])stu.learning.elementAt (j); int entrydate=Integer.parseInt(NCNUmisc.getEnterYear(info[ 6 ]).trim()); //查詢必修 query= \"select * from require where courseid=\\'\" +learning[ 4 ]+ \"\\'\" + \" and deptid=\\'\" +info[ 9 ]+ \"\\'\" + \" and start=\" +entrydate+ \" and stop=\" +entrydate; rs = stmt.executeQuery(query); if (rs.next()) learning[ 0 ] = \"必修\" ; rs.close(); //判斷此科目是否為雙主修的必修 query= \"select deptid from whodouble where studentid=\\'\" +info[ 6 ]+ \"\\'\" ; rs = stmt.executeQuery(query); if (rs.next()) String _deptid2= SQL.fromSQL(rs.getString( 1 )).trim(); rs.close(); query= \"select * from require where courseid=\\'\" +learning[ 4 ]+ \"\\'\" + \" and deptid=\\'\" +_deptid2+ \"\\'\" + \" and start=\" +entrydate+ \" and stop=\" +entrydate; rs = stmt.executeQuery(query); if (rs.next()) learning[ 0 ] = \"必修\" ;  rs.close(); //判斷此科目是否為輔系的必修 query= \"select deptid from whoassist where studentid=\\'\" +info[ 6 ]+ \"\\'\" ; rs = stmt.executeQuery(query); if (rs.next()) String _deptid3= SQL.fromSQL(rs.getString( 1 )).trim(); rs.close(); query= \"select * from require where courseid=\\'\" +learning[ 4 ]+ \"\\'\" + \" and deptid=\\'\" +_deptid3+ \"\\'\" + \" and start=\" +entrydate+ \" and stop=\" +entrydate; rs = stmt.executeQuery(query); if (rs.next()) learning[ 0 ] = \"必修\" ;  rs.close(); if (learning[ 6 ].equals( \"B\" ) &amp;&amp; (stu.info[ 10 ].equals( \"G\" )||stu.info[ 10 ].equals( \"P\" )))  learning[ 0 ] = \"下修\" ;   query= \"select score from conduct where studentid=\\'\" +info[ 6 ]+ \"\\'\" + \" and year=\\'\" +year+period+ \"\\'\" ; rs = stmt.executeQuery(query); while (rs.next()) stu.bscore = rs.getDouble( 1 );  rs.close(); data.addElement(stu);  stmt.close(); con.commit(); return data;  catch (Exception ex)  new ErrorDialog(fg,SQL.fromSQL (ex.toString()) ); ex.printStackTrace (); return null ;   protected PrintCanvas createCanvas (Vector data)  return new PrintYLNoticeCanvas(data);  class YLNoticeStudent  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 // add,zip,pname,dept,grade,sname,studentid,year,period,deptid public String[] info; public Vector learning; public YLNoticeStudent ()  learning = new Vector(); tgcredit = 0 ; tscore = 0 ; course = 0 ; knownCredit = 0 ; bscore = - 1 ;  private String doubleString ( double x)  String tmp = Double.toString(x); if (tmp.equals( \".0\" ))  return \"0\" ;  if (tmp.endsWith( \".0\" ))  return tmp.substring( 0 ,tmp.length()- 2 );  return tmp;  public void instLearning (String type, String name , double credit, double score, String courseid, String year, String division)  course ++; String[] s = new String[ 7 ]; s[ 0 ] = type; s[ 1 ] = name; s[ 2 ] = doubleString(credit); s[ 4 ] = courseid; s[ 5 ] = year; s[ 6 ] = division; tcredit += credit; if (score == - 1 ) s[ 3 ] = \"註A\" ;  else if (score == - 2 )  s[ 3 ] = \"註B\" ;  else if (score == - 3 )  s[ 3 ] = \"註C\" ;  else if (score == - 4 )  s[ 3 ] = \"註D\" ;  else if (score == - 5 )  s[ 3 ] = \"註E\" ;  else  s[ 3 ] = doubleString (score); if (division.equals( \"B\" ) &amp;&amp; (info[ 10 ].equals( \"G\" )||info[ 10 ].equals( \"P\" )))  // 下修  else  knownCredit += credit; tscore += score*credit; if (score = 70 || (score= 60 &amp;&amp; !(info[ 10 ].equals( \"G\" ) || info[ 10 ].equals( \"P\" ))))  tgcredit += credit; //得到學分    learning.addElement (s);  public double getAvgScore ()  return knownCredit == 0 ? 0 : (( int )(tscore/knownCredit* 100 + 0.5 ))/ 100.0 ;  public double tcredit; //修習總學分數 public double tgcredit; //實得學分數 public double tscore; //總學分數 public int course; //學習課堂數 public double knownCredit; public double bscore; //操行  class PrintYLNoticeCanvas extends PrintCanvas  public String getMedia ()  return \"A4\" ;  public String getOrientation ()  return \"portrait\" ;  protected int dataPerPage ( int pageNum)  return 1 ;  protected int pagesPerData (Object data)  return 1 ;  public PrintYLNoticeCanvas (Vector data)  super (data);  public void paint (Graphics g)  CharArea ca; String title= \"\" ; try  title = Environment.getTitle()+NCNUmisc.chineseDigit(Integer.parseInt(year))+ \"學年度第\" +NCNUmisc.chineseDigit2(Integer.parseInt(period))+ \"學期成績通知單\" ;  catch (Exception ex)  YLNoticeStudent stu = (YLNoticeStudent)data.elementAt(getDataIndex()); String tmp ; // 寄件地址 郵遞區號 收件者姓名 系所 年級 學生名 學號 學年 學期 // 成績框 g.drawRect(( int )( 0.3 *dotPerInch),( int )(( 1.2 )*dotPerInch),( int )( 3.6 *dotPerInch),( int )( 9.1 *dotPerInch)+ 1 ); g.drawLine(( int )( 0.57 *dotPerInch),( int )( 1.2 *dotPerInch),( int )( 0.57 *dotPerInch),( int )( 8.6 *dotPerInch)); g.drawLine(( int )( 3.3 *dotPerInch),( int )( 1.2 *dotPerInch),( int )( 3.3 *dotPerInch),( int )( 9.4 *dotPerInch)); g.drawLine(( int )( 3.6 *dotPerInch),( int )( 1.2 *dotPerInch),( int )( 3.6 *dotPerInch),( int )( 8.6 *dotPerInch)); g.drawLine(( int )( 0.3 *dotPerInch),( int )( 1.4 *dotPerInch),( int )( 3.9 *dotPerInch),( int )( 1.4 *dotPerInch)); g.drawLine(( int )( 0.3 *dotPerInch),( int )( 8.6 *dotPerInch),( int )( 3.9 *dotPerInch),( int )( 8.6 *dotPerInch)); g.drawLine(( int )( 0.3 *dotPerInch),( int )( 8.8 *dotPerInch),( int )( 3.9 *dotPerInch),( int )( 8.8 *dotPerInch)); g.drawLine(( int )( 0.3 *dotPerInch),( int )( 9 *dotPerInch),( int )( 3.9 *dotPerInch),( int )( 9 *dotPerInch)); g.drawLine(( int )( 0.3 *dotPerInch),( int )( 9.2 *dotPerInch),( int )( 3.9 *dotPerInch),( int )( 9.2 *dotPerInch)); g.drawLine(( int )( 0.3 *dotPerInch),( int )( 9.4 *dotPerInch),( int )( 3.9 *dotPerInch),( int )( 9.4 *dotPerInch)); g.setFont( new Font( \"Serif\" ,Font.PLAIN,( int )( 0.14 *dotPerInch))); g.drawString(title,( int )( 0.3 *dotPerInch),( int )(( 0.6 )*dotPerInch)); g.setFont( new Font( \"Serif\" ,Font.PLAIN,( int )( 0.12 *dotPerInch))); g.drawString( \"系所別:\" +stu.info[ 3 ],( int )( 0.3 *dotPerInch),( int )( 0.8 *dotPerInch)); g.drawString( \"學號:\" +stu.info[ 6 ],( int )( 0.3 *dotPerInch),( int )( 1.0 *dotPerInch)); g.drawString( \"年級:\" +stu.info[ 4 ],( int )( 2.3 *dotPerInch),( int )( 0.8 *dotPerInch)); g.drawString( \"姓名:\" +stu.info[ 5 ],( int )( 2.3 *dotPerInch),( int )( 1.0 *dotPerInch)); g.drawString( \"修別\" ,( int )( 0.32 *dotPerInch),( int )( 1.35 *dotPerInch)); g.drawString( \"課程名稱\" ,( int )( 0.9 *dotPerInch),( int )( 1.35 *dotPerInch)); g.drawString( \"學分\" ,( int )( 3.33 *dotPerInch),( int )( 1.35 *dotPerInch)); g.drawString( \"成績\" ,( int )( 3.63 *dotPerInch),( int )( 1.35 *dotPerInch)); CharArea.fillH(g, \"學業成績總平均\" ,( int )( 0.3 *dotPerInch),( int )( 8.55 *dotPerInch),( int )( 3.1 *dotPerInch),( int )( 0.2 *dotPerInch)); CharArea.fillH(g, \"修習總學分數\" ,( int )( 0.3 *dotPerInch),( int )( 8.75 *dotPerInch),( int )( 3.1 *dotPerInch),( int )( 0.2 *dotPerInch)); CharArea.fillH(g, \"實得學分數\" ,( int )( 0.3 *dotPerInch),( int )( 8.95 *dotPerInch),( int )( 3.1 *dotPerInch),( int )( 0.2 *dotPerInch)); CharArea.fillH(g, \"操行成績\" ,( int )( 0.3 *dotPerInch),( int )( 9.15 *dotPerInch),( int )( 3.1 *dotPerInch),( int )( 0.2 *dotPerInch)); ca = new CharArea(g,( int )( 0.4 *dotPerInch),( int )( 9.4 *dotPerInch),( int )( 3.4 *dotPerInch),( int )( 1.2 *dotPerInch)); ca.drawH( \"註A 全班成績未到\\n註B 個人成績未到(請向老師查明)\\n註C 請假\\n註D 缺考\\n註E 停修\" ); Calendar d = Calendar.getInstance (); g.drawString( \"填表日期: \" + NCNUmisc.chineseDigit(d.get (Calendar.YEAR ) - 1911 )+ \" 年 \" + NCNUmisc.chineseDigit(d.get (Calendar.MONTH )+ 1 ) + \" 月 \" + NCNUmisc.chineseDigit(d.get (Calendar.DATE )) + \" 日\" ,( int )( 0.3 *dotPerInch),( int )( 10.5 *dotPerInch)); for ( int i = 0 ; i  stu.learning.size (); i++) String[] data = (String[])stu.learning.elementAt(i); g.drawString (data[ 0 ], ( int )(( 0.32 )*dotPerInch), ( int )(( 1.5 + i* 0.14 )*dotPerInch)); g.drawString (data[ 1 ], ( int )(( 0.6 )*dotPerInch), ( int )(( 1.5 + i* 0.14 )*dotPerInch)); g.drawString (data[ 2 ], ( int )(( 3.4 )*dotPerInch), ( int )(( 1.5 + i* 0.14 )*dotPerInch)); g.drawString (data[ 3 ], ( int )(( 3.65 )*dotPerInch), ( int )(( 1.5 + i* 0.14 )*dotPerInch));  g.drawString ( \"\" + NCNUmisc.doubleString(stu.getAvgScore()), ( int )(( 3.5 )*dotPerInch), ( int )(( 8.75 )*dotPerInch)); g.drawString ( \"\" + NCNUmisc.doubleString(stu.tcredit), ( int )(( 3.5 )*dotPerInch), ( int )(( 8.95 )*dotPerInch)); g.drawString ( \"\" + NCNUmisc.doubleString(stu.tgcredit), ( int )(( 3.5 )*dotPerInch), ( int )(( 9.15 )*dotPerInch)); g.drawString (stu.bscore  0 ? \"未到\" : \"\" +NCNUmisc.doubleString(stu.bscore), ( int )(( 3.5 )*dotPerInch), ( int )(( 9.35 )*dotPerInch)); g.drawRect(( int )( 4.4 *dotPerInch),( int )( 2.4 *dotPerInch),( int )( 0.4 *dotPerInch),( int )( 0.7 *dotPerInch)); ca = new CharArea(g,( int )( 4.3 *dotPerInch),( int )( 6.0 *dotPerInch),( int )( 3.5 *dotPerInch),( int )( 4 .*dotPerInch)); ca.drawH(explain); if (Environment.getTitle().equals( \"國立暨南國際大學\" ))  ca.drawH(explain2);  g.drawRect(( int )( 4.3 *dotPerInch),( int )(( 0.5 )*dotPerInch),( int )( 3.5 *dotPerInch),( int )( 1.8 *dotPerInch)); ca = new CharArea(g,( int )( 4.4 *dotPerInch),( int )( 0.8 *dotPerInch),( int )( 3.4 *dotPerInch),( int )( 1.8 *dotPerInch)); g.setFont( new Font( \"Serif\" ,Font.PLAIN,( int )( 0.14 *dotPerInch))); CharArea.fillV(g, \"印刷品\" ,( int )( 4.4 *dotPerInch),( int )( 2.4 *dotPerInch),( int )( 0.4 *dotPerInch),( int )( 0.7 *dotPerInch)); g.drawString(Environment.getTitle()+ \"教務處 寄\" ,( int )( 5.0 *dotPerInch),( int )( 2.55 *dotPerInch)); g.drawString( \"校址:\" +Environment.addr,( int )( 5.0 *dotPerInch),( int )( 2.8 *dotPerInch)); ca.drawH(stu.info[ 1 ]+ \" \" +stu.info[ 0 ]+ \"\\n\\n\" ); g.setFont( new Font( \"Serif\" ,Font.BOLD,( int )( 0.20 *dotPerInch))); ca.drawH( \" \" +stu.info[ 2 ]+ \" 君啟\" );    執行後的結果"},"java/easy-print.html#Print-java":{"title":"Print.java","path":"/java/easy-print.html#Print-java","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 package ncnu.print; /* Program Name: Print.java Subject: &#x5370;&#x8868;&#x8207;&#x700F;&#x89BD;&#x62BD;&#x8C61;&#x985E;&#x5225; Editor: &#x4FDE;&#x65ED;&#x6607; Shiuh-Sheng Yu National ChiNan University Department of Information Management Edit Date: 01/05/1998 Modify Date: 05/06/2001 Modify Date: 2004/10/01,&#x52A0;&#x5165;&#x80CC;&#x666F;&#x5217;&#x5370; ToolKit: JDK1.1 */ import ncnu.gui.*; import java.awt.*; import java.awt.event.*; import java.sql.*; import java.util.*; public abstract class Print implements ActionListener { ScrollPane sp; protected Connection con; protected SimpleTable fg; protected TableGUI gui; protected boolean completed = true ; protected String printer; protected int copy = 1 ; protected boolean background; public Print (Connection c, String printer, int copy) { this .con = c; this .printer = printer; this .copy = copy; this .background = true ; } public Print (Connection c, Vector data) { this .con = c; if (data != null ) { PrintCanvas canvas = createCanvas(data); canvas.setResolution( 144 ); new Preview(canvas, &#x9810;&#x89BD;&#x5831;&#x8868; ); } else { fg = new SimpleTable(  , this , 16 ); addQueryCondition(); fg.addButton( &#x78BA;&#x5B9A; ); fg.addButton( &#x53D6;&#x6D88; ); if (completed) { fg.addButton( &#x9810;&#x89BD; ); fg.addButton( &#x653E;&#x5927;&#x9810;&#x89BD; ); } fg.read(); } } public Print (Connection c) { this (c, null ); } protected abstract Vector getData () ; protected abstract PrintCanvas createCanvas (Vector data) ; protected abstract void addQueryCondition () ; protected void setPrinter (String pname) { printer = pname; } public boolean print () { Vector data = getData(); if (data== null || data.size()== 0 ) { return false ; } PrintCanvas canvas = createCanvas(data); canvas.setResolution( 72 ); PrintJob pjob = getPrintJob(canvas); if (pjob != null ) { do { Graphics pg = pjob.getGraphics(); canvas.update(pg); pg.dispose(); // flush page } while (canvas.nextPage()); pjob.end(); return true ; } else { System.out.println( Unable to create print job  +printer); return false ; } } protected PrintJob getPrintJob (PrintCanvas canvas) { if (System.getProperty( java.version ).compareTo( 1.3 )  0 ) { return gui.getToolkit().getPrintJob(fg, &#x5217;&#x5370;&#x5831;&#x8868; , null ); } else { PageAttributes pa = new PageAttributes(); String media = canvas.getMedia(); if (media.equalsIgnoreCase( letter )) { pa.setMedia(PageAttributes.MediaType.LETTER); } else if (media.equalsIgnoreCase( B4 )) { pa.setMedia(PageAttributes.MediaType.JIS_B4); } else if (media.equalsIgnoreCase( A4 )) { pa.setMedia(PageAttributes.MediaType.A4); } else if (media.equalsIgnoreCase( A3 )) { pa.setMedia(PageAttributes.MediaType.A3); } String ori = canvas.getOrientation(); if (ori.equalsIgnoreCase( portraint )) { pa.setOrientationRequested(PageAttributes.OrientationRequestedType.PORTRAIT); } else if (ori.equalsIgnoreCase( landscape )) { pa.setOrientationRequested(PageAttributes.OrientationRequestedType.LANDSCAPE); } JobAttributes jAttr = null ; if (printer!= null ) { jAttr = new JobAttributes(); jAttr.setDialog(JobAttributes.DialogType.NONE); jAttr.setPrinter(printer); jAttr.setCopies(copy); } if (background) { return Toolkit.getDefaultToolkit().getPrintJob( null , &#x5217;&#x5370;&#x5831;&#x8868; , jAttr, pa); } else { return gui.getToolkit().getPrintJob(fg, &#x5217;&#x5370;&#x5831;&#x8868; , jAttr, pa); } } } public void actionPerformed (ActionEvent e) { PrintCanvas canvas; String returnString, query; String cmd = e.getActionCommand(); if (cmd.equals( &#x53D6;&#x6D88; )) { fg.dispose(); return ; } Vector data = getData(); if (data== null || data.size()== 0 ) { fg.dispose(); return ; } if (!completed) { addQueryCondition(); if (completed) { fg.addButton( &#x9810;&#x89BD; ); fg.addButton( &#x653E;&#x5927;&#x9810;&#x89BD; ); } fg.read(); return ; } if (cmd.equals( &#x78BA;&#x5B9A; )) { canvas = createCanvas(data); canvas.setResolution( 72 ); PrintJob pjob = getPrintJob(canvas); if (pjob != null ) { do { Graphics pg = pjob.getGraphics(); canvas.update(pg); pg.dispose(); // flush page } while (canvas.nextPage()); pjob.end(); } else { System.out.println( User canceled job ); } fg.dispose(); } else { canvas = createCanvas(data); if (cmd.equals( &#x9810;&#x89BD; )) { canvas.setResolution( 72 ); } else if (cmd.equals( &#x653E;&#x5927;&#x9810;&#x89BD; )) { canvas.setResolution( 144 ); } new Preview(canvas, &#x9810;&#x89BD;&#x5831;&#x8868; ); } } class Preview extends WindowAdapter implements ActionListener { Frame f; Button previous, next, printOne, printAll, leave; PrintJob pjob = null ; String title; PrintCanvas pc; ScrollPane sp = new ScrollPane() { public Dimension getPreferredSize () { Dimension x = Toolkit.getDefaultToolkit().getScreenSize(); return new Dimension(x.width- 20 ,x.height- 50 ); } }; public void actionPerformed (ActionEvent e) { String cmd = e.getActionCommand(); if (cmd.equals( &#x4E0A;&#x4E00;&#x9801; )) { doPrevious(); } else if (cmd.equals( &#x4E0B;&#x4E00;&#x9801; )) { doNext(); } else if (cmd.equals( &#x5217;&#x5370;&#x672C;&#x9801; )) { doPrintOne(); } else if (cmd.equals( &#x5217;&#x5370;&#x5168;&#x90E8; )) { doPrintAll(); } else { System.out.println( Unknown command  +cmd); } } Preview(PrintCanvas pc, String title) { this .pc = pc; this .title = title; f = new Frame(title); f.setLayout( new GridBagLayout()); f.addWindowListener( new CloseWindow(f)); sp.add(pc); AddConstraint.addConstraint(f,sp, 0 , 0 , 1 , 1 , GridBagConstraints.BOTH, GridBagConstraints.CENTER, 1 , 1 , 0 , 0 , 0 , 0 ); Panel buttons = new Panel(); buttons.setLayout( new GridLayout( 1 , 5 )); AddConstraint.addConstraint(f,buttons, 0 , 1 , 1 , 1 , GridBagConstraints.HORIZONTAL, GridBagConstraints.CENTER, 1 , 0 , 0 , 0 , 0 , 0 ); ((Button)buttons.add(previous= new Button( &#x4E0A;&#x4E00;&#x9801; ))).addActionListener( this ); ((Button))buttons.add(next= new Button( &#x4E0B;&#x4E00;&#x9801; ))).addActionListener( this ); ((Button))buttons.add(printOne= new Button( &#x5217;&#x5370;&#x672C;&#x9801; ))).addActionListener( this ); ((Button))buttons.add(printAll= new Button( &#x5217;&#x5370;&#x5168;&#x90E8; ))).addActionListener( this ); ((Button))buttons.add(leave= new Button( &#x96E2;&#x958B; ))).addActionListener( new CloseWindow(f)); previous.setEnabled( false ); if (pc.lastPage()) { next.setEnabled( false ); } f.pack(); f.show(); } void doPrevious () { pc.previousPage(); if (pc.firstPage()) { previous.setEnabled( false ); } if (pc.lastPage()) { next.setEnabled( false ); } else { next.setEnabled( true ); } pc.update(pc.getGraphics()); } void doNext () { pc.nextPage(); if (pc.lastPage()) { next.setEnabled( false ); } if (pc.firstPage()) { previous.setEnabled( false ); } else { previous.setEnabled( true ); } pc.update(pc.getGraphics()); } void doPrintOne () { if (pjob== null ) { pjob = Print. this .getPrintJob(pc); } if (pjob != null ) { Graphics pg = pjob.getGraphics(); pc.buffer = null ; int rel = pc.getResolution(); pc.setResolution( 72 ); pc.update(pg); pg.dispose(); // flush page pjob.end(); pjob= null ; pc.setResolution(rel); } } void doPrintAll () { if (pjob== null ) { pjob = Print. this .getPrintJob(pc); } if (pjob != null ) { pc.currentPage = - 1 ; while (pc.nextPage()) { Graphics pg = pjob.getGraphics(); pc.buffer = null ; pc.setResolution( 72 ); pc.update(pg); pg.dispose(); } pjob.end(); pjob= null ; } } } }"},"java/easy-print.html#PrintCanvas-java":{"title":"PrintCanvas.java","path":"/java/easy-print.html#PrintCanvas-java","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 package ncnu.print; /* Program Name: PrintCanvas.java Subject: &#x5370;&#x8868;&#x756B;&#x5E03;&#x62BD;&#x8C61;&#x985E;&#x5225; Editor: &#x4FDE;&#x65ED;&#x6607; Shiuh-Sheng Yu National Chi-Nan University Institute of Management Information Edit Date: 01/05/1998 Last Update Date: 05/06/2001 ToolKit: JDK1.1.4 */ import java.awt.*; import java.util.*; public abstract class PrintCanvas extends Canvas { Image buffer; private int total; protected int dotPerInch= 72 ; protected Vector data; protected  int currentPage; protected Pair pagePositions[]; // cached for previous page class Pair { int data, subpage; Pair( int data, int subpage) { this .data = data; this .subpage = subpage; } } public void setResolution ( int rel) { dotPerInch=rel; } public int getResolution () { return dotPerInch; } public int getDataIndex () { return pagePositions[currentPage].data; } public int getSubPageIndex () { return pagePositions[currentPage].subpage; } public int totalPages () { int total = 0 ; for ( int i= 0 ; i  data.size();) { int sub = pagesPerData(data.elementAt(i)); if (sub 1 ) { // multi page per data total += sub; i++; } else { i += dataPerPage(total); total++; } } return total; } protected abstract int dataPerPage ( int pageNum) ; /** * How many pages are needed to print out data * @param data Data record to be printed * @return Number of pages for the data, 0 if more data are need to fill this page */ protected abstract int pagesPerData (Object data) ; // return 0 if more than a page per record /** * print a page for a data record * @param pg Print graphics * @param data Data record to be printed * @param */ public PrintCanvas (Vector data) { this .data = data; currentPage= 0 ; total = totalPages(); pagePositions = new Pair[total]; int currentData = 0 ; for ( int i= 0 ; i  total;) { int sub = pagesPerData(data.elementAt(currentData)); if (sub 1 ) { // multi page per data for ( int j= 0 ; j  sub; j++) { pagePositions[i+j] = new Pair(currentData,j); } i+=sub; currentData++; } else { // multi data per page pagePositions[i] = new Pair(currentData, 0 ); currentData += dataPerPage(i); i++; } } } public Dimension getPreferredSize () { if (getMedia().equals( A4 )) { if (getOrientation().equals( portrait )) { return new Dimension(( int )( 8.27 *dotPerInch),( int )( 11.69 *dotPerInch)); // A4 &#x76F4;&#x5370; } else { return new Dimension(( int )( 11.69 *dotPerInch),( int )( 8.27 *dotPerInch)); // A4 &#x6A6B;&#x5370; } } else if (getMedia().equals( B4 )) { if (getOrientation().equals( portrait )) { return new Dimension(( int )( 9.84 *dotPerInch),( int )( 13.9 *dotPerInch)); // B4 &#x76F4;&#x5370; } else { return new Dimension(( int )( 13.9 *dotPerInch),( int )( 9.84 *dotPerInch)); // B4 &#x6A6B;&#x5370; } } else if (getMedia().equals( A3 )) { if (getOrientation().equals( portrait )) { return new Dimension(( int )( 11.69 *dotPerInch),( int )( 16.54 *dotPerInch)); // A3 &#x76F4;&#x5370; } else { return new Dimension(( int )( 16.54 *dotPerInch),( int )( 11.69 *dotPerInch)); // A3 &#x6A6B;&#x5370; } } else if (getMedia().equals( LETTER )) { if (getOrientation().equals( portrait )) { return new Dimension(( int )( 8.5 *dotPerInch), ( int )( 11 *dotPerInch)); // letter &#x76F4;&#x5370; } else { return new Dimension(( int )( 11 *dotPerInch), ( int )( 8.5 *dotPerInch)); // letter &#x6A6B;&#x5370; } } return new Dimension(( int )( 8 *dotPerInch),( int )( 11.2 *dotPerInch)); // A4 &#x76F4;&#x5370; size } public String getMedia () { return A4 ; } public String getOrientation () { return portrait ; } public boolean firstPage () { return (currentPage= 0 ); } public boolean lastPage () { return ((currentPage+ 1 )=total); } public boolean nextPage () { if (currentPage+ 1 =total) { return false ; } buffer= null ; currentPage++; return true ; } public boolean previousPage () { if (currentPage == 0 ) { return false ; } buffer= null ; currentPage--; return true ; } public void update (Graphics pg) { Graphics g = pg; if (buffer!= null ) { pg.drawImage(buffer, 0 , 0 , this ); return ; } else if (!(pg instanceof PrintGraphics)) { Dimension d = getPreferredSize(); buffer = createImage(d.width, d.height); if (buffer!= null ) { g = buffer.getGraphics(); } } paint(g); if (buffer!= null ) { pg.drawImage(buffer, 0 , 0 , this ); } } }"},"java/easy-print.html#圖形與字型公用程式":{"title":"&#x5716;&#x5F62;&#x8207;&#x5B57;&#x578B;&#x516C;&#x7528;&#x7A0B;&#x5F0F;","path":"/java/easy-print.html#圖形與字型公用程式","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 package ncnu.print; /* Program Name: CharArea.java Subject: &#x5370;&#x8868;&#x516C;&#x7528;&#x7A0B;&#x5F0F; Editor: &#x4FDE;&#x65ED;&#x6607; Shiuh-Sheng Yu National Chi-Nan University Institute of Management Information Edit Date: 01/05/1998 Last Update Date: 05/06/2001 ToolKit: JDK1.1 */ import java.awt.*; /** * The class defines a rectangle area so that users can draw String vertically or * horizontally, and don&apos;t have to worry wrapping problem. */ public class CharArea { private Graphics g; private FontMetrics f; private int x, y, width, height, row, col; private int curx, cury; private boolean fromRight; public int fontHeight; /** * @param g Graphics to draw String * @param x x coordinate of the area in points * @param y y coordinate of the area in points * @param width width of the area in points * @param height height of the area in points * @param fromRight draw Lines from right or not */ public CharArea (Graphics g, int x, int y, int width, int height, boolean fromRight) { this .g = g; this .x = x; this .y = y; this .width = width; this .height = height; this .fromRight = fromRight; col = row = 1 ; f = g.getFontMetrics(); // expect font size if (System.getProperty( java.version ).compareTo( 1.4 ) = 0 ) { fontHeight = ( int )(f.getAscent()* 1 ); } else { fontHeight = ( int )(f.getAscent()* 1.2857 ); // 9/7 for strange differece between 1.3 and 1.4 fontMetrics } if (!fromRight) { curx = x; } else { curx = x + width - fontHeight; } cury = y + fontHeight; } /** * @param g Graphics to draw String * @param x x coordinate of the area in points * @param y y coordinate of the area in points * @param width width of the area in points * @param height height of the area in points */ public CharArea (Graphics g, int x, int y, int width, int height) { this (g, x, y, width, height, false ); } /* col and row starts from 1 */ public int getRow () { return row; } public void setRow ( int row) { this .row = row; cury = y + row*fontHeight; } public int getCol () { return col; } public void setCol ( int col) { this .col = col; curx = x + (col- 1 )*f.getHeight(); // assume &#x65B9;&#x584A;&#x5B57; } /** * Draw a string vertically, and wrap to right if necessary. Reset row to 1 after drawing. */ public void drawLineV (String s) { if (s== null || s.length()== 0 ) { return ; } drawV(s); col = col + 1 ; row = 1 ; curx += f.getHeight(); // assume &#x65B9;&#x584A;&#x5B57; cury = y + fontHeight; } /** * Draw a string vertically, wrap to right if necessary. */ public void drawV (String s) { int i, strlen; char [] chars; if (s== null || s.length()== 0 ) { return ; } strlen = s.length(); chars = new char [strlen]; s.getChars( 0 ,strlen,chars, 0 ); for (i= 0 ; i  strlen; i++) { if ((cury-y)  height) { cury = y + fontHeight; col++; row = 1 ; if (fromRight) { curx -= f.getHeight(); } else { curx += f.getHeight(); } } g.drawChars(chars,i, 1 ,curx,cury); cury +=fontHeight; } } /** * Draw a string horizontally, wrap down if necessary. Rest col to 1 after drawing. */ public void drawLineH (String s) { if (s== null || s.length()== 0 ) { return ; } drawH(s); col = 1 ; row = row + 1 ; curx = x; cury += fontHeight; } /** * Draw a String horizontally, wrap down if necessary. */ public void drawH (String s) { int i, strlen; char [] chars; if (s== null || s.length()== 0 ) { return ; } strlen = s.length(); chars = new char [strlen]; s.getChars( 0 ,strlen,chars, 0 ); f = g.getFontMetrics(); for (i= 0 ; i  strlen; i++) { if (chars[i]== &apos;\\n&apos; ) { curx = x; col = 1 ; row = row + 1 ; cury += fontHeight; continue ; } if (((curx-x)+f.charWidth(chars[i]))  width) { curx = x; col = 1 ; row = row + 1 ; cury += fontHeight; } g.drawChars(chars,i, 1 ,curx,cury); curx += f.charWidth(chars[i]); } } /** * Fill a string vertically in the specified area, with proper space between characters. */ public static void fillV (Graphics g, String s, int x, int y, int width, int height) { int vlen, hlen, i, strlen; FontMetrics f; double scale, currentPos; char [] chars; if (s== null || s.length()== 0 ) { return ; } f = g.getFontMetrics(); strlen = s.length(); vlen = f.getHeight(); chars = new char [strlen]; s.getChars( 0 ,strlen,chars, 0 ); if (strlen == 1 ) { g.drawString(s,( int )(x+(width-f.charWidth(chars[ 0 ])+ 1 )/ 2 ),( int )(y+(height-vlen)/ 2 +f.getHeight())); } else { scale = ( double )(height-vlen*strlen)/(strlen); for (i= 0 , currentPos=y+f.getHeight()+scale/ 2 ; i  strlen; i++) { g.drawChars(chars,i, 1 ,( int )(x+(width-f.charWidth(chars[i])+ 1 )/ 2 ),( int )currentPos); currentPos += scale + vlen; } } } public static void drawCenter (Graphics g, String s, int x, int y) { int len, i, strlen; FontMetrics f; if (s== null || s.length()== 0 ) { return ; } f = g.getFontMetrics(); len = f.stringWidth(s); g.drawString(s,x-(len+ 1 )/ 2 ,y); } /** * Fill a string horizontally in the specified area, with proper space between characters. */ public static void fillH (Graphics g, String s, int x, int y, int width, int height) { int len, i, strlen; FontMetrics f; if (s== null || s.length()== 0 ) { return ; } f = g.getFontMetrics(); len = f.stringWidth(s); strlen = s.length(); if (strlen== 1 ) { len=f.stringWidth(s); g.drawString(s,( int )(x+(width-len+ 1 )/ 2 ),y+(height+f.getHeight())/ 2 ); } else { char [] chars = new char [strlen]; s.getChars( 0 ,strlen,chars, 0 ); for (i= 0 , len= 0 ; i  strlen; i++) { len += f.charWidth(chars[i]); } double scale = (( double )(width-len))/(strlen); double currentPoint; y += (height+f.getHeight())/ 2 ; for (i= 0 , currentPoint=x+(scale+ 1 )/ 2 ; i  strlen; i++) { g.drawChars(chars,i, 1 ,( int )currentPoint,y); currentPoint += scale + f.charWidth(chars[i]); } } } }"},"java/easy-print.html#印表範例":{"title":"&#x5370;&#x8868;&#x7BC4;&#x4F8B;","path":"/java/easy-print.html#印表範例","body":"&#x4F7F;&#x7528;&#x4EE5;&#x4E0A;&#x985E;&#x5225;&#x7684;&#x5370;&#x8868;&#x7A0B;&#x5F0F; PrintYLNoticeA4.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 /* Program Name: PrintYLNoticeA4.java * Subject: &#x5217;&#x5370;&#x5B78;&#x671F;&#x6210;&#x7E3E;&#x55AE;&#x901A;&#x77E5;&#x55AE;(A4&#x7D19;&#x7248;&#x672C;) * Author: Shiuh-Sheng Yu * Edit Date: 01/13/2001 * Last Update Date: 02/06/2002 * Last Update Date: 06/12/2003 add &#x505C;&#x4FEE; * Modify Date: 2004/07/07 &#x52A0;&#x5165;&#x7DB2;&#x8DEF;&#x8F38;&#x5165;&#x6210;&#x7E3E;&#x4F46;&#x5C1A;&#x672A;&#x81F4;&#x9001;&#x5224;&#x5225; * ToolKit: JDK1.1 */ import ncnu.print.*; import ncnu.sql.*; import ncnu.rule.*; import ncnu.gui.*; import java.util.*; import java.sql.*; import java.awt.*; public class PrintYLNoticeA4 extends Print { static String mynote= &#x8A3B;A &#x5168;&#x73ED;&#x6210;&#x7E3E;&#x672A;&#x5230;\\n&#x8A3B;B &#x500B;&#x4EBA;&#x6210;&#x7E3E;&#x672A;&#x5230;(&#x8ACB;&#x5411;&#x8001;&#x5E2B;&#x67E5;&#x660E;)\\n&#x8A3B;C &#x8ACB;&#x5047;\\n&#x8A3B;D &#x7F3A;&#x8003;\\n&#x8A3B;E &#x505C;&#x4FEE; ; static String explain= &#x8AAA;&#x660E;&#xFF1A;&#x5B78;&#x751F;&#x5B78;&#x671F;&#x5B78;&#x696D;&#x6210;&#x7E3E;&#x4EE5;&#x5404;&#x79D1;&#x4EFB;&#x8AB2;&#x6559;&#x5E2B;&#x9001;&#x4EA4;&#x672C;&#x8655;&#x4E4B;&#x539F;&#x59CB;&#x6210;&#x7E3E;&#x518A;&#x70BA;&#x6191;&#xFF1B;&#x672C;&#x901A;&#x77E5;&#x55AE;&#x50C5;&#x70BA;&#x63D0;&#x4F9B;&#x53C3;&#x8003;&#xFF0C;&#x82E5;&#x9700;&#x6B63;&#x5F0F;&#x8B49;&#x660E;&#x8ACB;&#x81F3;&#x672C;&#x8655;&#x8A3B;&#x518A;&#x7D44;&#x7533;&#x8ACB;&#x6210;&#x7E3E;&#x55AE;&#x3002;\\n ; static String explain2= \\n&#x203B;&#x5B78;&#x751F;&#x5B78;&#x671F;&#x5B78;&#x696D;&#x6210;&#x7E3E;&#x6709;&#x4E0B;&#x5217;&#x60C5;&#x5F62;&#x8005;&#xFF0C;&#x61C9;&#x4E88;&#x9000;&#x5B78;&#xFF1A;\\n&#x4E00;&#x3001;&#x4E00;&#x822C;&#x751F;&#xFF1A;&#x5B78;&#x671F;&#x5B78;&#x696D;&#x6210;&#x7E3E;&#x7D2F;&#x8A08;&#x5169;&#x5B78;&#x671F;&#x4E0D;&#x53CA;&#x683C;&#x79D1;&#x76EE;&#x4E4B;&#x5B78;&#x5206;&#x6578;&#xFF0C;&#x5747;&#x9054; &#x5404;&#x8A72;&#x5B78;&#x671F;&#x4FEE;&#x7FD2;&#x5B78;&#x5206;&#x7E3D;&#x6578;&#x4E8C;&#x5206;&#x4E4B;&#x4E00;&#x8005;&#x3002;\\n&#x4E8C;&#x3001;&#x50D1;&#x751F;&#x3001;&#x5916;&#x570B;&#x751F;&#xFF1A;&#x5B78;&#x671F;&#x5B78;&#x696D;&#x6210;&#x7E3E;&#x7D2F;&#x8A08;&#x4E09;&#x5B78;&#x671F;&#x4E0D;&#x53CA;&#x683C;&#x79D1;&#x76EE;&#x4E4B;&#x5B78;&#x5206;&#x6578; &#xFF0C;&#x5747;&#x9054;&#x5404;&#x8A72;&#x5B78;&#x671F;&#x4FEE;&#x7FD2;&#x5B78;&#x5206;&#x7E3D;&#x6578;&#x4E8C;&#x5206;&#x4E4B;&#x4E00;&#x8005;&#x3002;\\n&#x4E09;&#x3001;&#x8996;&#x3001;&#x807D;&#x3001;&#x8A9E;&#x969C;&#x7919;&#x751F;&#xFF1A;&#x5B78;&#x671F;&#x5B78;&#x696D;&#x6210;&#x7E3E;&#x7D2F;&#x8A08;&#x4E09;&#x5B78;&#x671F;&#x4E0D;&#x53CA;&#x683C;&#x79D1;&#x76EE;&#x4E4B;&#x5B78; &#x5206;&#x6578;&#xFF0C;&#x5747;&#x9054;&#x5404;&#x8A72;&#x5B78;&#x671F;&#x4FEE;&#x7FD2;&#x5B78;&#x5206;&#x7E3D;&#x6578;&#x4E09;&#x5206;&#x4E4B;&#x4E8C;&#x8005;&#x3002;\\n(&#x8A73;&#x7D30;&#x898F;&#x5B9A;&#x898B;&#x672C;&#x6821;&#x5B78;&#x5247;&#x7B2C;&#x4E09;&#x5341;&#x4E8C;&#x689D;) ; String year; String period; public PrintYLNoticeA4 (Connection con) { super (con); } public void addQueryCondition () { fg.setTitle( &#x5217;&#x5370;&#x5B78;&#x671F;&#x6210;&#x7E3E;&#x901A;&#x77E5;&#x55AE; ); int [] col = { 12 , 10 }; gui = fg.newTable(col); String acaYear = NCNUmisc.getAcaYear(); String year = acaYear.substring( 0 ,acaYear.length()- 1 ); String period = acaYear.substring(acaYear.length()- 1 , acaYear.length()); gui.addLabel( &#x5B78;&#x5E74; ); gui.addTextField( year ,year, 3 , 3 ,Types.CHAR); gui.addLabel( &#x5B78;&#x671F; ); gui.addTextField( period ,period, 1 , 1 ,Types.CHAR); gui.addLabel( &#x7CFB;&#x6240; ); gui.addTextField( deptid ,  , 3 , 3 ,Types.CHAR); gui.addLabel( &#x73ED;(&#x90E8;)&#x5225; ); gui.addTextField( class ,  , 1 , 1 , Types.CHAR); gui.addLabel( &#x5E74;&#x7D1A; ); gui.addTextField( grade ,  , 1 , 1 ,Types.CHAR); gui.addLabel( &#x958B;&#x59CB;&#x5B78;&#x865F; ); gui.addTextField( startid ,  , 9 , 9 ,Types.CHAR); gui.addLabel( &#x7D50;&#x675F;&#x5B78;&#x865F; ); gui.addTextField( endid ,  , 9 , 9 ,Types.CHAR); gui.addLabel( &#x5099;&#x8A3B; ); gui.addTextArea( note ,mynote, true ); } protected Vector getData () { String returnString, query; Statement stmt; ResultSet rs; year = gui.getTextField( year ).trim(); period = gui.getTextField( period ).trim(); String startid = gui.getTextField( startid ).trim(); String endid = gui.getTextField( endid ).trim(); String classid = gui.getTextField( class ).trim(); String deptid = gui.getTextField( deptid ).trim(); String grade = gui.getTextField( grade ).trim(); mynote = gui.getTextField( note ); try { stmt = con.createStatement(); StringBuffer sb = new StringBuffer( select S.studentid ,D.cname ,S.name, S.pname, S.grade,S.addr2, S.zipcode2,S.addr1, S.zipcode1, S.deptid,S.class from student S,department D where S.deptid=D.deptid and S.status=&apos;0&apos; ); if (!startid.equals(  )) { sb.append(  and S.studentid=&apos; +startid+ &apos; ); } if (!endid.equals(  )) { sb.append(  and S.studentid=&apos; +endid+ &apos; ); } if (!classid.equals(  )) { sb.append(  and S.class=&apos; +classid+ &apos; ); } if (!deptid.equals(  )) { sb.append(  and S.deptid=&apos; +deptid+ &apos; ); } if (!grade.equals(  )) { sb.append(  and S.grade=&apos; +grade+ &apos; ); } sb.append(  order by S.deptid,S.class,S.grade ); rs = stmt.executeQuery(sb.toString()); Vector ids = new Vector(); String[] stuinfo; String tmp; while (rs.next()) { stuinfo= new String[ 11 ]; stuinfo[ 7 ] = year; stuinfo[ 8 ] = period; stuinfo[ 6 ] = rs.getString( 1 ); // &#x5B78;&#x865F; stuinfo[ 3 ] = SQL.fromSQL(rs.getString( 2 )); // &#x7CFB;&#x6240; stuinfo[ 5 ] = SQL.fromSQL (rs.getString( 3 )); // student name tmp = SQL.fromSQL( rs.getString( 4 )); tmp = tmp == null ?  : tmp.trim (); //&#x82E5;&#x5BB6;&#x9577;&#x6B04;&#x70BA;&#x7A7A;&#xFF0C;&#x7528;&#x5B78;&#x751F;&#x540D; stuinfo[ 2 ] = tmp.equals (  ) ? stuinfo[ 5 ] : tmp; //&#x6536;&#x4EF6;&#x8005;&#x59D3;&#x540D; stuinfo[ 4 ] = rs.getString( 5 ); // &#x5E74;&#x7D1A; String currentAddr = SQL.fromSQL(rs.getString( 6 )).trim(); // &#x901A;&#x8A0A;&#x5730;&#x5740; String currentZip = SQL.fromSQL(rs.getString( 7 )).trim(); // &#x901A;&#x8A0A;&#x5730;&#x5740;zipcode String perAddr = SQL.fromSQL(rs.getString( 8 )).trim(); // &#x6236;&#x7C4D;&#x5730;&#x5740; String perZip = SQL.fromSQL(rs.getString( 9 )).trim(); // &#x6236;&#x7C4D;&#x5730;&#x5740;zipcode if (!currentAddr.equals(  )){ stuinfo[ 0 ] = currentAddr; stuinfo[ 1 ] = currentZip; } else { stuinfo[ 0 ] = perAddr; stuinfo[ 1 ] = perZip; } stuinfo[ 9 ] = SQL.fromSQL(rs.getString( 10 )).trim(); // deptid stuinfo[ 10 ] = SQL.fromSQL(rs.getString( 11 )); // division ids.addElement (stuinfo); } rs.close(); Vector data = new Vector(); for ( int i= 0 ; i  ids.size(); i++) { String[] info = (String[])ids.elementAt(i); YLNoticeStudent stu = new YLNoticeStudent(); stu.info = info; query= select E.courseid,E.year,E.score,C.cname,C.credit,C.division, opened.senddate,E.netscore +  from selected E, opened, course C  +  where E.courseid=opened.courseid and E.year=opened.year and E.class=opened.class and E.courseid=C.courseid +  and E.studentid=\\&apos; +info[ 6 ]+ \\&apos; +  and E.year=\\&apos; +year+period+ \\&apos; order by C.cname asc ; rs = stmt.executeQuery(SQL.toSQL(query)); while (rs.next()) { String _courseid = SQL.fromSQL(rs.getString( 1 )).trim(); String _year=SQL.fromSQL(rs.getString( 2 )).trim(); double score = rs.getDouble( 3 ); String cname = SQL.fromSQL(rs.getString( 4 )).trim(); double credit = rs.getDouble( 5 ); String division = SQL.fromSQL(rs.getString( 6 )); String type = &#x9078;&#x4FEE; ; String senddate = SQL.toString(rs.getBytes( 7 )); String netscore = SQL.toString(rs.getBytes( 8 )); // &#x7DB2;&#x8DEF;&#x8F38;&#x5165;&#x6210;&#x7E3E;,&#x5C1A;&#x672A;&#x81F4;&#x9001;&#x6559;&#x52D9;&#x8655; if (senddate.equals(  ) &amp;&amp; netscore.equals( Y )) { score = - 1 ; } stu.instLearning (type, cname, credit, score, _courseid, _year,division); } rs.close(); for ( int j = 0 ; j  stu.learning.size (); j++){ String[] learning = (String[])stu.learning.elementAt (j); int entrydate=Integer.parseInt(NCNUmisc.getEnterYear(info[ 6 ]).trim()); //&#x67E5;&#x8A62;&#x5FC5;&#x4FEE; query= select * from require where courseid=\\&apos; +learning[ 4 ]+ \\&apos; +  and deptid=\\&apos; +info[ 9 ]+ \\&apos; +  and start= +entrydate+  and stop= +entrydate; rs = stmt.executeQuery(query); if (rs.next()) learning[ 0 ] = &#x5FC5;&#x4FEE; ; rs.close(); //&#x5224;&#x65B7;&#x6B64;&#x79D1;&#x76EE;&#x662F;&#x5426;&#x70BA;&#x96D9;&#x4E3B;&#x4FEE;&#x7684;&#x5FC5;&#x4FEE; query= select deptid from whodouble where studentid=\\&apos; +info[ 6 ]+ \\&apos; ; rs = stmt.executeQuery(query); if (rs.next()){ String _deptid2= SQL.fromSQL(rs.getString( 1 )).trim(); rs.close(); query= select * from require where courseid=\\&apos; +learning[ 4 ]+ \\&apos; +  and deptid=\\&apos; +_deptid2+ \\&apos; +  and start= +entrydate+  and stop= +entrydate; rs = stmt.executeQuery(query); if (rs.next()) learning[ 0 ] = &#x5FC5;&#x4FEE; ; } rs.close(); //&#x5224;&#x65B7;&#x6B64;&#x79D1;&#x76EE;&#x662F;&#x5426;&#x70BA;&#x8F14;&#x7CFB;&#x7684;&#x5FC5;&#x4FEE; query= select deptid from whoassist where studentid=\\&apos; +info[ 6 ]+ \\&apos; ; rs = stmt.executeQuery(query); if (rs.next()){ String _deptid3= SQL.fromSQL(rs.getString( 1 )).trim(); rs.close(); query= select * from require where courseid=\\&apos; +learning[ 4 ]+ \\&apos; +  and deptid=\\&apos; +_deptid3+ \\&apos; +  and start= +entrydate+  and stop= +entrydate; rs = stmt.executeQuery(query); if (rs.next()) learning[ 0 ] = &#x5FC5;&#x4FEE; ; } rs.close(); if (learning[ 6 ].equals( B ) &amp;&amp; (stu.info[ 10 ].equals( G )||stu.info[ 10 ].equals( P ))) { learning[ 0 ] = &#x4E0B;&#x4FEE; ; } } query= select score from conduct where studentid=\\&apos; +info[ 6 ]+ \\&apos; +  and year=\\&apos; +year+period+ \\&apos; ; rs = stmt.executeQuery(query); while (rs.next()){ stu.bscore = rs.getDouble( 1 ); } rs.close(); data.addElement(stu); } stmt.close(); con.commit(); return data; } catch (Exception ex) { new ErrorDialog(fg,SQL.fromSQL (ex.toString()) ); ex.printStackTrace (); return null ; } } protected PrintCanvas createCanvas (Vector data) { return new PrintYLNoticeCanvas(data); } class YLNoticeStudent { // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 // add,zip,pname,dept,grade,sname,studentid,year,period,deptid public String[] info; public Vector learning; public YLNoticeStudent () { learning = new Vector(); tgcredit = 0 ; tscore = 0 ; course = 0 ; knownCredit = 0 ; bscore = - 1 ; } private String doubleString ( double x) { String tmp = Double.toString(x); if (tmp.equals( .0 )) { return 0 ; } if (tmp.endsWith( .0 )) { return tmp.substring( 0 ,tmp.length()- 2 ); } return tmp; } public void instLearning (String type, String name , double credit, double score, String courseid, String year, String division) { course ++; String[] s = new String[ 7 ]; s[ 0 ] = type; s[ 1 ] = name; s[ 2 ] = doubleString(credit); s[ 4 ] = courseid; s[ 5 ] = year; s[ 6 ] = division; tcredit += credit; if (score == - 1 ){ s[ 3 ] = &#x8A3B;A ; } else if (score == - 2 ) { s[ 3 ] = &#x8A3B;B ; } else if (score == - 3 ) { s[ 3 ] = &#x8A3B;C ; } else if (score == - 4 ) { s[ 3 ] = &#x8A3B;D ; } else if (score == - 5 ) { s[ 3 ] = &#x8A3B;E ; } else { s[ 3 ] = doubleString (score); if (division.equals( B ) &amp;&amp; (info[ 10 ].equals( G )||info[ 10 ].equals( P ))) { // &#x4E0B;&#x4FEE; } else { knownCredit += credit; tscore += score*credit; if (score = 70 || (score= 60 &amp;&amp; !(info[ 10 ].equals( G ) || info[ 10 ].equals( P )))) { tgcredit += credit; //&#x5F97;&#x5230;&#x5B78;&#x5206; } } } learning.addElement (s); } public double getAvgScore () { return knownCredit == 0 ? 0 : (( int )(tscore/knownCredit* 100 + 0.5 ))/ 100.0 ; } public double tcredit; //&#x4FEE;&#x7FD2;&#x7E3D;&#x5B78;&#x5206;&#x6578; public double tgcredit; //&#x5BE6;&#x5F97;&#x5B78;&#x5206;&#x6578; public double tscore; //&#x7E3D;&#x5B78;&#x5206;&#x6578; public int course; //&#x5B78;&#x7FD2;&#x8AB2;&#x5802;&#x6578; public double knownCredit; public double bscore; //&#x64CD;&#x884C; } class PrintYLNoticeCanvas extends PrintCanvas { public String getMedia () { return A4 ; } public String getOrientation () { return portrait ; } protected int dataPerPage ( int pageNum) { return 1 ; } protected int pagesPerData (Object data) { return 1 ; } public PrintYLNoticeCanvas (Vector data) { super (data); } public void paint (Graphics g) { CharArea ca; String title=  ; try { title = Environment.getTitle()+NCNUmisc.chineseDigit(Integer.parseInt(year))+ &#x5B78;&#x5E74;&#x5EA6;&#x7B2C; +NCNUmisc.chineseDigit2(Integer.parseInt(period))+ &#x5B78;&#x671F;&#x6210;&#x7E3E;&#x901A;&#x77E5;&#x55AE; ; } catch (Exception ex) {} YLNoticeStudent stu = (YLNoticeStudent)data.elementAt(getDataIndex()); String tmp ; // &#x5BC4;&#x4EF6;&#x5730;&#x5740; &#x90F5;&#x905E;&#x5340;&#x865F; &#x6536;&#x4EF6;&#x8005;&#x59D3;&#x540D; &#x7CFB;&#x6240; &#x5E74;&#x7D1A; &#x5B78;&#x751F;&#x540D; &#x5B78;&#x865F; &#x5B78;&#x5E74; &#x5B78;&#x671F; // &#x6210;&#x7E3E;&#x6846; g.drawRect(( int )( 0.3 *dotPerInch),( int )(( 1.2 )*dotPerInch),( int )( 3.6 *dotPerInch),( int )( 9.1 *dotPerInch)+ 1 ); g.drawLine(( int )( 0.57 *dotPerInch),( int )( 1.2 *dotPerInch),( int )( 0.57 *dotPerInch),( int )( 8.6 *dotPerInch)); g.drawLine(( int )( 3.3 *dotPerInch),( int )( 1.2 *dotPerInch),( int )( 3.3 *dotPerInch),( int )( 9.4 *dotPerInch)); g.drawLine(( int )( 3.6 *dotPerInch),( int )( 1.2 *dotPerInch),( int )( 3.6 *dotPerInch),( int )( 8.6 *dotPerInch)); g.drawLine(( int )( 0.3 *dotPerInch),( int )( 1.4 *dotPerInch),( int )( 3.9 *dotPerInch),( int )( 1.4 *dotPerInch)); g.drawLine(( int )( 0.3 *dotPerInch),( int )( 8.6 *dotPerInch),( int )( 3.9 *dotPerInch),( int )( 8.6 *dotPerInch)); g.drawLine(( int )( 0.3 *dotPerInch),( int )( 8.8 *dotPerInch),( int )( 3.9 *dotPerInch),( int )( 8.8 *dotPerInch)); g.drawLine(( int )( 0.3 *dotPerInch),( int )( 9 *dotPerInch),( int )( 3.9 *dotPerInch),( int )( 9 *dotPerInch)); g.drawLine(( int )( 0.3 *dotPerInch),( int )( 9.2 *dotPerInch),( int )( 3.9 *dotPerInch),( int )( 9.2 *dotPerInch)); g.drawLine(( int )( 0.3 *dotPerInch),( int )( 9.4 *dotPerInch),( int )( 3.9 *dotPerInch),( int )( 9.4 *dotPerInch)); g.setFont( new Font( Serif ,Font.PLAIN,( int )( 0.14 *dotPerInch))); g.drawString(title,( int )( 0.3 *dotPerInch),( int )(( 0.6 )*dotPerInch)); g.setFont( new Font( Serif ,Font.PLAIN,( int )( 0.12 *dotPerInch))); g.drawString( &#x7CFB;&#x6240;&#x5225;: +stu.info[ 3 ],( int )( 0.3 *dotPerInch),( int )( 0.8 *dotPerInch)); g.drawString( &#x5B78;&#x865F;: +stu.info[ 6 ],( int )( 0.3 *dotPerInch),( int )( 1.0 *dotPerInch)); g.drawString( &#x5E74;&#x7D1A;: +stu.info[ 4 ],( int )( 2.3 *dotPerInch),( int )( 0.8 *dotPerInch)); g.drawString( &#x59D3;&#x540D;: +stu.info[ 5 ],( int )( 2.3 *dotPerInch),( int )( 1.0 *dotPerInch)); g.drawString( &#x4FEE;&#x5225; ,( int )( 0.32 *dotPerInch),( int )( 1.35 *dotPerInch)); g.drawString( &#x8AB2;&#x7A0B;&#x540D;&#x7A31; ,( int )( 0.9 *dotPerInch),( int )( 1.35 *dotPerInch)); g.drawString( &#x5B78;&#x5206; ,( int )( 3.33 *dotPerInch),( int )( 1.35 *dotPerInch)); g.drawString( &#x6210;&#x7E3E; ,( int )( 3.63 *dotPerInch),( int )( 1.35 *dotPerInch)); CharArea.fillH(g, &#x5B78;&#x696D;&#x6210;&#x7E3E;&#x7E3D;&#x5E73;&#x5747; ,( int )( 0.3 *dotPerInch),( int )( 8.55 *dotPerInch),( int )( 3.1 *dotPerInch),( int )( 0.2 *dotPerInch)); CharArea.fillH(g, &#x4FEE;&#x7FD2;&#x7E3D;&#x5B78;&#x5206;&#x6578; ,( int )( 0.3 *dotPerInch),( int )( 8.75 *dotPerInch),( int )( 3.1 *dotPerInch),( int )( 0.2 *dotPerInch)); CharArea.fillH(g, &#x5BE6;&#x5F97;&#x5B78;&#x5206;&#x6578; ,( int )( 0.3 *dotPerInch),( int )( 8.95 *dotPerInch),( int )( 3.1 *dotPerInch),( int )( 0.2 *dotPerInch)); CharArea.fillH(g, &#x64CD;&#x884C;&#x6210;&#x7E3E; ,( int )( 0.3 *dotPerInch),( int )( 9.15 *dotPerInch),( int )( 3.1 *dotPerInch),( int )( 0.2 *dotPerInch)); ca = new CharArea(g,( int )( 0.4 *dotPerInch),( int )( 9.4 *dotPerInch),( int )( 3.4 *dotPerInch),( int )( 1.2 *dotPerInch)); ca.drawH( &#x8A3B;A &#x5168;&#x73ED;&#x6210;&#x7E3E;&#x672A;&#x5230;\\n&#x8A3B;B &#x500B;&#x4EBA;&#x6210;&#x7E3E;&#x672A;&#x5230;(&#x8ACB;&#x5411;&#x8001;&#x5E2B;&#x67E5;&#x660E;)\\n&#x8A3B;C &#x8ACB;&#x5047;\\n&#x8A3B;D &#x7F3A;&#x8003;\\n&#x8A3B;E &#x505C;&#x4FEE; ); Calendar d = Calendar.getInstance (); g.drawString( &#x586B;&#x8868;&#x65E5;&#x671F;:  + NCNUmisc.chineseDigit(d.get (Calendar.YEAR ) - 1911 )+  &#x5E74;  + NCNUmisc.chineseDigit(d.get (Calendar.MONTH )+ 1 ) +  &#x6708;  + NCNUmisc.chineseDigit(d.get (Calendar.DATE )) +  &#x65E5; ,( int )( 0.3 *dotPerInch),( int )( 10.5 *dotPerInch)); for ( int i = 0 ; i  stu.learning.size (); i++){ String[] data = (String[])stu.learning.elementAt(i); g.drawString (data[ 0 ], ( int )(( 0.32 )*dotPerInch), ( int )(( 1.5 + i* 0.14 )*dotPerInch)); g.drawString (data[ 1 ], ( int )(( 0.6 )*dotPerInch), ( int )(( 1.5 + i* 0.14 )*dotPerInch)); g.drawString (data[ 2 ], ( int )(( 3.4 )*dotPerInch), ( int )(( 1.5 + i* 0.14 )*dotPerInch)); g.drawString (data[ 3 ], ( int )(( 3.65 )*dotPerInch), ( int )(( 1.5 + i* 0.14 )*dotPerInch)); } g.drawString (  + NCNUmisc.doubleString(stu.getAvgScore()), ( int )(( 3.5 )*dotPerInch), ( int )(( 8.75 )*dotPerInch)); g.drawString (  + NCNUmisc.doubleString(stu.tcredit), ( int )(( 3.5 )*dotPerInch), ( int )(( 8.95 )*dotPerInch)); g.drawString (  + NCNUmisc.doubleString(stu.tgcredit), ( int )(( 3.5 )*dotPerInch), ( int )(( 9.15 )*dotPerInch)); g.drawString (stu.bscore  0 ? &#x672A;&#x5230; :  +NCNUmisc.doubleString(stu.bscore), ( int )(( 3.5 )*dotPerInch), ( int )(( 9.35 )*dotPerInch)); g.drawRect(( int )( 4.4 *dotPerInch),( int )( 2.4 *dotPerInch),( int )( 0.4 *dotPerInch),( int )( 0.7 *dotPerInch)); ca = new CharArea(g,( int )( 4.3 *dotPerInch),( int )( 6.0 *dotPerInch),( int )( 3.5 *dotPerInch),( int )( 4 .*dotPerInch)); ca.drawH(explain); if (Environment.getTitle().equals( &#x570B;&#x7ACB;&#x66A8;&#x5357;&#x570B;&#x969B;&#x5927;&#x5B78; )) { ca.drawH(explain2); } g.drawRect(( int )( 4.3 *dotPerInch),( int )(( 0.5 )*dotPerInch),( int )( 3.5 *dotPerInch),( int )( 1.8 *dotPerInch)); ca = new CharArea(g,( int )( 4.4 *dotPerInch),( int )( 0.8 *dotPerInch),( int )( 3.4 *dotPerInch),( int )( 1.8 *dotPerInch)); g.setFont( new Font( Serif ,Font.PLAIN,( int )( 0.14 *dotPerInch))); CharArea.fillV(g, &#x5370;&#x5237;&#x54C1; ,( int )( 4.4 *dotPerInch),( int )( 2.4 *dotPerInch),( int )( 0.4 *dotPerInch),( int )( 0.7 *dotPerInch)); g.drawString(Environment.getTitle()+ &#x6559;&#x52D9;&#x8655; &#x5BC4; ,( int )( 5.0 *dotPerInch),( int )( 2.55 *dotPerInch)); g.drawString( &#x6821;&#x5740;: +Environment.addr,( int )( 5.0 *dotPerInch),( int )( 2.8 *dotPerInch)); ca.drawH(stu.info[ 1 ]+   +stu.info[ 0 ]+ \\n\\n ); g.setFont( new Font( Serif ,Font.BOLD,( int )( 0.20 *dotPerInch))); ca.drawH(   +stu.info[ 2 ]+  &#x541B;&#x555F; ); } } } &#x57F7;&#x884C;&#x5F8C;&#x7684;&#x7D50;&#x679C;"},"java/encapsulation.html":{"title":"封裝","path":"/java/encapsulation.html","body":"封裝的意義 物件導向程式設計的原則之一，是讓實作和界面分開，以便讓同一界面但不同的實作的物件能以一致的面貌讓外界存取，為了達到此目標，java 允許設計人員規範類別成員以及類別本身的存取限制。 類別成員的存取 所謂封裝 (Encapsulation), 是指 class A 的設計者可以指定其他的 class 能否存取 A 的某個 member。Java 定義了四種存取範圍： private：只有 A 自己才可以存取，使用 keyword private package：只有和 A 同一個 package 的 class 才可以存取，沒有相對應的 keyword protected：只有同一個 package 或是 A 的子類別才可以存取，使用 keyword protected public：所有的 class 都可以存取，使用 keyword public 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public class EncapsulationExample  private int privateVariable; int packageVariable; protected int protectedVariable; public int publicVariable; private int privateObjectMethod ()  int packageObjectMethod ()  protected int protectedObjectMethod () ; public int publicObjectMethod () ; static private int privateClassMethod ()  static int packageClassMethod ()  static protected int protectedClassMethod () ; static public int publicClassMethod () ;  如果 member 的前面沒有 private , protected , public 其中一個修飾字，則該 member 的存取範圍就是 package 。從以上的敘述，讀者可以推知這四種存取範圍的大小是 public  protected  package  private 。 Package 的定義 所謂 package , 可以想成是在設計或實作上相關的一群 class 。要宣告某 class 屬於某 package , 其語法為 1 2 3 package myPackage; public class MyClass   如果沒有宣告 package 的話，如下面這兩個 class ，就會被歸類為「匿名」的 package : 1 2 3 4 5 6 7 8 9 // in file ClassA.java public class ClassA  public static void main (String[] argv)  ClassB x = new ClassB();   // in file ClassB.java public class ClassB   為了讓 JVM 在執行期間能夠找到所需要的 class ，同一個 package 的 class 會放在同一個目錄下。不過只知道目錄的名稱還不夠，還需要指定該目錄在檔案系統內的路徑。 classpath 這個環境變數是由多個以分號隔開的路徑所組成，JVM 透過 classpath 配合 package 的名稱就可以找到所需要的 class 。如果我們只用到 Java 標準的程式庫，則不需要指定 classpath 。指定 classpath 環境變數時，要特別注意的是，不要忘了把 . (代表目前的工作目錄) 放到最前面，否則就找不到「匿名」 package 裡的 class （別忘了絕大部分簡單的範例都沒有宣告 package ，所以都是匿名的）。 1 classpath=.;n:\\計網中心系統組\\project; classpath 裡除了路徑外，也可以指定 zip 或 jar(java archive format) 格式的檔案。zip 和 jar 可以把目錄及其子目錄內的檔案都壓縮起來，因此可以透過這類檔案抓到所需的 class 檔。 1 classpath=.;c:\\mylib.zip;c:\\otherlib.jar;n:\\計網中心系統組\\project; package 的宣告可以用 . 號構成複雜的 package tree。 1 2 3 4 package mylib.package1 public class A  package mylib.package2 public class B  屬於 mylib.package1 的 class 會放在 mylib 目錄下的 package1 目錄內。Java 所提供的標準應用程式介面 (Application Programming Interface, API) 就是一個複雜的 package tree。 同一個 .java 檔裡面, 可以定義好幾個 class ，但最多只能有一個宣告為 public class 。此限制是因為 java 希望每一個編譯的單元 ( .java 檔) 都有唯一的界面宣告。那麼 public class 和 class 的區別何在？ non public class 只能給同一個 package 內的其他 class 引用， public class 則可以給任何 class 引用。 Package 的引用 假如 Class A 用到 package myPackage 裡的 Class B ，為了檢查 A 使用到 B 的部分是否符合 B 的原始定義，諸如方法存不存在，參數正不正確等問題，Compiler 必須引入 class B 的定義，以便進行編譯時期的檢查。引入的語法為 1 import myPackage.B; 這裡要強調的是， import 指令告知 Compiler 在 Compiler time 所要檢查的類別定義在哪裡。但有時候我們編譯的環境和執行的環境可能不同，例如編譯時用 JDK 1.4，執行時卻用 JDK 1.2，若程式使用到 JDK 1.4 才有的 API，那麼會在執行期間產生錯誤。 有時候我們會引用相當多個同屬某 package 的類別，如果要一個一個 import ，會很煩人，因此 Java 允許我們使用萬用字元 * 來代表某 package 裡的所有 class ： 1 2 3 4 5 6 import myPackage.*; public class A  public static void main (String[] argv)  B x = new B();   眼尖的讀者會發現我們並沒有 import String 的定義啊，怎麼都沒有問題？由於寫程式多多少少都會用到一點系統提供的程式庫，如果連很簡單的程式都要 import 一堆 class ，也真煩人。因此 Java Compiler 會自動幫我們引入 java.lang.* 1 2 3 4 5 public class Hello  public static void main (String[] argv)  System.out.println( \"Hello World.\" );   就等同 1 2 3 4 5 6 import java.lang.*; public class Hello  public static void main (String[] argv)  System.out.println( \"Hello World.\" );   由於 class 是放在類似樹狀結構的 package tree 裡面，因此引用的 class 應該加上完整的 package 路徑才是全名，例如 1 2 3 4 5 public class Hello  public static void main (java.lang.String[] argv)  java.lang.System.out.println( \"Hello World.\" );   只要不會造成混淆, 一般我們都使用省略 package 路徑的 class 簡稱。但是如果我們 import P1 和 P2 兩個 package , 而這兩個 package 碰巧都定義了同名的 class A , 則用到 A 的地方就比需以 P1.A 和 P2.A 來區別了。 下面的程式碼哪裡有錯? 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 package p1; public class Access  private static void f1 ()  static void f2 ()  protected static void f3 ()  public static void f4 ()  Access.f1();   package p1; public class Example1  public static void main (String[] argv)  Access.f1(); Access.f2(); Access.f3(); Access.f4();   package p2; import p1.*; public class Example2  public static void main (String[] argv)  Access.f1(); Access.f2(); Access.f3(); Access.f4();   package p1; public class Example3 extends Access  public static void main (String[] argv)  Access.f1(); Access.f2(); Access.f3(); Access.f4();   package p2; import p1.*; public class Example4 extends Access  public static void main (String[] argv)  Access.f1(); Access.f2(); Access.f3(); Access.f4();   Java 檔和 Class 檔的相依性 傳統程式開發的流程是 Compile 個別 Source Code，然後 Link 所有的 Object Code 成為執行檔。對大型的應用程式來說，常見的問題之一是如何確定 Link 時所需的 Object Code 是由最新的 Source 編譯而來? 尤其模組間存在相依性，如模組 A 可能用到模組 B 裡的函數，如果 B 的函數有修改參數，則 A 模組也要重新編譯。換句話說單看 source code 和 object code 的產生時間是不行的。最簡單的方法就是在 Link 前將所有的 Source Code 重新編譯一次，但這樣做有以下幾個問題: 重新編譯大型專案全部的程式碼可能會浪費不少時間 要對每個 Source File 下達編譯指令，不但費時，而且容易遺漏。即使寫個批次程式，也要隨時記得納入新的原始檔 由於這些問題的存在，某些原始碼管理系統便因應而生，例如 UNIX 上的 SCCS(Source Code Control System)。Java Compiler 具有下面兩個功能，可以在沒有原始碼管理系統的情況下，也能解決上述問題： 可使用 javac *.java 來編譯目前目錄下的所有 java 檔案 編譯 A.java 時，會自動檢查 A 所用到的其他 class B ，比較 B.java 和 B.class 的產生時間，如果 B.java 比較新則 B.java 就會被重新編譯 如果應用軟體只有單一的進入點，例如 class A 的 public static void main(String[] argv) ，則只要編譯 A.java 就會自動編譯其他需要重新編譯的 .java 檔。如果應用軟體有兩個以上的進入點，如網路程式的 client 端和 server 端的進入點會不一樣，只要寫個批次檔編譯相關進入點的 .java 檔即可。 用 Link List 實作 Stack 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class Node  Object data; Node next;  public class Stack  private Node head; private int size; public void push (Object s)  Node tmp = new Node(); tmp.next = head; tmp.data = s; size++; head = tmp;  public Object pop ()  Object tmp = head.data; head = head.next; size--; return tmp;   Link List Stack Push Step 1 Link List Stack Push Step 2 Link List Stack Push Step 3 Link List Stack Pop 1 2 3 4 5 6 7 8 9 10 public class Example  public static void main (String[] argv)  Stack s1 = new Stack(); Stack s2 = new Stack(); s1.push( \"abc\" ); s1.push( \"def\" ); s2.push( \"123\" ); s2.push( \"456\" );   用 Link List 實作 Queue 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class Node  Object data; Node next;  public class Queue  private Node head, tail; private int size; public void put (Object s)  Node tmp = new Node(); tmp.data = s; if (tail != null )  tail.next = tmp;  else  head = tmp;  tail = tmp; size++;  public Object get ()  Object tmp = head.data; head = head.next; if (head == null )  tail = null ;  size--; return tmp;  "},"java/encapsulation.html#封裝的意義":{"title":"&#x5C01;&#x88DD;&#x7684;&#x610F;&#x7FA9;","path":"/java/encapsulation.html#封裝的意義","body":"&#x7269;&#x4EF6;&#x5C0E;&#x5411;&#x7A0B;&#x5F0F;&#x8A2D;&#x8A08;&#x7684;&#x539F;&#x5247;&#x4E4B;&#x4E00;&#xFF0C;&#x662F;&#x8B93;&#x5BE6;&#x4F5C;&#x548C;&#x754C;&#x9762;&#x5206;&#x958B;&#xFF0C;&#x4EE5;&#x4FBF;&#x8B93;&#x540C;&#x4E00;&#x754C;&#x9762;&#x4F46;&#x4E0D;&#x540C;&#x7684;&#x5BE6;&#x4F5C;&#x7684;&#x7269;&#x4EF6;&#x80FD;&#x4EE5;&#x4E00;&#x81F4;&#x7684;&#x9762;&#x8C8C;&#x8B93;&#x5916;&#x754C;&#x5B58;&#x53D6;&#xFF0C;&#x70BA;&#x4E86;&#x9054;&#x5230;&#x6B64;&#x76EE;&#x6A19;&#xFF0C;java &#x5141;&#x8A31;&#x8A2D;&#x8A08;&#x4EBA;&#x54E1;&#x898F;&#x7BC4;&#x985E;&#x5225;&#x6210;&#x54E1;&#x4EE5;&#x53CA;&#x985E;&#x5225;&#x672C;&#x8EAB;&#x7684;&#x5B58;&#x53D6;&#x9650;&#x5236;&#x3002;"},"java/encapsulation.html#類別成員的存取":{"title":"&#x985E;&#x5225;&#x6210;&#x54E1;&#x7684;&#x5B58;&#x53D6;","path":"/java/encapsulation.html#類別成員的存取","body":"&#x6240;&#x8B02;&#x5C01;&#x88DD; (Encapsulation), &#x662F;&#x6307; class A &#x7684;&#x8A2D;&#x8A08;&#x8005;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x5176;&#x4ED6;&#x7684; class &#x80FD;&#x5426;&#x5B58;&#x53D6; A &#x7684;&#x67D0;&#x500B; member&#x3002;Java &#x5B9A;&#x7FA9;&#x4E86;&#x56DB;&#x7A2E;&#x5B58;&#x53D6;&#x7BC4;&#x570D;&#xFF1A; private&#xFF1A;&#x53EA;&#x6709; A &#x81EA;&#x5DF1;&#x624D;&#x53EF;&#x4EE5;&#x5B58;&#x53D6;&#xFF0C;&#x4F7F;&#x7528; keyword private package&#xFF1A;&#x53EA;&#x6709;&#x548C; A &#x540C;&#x4E00;&#x500B; package &#x7684; class &#x624D;&#x53EF;&#x4EE5;&#x5B58;&#x53D6;&#xFF0C;&#x6C92;&#x6709;&#x76F8;&#x5C0D;&#x61C9;&#x7684; keyword protected&#xFF1A;&#x53EA;&#x6709;&#x540C;&#x4E00;&#x500B; package &#x6216;&#x662F; A &#x7684;&#x5B50;&#x985E;&#x5225;&#x624D;&#x53EF;&#x4EE5;&#x5B58;&#x53D6;&#xFF0C;&#x4F7F;&#x7528; keyword protected public&#xFF1A;&#x6240;&#x6709;&#x7684; class &#x90FD;&#x53EF;&#x4EE5;&#x5B58;&#x53D6;&#xFF0C;&#x4F7F;&#x7528; keyword public 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public class EncapsulationExample { private int privateVariable; int packageVariable; protected int protectedVariable; public int publicVariable; private int privateObjectMethod () {} int packageObjectMethod () {} protected int protectedObjectMethod () ; public int publicObjectMethod () ; static private int privateClassMethod () {} static int packageClassMethod () {} static protected int protectedClassMethod () ; static public int publicClassMethod () ; } &#x5982;&#x679C; member &#x7684;&#x524D;&#x9762;&#x6C92;&#x6709; private , protected , public &#x5176;&#x4E2D;&#x4E00;&#x500B;&#x4FEE;&#x98FE;&#x5B57;&#xFF0C;&#x5247;&#x8A72; member &#x7684;&#x5B58;&#x53D6;&#x7BC4;&#x570D;&#x5C31;&#x662F; package &#x3002;&#x5F9E;&#x4EE5;&#x4E0A;&#x7684;&#x6558;&#x8FF0;&#xFF0C;&#x8B80;&#x8005;&#x53EF;&#x4EE5;&#x63A8;&#x77E5;&#x9019;&#x56DB;&#x7A2E;&#x5B58;&#x53D6;&#x7BC4;&#x570D;&#x7684;&#x5927;&#x5C0F;&#x662F; public  protected  package  private &#x3002;"},"java/encapsulation.html#Package-的定義":{"title":"Package &#x7684;&#x5B9A;&#x7FA9;","path":"/java/encapsulation.html#Package-的定義","body":"&#x6240;&#x8B02; package , &#x53EF;&#x4EE5;&#x60F3;&#x6210;&#x662F;&#x5728;&#x8A2D;&#x8A08;&#x6216;&#x5BE6;&#x4F5C;&#x4E0A;&#x76F8;&#x95DC;&#x7684;&#x4E00;&#x7FA4; class &#x3002;&#x8981;&#x5BA3;&#x544A;&#x67D0; class &#x5C6C;&#x65BC;&#x67D0; package , &#x5176;&#x8A9E;&#x6CD5;&#x70BA; 1 2 3 package myPackage; public class MyClass { } &#x5982;&#x679C;&#x6C92;&#x6709;&#x5BA3;&#x544A; package &#x7684;&#x8A71;&#xFF0C;&#x5982;&#x4E0B;&#x9762;&#x9019;&#x5169;&#x500B; class &#xFF0C;&#x5C31;&#x6703;&#x88AB;&#x6B78;&#x985E;&#x70BA;&#x300C;&#x533F;&#x540D;&#x300D;&#x7684; package : 1 2 3 4 5 6 7 8 9 // in file ClassA.java public class ClassA { public static void main (String[] argv) { ClassB x = new ClassB(); } } // in file ClassB.java public class ClassB { } &#x70BA;&#x4E86;&#x8B93; JVM &#x5728;&#x57F7;&#x884C;&#x671F;&#x9593;&#x80FD;&#x5920;&#x627E;&#x5230;&#x6240;&#x9700;&#x8981;&#x7684; class &#xFF0C;&#x540C;&#x4E00;&#x500B; package &#x7684; class &#x6703;&#x653E;&#x5728;&#x540C;&#x4E00;&#x500B;&#x76EE;&#x9304;&#x4E0B;&#x3002;&#x4E0D;&#x904E;&#x53EA;&#x77E5;&#x9053;&#x76EE;&#x9304;&#x7684;&#x540D;&#x7A31;&#x9084;&#x4E0D;&#x5920;&#xFF0C;&#x9084;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x8A72;&#x76EE;&#x9304;&#x5728;&#x6A94;&#x6848;&#x7CFB;&#x7D71;&#x5167;&#x7684;&#x8DEF;&#x5F91;&#x3002; classpath &#x9019;&#x500B;&#x74B0;&#x5883;&#x8B8A;&#x6578;&#x662F;&#x7531;&#x591A;&#x500B;&#x4EE5;&#x5206;&#x865F;&#x9694;&#x958B;&#x7684;&#x8DEF;&#x5F91;&#x6240;&#x7D44;&#x6210;&#xFF0C;JVM &#x900F;&#x904E; classpath &#x914D;&#x5408; package &#x7684;&#x540D;&#x7A31;&#x5C31;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x6240;&#x9700;&#x8981;&#x7684; class &#x3002;&#x5982;&#x679C;&#x6211;&#x5011;&#x53EA;&#x7528;&#x5230; Java &#x6A19;&#x6E96;&#x7684;&#x7A0B;&#x5F0F;&#x5EAB;&#xFF0C;&#x5247;&#x4E0D;&#x9700;&#x8981;&#x6307;&#x5B9A; classpath &#x3002;&#x6307;&#x5B9A; classpath &#x74B0;&#x5883;&#x8B8A;&#x6578;&#x6642;&#xFF0C;&#x8981;&#x7279;&#x5225;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x4E0D;&#x8981;&#x5FD8;&#x4E86;&#x628A; . (&#x4EE3;&#x8868;&#x76EE;&#x524D;&#x7684;&#x5DE5;&#x4F5C;&#x76EE;&#x9304;) &#x653E;&#x5230;&#x6700;&#x524D;&#x9762;&#xFF0C;&#x5426;&#x5247;&#x5C31;&#x627E;&#x4E0D;&#x5230;&#x300C;&#x533F;&#x540D;&#x300D; package &#x88E1;&#x7684; class &#xFF08;&#x5225;&#x5FD8;&#x4E86;&#x7D55;&#x5927;&#x90E8;&#x5206;&#x7C21;&#x55AE;&#x7684;&#x7BC4;&#x4F8B;&#x90FD;&#x6C92;&#x6709;&#x5BA3;&#x544A; package &#xFF0C;&#x6240;&#x4EE5;&#x90FD;&#x662F;&#x533F;&#x540D;&#x7684;&#xFF09;&#x3002; 1 classpath=.;n:\\&#x8A08;&#x7DB2;&#x4E2D;&#x5FC3;&#x7CFB;&#x7D71;&#x7D44;\\project; classpath &#x88E1;&#x9664;&#x4E86;&#x8DEF;&#x5F91;&#x5916;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x6307;&#x5B9A; zip &#x6216; jar(java archive format) &#x683C;&#x5F0F;&#x7684;&#x6A94;&#x6848;&#x3002;zip &#x548C; jar &#x53EF;&#x4EE5;&#x628A;&#x76EE;&#x9304;&#x53CA;&#x5176;&#x5B50;&#x76EE;&#x9304;&#x5167;&#x7684;&#x6A94;&#x6848;&#x90FD;&#x58D3;&#x7E2E;&#x8D77;&#x4F86;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9019;&#x985E;&#x6A94;&#x6848;&#x6293;&#x5230;&#x6240;&#x9700;&#x7684; class &#x6A94;&#x3002; 1 classpath=.;c:\\mylib.zip;c:\\otherlib.jar;n:\\&#x8A08;&#x7DB2;&#x4E2D;&#x5FC3;&#x7CFB;&#x7D71;&#x7D44;\\project; package &#x7684;&#x5BA3;&#x544A;&#x53EF;&#x4EE5;&#x7528; . &#x865F;&#x69CB;&#x6210;&#x8907;&#x96DC;&#x7684; package tree&#x3002; 1 2 3 4 package mylib.package1 public class A {} package mylib.package2 public class B {} &#x5C6C;&#x65BC; mylib.package1 &#x7684; class &#x6703;&#x653E;&#x5728; mylib &#x76EE;&#x9304;&#x4E0B;&#x7684; package1 &#x76EE;&#x9304;&#x5167;&#x3002;Java &#x6240;&#x63D0;&#x4F9B;&#x7684;&#x6A19;&#x6E96;&#x61C9;&#x7528;&#x7A0B;&#x5F0F;&#x4ECB;&#x9762; (Application Programming Interface, API) &#x5C31;&#x662F;&#x4E00;&#x500B;&#x8907;&#x96DC;&#x7684; package tree&#x3002; &#x540C;&#x4E00;&#x500B; .java &#x6A94;&#x88E1;&#x9762;, &#x53EF;&#x4EE5;&#x5B9A;&#x7FA9;&#x597D;&#x5E7E;&#x500B; class &#xFF0C;&#x4F46;&#x6700;&#x591A;&#x53EA;&#x80FD;&#x6709;&#x4E00;&#x500B;&#x5BA3;&#x544A;&#x70BA; public class &#x3002;&#x6B64;&#x9650;&#x5236;&#x662F;&#x56E0;&#x70BA; java &#x5E0C;&#x671B;&#x6BCF;&#x4E00;&#x500B;&#x7DE8;&#x8B6F;&#x7684;&#x55AE;&#x5143; ( .java &#x6A94;) &#x90FD;&#x6709;&#x552F;&#x4E00;&#x7684;&#x754C;&#x9762;&#x5BA3;&#x544A;&#x3002;&#x90A3;&#x9EBC; public class &#x548C; class &#x7684;&#x5340;&#x5225;&#x4F55;&#x5728;&#xFF1F; non public class &#x53EA;&#x80FD;&#x7D66;&#x540C;&#x4E00;&#x500B; package &#x5167;&#x7684;&#x5176;&#x4ED6; class &#x5F15;&#x7528;&#xFF0C; public class &#x5247;&#x53EF;&#x4EE5;&#x7D66;&#x4EFB;&#x4F55; class &#x5F15;&#x7528;&#x3002;"},"java/encapsulation.html#Package-的引用":{"title":"Package &#x7684;&#x5F15;&#x7528;","path":"/java/encapsulation.html#Package-的引用","body":"&#x5047;&#x5982; Class A &#x7528;&#x5230; package myPackage &#x88E1;&#x7684; Class B &#xFF0C;&#x70BA;&#x4E86;&#x6AA2;&#x67E5; A &#x4F7F;&#x7528;&#x5230; B &#x7684;&#x90E8;&#x5206;&#x662F;&#x5426;&#x7B26;&#x5408; B &#x7684;&#x539F;&#x59CB;&#x5B9A;&#x7FA9;&#xFF0C;&#x8AF8;&#x5982;&#x65B9;&#x6CD5;&#x5B58;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x53C3;&#x6578;&#x6B63;&#x4E0D;&#x6B63;&#x78BA;&#x7B49;&#x554F;&#x984C;&#xFF0C;Compiler &#x5FC5;&#x9808;&#x5F15;&#x5165; class B &#x7684;&#x5B9A;&#x7FA9;&#xFF0C;&#x4EE5;&#x4FBF;&#x9032;&#x884C;&#x7DE8;&#x8B6F;&#x6642;&#x671F;&#x7684;&#x6AA2;&#x67E5;&#x3002;&#x5F15;&#x5165;&#x7684;&#x8A9E;&#x6CD5;&#x70BA; 1 import myPackage.B; &#x9019;&#x88E1;&#x8981;&#x5F37;&#x8ABF;&#x7684;&#x662F;&#xFF0C; import &#x6307;&#x4EE4;&#x544A;&#x77E5; Compiler &#x5728; Compiler time &#x6240;&#x8981;&#x6AA2;&#x67E5;&#x7684;&#x985E;&#x5225;&#x5B9A;&#x7FA9;&#x5728;&#x54EA;&#x88E1;&#x3002;&#x4F46;&#x6709;&#x6642;&#x5019;&#x6211;&#x5011;&#x7DE8;&#x8B6F;&#x7684;&#x74B0;&#x5883;&#x548C;&#x57F7;&#x884C;&#x7684;&#x74B0;&#x5883;&#x53EF;&#x80FD;&#x4E0D;&#x540C;&#xFF0C;&#x4F8B;&#x5982;&#x7DE8;&#x8B6F;&#x6642;&#x7528; JDK 1.4&#xFF0C;&#x57F7;&#x884C;&#x6642;&#x537B;&#x7528; JDK 1.2&#xFF0C;&#x82E5;&#x7A0B;&#x5F0F;&#x4F7F;&#x7528;&#x5230; JDK 1.4 &#x624D;&#x6709;&#x7684; API&#xFF0C;&#x90A3;&#x9EBC;&#x6703;&#x5728;&#x57F7;&#x884C;&#x671F;&#x9593;&#x7522;&#x751F;&#x932F;&#x8AA4;&#x3002; &#x6709;&#x6642;&#x5019;&#x6211;&#x5011;&#x6703;&#x5F15;&#x7528;&#x76F8;&#x7576;&#x591A;&#x500B;&#x540C;&#x5C6C;&#x67D0; package &#x7684;&#x985E;&#x5225;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x4E00;&#x500B;&#x4E00;&#x500B; import &#xFF0C;&#x6703;&#x5F88;&#x7169;&#x4EBA;&#xFF0C;&#x56E0;&#x6B64; Java &#x5141;&#x8A31;&#x6211;&#x5011;&#x4F7F;&#x7528;&#x842C;&#x7528;&#x5B57;&#x5143; * &#x4F86;&#x4EE3;&#x8868;&#x67D0; package &#x88E1;&#x7684;&#x6240;&#x6709; class &#xFF1A; 1 2 3 4 5 6 import myPackage.*; public class A { public static void main (String[] argv) { B x = new B(); } } &#x773C;&#x5C16;&#x7684;&#x8B80;&#x8005;&#x6703;&#x767C;&#x73FE;&#x6211;&#x5011;&#x4E26;&#x6C92;&#x6709; import String &#x7684;&#x5B9A;&#x7FA9;&#x554A;&#xFF0C;&#x600E;&#x9EBC;&#x90FD;&#x6C92;&#x6709;&#x554F;&#x984C;&#xFF1F;&#x7531;&#x65BC;&#x5BEB;&#x7A0B;&#x5F0F;&#x591A;&#x591A;&#x5C11;&#x5C11;&#x90FD;&#x6703;&#x7528;&#x5230;&#x4E00;&#x9EDE;&#x7CFB;&#x7D71;&#x63D0;&#x4F9B;&#x7684;&#x7A0B;&#x5F0F;&#x5EAB;&#xFF0C;&#x5982;&#x679C;&#x9023;&#x5F88;&#x7C21;&#x55AE;&#x7684;&#x7A0B;&#x5F0F;&#x90FD;&#x8981; import &#x4E00;&#x5806; class &#xFF0C;&#x4E5F;&#x771F;&#x7169;&#x4EBA;&#x3002;&#x56E0;&#x6B64; Java Compiler &#x6703;&#x81EA;&#x52D5;&#x5E6B;&#x6211;&#x5011;&#x5F15;&#x5165; java.lang.* 1 2 3 4 5 public class Hello { public static void main (String[] argv) { System.out.println( Hello World. ); } } &#x5C31;&#x7B49;&#x540C; 1 2 3 4 5 6 import java.lang.*; public class Hello { public static void main (String[] argv) { System.out.println( Hello World. ); } } &#x7531;&#x65BC; class &#x662F;&#x653E;&#x5728;&#x985E;&#x4F3C;&#x6A39;&#x72C0;&#x7D50;&#x69CB;&#x7684; package tree &#x88E1;&#x9762;&#xFF0C;&#x56E0;&#x6B64;&#x5F15;&#x7528;&#x7684; class &#x61C9;&#x8A72;&#x52A0;&#x4E0A;&#x5B8C;&#x6574;&#x7684; package &#x8DEF;&#x5F91;&#x624D;&#x662F;&#x5168;&#x540D;&#xFF0C;&#x4F8B;&#x5982; 1 2 3 4 5 public class Hello { public static void main (java.lang.String[] argv) { java.lang.System.out.println( Hello World. ); } } &#x53EA;&#x8981;&#x4E0D;&#x6703;&#x9020;&#x6210;&#x6DF7;&#x6DC6;, &#x4E00;&#x822C;&#x6211;&#x5011;&#x90FD;&#x4F7F;&#x7528;&#x7701;&#x7565; package &#x8DEF;&#x5F91;&#x7684; class &#x7C21;&#x7A31;&#x3002;&#x4F46;&#x662F;&#x5982;&#x679C;&#x6211;&#x5011; import P1 &#x548C; P2 &#x5169;&#x500B; package , &#x800C;&#x9019;&#x5169;&#x500B; package &#x78B0;&#x5DE7;&#x90FD;&#x5B9A;&#x7FA9;&#x4E86;&#x540C;&#x540D;&#x7684; class A , &#x5247;&#x7528;&#x5230; A &#x7684;&#x5730;&#x65B9;&#x5C31;&#x6BD4;&#x9700;&#x4EE5; P1.A &#x548C; P2.A &#x4F86;&#x5340;&#x5225;&#x4E86;&#x3002;"},"java/encapsulation.html#下面的程式碼哪裡有錯":{"title":"&#x4E0B;&#x9762;&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#x54EA;&#x88E1;&#x6709;&#x932F;?","path":"/java/encapsulation.html#下面的程式碼哪裡有錯","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 package p1; public class Access { private static void f1 () {} static void f2 () {} protected static void f3 () {} public static void f4 () { Access.f1(); } } package p1; public class Example1 { public static void main (String[] argv) { Access.f1(); Access.f2(); Access.f3(); Access.f4(); } } package p2; import p1.*; public class Example2 { public static void main (String[] argv) { Access.f1(); Access.f2(); Access.f3(); Access.f4(); } } package p1; public class Example3 extends Access { public static void main (String[] argv) { Access.f1(); Access.f2(); Access.f3(); Access.f4(); } } package p2; import p1.*; public class Example4 extends Access { public static void main (String[] argv) { Access.f1(); Access.f2(); Access.f3(); Access.f4(); } }"},"java/encapsulation.html#Java-檔和-Class-檔的相依性":{"title":"Java &#x6A94;&#x548C; Class &#x6A94;&#x7684;&#x76F8;&#x4F9D;&#x6027;","path":"/java/encapsulation.html#Java-檔和-Class-檔的相依性","body":"&#x50B3;&#x7D71;&#x7A0B;&#x5F0F;&#x958B;&#x767C;&#x7684;&#x6D41;&#x7A0B;&#x662F; Compile &#x500B;&#x5225; Source Code&#xFF0C;&#x7136;&#x5F8C; Link &#x6240;&#x6709;&#x7684; Object Code &#x6210;&#x70BA;&#x57F7;&#x884C;&#x6A94;&#x3002;&#x5C0D;&#x5927;&#x578B;&#x7684;&#x61C9;&#x7528;&#x7A0B;&#x5F0F;&#x4F86;&#x8AAA;&#xFF0C;&#x5E38;&#x898B;&#x7684;&#x554F;&#x984C;&#x4E4B;&#x4E00;&#x662F;&#x5982;&#x4F55;&#x78BA;&#x5B9A; Link &#x6642;&#x6240;&#x9700;&#x7684; Object Code &#x662F;&#x7531;&#x6700;&#x65B0;&#x7684; Source &#x7DE8;&#x8B6F;&#x800C;&#x4F86;? &#x5C24;&#x5176;&#x6A21;&#x7D44;&#x9593;&#x5B58;&#x5728;&#x76F8;&#x4F9D;&#x6027;&#xFF0C;&#x5982;&#x6A21;&#x7D44; A &#x53EF;&#x80FD;&#x7528;&#x5230;&#x6A21;&#x7D44; B &#x88E1;&#x7684;&#x51FD;&#x6578;&#xFF0C;&#x5982;&#x679C; B &#x7684;&#x51FD;&#x6578;&#x6709;&#x4FEE;&#x6539;&#x53C3;&#x6578;&#xFF0C;&#x5247; A &#x6A21;&#x7D44;&#x4E5F;&#x8981;&#x91CD;&#x65B0;&#x7DE8;&#x8B6F;&#x3002;&#x63DB;&#x53E5;&#x8A71;&#x8AAA;&#x55AE;&#x770B; source code &#x548C; object code &#x7684;&#x7522;&#x751F;&#x6642;&#x9593;&#x662F;&#x4E0D;&#x884C;&#x7684;&#x3002;&#x6700;&#x7C21;&#x55AE;&#x7684;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x5728; Link &#x524D;&#x5C07;&#x6240;&#x6709;&#x7684; Source Code &#x91CD;&#x65B0;&#x7DE8;&#x8B6F;&#x4E00;&#x6B21;&#xFF0C;&#x4F46;&#x9019;&#x6A23;&#x505A;&#x6709;&#x4EE5;&#x4E0B;&#x5E7E;&#x500B;&#x554F;&#x984C;: &#x91CD;&#x65B0;&#x7DE8;&#x8B6F;&#x5927;&#x578B;&#x5C08;&#x6848;&#x5168;&#x90E8;&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#x53EF;&#x80FD;&#x6703;&#x6D6A;&#x8CBB;&#x4E0D;&#x5C11;&#x6642;&#x9593; &#x8981;&#x5C0D;&#x6BCF;&#x500B; Source File &#x4E0B;&#x9054;&#x7DE8;&#x8B6F;&#x6307;&#x4EE4;&#xFF0C;&#x4E0D;&#x4F46;&#x8CBB;&#x6642;&#xFF0C;&#x800C;&#x4E14;&#x5BB9;&#x6613;&#x907A;&#x6F0F;&#x3002;&#x5373;&#x4F7F;&#x5BEB;&#x500B;&#x6279;&#x6B21;&#x7A0B;&#x5F0F;&#xFF0C;&#x4E5F;&#x8981;&#x96A8;&#x6642;&#x8A18;&#x5F97;&#x7D0D;&#x5165;&#x65B0;&#x7684;&#x539F;&#x59CB;&#x6A94; &#x7531;&#x65BC;&#x9019;&#x4E9B;&#x554F;&#x984C;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x67D0;&#x4E9B;&#x539F;&#x59CB;&#x78BC;&#x7BA1;&#x7406;&#x7CFB;&#x7D71;&#x4FBF;&#x56E0;&#x61C9;&#x800C;&#x751F;&#xFF0C;&#x4F8B;&#x5982; UNIX &#x4E0A;&#x7684; SCCS(Source Code Control System)&#x3002;Java Compiler &#x5177;&#x6709;&#x4E0B;&#x9762;&#x5169;&#x500B;&#x529F;&#x80FD;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x6C92;&#x6709;&#x539F;&#x59CB;&#x78BC;&#x7BA1;&#x7406;&#x7CFB;&#x7D71;&#x7684;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x4E5F;&#x80FD;&#x89E3;&#x6C7A;&#x4E0A;&#x8FF0;&#x554F;&#x984C;&#xFF1A; &#x53EF;&#x4F7F;&#x7528; javac *.java &#x4F86;&#x7DE8;&#x8B6F;&#x76EE;&#x524D;&#x76EE;&#x9304;&#x4E0B;&#x7684;&#x6240;&#x6709; java &#x6A94;&#x6848; &#x7DE8;&#x8B6F; A.java &#x6642;&#xFF0C;&#x6703;&#x81EA;&#x52D5;&#x6AA2;&#x67E5; A &#x6240;&#x7528;&#x5230;&#x7684;&#x5176;&#x4ED6; class B &#xFF0C;&#x6BD4;&#x8F03; B.java &#x548C; B.class &#x7684;&#x7522;&#x751F;&#x6642;&#x9593;&#xFF0C;&#x5982;&#x679C; B.java &#x6BD4;&#x8F03;&#x65B0;&#x5247; B.java &#x5C31;&#x6703;&#x88AB;&#x91CD;&#x65B0;&#x7DE8;&#x8B6F; &#x5982;&#x679C;&#x61C9;&#x7528;&#x8EDF;&#x9AD4;&#x53EA;&#x6709;&#x55AE;&#x4E00;&#x7684;&#x9032;&#x5165;&#x9EDE;&#xFF0C;&#x4F8B;&#x5982; class A &#x7684; public static void main(String[] argv) &#xFF0C;&#x5247;&#x53EA;&#x8981;&#x7DE8;&#x8B6F; A.java &#x5C31;&#x6703;&#x81EA;&#x52D5;&#x7DE8;&#x8B6F;&#x5176;&#x4ED6;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x7DE8;&#x8B6F;&#x7684; .java &#x6A94;&#x3002;&#x5982;&#x679C;&#x61C9;&#x7528;&#x8EDF;&#x9AD4;&#x6709;&#x5169;&#x500B;&#x4EE5;&#x4E0A;&#x7684;&#x9032;&#x5165;&#x9EDE;&#xFF0C;&#x5982;&#x7DB2;&#x8DEF;&#x7A0B;&#x5F0F;&#x7684; client &#x7AEF;&#x548C; server &#x7AEF;&#x7684;&#x9032;&#x5165;&#x9EDE;&#x6703;&#x4E0D;&#x4E00;&#x6A23;&#xFF0C;&#x53EA;&#x8981;&#x5BEB;&#x500B;&#x6279;&#x6B21;&#x6A94;&#x7DE8;&#x8B6F;&#x76F8;&#x95DC;&#x9032;&#x5165;&#x9EDE;&#x7684; .java &#x6A94;&#x5373;&#x53EF;&#x3002; &#x7528; Link List &#x5BE6;&#x4F5C; Stack 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class Node { Object data; Node next; } public class Stack { private Node head; private int size; public void push (Object s) { Node tmp = new Node(); tmp.next = head; tmp.data = s; size++; head = tmp; } public Object pop () { Object tmp = head.data; head = head.next; size--; return tmp; } } Link List Stack Push Step 1 Link List Stack Push Step 2 Link List Stack Push Step 3 Link List Stack Pop 1 2 3 4 5 6 7 8 9 10 public class Example { public static void main (String[] argv) { Stack s1 = new Stack(); Stack s2 = new Stack(); s1.push( abc ); s1.push( def ); s2.push( 123 ); s2.push( 456 ); } } &#x7528; Link List &#x5BE6;&#x4F5C; Queue 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class Node { Object data; Node next; } public class Queue { private Node head, tail; private int size; public void put (Object s) { Node tmp = new Node(); tmp.data = s; if (tail != null ) { tail.next = tmp; } else { head = tmp; } tail = tmp; size++; } public Object get () { Object tmp = head.data; head = head.next; if (head == null ) { tail = null ; } size--; return tmp; } }"},"java/exception.html":{"title":"例外處理","path":"/java/exception.html","body":"簡介 所謂例外 (Exception)，指的是程式發生不正常的錯誤，而導致無法繼續執行的情形。 例外處理 (Exception Handling) 顧名思義，就是當例外發生時的處理機制。 C 語言裡並沒有例外處理的機制，使用函數庫時，可能會發生無法處理的狀況，此時必須由呼叫者小心檢查傳回值才行。如果不檢查，就會發生無法預期的結果 1 2 3 4 5 6 # include stdio.h main()  int data; FILE* f = fopen( \"sample.txt\" , \"r\" ); // sample.txt may not exist, fopen returns NULL fscanf (f, \"%d\" , &amp;data); // may result segmentation fault;  上述例子裡，如果檔案 sample.txt 不存在，則無法開啟該檔案，因此 fopen() 傳回 NULL。如果不檢查傳回值，則會產生 segmentation fault。比較好的寫法是： 1 2 3 4 5 6 7 8 9 10 # include stdio.h main()  int data; FILE* f = fopen( \"sample.txt\" , \"r\" ); // sample.txt may not exist, fopen returns NULL if (f == NULL )  printf ( \"Can't open file sample.txt. Please check if it exists and you have privilege to access.\\n\" ); return ;  fscanf (f, \"%d\" , &amp;data); // may result segmentation fault;  又例如 sqrt() 可以用來求平方根，但如果我們給他負數， sqrt() 該如何處理？ 根據手冊， sqrt() 遇到負數參數，會傳回 NaN (Not a Number，是浮點數裡的一個特別數值)。使用 sqrt() 的函數必須特別檢查該值，否則計算出來的東西都變成了 NaN 。 又例如除法運算時分母是 0 的情況，嚴格說起來也是一種錯誤，某些系統也會產生 floating exception (core dumped) 。 沒有提供例外處理機制的語言，程式的正確性必須靠極端小心的設計者才行。為了減少程式錯誤的機會，讓軟體很強固 (robust)，Java 提供了例外處理的機制。 相關語法 在 Java 裡，Exception 是一個 Class， Exception extends Throwable 、 Throwable extends Object 。 Exception 、 Throwable 這兩個類別均定義於 java.lang 這個 package 內。設計者也可以自訂自己的 Exception 類別。相關的 Exception 語法如下： 自訂 Exception 類別 1 2 3 public class MyException extends Exception  //  宣告某 method 會產生例外 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import java.io.*; public class ExceptionExample  public void someMethod () throws Exception  // 請注意throws最後面是s // some code may fail FileInputStream f; try  f = new FileInputStream( \"abc.txt\" ); // if abc.txt does not exist, FileNotFoundException will be caught  catch (FileNotFoundException fnf)  System.out.println( \"File not found. Generate an exception and throw it\" ); throw fnf; // 注意throw後面沒有s // throw new Exception(); // or you can throw a new Exception object   public static void main (String[] argv)  ExceptionExample s = new ExceptionExample(); try  s.someMethod();  catch (Exception epp)  System.out.println( \"An Exception has been caught.\" );    攔截 exception 的語法 1 2 3 4 5 6 7 8 9 10 11 try  //  catch (TypeOneException e1)  //  catch (TypeTwoException e2)  //  catch (TypeThreeException e3)  //  finally  //  try {} catch() 類似像 if then else if 的結構。 當 try {} 裡面某一行指令產生 Exception 時， try {} 區塊會立刻中斷執行，然後到第一個 catch() 判斷抓到的 Exception 是否 instanceof TypeOneException ，如果是則執行該 catch() 區塊；如果不是，則進一步比較 instanceof TypeTwoException 。 也就是說雖然可以寫很多個 catch() 區塊，但執行時最多只有一塊會執行到。 離開 try {} 或 catch() 區塊以前，如果有 finally 區塊，則 finally 區塊一定會被執行到。 一般來說 finally 區塊裡面的程式碼大多用來作資源回收，或清理資料結構的工作，以確保不論有無發生狀況，程式都能繼續正常執行。 1 2 3 4 5 6 7 8 9 10 11 try  System.out.println( \"Opening FileInputStream\" ); FileInputStream f = new FileInputStream( \"abc.txt\" ); // assume this operation generate FileNotFoundException System.out.println( \"File Opened\" );  catch (FileNotFoundException e1)  System.out.println( \"FileNotFoundException caught\" );  catch (Exception e2)  System.out.println( \"Exception caught\" );  finally  System.out.println( \"Execute finally block\" );  上述的範例會印出： 1 2 3 Opening FileInputStream FileNotFoundException caught Execute finally block 如果把上面例子稍微改一下： 1 2 3 4 5 6 7 8 9 10 11 try  System.out.println( \"Opening FileInputStream\" ); FileInputStream f = new FileInputStream( \"abc.txt\" ); // assume this operation generate FileNotFoundException System.out.println( \"File Opened\" );  catch (Exception e2)  System.out.println( \"Exception caught\" );  catch (FileNotFoundException e1)  System.out.println( \"FileNotFoundException caught\" );  finally  System.out.println( \"Execute finally block\" );  則聰明一點的 Compiler 會抱怨 FileNotFoundException 的區塊 unreachable (執行不到)。 這是因為 FileNotFoundException 是 Exception 的子類別，因此如果產生的例外是 instanceof Exception ，則 FileNotFoundException 就不會執行了；若產生的例外不是 instanceof Exception ，那就更不會執行到 FileNotFoundException 區塊了。 是否所有的 Exception 都要處理？ 原則上是的。 只要用到的 method 有宣告 throws SomeException，則呼叫該 method 的地方，就要使用 try {} catch(SomeException) 的語法。 當然像是 try {} catch(SuperClassOfSomeException) 的用法也行。唯一的例外是 java.lang.RuntimeException 及其子類別可以不必處理。 哪些屬於 RuntimeException 呢？像是 ArrayIndexOutOfBoundException 就是其中之一，它發生在陣列索引不合法的情況下： 1 2 3 4 5 6 public class Test  public static void main (String[] argv)  int [] x = new int [ 10 ]; x[ 100 ] = 0 ; // will generate ArrayIndexOutOfBoundException   exception 產生時，JVM 會由堆疊追蹤此錯誤點的呼叫資訊，並一一向外檢查，直到有 try {} catch() 區塊攔截此 exception 為止。 在上述的例子中，沒有任何 try {} catch() 的宣告，則 JVM 會終止該 執行緒 。 類別 Exception 的相關方法 抓到例外後，可透過該例外物件，得到有趣的資訊 toString() ：以簡單的字串描述該例外 getMessage() ：列出細節訊息 printStackTrace() ：將堆疊資訊印在螢幕上，可幫助設計者快速找到錯誤點 Error 前面提到 Exception 是 Throwable 的子類別。 另一個 Throwable 的子類別是 java.lang.Error 。 所謂 Error 指的是嚴重的錯誤情況。當 Error 產生時，其行為和 Exception 類似，但是 try {} catch() 區塊沒有辦法攔下它們，最後會由 JVM 來處理 Error，並中斷執行緒的執行。 像 OutOfMemoryError 、 StackOverflowError 都是 Error 的子類別。 範例 用 Link List 實作 Stack 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 public class Stack  private Node head; private int size; class Node  Object data; Node next;  public void push (Object s)  Node tmp = new Node(); tmp.next = head; tmp.data = s; size++; head = tmp;  public Object pop () throws Exception  if (head == null )  throw new Exception();  Object tmp = head.data; head = head.next; size--; return tmp;   public class Example  public static void main (String[] argv)  Stack s1 = new Stack(); Stack s2 = new Stack(); s1.push( \"abc\" ); s1.push( \"def\" ); s2.push( \"123\" ); s2.push( \"456\" ); try  s1.pop();  catch (Exception e)    public class Example2  public static void main (String[] argv) throws Exception  Stack s1 = new Stack(); Stack s2 = new Stack(); s1.push( \"abc\" ); s1.push( \"def\" ); s2.push( \"123\" ); s2.push( \"456\" ); s1.pop();   用 Link List 實作 Queue 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class Queue  private Node head, tail; private int size; class Node  Object data; Node next;  public void put (Object s)  Node tmp = new Node(); tmp.data = s; if (tail != null )  tail.next = tmp;  else  head = tmp;  tail = tmp; size++;  public Object get () throws Exception  if (head == null )  throw new Exception();  Object tmp = head.data; head = head.next; if (head == null )  tail = null ;  size--; return tmp;  "},"java/exception.html#簡介":{"title":"&#x7C21;&#x4ECB;","path":"/java/exception.html#簡介","body":"&#x6240;&#x8B02;&#x4F8B;&#x5916; (Exception)&#xFF0C;&#x6307;&#x7684;&#x662F;&#x7A0B;&#x5F0F;&#x767C;&#x751F;&#x4E0D;&#x6B63;&#x5E38;&#x7684;&#x932F;&#x8AA4;&#xFF0C;&#x800C;&#x5C0E;&#x81F4;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C;&#x7684;&#x60C5;&#x5F62;&#x3002; &#x4F8B;&#x5916;&#x8655;&#x7406; (Exception Handling) &#x9867;&#x540D;&#x601D;&#x7FA9;&#xFF0C;&#x5C31;&#x662F;&#x7576;&#x4F8B;&#x5916;&#x767C;&#x751F;&#x6642;&#x7684;&#x8655;&#x7406;&#x6A5F;&#x5236;&#x3002; C &#x8A9E;&#x8A00;&#x88E1;&#x4E26;&#x6C92;&#x6709;&#x4F8B;&#x5916;&#x8655;&#x7406;&#x7684;&#x6A5F;&#x5236;&#xFF0C;&#x4F7F;&#x7528;&#x51FD;&#x6578;&#x5EAB;&#x6642;&#xFF0C;&#x53EF;&#x80FD;&#x6703;&#x767C;&#x751F;&#x7121;&#x6CD5;&#x8655;&#x7406;&#x7684;&#x72C0;&#x6CC1;&#xFF0C;&#x6B64;&#x6642;&#x5FC5;&#x9808;&#x7531;&#x547C;&#x53EB;&#x8005;&#x5C0F;&#x5FC3;&#x6AA2;&#x67E5;&#x50B3;&#x56DE;&#x503C;&#x624D;&#x884C;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x6AA2;&#x67E5;&#xFF0C;&#x5C31;&#x6703;&#x767C;&#x751F;&#x7121;&#x6CD5;&#x9810;&#x671F;&#x7684;&#x7D50;&#x679C; 1 2 3 4 5 6 # include stdio.h main() { int data; FILE* f = fopen( sample.txt , r ); // sample.txt may not exist, fopen returns NULL fscanf (f, %d , &amp;data); // may result segmentation fault; } &#x4E0A;&#x8FF0;&#x4F8B;&#x5B50;&#x88E1;&#xFF0C;&#x5982;&#x679C;&#x6A94;&#x6848; sample.txt &#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5247;&#x7121;&#x6CD5;&#x958B;&#x555F;&#x8A72;&#x6A94;&#x6848;&#xFF0C;&#x56E0;&#x6B64; fopen() &#x50B3;&#x56DE; NULL&#x3002;&#x5982;&#x679C;&#x4E0D;&#x6AA2;&#x67E5;&#x50B3;&#x56DE;&#x503C;&#xFF0C;&#x5247;&#x6703;&#x7522;&#x751F; segmentation fault&#x3002;&#x6BD4;&#x8F03;&#x597D;&#x7684;&#x5BEB;&#x6CD5;&#x662F;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 # include stdio.h main() { int data; FILE* f = fopen( sample.txt , r ); // sample.txt may not exist, fopen returns NULL if (f == NULL ) { printf ( Can&apos;t open file sample.txt. Please check if it exists and you have privilege to access.\\n ); return ; } fscanf (f, %d , &amp;data); // may result segmentation fault; } &#x53C8;&#x4F8B;&#x5982; sqrt() &#x53EF;&#x4EE5;&#x7528;&#x4F86;&#x6C42;&#x5E73;&#x65B9;&#x6839;&#xFF0C;&#x4F46;&#x5982;&#x679C;&#x6211;&#x5011;&#x7D66;&#x4ED6;&#x8CA0;&#x6578;&#xFF0C; sqrt() &#x8A72;&#x5982;&#x4F55;&#x8655;&#x7406;&#xFF1F; &#x6839;&#x64DA;&#x624B;&#x518A;&#xFF0C; sqrt() &#x9047;&#x5230;&#x8CA0;&#x6578;&#x53C3;&#x6578;&#xFF0C;&#x6703;&#x50B3;&#x56DE; NaN (Not a Number&#xFF0C;&#x662F;&#x6D6E;&#x9EDE;&#x6578;&#x88E1;&#x7684;&#x4E00;&#x500B;&#x7279;&#x5225;&#x6578;&#x503C;)&#x3002;&#x4F7F;&#x7528; sqrt() &#x7684;&#x51FD;&#x6578;&#x5FC5;&#x9808;&#x7279;&#x5225;&#x6AA2;&#x67E5;&#x8A72;&#x503C;&#xFF0C;&#x5426;&#x5247;&#x8A08;&#x7B97;&#x51FA;&#x4F86;&#x7684;&#x6771;&#x897F;&#x90FD;&#x8B8A;&#x6210;&#x4E86; NaN &#x3002; &#x53C8;&#x4F8B;&#x5982;&#x9664;&#x6CD5;&#x904B;&#x7B97;&#x6642;&#x5206;&#x6BCD;&#x662F; 0 &#x7684;&#x60C5;&#x6CC1;&#xFF0C;&#x56B4;&#x683C;&#x8AAA;&#x8D77;&#x4F86;&#x4E5F;&#x662F;&#x4E00;&#x7A2E;&#x932F;&#x8AA4;&#xFF0C;&#x67D0;&#x4E9B;&#x7CFB;&#x7D71;&#x4E5F;&#x6703;&#x7522;&#x751F; floating exception (core dumped) &#x3002; &#x6C92;&#x6709;&#x63D0;&#x4F9B;&#x4F8B;&#x5916;&#x8655;&#x7406;&#x6A5F;&#x5236;&#x7684;&#x8A9E;&#x8A00;&#xFF0C;&#x7A0B;&#x5F0F;&#x7684;&#x6B63;&#x78BA;&#x6027;&#x5FC5;&#x9808;&#x9760;&#x6975;&#x7AEF;&#x5C0F;&#x5FC3;&#x7684;&#x8A2D;&#x8A08;&#x8005;&#x624D;&#x884C;&#x3002;&#x70BA;&#x4E86;&#x6E1B;&#x5C11;&#x7A0B;&#x5F0F;&#x932F;&#x8AA4;&#x7684;&#x6A5F;&#x6703;&#xFF0C;&#x8B93;&#x8EDF;&#x9AD4;&#x5F88;&#x5F37;&#x56FA; (robust)&#xFF0C;Java &#x63D0;&#x4F9B;&#x4E86;&#x4F8B;&#x5916;&#x8655;&#x7406;&#x7684;&#x6A5F;&#x5236;&#x3002;"},"java/exception.html#相關語法":{"title":"&#x76F8;&#x95DC;&#x8A9E;&#x6CD5;","path":"/java/exception.html#相關語法","body":"&#x5728; Java &#x88E1;&#xFF0C;Exception &#x662F;&#x4E00;&#x500B; Class&#xFF0C; Exception extends Throwable &#x3001; Throwable extends Object &#x3002; Exception &#x3001; Throwable &#x9019;&#x5169;&#x500B;&#x985E;&#x5225;&#x5747;&#x5B9A;&#x7FA9;&#x65BC; java.lang &#x9019;&#x500B; package &#x5167;&#x3002;&#x8A2D;&#x8A08;&#x8005;&#x4E5F;&#x53EF;&#x4EE5;&#x81EA;&#x8A02;&#x81EA;&#x5DF1;&#x7684; Exception &#x985E;&#x5225;&#x3002;&#x76F8;&#x95DC;&#x7684; Exception &#x8A9E;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; &#x81EA;&#x8A02; Exception &#x985E;&#x5225; 1 2 3 public class MyException extends Exception { // } &#x5BA3;&#x544A;&#x67D0; method &#x6703;&#x7522;&#x751F;&#x4F8B;&#x5916; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import java.io.*; public class ExceptionExample { public void someMethod () throws Exception { // &#x8ACB;&#x6CE8;&#x610F;throws&#x6700;&#x5F8C;&#x9762;&#x662F;s // some code may fail FileInputStream f; try { f = new FileInputStream( abc.txt ); // if abc.txt does not exist, FileNotFoundException will be caught } catch (FileNotFoundException fnf) { System.out.println( File not found. Generate an exception and throw it ); throw fnf; // &#x6CE8;&#x610F;throw&#x5F8C;&#x9762;&#x6C92;&#x6709;s // throw new Exception(); // or you can throw a new Exception object } } public static void main (String[] argv) { ExceptionExample s = new ExceptionExample(); try { s.someMethod(); } catch (Exception epp) { System.out.println( An Exception has been caught. ); } } } &#x6514;&#x622A; exception &#x7684;&#x8A9E;&#x6CD5; 1 2 3 4 5 6 7 8 9 10 11 try { // } catch (TypeOneException e1) { // } catch (TypeTwoException e2) { // } catch (TypeThreeException e3) { // } finally { // } try {} catch() &#x985E;&#x4F3C;&#x50CF; if then else if &#x7684;&#x7D50;&#x69CB;&#x3002; &#x7576; try {} &#x88E1;&#x9762;&#x67D0;&#x4E00;&#x884C;&#x6307;&#x4EE4;&#x7522;&#x751F; Exception &#x6642;&#xFF0C; try {} &#x5340;&#x584A;&#x6703;&#x7ACB;&#x523B;&#x4E2D;&#x65B7;&#x57F7;&#x884C;&#xFF0C;&#x7136;&#x5F8C;&#x5230;&#x7B2C;&#x4E00;&#x500B; catch() &#x5224;&#x65B7;&#x6293;&#x5230;&#x7684; Exception &#x662F;&#x5426; instanceof TypeOneException &#xFF0C;&#x5982;&#x679C;&#x662F;&#x5247;&#x57F7;&#x884C;&#x8A72; catch() &#x5340;&#x584A;&#xFF1B;&#x5982;&#x679C;&#x4E0D;&#x662F;&#xFF0C;&#x5247;&#x9032;&#x4E00;&#x6B65;&#x6BD4;&#x8F03; instanceof TypeTwoException &#x3002; &#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x96D6;&#x7136;&#x53EF;&#x4EE5;&#x5BEB;&#x5F88;&#x591A;&#x500B; catch() &#x5340;&#x584A;&#xFF0C;&#x4F46;&#x57F7;&#x884C;&#x6642;&#x6700;&#x591A;&#x53EA;&#x6709;&#x4E00;&#x584A;&#x6703;&#x57F7;&#x884C;&#x5230;&#x3002; &#x96E2;&#x958B; try {} &#x6216; catch() &#x5340;&#x584A;&#x4EE5;&#x524D;&#xFF0C;&#x5982;&#x679C;&#x6709; finally &#x5340;&#x584A;&#xFF0C;&#x5247; finally &#x5340;&#x584A;&#x4E00;&#x5B9A;&#x6703;&#x88AB;&#x57F7;&#x884C;&#x5230;&#x3002; &#x4E00;&#x822C;&#x4F86;&#x8AAA; finally &#x5340;&#x584A;&#x88E1;&#x9762;&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#x5927;&#x591A;&#x7528;&#x4F86;&#x4F5C;&#x8CC7;&#x6E90;&#x56DE;&#x6536;&#xFF0C;&#x6216;&#x6E05;&#x7406;&#x8CC7;&#x6599;&#x7D50;&#x69CB;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x4EE5;&#x78BA;&#x4FDD;&#x4E0D;&#x8AD6;&#x6709;&#x7121;&#x767C;&#x751F;&#x72C0;&#x6CC1;&#xFF0C;&#x7A0B;&#x5F0F;&#x90FD;&#x80FD;&#x7E7C;&#x7E8C;&#x6B63;&#x5E38;&#x57F7;&#x884C;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 try { System.out.println( Opening FileInputStream ); FileInputStream f = new FileInputStream( abc.txt ); // assume this operation generate FileNotFoundException System.out.println( File Opened ); } catch (FileNotFoundException e1) { System.out.println( FileNotFoundException caught ); } catch (Exception e2) { System.out.println( Exception caught ); } finally { System.out.println( Execute finally block ); } &#x4E0A;&#x8FF0;&#x7684;&#x7BC4;&#x4F8B;&#x6703;&#x5370;&#x51FA;&#xFF1A; 1 2 3 Opening FileInputStream FileNotFoundException caught Execute finally block &#x5982;&#x679C;&#x628A;&#x4E0A;&#x9762;&#x4F8B;&#x5B50;&#x7A0D;&#x5FAE;&#x6539;&#x4E00;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 try { System.out.println( Opening FileInputStream ); FileInputStream f = new FileInputStream( abc.txt ); // assume this operation generate FileNotFoundException System.out.println( File Opened ); } catch (Exception e2) { System.out.println( Exception caught ); } catch (FileNotFoundException e1) { System.out.println( FileNotFoundException caught ); } finally { System.out.println( Execute finally block ); } &#x5247;&#x8070;&#x660E;&#x4E00;&#x9EDE;&#x7684; Compiler &#x6703;&#x62B1;&#x6028; FileNotFoundException &#x7684;&#x5340;&#x584A; unreachable (&#x57F7;&#x884C;&#x4E0D;&#x5230;)&#x3002; &#x9019;&#x662F;&#x56E0;&#x70BA; FileNotFoundException &#x662F; Exception &#x7684;&#x5B50;&#x985E;&#x5225;&#xFF0C;&#x56E0;&#x6B64;&#x5982;&#x679C;&#x7522;&#x751F;&#x7684;&#x4F8B;&#x5916;&#x662F; instanceof Exception &#xFF0C;&#x5247; FileNotFoundException &#x5C31;&#x4E0D;&#x6703;&#x57F7;&#x884C;&#x4E86;&#xFF1B;&#x82E5;&#x7522;&#x751F;&#x7684;&#x4F8B;&#x5916;&#x4E0D;&#x662F; instanceof Exception &#xFF0C;&#x90A3;&#x5C31;&#x66F4;&#x4E0D;&#x6703;&#x57F7;&#x884C;&#x5230; FileNotFoundException &#x5340;&#x584A;&#x4E86;&#x3002; &#x662F;&#x5426;&#x6240;&#x6709;&#x7684; Exception &#x90FD;&#x8981;&#x8655;&#x7406;&#xFF1F; &#x539F;&#x5247;&#x4E0A;&#x662F;&#x7684;&#x3002; &#x53EA;&#x8981;&#x7528;&#x5230;&#x7684; method &#x6709;&#x5BA3;&#x544A; throws SomeException&#xFF0C;&#x5247;&#x547C;&#x53EB;&#x8A72; method &#x7684;&#x5730;&#x65B9;&#xFF0C;&#x5C31;&#x8981;&#x4F7F;&#x7528; try {} catch(SomeException) &#x7684;&#x8A9E;&#x6CD5;&#x3002; &#x7576;&#x7136;&#x50CF;&#x662F; try {} catch(SuperClassOfSomeException) &#x7684;&#x7528;&#x6CD5;&#x4E5F;&#x884C;&#x3002;&#x552F;&#x4E00;&#x7684;&#x4F8B;&#x5916;&#x662F; java.lang.RuntimeException &#x53CA;&#x5176;&#x5B50;&#x985E;&#x5225;&#x53EF;&#x4EE5;&#x4E0D;&#x5FC5;&#x8655;&#x7406;&#x3002; &#x54EA;&#x4E9B;&#x5C6C;&#x65BC; RuntimeException &#x5462;&#xFF1F;&#x50CF;&#x662F; ArrayIndexOutOfBoundException &#x5C31;&#x662F;&#x5176;&#x4E2D;&#x4E4B;&#x4E00;&#xFF0C;&#x5B83;&#x767C;&#x751F;&#x5728;&#x9663;&#x5217;&#x7D22;&#x5F15;&#x4E0D;&#x5408;&#x6CD5;&#x7684;&#x60C5;&#x6CC1;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 public class Test { public static void main (String[] argv) { int [] x = new int [ 10 ]; x[ 100 ] = 0 ; // will generate ArrayIndexOutOfBoundException } } exception &#x7522;&#x751F;&#x6642;&#xFF0C;JVM &#x6703;&#x7531;&#x5806;&#x758A;&#x8FFD;&#x8E64;&#x6B64;&#x932F;&#x8AA4;&#x9EDE;&#x7684;&#x547C;&#x53EB;&#x8CC7;&#x8A0A;&#xFF0C;&#x4E26;&#x4E00;&#x4E00;&#x5411;&#x5916;&#x6AA2;&#x67E5;&#xFF0C;&#x76F4;&#x5230;&#x6709; try {} catch() &#x5340;&#x584A;&#x6514;&#x622A;&#x6B64; exception &#x70BA;&#x6B62;&#x3002; &#x5728;&#x4E0A;&#x8FF0;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x6C92;&#x6709;&#x4EFB;&#x4F55; try {} catch() &#x7684;&#x5BA3;&#x544A;&#xFF0C;&#x5247; JVM &#x6703;&#x7D42;&#x6B62;&#x8A72; &#x57F7;&#x884C;&#x7DD2; &#x3002; &#x985E;&#x5225; Exception &#x7684;&#x76F8;&#x95DC;&#x65B9;&#x6CD5; &#x6293;&#x5230;&#x4F8B;&#x5916;&#x5F8C;&#xFF0C;&#x53EF;&#x900F;&#x904E;&#x8A72;&#x4F8B;&#x5916;&#x7269;&#x4EF6;&#xFF0C;&#x5F97;&#x5230;&#x6709;&#x8DA3;&#x7684;&#x8CC7;&#x8A0A; toString() &#xFF1A;&#x4EE5;&#x7C21;&#x55AE;&#x7684;&#x5B57;&#x4E32;&#x63CF;&#x8FF0;&#x8A72;&#x4F8B;&#x5916; getMessage() &#xFF1A;&#x5217;&#x51FA;&#x7D30;&#x7BC0;&#x8A0A;&#x606F; printStackTrace() &#xFF1A;&#x5C07;&#x5806;&#x758A;&#x8CC7;&#x8A0A;&#x5370;&#x5728;&#x87A2;&#x5E55;&#x4E0A;&#xFF0C;&#x53EF;&#x5E6B;&#x52A9;&#x8A2D;&#x8A08;&#x8005;&#x5FEB;&#x901F;&#x627E;&#x5230;&#x932F;&#x8AA4;&#x9EDE; Error &#x524D;&#x9762;&#x63D0;&#x5230; Exception &#x662F; Throwable &#x7684;&#x5B50;&#x985E;&#x5225;&#x3002; &#x53E6;&#x4E00;&#x500B; Throwable &#x7684;&#x5B50;&#x985E;&#x5225;&#x662F; java.lang.Error &#x3002; &#x6240;&#x8B02; Error &#x6307;&#x7684;&#x662F;&#x56B4;&#x91CD;&#x7684;&#x932F;&#x8AA4;&#x60C5;&#x6CC1;&#x3002;&#x7576; Error &#x7522;&#x751F;&#x6642;&#xFF0C;&#x5176;&#x884C;&#x70BA;&#x548C; Exception &#x985E;&#x4F3C;&#xFF0C;&#x4F46;&#x662F; try {} catch() &#x5340;&#x584A;&#x6C92;&#x6709;&#x8FA6;&#x6CD5;&#x6514;&#x4E0B;&#x5B83;&#x5011;&#xFF0C;&#x6700;&#x5F8C;&#x6703;&#x7531; JVM &#x4F86;&#x8655;&#x7406; Error&#xFF0C;&#x4E26;&#x4E2D;&#x65B7;&#x57F7;&#x884C;&#x7DD2;&#x7684;&#x57F7;&#x884C;&#x3002; &#x50CF; OutOfMemoryError &#x3001; StackOverflowError &#x90FD;&#x662F; Error &#x7684;&#x5B50;&#x985E;&#x5225;&#x3002;"},"java/exception.html#範例":{"title":"&#x7BC4;&#x4F8B;","path":"/java/exception.html#範例","body":"&#x7528; Link List &#x5BE6;&#x4F5C; Stack 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 public class Stack { private Node head; private int size; class Node { Object data; Node next; } public void push (Object s) { Node tmp = new Node(); tmp.next = head; tmp.data = s; size++; head = tmp; } public Object pop () throws Exception { if (head == null ) { throw new Exception(); } Object tmp = head.data; head = head.next; size--; return tmp; } } public class Example { public static void main (String[] argv) { Stack s1 = new Stack(); Stack s2 = new Stack(); s1.push( abc ); s1.push( def ); s2.push( 123 ); s2.push( 456 ); try { s1.pop(); } catch (Exception e) {} } } public class Example2 { public static void main (String[] argv) throws Exception { Stack s1 = new Stack(); Stack s2 = new Stack(); s1.push( abc ); s1.push( def ); s2.push( 123 ); s2.push( 456 ); s1.pop(); } } &#x7528; Link List &#x5BE6;&#x4F5C; Queue 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class Queue { private Node head, tail; private int size; class Node { Object data; Node next; } public void put (Object s) { Node tmp = new Node(); tmp.data = s; if (tail != null ) { tail.next = tmp; } else { head = tmp; } tail = tmp; size++; } public Object get () throws Exception { if (head == null ) { throw new Exception(); } Object tmp = head.data; head = head.next; if (head == null ) { tail = null ; } size--; return tmp; } }"},"java/extends.html":{"title":"繼承","path":"/java/extends.html","body":"基本觀念 Encapsulation, Message Passing 以及 Inheritance 是構成 Object-Oriented 的三大要素，如果某程式語言只具備前面兩項特性，一般成為 Object-Based。所謂 Inheritance(繼承)，是指 Sub Class(子類別) 繼承 Super Class(父類別) 後，就會自動取得父類別特性。如果子類別繼承了一個以上的父類別，則稱為 Multiple Inheritance(多重繼承)。Java 為了避開多重繼承的複雜性，class 只允許單一繼承。 Java 使用關鍵字 extends 來表達繼承觀念： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class Animal  public String moveMethod ()  return \"Unspecified\" ;   public class Bird extends Animal  public String moveMethod ()  return \"Fly\" ;   public class Dog extends Animal  public String moveMethod ()  return \"run\" ;   public class Fish extends Animal  public String moveMethod ()  return \"swim\" ;   若 class 宣告時沒有指定 extends , 則 Java 會自動 extends java.lang.Object 。 1 2 public class A   和下面的寫法相同 1 2 public class A extends java . lang . Object   UpCasting(向上轉型) 和 DownCasting(向下轉型) 所謂 casting 是指型態轉換，UpCasting 是將子類別型態的 reference 轉型為父類別型態，DownCasting 則是將父類別型態的 reference 轉型成子類別型態。由於子類別可以視為和父類別相容，如 Fish , Dog , Bird 都是一種 Animal ，因此 UpCasting 一定沒有問題： 1 2 3 Animal a; Bird b; a = b; // upcasting, Bird is a kind of Animal 父類別的 reference 可以指到子類別的 Object，這種觀念稱為 Polymorphism(多型) 。 但在 downcasting 的情況下，父類別的 reference 和子類別並不相容，如 Animal 不見得是一個 Bird ，因此必須使用 (SubClass) 的 casting 語法來做強迫轉換。 1 2 3 4 5 Animal a = new Bird(); // upcasting Bird b; b = (Bird)a; // downcasting, compile correct if (a instanceof Bird)  // true  downcasting 除了必須由設計者下達外, JVM 在 runtime 也會檢查實際的物件能否和 reference 的型態相容 1 2 3 Animal a = new Dog(); // upcasting Bird b; b = (Bird) a; // downcasting, compile correct, but runtime error 比較完整的範例如下 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 public class InheritanceExample  public static void main (String[] argv)  Animal a1, a2, a3, a4; Bird b; Dog d; Fish f; a2 = a1 = new Animal(); b = new Bird(); d = new Dog(); f = new Fish(); System.out.println(a1.moveMethod()); System.out.println(b.moveMethod()); System.out.println(d.moveMethod()); System.out.println(f.moveMethod()); a1 = b; // Correct, we call this upcasting b = a1; // Compile Error, type not compatible b = (Bird)a1; // downcasting, Compile Correct a2 = b; // Correct,we call this upcasting d = a2; // Compile Error, type not compatible d = (Dog)a2; // Compile Correct, but runtime error   Override(覆寫) 子類別重新定義它所能看到的父類別中的 method(如 public , protected ，如果子類別和父類別在同一個 package 裡，則沒有修飾字的 method 也可以)，稱為 override。 1 2 3 4 5 6 7 8 9 10 11 public class Animal  public String moveMethod ()  return \"Unspecified\" ;   public class Bird extends Animal  // override Animal's moveMethod public String moveMethod ()  return \"Fly\" ;   要特別強調的是 如果子類別看不到父類別的方法 (如父類別的 private 方法，或子父類別不在同一個 package 而子類別定義了父類別內的 package method)，則就算定義了同樣的 method，也不是 override 重複定義 static method 也不算 override 子類別不可縮小父類別方法的存取範圍 1 2 3 4 5 6 7 public class C2  public void a ()   public class C1 extends C2  protected void a ()  // Compile Error,不得縮小存取範圍   Virtual Function(虛擬函數) 在訊息傳遞的章節裡，我們有提到過 Object 接收到訊息後，是在 Runtime 才決定實際所要呼叫的 Method。由於父類別的 reference 可以指到子類別物件 (Polymorphism)，而子類別和父類別可能都定義了相同的 Method(Override)，當使用父類別 reference 傳遞訊息給子類別物件時，應該要呼叫父類別的方法還是子類別的方法？如果 呼叫子類別的方法, 則稱為 Virtual Function 呼叫父類別的方法, 則稱為 Non-Virtual Function 有些程式語言，如 C++，以上兩種機制都提供，可由設計者自行決定。但是 Java 語言為了遵循物件導向的精神，並避免設計者因語言設計複雜而犯錯，因此只提供了 Virtual Function。 1 2 3 4 5 6 7 8 9 public class InheritanceExample  public static void main (String[] argv)  Animal a1; a1 = new Animal(); System.out.println(a1.moveMethod()); // print out \"Unspecified\" a1 = new Bird(); // polymorphism System.out.println(a1.moveMethod()); // print out \"Fly\"   請注意上一小節所提到 Override 的注意事項 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Animal  public static String moveMethod ()  return \"Unspecified\" ;  public static void main (String[] argv)  Animal a1; a1 = new Bird(); System.out.println(a1.moveMethod()); // print out \"Unspecified\"   class Bird extends Animal  // we can't override static method public static String moveMethod ()  return \"Fly\" ;   上面的 moveMethod() 由於宣告為 static ，因此是依照 reference 的 type 來決定執行的 method。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Animal  private String moveMethod ()  return \"Unspecified\" ;  public static void main (String[] argv)  Animal a1; a1 = new Bird(); System.out.println(a1.moveMethod()); // print out \"Unspecified\"   class Bird extends Animal  // this is not override because Bird can't see Animal's moveMethod public String moveMethod ()  return \"Fly\" ;   由於上面 Animal 內的 moveMethod 宣告為 private ，因此執行時印出 Unspecified 。 採用 Virtual Function 的優點 Runtime 自動尋找最特定的方法 (儘量用子類別的方法)，可用父類別 reference 呼叫到子類別的方法，因此增加新的子類別時，不需要修改程式 缺點 執行起來比較慢 本章觀念整理範例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 public class Shape2D  // define super class public double area ()  // all Shape2D have their own area return 0 ;   public class Rectangle extends Shape2D  private double length, width; public Rectangle ( double l, double w)  // define constructor length = l; width = w;  public double area ()  // Override return length * width;   public class Circle extends Shape2D  private double radius; public Circle ( double r)  radius = r;  public double area ()  // Override return 3.141592654 * radius * radius;   public class Parallelogram extends Shape2D  private double top, bottom, height; public Parallelogram ( double t, double b, double h)  top = t; bottom = b; height = h;  public double area ()  // Override return (top + bottom) * height / 2.0 ;   publicclass Main  public static double sum (Shape2D[] shapes)  double total = 0 ; for ( int i = 0 ; i  shapes.length; i++)  total += shapes[i].area(); // use Virtual Function to calculate area of Shape2D // Without Virtual Function, value of Shape2D.area() will be 0  return total;  public static void main (String[] argv)  Shape2D[] data; // array of reference to Shape2D data = new Shape2D[ 5 ]; // create array object data[ 0 ] = new Rectangle( 2.4 , 3.8 ); // Polymorphism data[ 1 ] = new Circle( 3.9 ); data[ 2 ] = new Parallelogram( 3.5 , 6.7 , 10.2 ); data[ 3 ] = new Rectangle( 5.3 , 7.2 ); data[ 4 ] = new Circle( 4.6 ); System.out.println( \"Sum of all Shape2D is \" +sum(data));   如果程式語言不支援 virtual function 的話，則上面的範例就得寫成下面的形式才行 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 public class Main  // example for non-virtual function implementation public double sum (Shape2D[] shapes)  double total = 0 ; for ( int i = 0 ; i  shapes.length; i++)  if (shapes[i] instanceof Rectangle)  total += ((Rectangle)shapes[i]).area();  else if (shapes[i] instanceof Circle)  total += ((Circle)shapes[i]).area();  else if (shapes[i] instanceof Parallelogram)  total += ((Parallelogram)shapes[i]).area();  // modify source code here for new sub classes  return total;  public static void main (String[] argv)  Shape2D[] data; // array of reference to Shape2D data = new Shape2D[ 5 ]; // create array object data[ 0 ] = new Rectangle( 2.4 , 3.8 ); // Polymorphism data[ 1 ] = new Circle( 3.9 ); data[ 2 ] = new Parallelogram( 3.5 , 6.7 , 10.2 ); data[ 3 ] = new Rectangle( 5.3 , 7.2 ); data[ 4 ] = new Circle( 4.6 ); System.out.println( \"Sum of all Shape2D is \" +sum(data));   final 修飾字 final 除可用來修飾變數外，也可放在 class 和 object method 前面： 1 2 3 4 public final class FinalClass  public final void finalMethod ()    放在 class 前面表示 class 不可被繼承，放在 object method 表示不可被 Override。 繼承關係下的 Constructor 執行順序 先將所有變數設為內定值。對數值型態來說，其值為 0；對 reference 來說，其值為 null ；對 boolean 來說，其值為 false 。 呼叫父類別的 constructor。如果子類別 Constructor 裡沒有指定父類別的 Constructor，則使用父類別沒有參數的 Constructor。 執行變數宣告的初始化動作。 執行自己的 constructor。 如果要指定父類別其他的 constructor，則必須在子類別的 constructor 的第一行使用關鍵字 super 來處理。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 class Animal  int aMask = 0x00FF ; public Animal ()   public Animal ( int mask)  aMask = mask;   public class Bird extends Animal  int bMask = 0xFF00 ; int fullMask; public Bird ()  // Compiler add super() here fullMask = bMask | aMask;  public Bird ( int mask)  /* 若有super,則必須放在第一行,連變數宣告也不能擺在super前面 */ super (mask); fullMask = bMask | aMask;  public static void main (String[] argv)  Bird b = new Bird(); System.out.println(b.fullMask); b = new Bird( 0x0011 ); System.out.println(b.fullMask);   當執行 new Bird() 時，此物件內各個變數的變化如下 步驟 aMask bMask fullMask default 0 0 0 call Bird() 0 0 0 call Animal() 0 0 0 Animal initialize 0x00FF 0 0 execute Animal() 0x00FF 0 0 Bird initialize 0x00FF 0xFF00 0 execute Bird() 0x00FF 0xFF00 0xFFFF 當執行 new Bird(0x0011) 時，此物件內各個變數的變化如下 步驟 aMask bMask fullMask default 0 0 0 call Bird(0x0011) 0 0 0 call Animal(0x0011) 0 0 0 Animal initialize 0x00FF 0 0 execute Animal(0x0011) 0x0011 0 0 Bird initialize 0x0011 0xFF00 0 execute Bird(0x0011) 0x0011 0xFF00 0xFF11"},"java/extends.html#基本觀念":{"title":"&#x57FA;&#x672C;&#x89C0;&#x5FF5;","path":"/java/extends.html#基本觀念","body":"Encapsulation, Message Passing &#x4EE5;&#x53CA; Inheritance &#x662F;&#x69CB;&#x6210; Object-Oriented &#x7684;&#x4E09;&#x5927;&#x8981;&#x7D20;&#xFF0C;&#x5982;&#x679C;&#x67D0;&#x7A0B;&#x5F0F;&#x8A9E;&#x8A00;&#x53EA;&#x5177;&#x5099;&#x524D;&#x9762;&#x5169;&#x9805;&#x7279;&#x6027;&#xFF0C;&#x4E00;&#x822C;&#x6210;&#x70BA; Object-Based&#x3002;&#x6240;&#x8B02; Inheritance(&#x7E7C;&#x627F;)&#xFF0C;&#x662F;&#x6307; Sub Class(&#x5B50;&#x985E;&#x5225;) &#x7E7C;&#x627F; Super Class(&#x7236;&#x985E;&#x5225;) &#x5F8C;&#xFF0C;&#x5C31;&#x6703;&#x81EA;&#x52D5;&#x53D6;&#x5F97;&#x7236;&#x985E;&#x5225;&#x7279;&#x6027;&#x3002;&#x5982;&#x679C;&#x5B50;&#x985E;&#x5225;&#x7E7C;&#x627F;&#x4E86;&#x4E00;&#x500B;&#x4EE5;&#x4E0A;&#x7684;&#x7236;&#x985E;&#x5225;&#xFF0C;&#x5247;&#x7A31;&#x70BA; Multiple Inheritance(&#x591A;&#x91CD;&#x7E7C;&#x627F;)&#x3002;Java &#x70BA;&#x4E86;&#x907F;&#x958B;&#x591A;&#x91CD;&#x7E7C;&#x627F;&#x7684;&#x8907;&#x96DC;&#x6027;&#xFF0C;class &#x53EA;&#x5141;&#x8A31;&#x55AE;&#x4E00;&#x7E7C;&#x627F;&#x3002; Java &#x4F7F;&#x7528;&#x95DC;&#x9375;&#x5B57; extends &#x4F86;&#x8868;&#x9054;&#x7E7C;&#x627F;&#x89C0;&#x5FF5;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class Animal { public String moveMethod () { return Unspecified ; } } public class Bird extends Animal { public String moveMethod () { return Fly ; } } public class Dog extends Animal { public String moveMethod () { return run ; } } public class Fish extends Animal { public String moveMethod () { return swim ; } } &#x82E5; class &#x5BA3;&#x544A;&#x6642;&#x6C92;&#x6709;&#x6307;&#x5B9A; extends , &#x5247; Java &#x6703;&#x81EA;&#x52D5; extends java.lang.Object &#x3002; 1 2 public class A { } &#x548C;&#x4E0B;&#x9762;&#x7684;&#x5BEB;&#x6CD5;&#x76F8;&#x540C; 1 2 public class A extends java . lang . Object { }"},"java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型":{"title":"UpCasting(&#x5411;&#x4E0A;&#x8F49;&#x578B;) &#x548C; DownCasting(&#x5411;&#x4E0B;&#x8F49;&#x578B;)","path":"/java/extends.html#UpCasting-向上轉型-和-DownCasting-向下轉型","body":"&#x6240;&#x8B02; casting &#x662F;&#x6307;&#x578B;&#x614B;&#x8F49;&#x63DB;&#xFF0C;UpCasting &#x662F;&#x5C07;&#x5B50;&#x985E;&#x5225;&#x578B;&#x614B;&#x7684; reference &#x8F49;&#x578B;&#x70BA;&#x7236;&#x985E;&#x5225;&#x578B;&#x614B;&#xFF0C;DownCasting &#x5247;&#x662F;&#x5C07;&#x7236;&#x985E;&#x5225;&#x578B;&#x614B;&#x7684; reference &#x8F49;&#x578B;&#x6210;&#x5B50;&#x985E;&#x5225;&#x578B;&#x614B;&#x3002;&#x7531;&#x65BC;&#x5B50;&#x985E;&#x5225;&#x53EF;&#x4EE5;&#x8996;&#x70BA;&#x548C;&#x7236;&#x985E;&#x5225;&#x76F8;&#x5BB9;&#xFF0C;&#x5982; Fish , Dog , Bird &#x90FD;&#x662F;&#x4E00;&#x7A2E; Animal &#xFF0C;&#x56E0;&#x6B64; UpCasting &#x4E00;&#x5B9A;&#x6C92;&#x6709;&#x554F;&#x984C;&#xFF1A; 1 2 3 Animal a; Bird b; a = b; // upcasting, Bird is a kind of Animal &#x7236;&#x985E;&#x5225;&#x7684; reference &#x53EF;&#x4EE5;&#x6307;&#x5230;&#x5B50;&#x985E;&#x5225;&#x7684; Object&#xFF0C;&#x9019;&#x7A2E;&#x89C0;&#x5FF5;&#x7A31;&#x70BA; Polymorphism(&#x591A;&#x578B;) &#x3002; &#x4F46;&#x5728; downcasting &#x7684;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x7236;&#x985E;&#x5225;&#x7684; reference &#x548C;&#x5B50;&#x985E;&#x5225;&#x4E26;&#x4E0D;&#x76F8;&#x5BB9;&#xFF0C;&#x5982; Animal &#x4E0D;&#x898B;&#x5F97;&#x662F;&#x4E00;&#x500B; Bird &#xFF0C;&#x56E0;&#x6B64;&#x5FC5;&#x9808;&#x4F7F;&#x7528; (SubClass) &#x7684; casting &#x8A9E;&#x6CD5;&#x4F86;&#x505A;&#x5F37;&#x8FEB;&#x8F49;&#x63DB;&#x3002; 1 2 3 4 5 Animal a = new Bird(); // upcasting Bird b; b = (Bird)a; // downcasting, compile correct if (a instanceof Bird) { // true } downcasting &#x9664;&#x4E86;&#x5FC5;&#x9808;&#x7531;&#x8A2D;&#x8A08;&#x8005;&#x4E0B;&#x9054;&#x5916;, JVM &#x5728; runtime &#x4E5F;&#x6703;&#x6AA2;&#x67E5;&#x5BE6;&#x969B;&#x7684;&#x7269;&#x4EF6;&#x80FD;&#x5426;&#x548C; reference &#x7684;&#x578B;&#x614B;&#x76F8;&#x5BB9; 1 2 3 Animal a = new Dog(); // upcasting Bird b; b = (Bird) a; // downcasting, compile correct, but runtime error &#x6BD4;&#x8F03;&#x5B8C;&#x6574;&#x7684;&#x7BC4;&#x4F8B;&#x5982;&#x4E0B; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 public class InheritanceExample { public static void main (String[] argv) { Animal a1, a2, a3, a4; Bird b; Dog d; Fish f; a2 = a1 = new Animal(); b = new Bird(); d = new Dog(); f = new Fish(); System.out.println(a1.moveMethod()); System.out.println(b.moveMethod()); System.out.println(d.moveMethod()); System.out.println(f.moveMethod()); a1 = b; // Correct, we call this upcasting b = a1; // Compile Error, type not compatible b = (Bird)a1; // downcasting, Compile Correct a2 = b; // Correct,we call this upcasting d = a2; // Compile Error, type not compatible d = (Dog)a2; // Compile Correct, but runtime error } }"},"java/extends.html#Override-覆寫":{"title":"Override(&#x8986;&#x5BEB;)","path":"/java/extends.html#Override-覆寫","body":"&#x5B50;&#x985E;&#x5225;&#x91CD;&#x65B0;&#x5B9A;&#x7FA9;&#x5B83;&#x6240;&#x80FD;&#x770B;&#x5230;&#x7684;&#x7236;&#x985E;&#x5225;&#x4E2D;&#x7684; method(&#x5982; public , protected &#xFF0C;&#x5982;&#x679C;&#x5B50;&#x985E;&#x5225;&#x548C;&#x7236;&#x985E;&#x5225;&#x5728;&#x540C;&#x4E00;&#x500B; package &#x88E1;&#xFF0C;&#x5247;&#x6C92;&#x6709;&#x4FEE;&#x98FE;&#x5B57;&#x7684; method &#x4E5F;&#x53EF;&#x4EE5;)&#xFF0C;&#x7A31;&#x70BA; override&#x3002; 1 2 3 4 5 6 7 8 9 10 11 public class Animal { public String moveMethod () { return Unspecified ; } } public class Bird extends Animal { // override Animal&apos;s moveMethod public String moveMethod () { return Fly ; } } &#x8981;&#x7279;&#x5225;&#x5F37;&#x8ABF;&#x7684;&#x662F; &#x5982;&#x679C;&#x5B50;&#x985E;&#x5225;&#x770B;&#x4E0D;&#x5230;&#x7236;&#x985E;&#x5225;&#x7684;&#x65B9;&#x6CD5; (&#x5982;&#x7236;&#x985E;&#x5225;&#x7684; private &#x65B9;&#x6CD5;&#xFF0C;&#x6216;&#x5B50;&#x7236;&#x985E;&#x5225;&#x4E0D;&#x5728;&#x540C;&#x4E00;&#x500B; package &#x800C;&#x5B50;&#x985E;&#x5225;&#x5B9A;&#x7FA9;&#x4E86;&#x7236;&#x985E;&#x5225;&#x5167;&#x7684; package method)&#xFF0C;&#x5247;&#x5C31;&#x7B97;&#x5B9A;&#x7FA9;&#x4E86;&#x540C;&#x6A23;&#x7684; method&#xFF0C;&#x4E5F;&#x4E0D;&#x662F; override &#x91CD;&#x8907;&#x5B9A;&#x7FA9; static method &#x4E5F;&#x4E0D;&#x7B97; override &#x5B50;&#x985E;&#x5225;&#x4E0D;&#x53EF;&#x7E2E;&#x5C0F;&#x7236;&#x985E;&#x5225;&#x65B9;&#x6CD5;&#x7684;&#x5B58;&#x53D6;&#x7BC4;&#x570D; 1 2 3 4 5 6 7 public class C2 { public void a () {} } public class C1 extends C2 { protected void a () { // Compile Error,&#x4E0D;&#x5F97;&#x7E2E;&#x5C0F;&#x5B58;&#x53D6;&#x7BC4;&#x570D; } }"},"java/extends.html#Virtual-Function-虛擬函數":{"title":"Virtual Function(&#x865B;&#x64EC;&#x51FD;&#x6578;)","path":"/java/extends.html#Virtual-Function-虛擬函數","body":"&#x5728;&#x8A0A;&#x606F;&#x50B3;&#x905E;&#x7684;&#x7AE0;&#x7BC0;&#x88E1;&#xFF0C;&#x6211;&#x5011;&#x6709;&#x63D0;&#x5230;&#x904E; Object &#x63A5;&#x6536;&#x5230;&#x8A0A;&#x606F;&#x5F8C;&#xFF0C;&#x662F;&#x5728; Runtime &#x624D;&#x6C7A;&#x5B9A;&#x5BE6;&#x969B;&#x6240;&#x8981;&#x547C;&#x53EB;&#x7684; Method&#x3002;&#x7531;&#x65BC;&#x7236;&#x985E;&#x5225;&#x7684; reference &#x53EF;&#x4EE5;&#x6307;&#x5230;&#x5B50;&#x985E;&#x5225;&#x7269;&#x4EF6; (Polymorphism)&#xFF0C;&#x800C;&#x5B50;&#x985E;&#x5225;&#x548C;&#x7236;&#x985E;&#x5225;&#x53EF;&#x80FD;&#x90FD;&#x5B9A;&#x7FA9;&#x4E86;&#x76F8;&#x540C;&#x7684; Method(Override)&#xFF0C;&#x7576;&#x4F7F;&#x7528;&#x7236;&#x985E;&#x5225; reference &#x50B3;&#x905E;&#x8A0A;&#x606F;&#x7D66;&#x5B50;&#x985E;&#x5225;&#x7269;&#x4EF6;&#x6642;&#xFF0C;&#x61C9;&#x8A72;&#x8981;&#x547C;&#x53EB;&#x7236;&#x985E;&#x5225;&#x7684;&#x65B9;&#x6CD5;&#x9084;&#x662F;&#x5B50;&#x985E;&#x5225;&#x7684;&#x65B9;&#x6CD5;&#xFF1F;&#x5982;&#x679C; &#x547C;&#x53EB;&#x5B50;&#x985E;&#x5225;&#x7684;&#x65B9;&#x6CD5;, &#x5247;&#x7A31;&#x70BA; Virtual Function &#x547C;&#x53EB;&#x7236;&#x985E;&#x5225;&#x7684;&#x65B9;&#x6CD5;, &#x5247;&#x7A31;&#x70BA; Non-Virtual Function &#x6709;&#x4E9B;&#x7A0B;&#x5F0F;&#x8A9E;&#x8A00;&#xFF0C;&#x5982; C++&#xFF0C;&#x4EE5;&#x4E0A;&#x5169;&#x7A2E;&#x6A5F;&#x5236;&#x90FD;&#x63D0;&#x4F9B;&#xFF0C;&#x53EF;&#x7531;&#x8A2D;&#x8A08;&#x8005;&#x81EA;&#x884C;&#x6C7A;&#x5B9A;&#x3002;&#x4F46;&#x662F; Java &#x8A9E;&#x8A00;&#x70BA;&#x4E86;&#x9075;&#x5FAA;&#x7269;&#x4EF6;&#x5C0E;&#x5411;&#x7684;&#x7CBE;&#x795E;&#xFF0C;&#x4E26;&#x907F;&#x514D;&#x8A2D;&#x8A08;&#x8005;&#x56E0;&#x8A9E;&#x8A00;&#x8A2D;&#x8A08;&#x8907;&#x96DC;&#x800C;&#x72AF;&#x932F;&#xFF0C;&#x56E0;&#x6B64;&#x53EA;&#x63D0;&#x4F9B;&#x4E86; Virtual Function&#x3002; 1 2 3 4 5 6 7 8 9 public class InheritanceExample { public static void main (String[] argv) { Animal a1; a1 = new Animal(); System.out.println(a1.moveMethod()); // print out Unspecified a1 = new Bird(); // polymorphism System.out.println(a1.moveMethod()); // print out Fly } } &#x8ACB;&#x6CE8;&#x610F;&#x4E0A;&#x4E00;&#x5C0F;&#x7BC0;&#x6240;&#x63D0;&#x5230; Override &#x7684;&#x6CE8;&#x610F;&#x4E8B;&#x9805; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Animal { public static String moveMethod () { return Unspecified ; } public static void main (String[] argv) { Animal a1; a1 = new Bird(); System.out.println(a1.moveMethod()); // print out Unspecified } } class Bird extends Animal { // we can&apos;t override static method public static String moveMethod () { return Fly ; } } &#x4E0A;&#x9762;&#x7684; moveMethod() &#x7531;&#x65BC;&#x5BA3;&#x544A;&#x70BA; static &#xFF0C;&#x56E0;&#x6B64;&#x662F;&#x4F9D;&#x7167; reference &#x7684; type &#x4F86;&#x6C7A;&#x5B9A;&#x57F7;&#x884C;&#x7684; method&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Animal { private String moveMethod () { return Unspecified ; } public static void main (String[] argv) { Animal a1; a1 = new Bird(); System.out.println(a1.moveMethod()); // print out Unspecified } } class Bird extends Animal { // this is not override because Bird can&apos;t see Animal&apos;s moveMethod public String moveMethod () { return Fly ; } } &#x7531;&#x65BC;&#x4E0A;&#x9762; Animal &#x5167;&#x7684; moveMethod &#x5BA3;&#x544A;&#x70BA; private &#xFF0C;&#x56E0;&#x6B64;&#x57F7;&#x884C;&#x6642;&#x5370;&#x51FA; Unspecified &#x3002; &#x63A1;&#x7528; Virtual Function &#x7684;&#x512A;&#x9EDE; Runtime &#x81EA;&#x52D5;&#x5C0B;&#x627E;&#x6700;&#x7279;&#x5B9A;&#x7684;&#x65B9;&#x6CD5; (&#x5118;&#x91CF;&#x7528;&#x5B50;&#x985E;&#x5225;&#x7684;&#x65B9;&#x6CD5;)&#xFF0C;&#x53EF;&#x7528;&#x7236;&#x985E;&#x5225; reference &#x547C;&#x53EB;&#x5230;&#x5B50;&#x985E;&#x5225;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x56E0;&#x6B64;&#x589E;&#x52A0;&#x65B0;&#x7684;&#x5B50;&#x985E;&#x5225;&#x6642;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x7A0B;&#x5F0F; &#x7F3A;&#x9EDE; &#x57F7;&#x884C;&#x8D77;&#x4F86;&#x6BD4;&#x8F03;&#x6162;"},"java/extends.html#本章觀念整理範例":{"title":"&#x672C;&#x7AE0;&#x89C0;&#x5FF5;&#x6574;&#x7406;&#x7BC4;&#x4F8B;","path":"/java/extends.html#本章觀念整理範例","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 public class Shape2D { // define super class public double area () { // all Shape2D have their own area return 0 ; } } public class Rectangle extends Shape2D { private double length, width; public Rectangle ( double l, double w) { // define constructor length = l; width = w; } public double area () { // Override return length * width; } } public class Circle extends Shape2D { private double radius; public Circle ( double r) { radius = r; } public double area () { // Override return 3.141592654 * radius * radius; } } public class Parallelogram extends Shape2D { private double top, bottom, height; public Parallelogram ( double t, double b, double h) { top = t; bottom = b; height = h; } public double area () { // Override return (top + bottom) * height / 2.0 ; } } publicclass Main { public static double sum (Shape2D[] shapes) { double total = 0 ; for ( int i = 0 ; i  shapes.length; i++) { total += shapes[i].area(); // use Virtual Function to calculate area of Shape2D // Without Virtual Function, value of Shape2D.area() will be 0 } return total; } public static void main (String[] argv) { Shape2D[] data; // array of reference to Shape2D data = new Shape2D[ 5 ]; // create array object data[ 0 ] = new Rectangle( 2.4 , 3.8 ); // Polymorphism data[ 1 ] = new Circle( 3.9 ); data[ 2 ] = new Parallelogram( 3.5 , 6.7 , 10.2 ); data[ 3 ] = new Rectangle( 5.3 , 7.2 ); data[ 4 ] = new Circle( 4.6 ); System.out.println( Sum of all Shape2D is  +sum(data)); } } &#x5982;&#x679C;&#x7A0B;&#x5F0F;&#x8A9E;&#x8A00;&#x4E0D;&#x652F;&#x63F4; virtual function &#x7684;&#x8A71;&#xFF0C;&#x5247;&#x4E0A;&#x9762;&#x7684;&#x7BC4;&#x4F8B;&#x5C31;&#x5F97;&#x5BEB;&#x6210;&#x4E0B;&#x9762;&#x7684;&#x5F62;&#x5F0F;&#x624D;&#x884C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 public class Main { // example for non-virtual function implementation public double sum (Shape2D[] shapes) { double total = 0 ; for ( int i = 0 ; i  shapes.length; i++) { if (shapes[i] instanceof Rectangle) { total += ((Rectangle)shapes[i]).area(); } else if (shapes[i] instanceof Circle) { total += ((Circle)shapes[i]).area(); } else if (shapes[i] instanceof Parallelogram) { total += ((Parallelogram)shapes[i]).area(); } // modify source code here for new sub classes } return total; } public static void main (String[] argv) { Shape2D[] data; // array of reference to Shape2D data = new Shape2D[ 5 ]; // create array object data[ 0 ] = new Rectangle( 2.4 , 3.8 ); // Polymorphism data[ 1 ] = new Circle( 3.9 ); data[ 2 ] = new Parallelogram( 3.5 , 6.7 , 10.2 ); data[ 3 ] = new Rectangle( 5.3 , 7.2 ); data[ 4 ] = new Circle( 4.6 ); System.out.println( Sum of all Shape2D is  +sum(data)); } }"},"java/extends.html#final-修飾字":{"title":"final &#x4FEE;&#x98FE;&#x5B57;","path":"/java/extends.html#final-修飾字","body":"final &#x9664;&#x53EF;&#x7528;&#x4F86;&#x4FEE;&#x98FE;&#x8B8A;&#x6578;&#x5916;&#xFF0C;&#x4E5F;&#x53EF;&#x653E;&#x5728; class &#x548C; object method &#x524D;&#x9762;&#xFF1A; 1 2 3 4 public final class FinalClass { public final void finalMethod () { } } &#x653E;&#x5728; class &#x524D;&#x9762;&#x8868;&#x793A; class &#x4E0D;&#x53EF;&#x88AB;&#x7E7C;&#x627F;&#xFF0C;&#x653E;&#x5728; object method &#x8868;&#x793A;&#x4E0D;&#x53EF;&#x88AB; Override&#x3002;"},"java/extends.html#繼承關係下的-Constructor-執行順序":{"title":"&#x7E7C;&#x627F;&#x95DC;&#x4FC2;&#x4E0B;&#x7684; Constructor &#x57F7;&#x884C;&#x9806;&#x5E8F;","path":"/java/extends.html#繼承關係下的-Constructor-執行順序","body":"&#x5148;&#x5C07;&#x6240;&#x6709;&#x8B8A;&#x6578;&#x8A2D;&#x70BA;&#x5167;&#x5B9A;&#x503C;&#x3002;&#x5C0D;&#x6578;&#x503C;&#x578B;&#x614B;&#x4F86;&#x8AAA;&#xFF0C;&#x5176;&#x503C;&#x70BA; 0&#xFF1B;&#x5C0D; reference &#x4F86;&#x8AAA;&#xFF0C;&#x5176;&#x503C;&#x70BA; null &#xFF1B;&#x5C0D; boolean &#x4F86;&#x8AAA;&#xFF0C;&#x5176;&#x503C;&#x70BA; false &#x3002; &#x547C;&#x53EB;&#x7236;&#x985E;&#x5225;&#x7684; constructor&#x3002;&#x5982;&#x679C;&#x5B50;&#x985E;&#x5225; Constructor &#x88E1;&#x6C92;&#x6709;&#x6307;&#x5B9A;&#x7236;&#x985E;&#x5225;&#x7684; Constructor&#xFF0C;&#x5247;&#x4F7F;&#x7528;&#x7236;&#x985E;&#x5225;&#x6C92;&#x6709;&#x53C3;&#x6578;&#x7684; Constructor&#x3002; &#x57F7;&#x884C;&#x8B8A;&#x6578;&#x5BA3;&#x544A;&#x7684;&#x521D;&#x59CB;&#x5316;&#x52D5;&#x4F5C;&#x3002; &#x57F7;&#x884C;&#x81EA;&#x5DF1;&#x7684; constructor&#x3002; &#x5982;&#x679C;&#x8981;&#x6307;&#x5B9A;&#x7236;&#x985E;&#x5225;&#x5176;&#x4ED6;&#x7684; constructor&#xFF0C;&#x5247;&#x5FC5;&#x9808;&#x5728;&#x5B50;&#x985E;&#x5225;&#x7684; constructor &#x7684;&#x7B2C;&#x4E00;&#x884C;&#x4F7F;&#x7528;&#x95DC;&#x9375;&#x5B57; super &#x4F86;&#x8655;&#x7406;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 class Animal { int aMask = 0x00FF ; public Animal () { } public Animal ( int mask) { aMask = mask; } } public class Bird extends Animal { int bMask = 0xFF00 ; int fullMask; public Bird () { // Compiler add super() here fullMask = bMask | aMask; } public Bird ( int mask) { /* &#x82E5;&#x6709;super,&#x5247;&#x5FC5;&#x9808;&#x653E;&#x5728;&#x7B2C;&#x4E00;&#x884C;,&#x9023;&#x8B8A;&#x6578;&#x5BA3;&#x544A;&#x4E5F;&#x4E0D;&#x80FD;&#x64FA;&#x5728;super&#x524D;&#x9762; */ super (mask); fullMask = bMask | aMask; } public static void main (String[] argv) { Bird b = new Bird(); System.out.println(b.fullMask); b = new Bird( 0x0011 ); System.out.println(b.fullMask); } } &#x7576;&#x57F7;&#x884C; new Bird() &#x6642;&#xFF0C;&#x6B64;&#x7269;&#x4EF6;&#x5167;&#x5404;&#x500B;&#x8B8A;&#x6578;&#x7684;&#x8B8A;&#x5316;&#x5982;&#x4E0B; &#x6B65;&#x9A5F; aMask bMask fullMask default 0 0 0 call Bird() 0 0 0 call Animal() 0 0 0 Animal initialize 0x00FF 0 0 execute Animal() 0x00FF 0 0 Bird initialize 0x00FF 0xFF00 0 execute Bird() 0x00FF 0xFF00 0xFFFF &#x7576;&#x57F7;&#x884C; new Bird(0x0011) &#x6642;&#xFF0C;&#x6B64;&#x7269;&#x4EF6;&#x5167;&#x5404;&#x500B;&#x8B8A;&#x6578;&#x7684;&#x8B8A;&#x5316;&#x5982;&#x4E0B; &#x6B65;&#x9A5F; aMask bMask fullMask default 0 0 0 call Bird(0x0011) 0 0 0 call Animal(0x0011) 0 0 0 Animal initialize 0x00FF 0 0 execute Animal(0x0011) 0x0011 0 0 Bird initialize 0x0011 0xFF00 0 execute Bird(0x0011) 0x0011 0xFF00 0xFF11"},"java/interface.html":{"title":"介面","path":"/java/interface.html","body":"為什麼 Java 提供 Interface 雖然程式語言提供了基本資料型別，但由於各種應用都有其特定的資料結構需求，因此程式語言都提供使用者自訂型別的能力。型別自訂後，其使用的方法和基本資料型態類似。 Class 就是一種使用者自定的型別。Java 提供了 instanceof 的保留字，用以判斷某 reference 所指到的物件，其型態和某 Class 是否相容： 1 2 3 4 5 Object ref; ref = new Bird(); if (ref instanceof Animal)  // correct System.out.println( \"ref is currently pointing to an Animal Object.\" );  在物件導向的觀念裡，物件可以具有多個型別，例如：「附有橡皮擦的鉛筆」，可以當成是「書寫工具」，也可以當成是「擦拭工具」。 物件可有多種型別的觀念，不僅在日常生活中常見，在軟體開發上也有實際的需求，要使物件具有多種型別，可透過繼承來達成。 例如 Bird 物件就同時具有 Bird 和 Animal 兩種型別。 由於 Java 的 Class 只能有單一繼承，因此像「附有橡皮擦的鉛筆」同時具有「書寫工具」和「擦拭工具」兩種互不相關的型別，就無法透過 Class 的單一繼承來達成了。 許多語言提供 Class 的多重繼承，但 Java 考量諸如下面的多重繼承問題，選擇不引進 Class 多重繼承： 假設 B 繼承 A ，C 繼承 A，D 又多重繼承 B、C，該語言又使用 virtual function 則 如果 B、C 都有 overwrite A 的 methodM 方法，而 A ref 指到 D 類別的物件，請問透過 ref 傳遞 methodM 訊息時，應該使用 B 還是 C 的 methodM？ 在不引進 Class 多重繼承的前提下，為了讓物件具有多種型態，Java 提供了 Interface (界面) 的觀念。 Interface 可視為沒有實作的自訂型別，和 Class 用來作為 Object 的模板有所不同。 Class 可以宣告實作多個 Interface，而 Interface 之間可以有多重繼承。 Java 有關 Interface 的語法 宣告 Interface 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 public interface Listener  double PI = 3.14149 ; // 同public static final void listen () ; // 同public abstract  public interface Runnalbe  int PERIOD = 10 ; void run () ;  public interface AnotherRun  int PERIOD = 20 ; void run () ; int run ( int ) ;  ``` 注意上述函數宣告沒有 ``，也就是說沒有實作的意思。 * Interface 的繼承 ```java public interface ActionListener extends Listener  //  public interface MultiInterface extends Listener , Runnalbe  //  Class 實作 Interface 的宣告 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 public class A implements Listener  public void listen ()  //   public class B implements Listener , Runnable  public void listen ()  //  public void run ()  //   public class C implements MultiInterface  public void listen ()  //  public void run ()  //   public class D extends A implements Runnable , AnotherRun  public void run ()  //  public int run ( int period)  //   Interface 如同 Class 一樣可以作為一種型態的宣告，因此如下的判斷都是正確的 1 2 3 4 5 6 D ref = new D(); ref instanceof D; // true ref instanceof Runnable; // true ref instanceof AnotherRun; // true ref instanceof A; // true ref instanceof Listener; // true Interface 中宣告的變數具有以下特質 public：所謂 Interface (界面) 指的是外界觀看某物件時，所能看到的表象以及溝通的管道，因此 Interface 內的成員一定是 public。也就是說即便宣告時沒寫 public 關鍵字，Compiler 也會幫我們加上去。 static：既然 Interface 沒有實作，就不可能透過 Interface 產生物件。換言之，Interface 內的變數一定是屬於 Class，而不屬於 Object。 final：Interface 可視為一種約定或契約，我們自然不希望裡面的 variable 可以隨便更改。 Interface 中宣告的 method 具有以下特質 public：同變數說明。 abstract：Interface 沒有實作，裡面定義的 method 只是宣告而已。沒有實作的 method，在 Java 裡用 abstract 這個關鍵字來表達。有關 abstract 的詳細說明，請見 下一節 當 Interface 繼承多個 Interface，或 Class 實作多個 Interface 時，如果有多個同名的函數或變數時，應該如何處理？例如 Runnable 和 AnotherRun 這兩個界面都定義了變數 PERIOD 和方法 run。 相同變數名稱：由於 interface 內的變數具有 static 的性質，因此使用這些變數時，必須加上 Interface 的名稱才行，如 Runnable.PERIOD 、 AnotherRun.PERIOD ，因此不會造成任何混淆。 相同函數名稱：如果 signature (參數個數、型態以及傳回值型態) 完全相同，則 Class 只要實作一次即可，例如 Runnable 和 AnotherRun 均定義 void run() ，因此 Class D 只要實作一次就好了。如果同名函數符合 Overloading，把它們分別當成不同的 method 即可。如果參數完全相同，但傳回值不同，則違反了 Overloading 的原則，會產生 Compile Error。 Abstract Class and Method 只有參數宣告，沒有實作的方法，稱為 abstract method 。 某些情況下，雖然有實作，但我們希望強迫子類別必須 override 該方法時，也可以宣告為 abstract method 。 Interface 裡的方法一定沒有實作，因此必然為 abstract method 。 如果 Class 裡有一個以上的 abstract method ，則該 class 必須宣告為 abstract。 有時候即使沒有 abstract method ，也可以宣告該 class 為 abstract。我們不可以直接 new 該 class 的物件，只能 new 其子類別物件。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public abstract class AbstractExample  int x; public void abstract abstractMethod ()   public AbstractExample ()  x = 5 ;   public class SubClass extends AbstractExample  public void abstractMethod ()  // must override this method, or SubClass be declared as abstract class x = 10 ;   public class Main  public static void main (String[] argv)  AbstractExample a = new SubClass(); // correct a.abstractMethod(); // virtual function, call SubClass's abstractMethod a = new AbstractExample(); // Compile error, you can't new abstract class   綜合以上所述，可列出以下幾點特徵 具有 abstract method 的 class 必須宣告為 abstract class 。 繼承 abstract class 的子類別必須 override 所有父類別的 abstract method ，否則子類別也必須宣告為 abstract class 。 實作 Interface A 的 Class 必須實作 A 裡的所有 method，否則必須宣告自己為 abstract class 。 不能直接 new abstract class，只能 new 其非 abstract class 的子類別。"},"java/interface.html#為什麼-Java-提供-Interface":{"title":"&#x70BA;&#x4EC0;&#x9EBC; Java &#x63D0;&#x4F9B; Interface","path":"/java/interface.html#為什麼-Java-提供-Interface","body":"&#x96D6;&#x7136;&#x7A0B;&#x5F0F;&#x8A9E;&#x8A00;&#x63D0;&#x4F9B;&#x4E86;&#x57FA;&#x672C;&#x8CC7;&#x6599;&#x578B;&#x5225;&#xFF0C;&#x4F46;&#x7531;&#x65BC;&#x5404;&#x7A2E;&#x61C9;&#x7528;&#x90FD;&#x6709;&#x5176;&#x7279;&#x5B9A;&#x7684;&#x8CC7;&#x6599;&#x7D50;&#x69CB;&#x9700;&#x6C42;&#xFF0C;&#x56E0;&#x6B64;&#x7A0B;&#x5F0F;&#x8A9E;&#x8A00;&#x90FD;&#x63D0;&#x4F9B;&#x4F7F;&#x7528;&#x8005;&#x81EA;&#x8A02;&#x578B;&#x5225;&#x7684;&#x80FD;&#x529B;&#x3002;&#x578B;&#x5225;&#x81EA;&#x8A02;&#x5F8C;&#xFF0C;&#x5176;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x57FA;&#x672C;&#x8CC7;&#x6599;&#x578B;&#x614B;&#x985E;&#x4F3C;&#x3002; Class &#x5C31;&#x662F;&#x4E00;&#x7A2E;&#x4F7F;&#x7528;&#x8005;&#x81EA;&#x5B9A;&#x7684;&#x578B;&#x5225;&#x3002;Java &#x63D0;&#x4F9B;&#x4E86; instanceof &#x7684;&#x4FDD;&#x7559;&#x5B57;&#xFF0C;&#x7528;&#x4EE5;&#x5224;&#x65B7;&#x67D0; reference &#x6240;&#x6307;&#x5230;&#x7684;&#x7269;&#x4EF6;&#xFF0C;&#x5176;&#x578B;&#x614B;&#x548C;&#x67D0; Class &#x662F;&#x5426;&#x76F8;&#x5BB9;&#xFF1A; 1 2 3 4 5 Object ref; ref = new Bird(); if (ref instanceof Animal) { // correct System.out.println( ref is currently pointing to an Animal Object. ); } &#x5728;&#x7269;&#x4EF6;&#x5C0E;&#x5411;&#x7684;&#x89C0;&#x5FF5;&#x88E1;&#xFF0C;&#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x5177;&#x6709;&#x591A;&#x500B;&#x578B;&#x5225;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;&#x300C;&#x9644;&#x6709;&#x6A61;&#x76AE;&#x64E6;&#x7684;&#x925B;&#x7B46;&#x300D;&#xFF0C;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x662F;&#x300C;&#x66F8;&#x5BEB;&#x5DE5;&#x5177;&#x300D;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x662F;&#x300C;&#x64E6;&#x62ED;&#x5DE5;&#x5177;&#x300D;&#x3002; &#x7269;&#x4EF6;&#x53EF;&#x6709;&#x591A;&#x7A2E;&#x578B;&#x5225;&#x7684;&#x89C0;&#x5FF5;&#xFF0C;&#x4E0D;&#x50C5;&#x5728;&#x65E5;&#x5E38;&#x751F;&#x6D3B;&#x4E2D;&#x5E38;&#x898B;&#xFF0C;&#x5728;&#x8EDF;&#x9AD4;&#x958B;&#x767C;&#x4E0A;&#x4E5F;&#x6709;&#x5BE6;&#x969B;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x8981;&#x4F7F;&#x7269;&#x4EF6;&#x5177;&#x6709;&#x591A;&#x7A2E;&#x578B;&#x5225;&#xFF0C;&#x53EF;&#x900F;&#x904E;&#x7E7C;&#x627F;&#x4F86;&#x9054;&#x6210;&#x3002; &#x4F8B;&#x5982; Bird &#x7269;&#x4EF6;&#x5C31;&#x540C;&#x6642;&#x5177;&#x6709; Bird &#x548C; Animal &#x5169;&#x7A2E;&#x578B;&#x5225;&#x3002; &#x7531;&#x65BC; Java &#x7684; Class &#x53EA;&#x80FD;&#x6709;&#x55AE;&#x4E00;&#x7E7C;&#x627F;&#xFF0C;&#x56E0;&#x6B64;&#x50CF;&#x300C;&#x9644;&#x6709;&#x6A61;&#x76AE;&#x64E6;&#x7684;&#x925B;&#x7B46;&#x300D;&#x540C;&#x6642;&#x5177;&#x6709;&#x300C;&#x66F8;&#x5BEB;&#x5DE5;&#x5177;&#x300D;&#x548C;&#x300C;&#x64E6;&#x62ED;&#x5DE5;&#x5177;&#x300D;&#x5169;&#x7A2E;&#x4E92;&#x4E0D;&#x76F8;&#x95DC;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5C31;&#x7121;&#x6CD5;&#x900F;&#x904E; Class &#x7684;&#x55AE;&#x4E00;&#x7E7C;&#x627F;&#x4F86;&#x9054;&#x6210;&#x4E86;&#x3002; &#x8A31;&#x591A;&#x8A9E;&#x8A00;&#x63D0;&#x4F9B; Class &#x7684;&#x591A;&#x91CD;&#x7E7C;&#x627F;&#xFF0C;&#x4F46; Java &#x8003;&#x91CF;&#x8AF8;&#x5982;&#x4E0B;&#x9762;&#x7684;&#x591A;&#x91CD;&#x7E7C;&#x627F;&#x554F;&#x984C;&#xFF0C;&#x9078;&#x64C7;&#x4E0D;&#x5F15;&#x9032; Class &#x591A;&#x91CD;&#x7E7C;&#x627F;&#xFF1A; &#x5047;&#x8A2D; B &#x7E7C;&#x627F; A &#xFF0C;C &#x7E7C;&#x627F; A&#xFF0C;D &#x53C8;&#x591A;&#x91CD;&#x7E7C;&#x627F; B&#x3001;C&#xFF0C;&#x8A72;&#x8A9E;&#x8A00;&#x53C8;&#x4F7F;&#x7528; virtual function &#x5247; &#x5982;&#x679C; B&#x3001;C &#x90FD;&#x6709; overwrite A &#x7684; methodM &#x65B9;&#x6CD5;&#xFF0C;&#x800C; A ref &#x6307;&#x5230; D &#x985E;&#x5225;&#x7684;&#x7269;&#x4EF6;&#xFF0C;&#x8ACB;&#x554F;&#x900F;&#x904E; ref &#x50B3;&#x905E; methodM &#x8A0A;&#x606F;&#x6642;&#xFF0C;&#x61C9;&#x8A72;&#x4F7F;&#x7528; B &#x9084;&#x662F; C &#x7684; methodM&#xFF1F; &#x5728;&#x4E0D;&#x5F15;&#x9032; Class &#x591A;&#x91CD;&#x7E7C;&#x627F;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#xFF0C;&#x70BA;&#x4E86;&#x8B93;&#x7269;&#x4EF6;&#x5177;&#x6709;&#x591A;&#x7A2E;&#x578B;&#x614B;&#xFF0C;Java &#x63D0;&#x4F9B;&#x4E86; Interface (&#x754C;&#x9762;) &#x7684;&#x89C0;&#x5FF5;&#x3002; Interface &#x53EF;&#x8996;&#x70BA;&#x6C92;&#x6709;&#x5BE6;&#x4F5C;&#x7684;&#x81EA;&#x8A02;&#x578B;&#x5225;&#xFF0C;&#x548C; Class &#x7528;&#x4F86;&#x4F5C;&#x70BA; Object &#x7684;&#x6A21;&#x677F;&#x6709;&#x6240;&#x4E0D;&#x540C;&#x3002; Class &#x53EF;&#x4EE5;&#x5BA3;&#x544A;&#x5BE6;&#x4F5C;&#x591A;&#x500B; Interface&#xFF0C;&#x800C; Interface &#x4E4B;&#x9593;&#x53EF;&#x4EE5;&#x6709;&#x591A;&#x91CD;&#x7E7C;&#x627F;&#x3002;"},"java/interface.html#Java-有關-Interface-的語法":{"title":"Java &#x6709;&#x95DC; Interface &#x7684;&#x8A9E;&#x6CD5;","path":"/java/interface.html#Java-有關-Interface-的語法","body":"&#x5BA3;&#x544A; Interface 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 public interface Listener { double PI = 3.14149 ; // &#x540C;public static final void listen () ; // &#x540C;public abstract } public interface Runnalbe { int PERIOD = 10 ; void run () ; } public interface AnotherRun { int PERIOD = 20 ; void run () ; int run ( int ) ; } ``` &#x6CE8;&#x610F;&#x4E0A;&#x8FF0;&#x51FD;&#x6578;&#x5BA3;&#x544A;&#x6C92;&#x6709; `{}`&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x6C92;&#x6709;&#x5BE6;&#x4F5C;&#x7684;&#x610F;&#x601D;&#x3002; * Interface &#x7684;&#x7E7C;&#x627F; ```java public interface ActionListener extends Listener { // } public interface MultiInterface extends Listener , Runnalbe { // } Class &#x5BE6;&#x4F5C; Interface &#x7684;&#x5BA3;&#x544A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 public class A implements Listener { public void listen () { // } } public class B implements Listener , Runnable { public void listen () { // } public void run () { // } } public class C implements MultiInterface { public void listen () { // } public void run () { // } } public class D extends A implements Runnable , AnotherRun { public void run () { // } public int run ( int period) { // } } Interface &#x5982;&#x540C; Class &#x4E00;&#x6A23;&#x53EF;&#x4EE5;&#x4F5C;&#x70BA;&#x4E00;&#x7A2E;&#x578B;&#x614B;&#x7684;&#x5BA3;&#x544A;&#xFF0C;&#x56E0;&#x6B64;&#x5982;&#x4E0B;&#x7684;&#x5224;&#x65B7;&#x90FD;&#x662F;&#x6B63;&#x78BA;&#x7684; 1 2 3 4 5 6 D ref = new D(); ref instanceof D; // true ref instanceof Runnable; // true ref instanceof AnotherRun; // true ref instanceof A; // true ref instanceof Listener; // true Interface &#x4E2D;&#x5BA3;&#x544A;&#x7684;&#x8B8A;&#x6578;&#x5177;&#x6709;&#x4EE5;&#x4E0B;&#x7279;&#x8CEA; public&#xFF1A;&#x6240;&#x8B02; Interface (&#x754C;&#x9762;) &#x6307;&#x7684;&#x662F;&#x5916;&#x754C;&#x89C0;&#x770B;&#x67D0;&#x7269;&#x4EF6;&#x6642;&#xFF0C;&#x6240;&#x80FD;&#x770B;&#x5230;&#x7684;&#x8868;&#x8C61;&#x4EE5;&#x53CA;&#x6E9D;&#x901A;&#x7684;&#x7BA1;&#x9053;&#xFF0C;&#x56E0;&#x6B64; Interface &#x5167;&#x7684;&#x6210;&#x54E1;&#x4E00;&#x5B9A;&#x662F; public&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x5373;&#x4FBF;&#x5BA3;&#x544A;&#x6642;&#x6C92;&#x5BEB; public &#x95DC;&#x9375;&#x5B57;&#xFF0C;Compiler &#x4E5F;&#x6703;&#x5E6B;&#x6211;&#x5011;&#x52A0;&#x4E0A;&#x53BB;&#x3002; static&#xFF1A;&#x65E2;&#x7136; Interface &#x6C92;&#x6709;&#x5BE6;&#x4F5C;&#xFF0C;&#x5C31;&#x4E0D;&#x53EF;&#x80FD;&#x900F;&#x904E; Interface &#x7522;&#x751F;&#x7269;&#x4EF6;&#x3002;&#x63DB;&#x8A00;&#x4E4B;&#xFF0C;Interface &#x5167;&#x7684;&#x8B8A;&#x6578;&#x4E00;&#x5B9A;&#x662F;&#x5C6C;&#x65BC; Class&#xFF0C;&#x800C;&#x4E0D;&#x5C6C;&#x65BC; Object&#x3002; final&#xFF1A;Interface &#x53EF;&#x8996;&#x70BA;&#x4E00;&#x7A2E;&#x7D04;&#x5B9A;&#x6216;&#x5951;&#x7D04;&#xFF0C;&#x6211;&#x5011;&#x81EA;&#x7136;&#x4E0D;&#x5E0C;&#x671B;&#x88E1;&#x9762;&#x7684; variable &#x53EF;&#x4EE5;&#x96A8;&#x4FBF;&#x66F4;&#x6539;&#x3002; Interface &#x4E2D;&#x5BA3;&#x544A;&#x7684; method &#x5177;&#x6709;&#x4EE5;&#x4E0B;&#x7279;&#x8CEA; public&#xFF1A;&#x540C;&#x8B8A;&#x6578;&#x8AAA;&#x660E;&#x3002; abstract&#xFF1A;Interface &#x6C92;&#x6709;&#x5BE6;&#x4F5C;&#xFF0C;&#x88E1;&#x9762;&#x5B9A;&#x7FA9;&#x7684; method &#x53EA;&#x662F;&#x5BA3;&#x544A;&#x800C;&#x5DF2;&#x3002;&#x6C92;&#x6709;&#x5BE6;&#x4F5C;&#x7684; method&#xFF0C;&#x5728; Java &#x88E1;&#x7528; abstract &#x9019;&#x500B;&#x95DC;&#x9375;&#x5B57;&#x4F86;&#x8868;&#x9054;&#x3002;&#x6709;&#x95DC; abstract &#x7684;&#x8A73;&#x7D30;&#x8AAA;&#x660E;&#xFF0C;&#x8ACB;&#x898B; &#x4E0B;&#x4E00;&#x7BC0; &#x7576; Interface &#x7E7C;&#x627F;&#x591A;&#x500B; Interface&#xFF0C;&#x6216; Class &#x5BE6;&#x4F5C;&#x591A;&#x500B; Interface &#x6642;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x591A;&#x500B;&#x540C;&#x540D;&#x7684;&#x51FD;&#x6578;&#x6216;&#x8B8A;&#x6578;&#x6642;&#xFF0C;&#x61C9;&#x8A72;&#x5982;&#x4F55;&#x8655;&#x7406;&#xFF1F;&#x4F8B;&#x5982; Runnable &#x548C; AnotherRun &#x9019;&#x5169;&#x500B;&#x754C;&#x9762;&#x90FD;&#x5B9A;&#x7FA9;&#x4E86;&#x8B8A;&#x6578; PERIOD &#x548C;&#x65B9;&#x6CD5; run&#x3002; &#x76F8;&#x540C;&#x8B8A;&#x6578;&#x540D;&#x7A31;&#xFF1A;&#x7531;&#x65BC; interface &#x5167;&#x7684;&#x8B8A;&#x6578;&#x5177;&#x6709; static &#x7684;&#x6027;&#x8CEA;&#xFF0C;&#x56E0;&#x6B64;&#x4F7F;&#x7528;&#x9019;&#x4E9B;&#x8B8A;&#x6578;&#x6642;&#xFF0C;&#x5FC5;&#x9808;&#x52A0;&#x4E0A; Interface &#x7684;&#x540D;&#x7A31;&#x624D;&#x884C;&#xFF0C;&#x5982; Runnable.PERIOD &#x3001; AnotherRun.PERIOD &#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x6703;&#x9020;&#x6210;&#x4EFB;&#x4F55;&#x6DF7;&#x6DC6;&#x3002; &#x76F8;&#x540C;&#x51FD;&#x6578;&#x540D;&#x7A31;&#xFF1A;&#x5982;&#x679C; signature (&#x53C3;&#x6578;&#x500B;&#x6578;&#x3001;&#x578B;&#x614B;&#x4EE5;&#x53CA;&#x50B3;&#x56DE;&#x503C;&#x578B;&#x614B;) &#x5B8C;&#x5168;&#x76F8;&#x540C;&#xFF0C;&#x5247; Class &#x53EA;&#x8981;&#x5BE6;&#x4F5C;&#x4E00;&#x6B21;&#x5373;&#x53EF;&#xFF0C;&#x4F8B;&#x5982; Runnable &#x548C; AnotherRun &#x5747;&#x5B9A;&#x7FA9; void run() &#xFF0C;&#x56E0;&#x6B64; Class D &#x53EA;&#x8981;&#x5BE6;&#x4F5C;&#x4E00;&#x6B21;&#x5C31;&#x597D;&#x4E86;&#x3002;&#x5982;&#x679C;&#x540C;&#x540D;&#x51FD;&#x6578;&#x7B26;&#x5408; Overloading&#xFF0C;&#x628A;&#x5B83;&#x5011;&#x5206;&#x5225;&#x7576;&#x6210;&#x4E0D;&#x540C;&#x7684; method &#x5373;&#x53EF;&#x3002;&#x5982;&#x679C;&#x53C3;&#x6578;&#x5B8C;&#x5168;&#x76F8;&#x540C;&#xFF0C;&#x4F46;&#x50B3;&#x56DE;&#x503C;&#x4E0D;&#x540C;&#xFF0C;&#x5247;&#x9055;&#x53CD;&#x4E86; Overloading &#x7684;&#x539F;&#x5247;&#xFF0C;&#x6703;&#x7522;&#x751F; Compile Error&#x3002;"},"java/interface.html#Abstract-Class-and-Method":{"title":"Abstract Class and Method","path":"/java/interface.html#Abstract-Class-and-Method","body":"&#x53EA;&#x6709;&#x53C3;&#x6578;&#x5BA3;&#x544A;&#xFF0C;&#x6C92;&#x6709;&#x5BE6;&#x4F5C;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x7A31;&#x70BA; abstract method &#x3002; &#x67D0;&#x4E9B;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x96D6;&#x7136;&#x6709;&#x5BE6;&#x4F5C;&#xFF0C;&#x4F46;&#x6211;&#x5011;&#x5E0C;&#x671B;&#x5F37;&#x8FEB;&#x5B50;&#x985E;&#x5225;&#x5FC5;&#x9808; override &#x8A72;&#x65B9;&#x6CD5;&#x6642;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5BA3;&#x544A;&#x70BA; abstract method &#x3002; Interface &#x88E1;&#x7684;&#x65B9;&#x6CD5;&#x4E00;&#x5B9A;&#x6C92;&#x6709;&#x5BE6;&#x4F5C;&#xFF0C;&#x56E0;&#x6B64;&#x5FC5;&#x7136;&#x70BA; abstract method &#x3002; &#x5982;&#x679C; Class &#x88E1;&#x6709;&#x4E00;&#x500B;&#x4EE5;&#x4E0A;&#x7684; abstract method &#xFF0C;&#x5247;&#x8A72; class &#x5FC5;&#x9808;&#x5BA3;&#x544A;&#x70BA; abstract&#x3002; &#x6709;&#x6642;&#x5019;&#x5373;&#x4F7F;&#x6C92;&#x6709; abstract method &#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5BA3;&#x544A;&#x8A72; class &#x70BA; abstract&#x3002;&#x6211;&#x5011;&#x4E0D;&#x53EF;&#x4EE5;&#x76F4;&#x63A5; new &#x8A72; class &#x7684;&#x7269;&#x4EF6;&#xFF0C;&#x53EA;&#x80FD; new &#x5176;&#x5B50;&#x985E;&#x5225;&#x7269;&#x4EF6;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public abstract class AbstractExample { int x; public void abstract abstractMethod () { } public AbstractExample () { x = 5 ; } } public class SubClass extends AbstractExample { public void abstractMethod () { // must override this method, or SubClass be declared as abstract class x = 10 ; } } public class Main { public static void main (String[] argv) { AbstractExample a = new SubClass(); // correct a.abstractMethod(); // virtual function, call SubClass&apos;s abstractMethod a = new AbstractExample(); // Compile error, you can&apos;t new abstract class } } &#x7D9C;&#x5408;&#x4EE5;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x53EF;&#x5217;&#x51FA;&#x4EE5;&#x4E0B;&#x5E7E;&#x9EDE;&#x7279;&#x5FB5; &#x5177;&#x6709; abstract method &#x7684; class &#x5FC5;&#x9808;&#x5BA3;&#x544A;&#x70BA; abstract class &#x3002; &#x7E7C;&#x627F; abstract class &#x7684;&#x5B50;&#x985E;&#x5225;&#x5FC5;&#x9808; override &#x6240;&#x6709;&#x7236;&#x985E;&#x5225;&#x7684; abstract method &#xFF0C;&#x5426;&#x5247;&#x5B50;&#x985E;&#x5225;&#x4E5F;&#x5FC5;&#x9808;&#x5BA3;&#x544A;&#x70BA; abstract class &#x3002; &#x5BE6;&#x4F5C; Interface A &#x7684; Class &#x5FC5;&#x9808;&#x5BE6;&#x4F5C; A &#x88E1;&#x7684;&#x6240;&#x6709; method&#xFF0C;&#x5426;&#x5247;&#x5FC5;&#x9808;&#x5BA3;&#x544A;&#x81EA;&#x5DF1;&#x70BA; abstract class &#x3002; &#x4E0D;&#x80FD;&#x76F4;&#x63A5; new abstract class&#xFF0C;&#x53EA;&#x80FD; new &#x5176;&#x975E; abstract class &#x7684;&#x5B50;&#x985E;&#x5225;&#x3002;"},"java/io.html":{"title":"IO","path":"/java/io.html","body":"Java 的 IO 可分為以下幾類。 處理 byte 的類別有： InputStream 可作為 input 使用，主要的子類別有： ByteArrayInputStream 讀入來源為 byte array FileInputStream 讀入來源為 File ObjectInputStream 將其他 InputStream 加工後，可用來讀入 Object DataInputStream 將其他 InputStream 加工後, 可用來讀入 int float double boolean byte char 等基本資料型態 OutputStream 可作為 input 使用，主要的子類別有： ByteArrayOutputStream 輸出到 byte array FileOutputStream 輸出到 File ObjectOutputStream 將其他 OutputStream 加工後，可用來輸出 Object DataOutputStream 將其他 OutputStream 加工後，可用來輸出 int float double boolean byte char 等基本資料型態 PrintStream 可將各種基本資料型態和字串以文字形式輸出， System.out 就是一個 PrintStream 處理 char 的類別有： Reader 作為 char 輸入，具有將輸入編碼轉為 Unicode 編碼的能力，主要的子類別有： BufferedReader 具有緩衝功能，可讓 IO 比較有效率 CharArrayReader 由某個字元陣列作為輸入 InputStreamReader 作為 InputStream 轉為 Reader 的介面 FileReader 由檔案讀入 char Writer 作為 char 輸出，具有將 Unicode 編碼轉為輸出編碼的能力，主要的子類別有： BufferedWriter 具有緩衝功能，可讓 IO 比較有效率 CharArrayWriter 輸出到某個字元陣列 OutputStreamWriter 作為 Writer 轉到 OutputStream 的介面 FileWriter 將 char 輸出到檔案 處理檔案的類別有： File 具有新增刪除檔案、查詢檔案長度、查詢檔案屬性、查詢路徑等功能 範例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 /** * Programming Methodology Homework #2 Example. * Author: Shiuh-Sheng Yu * Date: 3/16/1998 * Last updated date: 3/17/1998 */ import java.io.*; import java.util.*; public class H2  private static String nextToken (BufferedReader din) throws IOException  StringBuffer sb = new StringBuffer(); int c; try  do  c = din.read();  while (c== ' ' || c== '\\n' || c== '\\r' || c== '\\t' ); while (c!=- 1 &amp;&amp; c!= ' ' &amp;&amp; c!= '\\n' &amp;&amp; c!= '\\t' &amp;&amp; c!= '\\r' )  sb.append(( char )c); c = din.read();   catch (EOFException e)   if (sb.length()== 0 )  return \"\" ;  return sb.toString();  private static Matrix readMatrix (BufferedReader din) throws MalMatrixException, IOException  String token = nextToken(din); int x, y; double [][] data; if (!token.equals( \"matrix\" ))  throw new MalMatrixException();  token = nextToken(din); try  x = Integer.parseInt(token);  catch (NumberFormatException eNum)  throw new MalMatrixException();  token = nextToken(din); try  y = Integer.parseInt(token);  catch (NumberFormatException eNum)  throw new MalMatrixException();  data = new double [x][y]; for ( int i= 0 ; ix; i++)  for ( int j= 0 ; jy; j++)  try  token = nextToken(din); data[i][j] = Double.valueOf(token).doubleValue();  catch (NumberFormatException eNum)  throw new MalMatrixException();    return new Matrix(data);  public static void main (String[] args)  BufferedReader din; if (args.length != 1 )  System.out.println( \"Usage: java H2 fname\" ); System.out.println( \"where fname is a file contains matrix data.\" ); System.exit( 0 );  try  String inputbuf; din = new BufferedReader( new FileReader(args[ 0 ])); for (;!(inputbuf=nextToken(din)).equals( \"\" );)  if (inputbuf.equals( \"+\" ))  Matrix a = readMatrix(din); Matrix b = readMatrix(din); a.print(); a.add(b); System.out.println( \"+\" ); b.print(); System.out.println( \"=\" ); a.print();  else if (inputbuf.equals( \"*\" ))  Matrix a = readMatrix(din); Matrix b = readMatrix(din); Matrix c = a.multiply(b); a.print(); System.out.println( \"*\" ); b.print(); System.out.println( \"=\" ); c.print();  else if (inputbuf.equals( \"value\" ))  Matrix a = readMatrix(din); System.out.println( \"value of \" ); a.print(); System.out.println( \"=\" ); System.out.println(a.determinant());  else  break ;    catch (Exception e)  e.printStackTrace(); System.exit( 1 );   "},"java/io.html#範例":{"title":"&#x7BC4;&#x4F8B;","path":"/java/io.html#範例","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 /** * Programming Methodology Homework #2 Example. * Author: Shiuh-Sheng Yu * Date: 3/16/1998 * Last updated date: 3/17/1998 */ import java.io.*; import java.util.*; public class H2 { private static String nextToken (BufferedReader din) throws IOException { StringBuffer sb = new StringBuffer(); int c; try { do { c = din.read(); } while (c== &apos; &apos; || c== &apos;\\n&apos; || c== &apos;\\r&apos; || c== &apos;\\t&apos; ); while (c!=- 1 &amp;&amp; c!= &apos; &apos; &amp;&amp; c!= &apos;\\n&apos; &amp;&amp; c!= &apos;\\t&apos; &amp;&amp; c!= &apos;\\r&apos; ) { sb.append(( char )c); c = din.read(); } } catch (EOFException e) { } if (sb.length()== 0 ) { return  ; } return sb.toString(); } private static Matrix readMatrix (BufferedReader din) throws MalMatrixException, IOException { String token = nextToken(din); int x, y; double [][] data; if (!token.equals( matrix )) { throw new MalMatrixException(); } token = nextToken(din); try { x = Integer.parseInt(token); } catch (NumberFormatException eNum) { throw new MalMatrixException(); } token = nextToken(din); try { y = Integer.parseInt(token); } catch (NumberFormatException eNum) { throw new MalMatrixException(); } data = new double [x][y]; for ( int i= 0 ; ix; i++) { for ( int j= 0 ; jy; j++) { try { token = nextToken(din); data[i][j] = Double.valueOf(token).doubleValue(); } catch (NumberFormatException eNum) { throw new MalMatrixException(); } } } return new Matrix(data); } public static void main (String[] args) { BufferedReader din; if (args.length != 1 ) { System.out.println( Usage: java H2 fname ); System.out.println( where fname is a file contains matrix data. ); System.exit( 0 ); } try { String inputbuf; din = new BufferedReader( new FileReader(args[ 0 ])); for (;!(inputbuf=nextToken(din)).equals(  );) { if (inputbuf.equals( + )) { Matrix a = readMatrix(din); Matrix b = readMatrix(din); a.print(); a.add(b); System.out.println( + ); b.print(); System.out.println( = ); a.print(); } else if (inputbuf.equals( * )) { Matrix a = readMatrix(din); Matrix b = readMatrix(din); Matrix c = a.multiply(b); a.print(); System.out.println( * ); b.print(); System.out.println( = ); c.print(); } else if (inputbuf.equals( value )) { Matrix a = readMatrix(din); System.out.println( value of  ); a.print(); System.out.println( = ); System.out.println(a.determinant()); } else { break ; } } } catch (Exception e) { e.printStackTrace(); System.exit( 1 ); } } }"},"java/java-vs-c.html":{"title":"Java 與 C 的比較","path":"/java/java-vs-c.html","body":"Java Virtual Machine C 語言的開發模式，是編寫 .c 的 Source Code，再經由 Compiler 編譯成 Object Code。所謂 Object Code 指的是和硬體相關的機器指令，也就是說當我們想要把 C 程式移植到不同的硬體時，必須要重新 Compile，以產生新的執行檔。除了需要重新編譯外，新系統是否具備應用程式所需的程式庫，include 的檔案是否相容，也是程式能否在新機器上順利編譯和執行的條件之一。 在實務上，為了讓 C 程式能在不同的 UNIX 版本上都能順利編譯，原作者往往必須使用前置處理器的 #ifdef 指令，判斷不同環境的適當寫法。如果想把在 UNIX 上開發的 C 程式移植到 Windows 上，則有用到專屬程式庫的部分 (如 UNIX 的使用者介面可能用到 X Window 的 API，Windows 就沒有支援，必須一台一台灌程式庫才行，很可能還要花錢買)，就必須重寫才行。 解決此類問題的方法之一，是定義一種 Virtual Machine(虛擬機器)，讓程式語言編譯時不要翻成實體機器的指令，而是翻成 Virtual Machine 的目的碼。Virtual Machine 一般是以軟體來模擬的，只要新的平台有 Virtual Machine，則原始程式不用 Compile，執行舊機器上已有的 Virtual Machine 目的碼，就可以了。當然要達到完全不用重新 Compile 就能執行的理想，還要配合標準的程式庫才行。 Java 語言基於上述理念，定義了 Java Virtual Machine，它所用的指令稱為 byte code。使用 Virtual Machine 的缺點之一，是執行的速度較慢，代價是開發的速度變快了。以現在的硬體來說，大部分應用程式的執行速度已經沒有那麼重要，反倒是軟體的開發速度和品質越來越值得重視。 此外 JVM 的技術不斷進步，諸如 Just In Time(JIT) Compiler，或 HotSpot 等技術都可以讓 Java 程式以非常接近原生碼 (Native Code) 的速度執行。因此不要因為某些偏頗的報告或直覺，就不使用 Java 了。 開發 Java 應用程式的工具中，最常見的是由 Java 的原創公司 Sun Micro 所出版的 JDK(Java Development Kit)。JDK 可以免費下載。以 Text Editor 寫好的 Hello.java 原始檔： 1 2 3 4 5 6 7 8 9 10 11 public class Hello  public static int gvar; public static void say (String s)  int x = 10 ; System.out.print(s+x);  public static void main (String[] argv)  float y = 0 ; say( \"Hello, world\\n\" );   這程式的C版本如下 1 2 3 4 5 6 7 8 9 10 # include stdio.h int gvar; void say ( char [] s)  int x = 10 ; printf ( \"%s%d\" , s, x);  int main ( int argc, char ** argv)  float y = 0 ; say( \"Hello, world\\n\" );  經過： $ javac Hello.java 編譯完成後會產生 byte code 格式的 Hello.class ， 然後 $ java Hello 就可以利用 Java Virtual Machine(此處是 java 這個執行檔) 來執行了。 上述過程中幾個比較會發生的問題是： javac 找不到：請設定 path 這個環境變數。 javac 抱怨 class Hello 找不到：請確定你的檔名是大寫 Hello.java ，程式內的 public class Hello 有沒有大小寫的問題。 java 抱怨找不到 main：請確定 public static void main(String[] argv) 毫無錯誤。 Java 是物件導向 (Object-Oriented) 程式語言 Java 是由 C++ 簡化來的。由於 C++ 要和 C 完全相容，又很注重效能問題，因此 C++ 算是很複雜的程式語言。Java 在設計之初，考量的重點之一就是簡單，因此和 C++ 比起來，不僅更為物件導向，而且比 C++ 容易學習。 Java 許多運算符號和敘述語法都是來自 C 語言，假設各位已經對 C 語言有所了解，本章後面的部分只將 Java 和 C 在運算符號和敘述語法上的差異點出來，相同的部分請參見 C 語言的課程內容。 資料型別 Java 語言所定義的基本資料型別有 型別名稱 位元長度 範圍 boolean 1 true 或 false byte 8 -128 ~ 127 short 16 -32768 ~ 32767 char 16 Unicode characters int 32 -2147483648 ~ 2147483647 long 64 -9223372036854775808 ~ 9223372036854775807 float 32 +-3.4028237_10+38 ~ +-1.30239846_10-45 double 64 +-1.76769313486231570_10+308 ~ 4.94065645841246544_10-324 Java 的資料型態裡沒有 unsigned。 Java 對數值型態的轉換比 C 稍微嚴格一點，下列左邊的部分都可以指定 (assignment) 給右邊的型別: byte – short – int – long – float – double 除上述外，其他型別間的轉換都必須下達型別轉換 (Type Casting) 命令來處理，其形式為圓括弧裡寫上型別名稱，如 (double) 由於 Java 在 char 的型態部分採用 Unicode，因此字元常數的表示法，除因循 C 的規則外，也可以直接指定 16 bits Unicode 編碼給 char 型別的變數。例如由 Windows 「字元對應表」 程式中可查到象棋中的紅車的 unicode 編碼為 4FE5 ，Java 可用 \\u4fe5 來表達。Java 的變數也可以用 Unicode 來命名，換句話說，你可以用中文取變數名稱。 除了這些基本資料型別外，Java 還有一個稱為 Reference(參考) 的型別。Reference 用來存取 Object(物件)，其功能和 C 語言的 pointer 用來存取記憶體有點像，但沒有 pointer 的 &amp;+- 等運算符號，而且 Reference 只能存取型態相符合的類別。宣告 Reference 的語法是 ClassName varName ，例如 String s ; 宣告 s 是一個型態為 reference 的變數，這表示我們可透過 s 來存取屬於 String 類別的物件 (s is a reference to String object)。 要特別強調的是， s 並不是物件，而是用來指向 String 物件的 reference 。打個比方， 1 2 3 4 5 6 7 public class 動物  動物 手指頭; // java 因字元編碼使用unicode, 所以可用中文當變數名稱 public static void main (String[] arg)  動物 手指頭 2 ; 手指頭 2 = new 動物();   變數 手指頭 宣告為 reference，可指向屬於 class 動物 的物件， 手指頭 不是 動物 ，而是用 手指頭 指向某隻 動物 。 1 2 3 java.lang.Float f; java.lang.Double d; java.lang.Integer i; 以上變數的型態都是 reference 運算符號 (Operator) Java 語言在運算式的部分，和 C 語言極為類似，除了沒有 sizeof , pointer 和 struct 相關的運算符號外，另外新增了  向右無號 shift，以及用來判斷物件型態的 instanceof 。Java 的常數的表示法也和 C 相同，而 Java 裡的新資料型態 boolean 的合法值為 true 和 false 兩個常數。 算術 (Arithmetic) 運算符號 運算符號 功能敘述 + 加 * 乘 - 減 / 除 % 餘數 ++ 加一 – 減一 邏輯 (logic) 運算符號 運算符號 功能敘述  大於  小於 = 大於等於 = 小於等於 == 等於 != 不等於 &amp;&amp; logic AND &#124;&#124; logic OR ! logic NOT instanceof reference instanceof ClassName 判斷 reference 所指到的物件其型態是否和 ClassName 相容 Java 語言和 C 語言有關邏輯運算最大的不同, 在於 Java 以 boolean 資料型態 (只有 true 和 false 兩種值) 判斷條件是否成立, 而 C 語言只能使用 0 或非 0。 位元 (Bit) 運算符號 運算符號 功能敘述 &amp; bit AND  left bit shift &#124; bit OR  right bit shift with sign ^ bit XOR ~ 1 補數  同  但左邊一律補零 其他運算符號 運算符號 功能敘述 = 將右邊的值複製到左邊的變數 (type) 將右邊的數值或 reference 轉換成 type 型別 += 將右邊的數值加上左邊的數值然後指定給左邊的變數 ?: 若 ? 左邊成立則做 : 左邊否則做 : 右邊 , 合併兩個運算視為一個敘述 (運算式) 表示 () 內優先運算 . Reference.ObjectMember 或 ClassName.ClassName 存取物件或類別成員 new 產生物件 優先權 種類 運算符號 結合順序 group (op) left to right postfix [] . (params) op++ op– right to left prefix ++op –op +op -op ~ ! right to left creation or casting new (type)op right to left multiplicative * / % left to right additive + - left to right shift   left to right relational  == instanceof == left to right equality == != left to right bitwise and &amp; left to right bitwise exclusive or ^ left to right bitwise inclusive or &#124; left to right logical and &amp;&amp; left to right logical or &#124;&#124; left to right conditional ? : right to left assignment = += -= *= /= %= &amp;= ^= &#124;= == = right to left seperator , left to right 流程控制敘述 Java 的流程控制敘述和 C 語言極為類似, 不同處在於 break 和 continue 兩個指令。Java 的 break 和 continue 指令後面可以加上標籤, 以指示要跳出或繼續的範圍。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class BreakContinueExample  public static void main (String[] argv)  int i, j; outerLoop: for (i = 0 ; i  100 ; i++)  innerLoop: for (j = 0 ; j  100 ; j++)  if (j == 50 &amp;&amp; i == 50 )  break outerLoop;    System.out.println( \"Loop have been terminated.\" );   在上面的例子中, 當 j == 50 且 i == 50 時， break 指令會跳出最外面的迴圈，直接印出迴圈終止訊息。如果 break 後面沒有 outerLoop 的話，只會跳出裡面的迴圈，然後 i 從 51 繼續做下去。 字串 C 語言定義以 0 結尾的字元陣列就是字串。但對 Java 來說，字串是由 String 類別來表達，也就是說 String 是物件而不是陣列。由於我們經常使用字串，為了寫作程式方便起見，Java Compiler 碰到 + 符號某一邊的型態是 String 時，就會把 + 翻譯成 StringBuffer 類別裡相對應的 append Method。例如： 1 2 3 4 5 6 7 public class StringTest  public static void main (String[] argv)  int x = 5 ; float y = 1.5 ; System.out.println( \"x = \" + x + \", y = \" + y);   會翻譯成： 1 2 3 4 5 6 7 public class StringTest  public static void main (String[] argv)  int x = 5 ; float y = 1.5 ; System.out.println(( new StringBuffer( \"x = \" )).append(x).append( \", y = \" ).append(y).toString());   如果你會 C++，看到 Java 字串 + 符號的語法，千萬不要以為 Java 支援 operator overloading。Java 只是透過 Compiler 來做特別的轉換，稱這種技術為 Compiler Sugar 比較適合。 Java 語言的寫作風格 寫作 Java 程式時，請注意下列幾種風格 Class Name 請首字大寫 Variable Name 和 Method Name 請首字小寫 如果名稱由數個英文字組成，第二個英文字以後首字大寫 內縮四個空格 註解部分如要變成說明文件，請遵照 javadoc 這個工具的寫作規則 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /** * 第一行的兩個**用來告訴javadoc此部份註解要變成HTML文件的一部份 * 這段註解裡的所有文字都會變成此類別一開頭的說明 */ public class Hello  // Class Name首字大寫 /** * 此段註解會變成描述main方法的一部分 * @param argv 使用 @param 註記會產生參數(parameter)argv的相關說明 * @return 傳回值的意義說明 */ public static void main (String[] argv)  // Method Name首字小寫 // argv: array of references to String object int myVariable; // 變數宣告 int i, sum; for (i = 1 , sum = 0 ; i = 100 ; i++)  sum += i;  System.out.println( \"summation from 1 to 100 is \" +sum);   運算符號範例 攝氏溫度轉華氏溫度 1 2 3 4 5 6 public class Example  public static void main (String[] argv)  float degree = 100.0 ; System.out.println( \"100C=\" + (degree * 9.0 / 5.0 + 32.0 ));   華氏溫度轉攝氏溫度 怎麼寫呢? 1 + 2 + ... + n 的總合 1 2 3 4 5 6 public class Example  public static void main (String[] argv)  int n = 100 ; System.out.println( \"1+2+...+\" +n+ \" = \" + ( n * (n + 1 ) / 2 ));   特別注意上述的運算式裡 /2 要放到最後面，如果寫成 n/2*(n+1) ，從數學式子的角度看好像沒問題，但別忘了，binary operator 的兩邊必須是同樣型別的資料，而且計算的結果也是同樣的型別。因此 n/2*(n+1) 會先計算 n/2 ，如果 n 不能被 2 整除的話，那麼為了符合計算結果必須是整數的限制，則小數點的部份就會無條件捨去，使得計算的結果錯誤。下面的範例一樣要注意相同的問題。 1 2 + 2 2 + … + n 2 的總和 怎麼寫? 把浮點數四捨五入為整數 Java 語言規定浮點數轉整數時，小數點部分無條件捨去。如果要達到浮點數四捨五入為整數的效果，可以使用下面的小技巧 1 2 3 4 5 6 7 8 9 10 public class Example  public static void main (String[] argv)  double x = 20.6 ; System.out.println(x + \" 四捨五入成為 \" + ( int )(x+ 0.5 )); System.out.println(x + \" 四捨五入成為 \" + round(x));  static int round ( double y)  return ( int )(y + 0.5 );   迴圈範例 寫一程式輸入 5 個整數數字，計算其總合和平均。解析： 需要 1 個變數紀錄到目前為止所有 inputNum 的總和，稱此變數為 sum ，其初始值為 0 以迴圈執行 5 次，每次輸入數字加總到 sum ，迴圈執行的次數以變數 i 來代表 平均數為 sum/5 如何讀入資料? 1 2 3 4 5 6 7 8 9 10 11 12 import java.util.Scanner; public class Example  public static void main (String[] argv)  int sum = 0 , i = 0 ; Scanner in = new Scanner(System.in); while (i  5 &amp;&amp; in.hasNextInt())  sum = sum + in.nextInt(); i++;  System.out.println( \"sum is \" +sum \", average is \" +(sum/ 5.0 ));   寫一函數輸入參數 int n , 傳回 1 + 2 + 3 ... + n 的總合。解析： 要想辦法拜訪 1, 2, 3, ..., n 的每一個數字一次 可用 for (i = 1; i = n; i++) 的形式達成上述目標 拜訪到這些數字時，就把它們加起來 1 2 3 4 5 6 7 8 9 10 11 12 public class Example  public static int sum ( int n)  int total = 0 ; // 紀錄到目前為止的總和 for ( int i = 1 ; i = n; i++)  total += i;  return total;  public static void main (String[] argv)  System.out.println(sum( 100 ));   寫一函數輸入參數 int n , 傳回 1 + 3 + 5 ... + n 的總合。解析： 要想辦法拜訪 1, 3, 5, ..., n 的每一個數字一次，也就是從 1 開始每次加 2 可用 for (i = 1; i = n; i += 2) 的形式達成上述目標 拜訪到這些數字時，就把它們加起來 怎麼寫? 寫一函數於螢幕上畫出九九乘法表。解析： 總共有 i = 1..9 列， j = 1..9 行，對第 i 列第 j 行元素來說，其數值為 i*j 1 2 3 4 5 6 7 8 9 10 public class Example  public static void main (String[] argv)  for ( int i = 1 ; i = 9 ; i++)  for ( int j = 1 ; j = 9 ; j++)  System.out.print( \" \" + (i * j));  System.out.println();    輸入參數 int size ，並在螢幕上印出正方形， size = 3 的樣子如下 1 2 3 *** *** *** 解析 螢幕上的游標只能由上而下，由左而右，無法回頭。 此圖形共有 1 .. size 列，每列有 size 個 * ，因此可用兩層迴圈來做。 要讓一個敘述執行 size 次，可用 for ( i = 1; i = size; i++ ) 的形式來達成 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class Example  public static void print ( int size)  int i, j; // 第i列,第j行 for (i = 1 ; i = size; i++)  // 印出第i列 for (j = 1 ; j = size; j++)  // 第i列有size個* System.out.print( \"*\" );  System.out.println();   public static void main (String[] argv) throws Exception  BufferedReader in = new BufferedReader( new InputStreamReader(System.in)); print(Integer.parseInt(in.readLine()));   輸入參數 int size ，並在螢幕上印出直角三角形， size = 3 的樣子如下 1 2 3 * ** *** 解析 螢幕上的游標只能由上而下，由左而右，無法回頭。 此圖形共有 1 .. size 列，第 i 列有個 * ，因此可用兩層迴圈來做。 怎麼寫? 撰寫一函數輸入 int size ，並在螢幕上印出等腰的三角形， size = 3 的樣子如下 1 2 3 * *** ***** 解析 總共有 1 .. size 列，對第 i 列而言，有 size - i 個空格，以及 (2 * i- 1) 個 * 怎麼寫? 寫一函數求兩個整數的最大公因數，解析： 此函數需要兩個參數 x , y 當 y 不能整除 x 時，將 x 設成為 y ， y 設為 x % y ，重複此步驟直到 x % y 為 0 此時 y 就是這兩個數的最大公因數 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class Example  public static void main (String[] argv)  System.out.println(gcd( 12 , 18 ));  public static int gcd ( int x, int y)  int tmp; // 如果x  y 則下面的迴圈執行第一次時就會交換x,y了 while (x % y != 0 )  tmp = y; y = x % y; x = tmp;  return y;   寫一函數求兩個整數的最小公倍數 怎麼寫? 寫一函數求費氏數，解析： F(n) = n , if n = 1; F(n) = F(n-1) + F(n-2) , otherwise 可定義兩變數 fn_1 , fn_2 表示最近兩個找出的費氏數 下一個費氏數依定義為 fn_1 + fn_2 找到最新的費氏數後, 最近的兩個費氏數就變成了 fn_1 + fn_2 以及 fn_1 以變數 i 紀錄目前要求的是哪一個費氏數 以變數 tmp 作為更新最新兩個費氏數所需的記憶體空間 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public class Example  public static void main (String[] argv)  System.out.println(fab( 5 ));  public static int fab ( int n)  int fn_1 = 1 , fn_2 = 0 ; // 紀錄最近找到的兩個費氏數 int i, tmp; // i表示目前要找F(i) if (n = 1 ) return n; for (i = 2 ; i = n; i++)  tmp = fn_1; // 先把fn_1紀錄在tmp fn_1 += fn_2; // 最新的費氏數是前面兩個相加 fn_2 = tmp; // 第二新的就是原先的fn_1  return fn_1;   遞迴 (recursion) 範例 求 1 + 2 + 3 + ... + n 解析 邊際條件是 n = 1 時，總合為 1 該函數可定成 int sum(int n) sum(n) = n + sum(n - 1) 1 2 3 4 5 6 7 8 9 10 11 public class Example  public static void main (String[] argv)  System.out.println(sum( 100 ));  public static int sum ( int n)  if (n == 1 )  return 1 ;  return n + sum(n - 1 );   以遞迴計算 1 * 2 + 2 * 3 + 3 * 4 + ... + (n-1) * n 之和 怎麼寫? 利用遞迴求得 A 的 B 次方 1 2 3 4 5 6 7 8 9 10 11 public class Example  public static void main (String[] argv)  System.out.println(power( 2 , 6 ));  public static int power ( int a, int b)  switch (b)  case 0 : return 1 ; case 1 : return a; default : return (a * power(a, b - 1 ));   以遞迴求兩個整數 m , n 的最大公因數 解析 如果 n == 0 ，則最大公因數為 m 如果 n 不等於 0 ，則最大公因數為 gcd(m, n) == gcd(n, m%n) 怎麼寫? 費式數列 解析 費氏數列的定義為 F(n) = n , if n = 1 F(n) = F(n-1) + F(n-2), if n  1 。 1 2 3 4 5 6 7 8 9 10 11 public class Example  public static void main (String[] argv)  System.out.println(fab( 5 ));  public static int fab ( int num)  if (num = 1 )  return num;  return fab(num - 1 ) + fab(num - 2 );   Ackerman 函數 A(m, n) 定義為 n + 1, if m = 0 A(m - 1, 1), if n = 0 A(m - 1, A(m, n - 1)) , otherwise 怎麼寫?"},"java/java-vs-c.html#Java-Virtual-Machine":{"title":"Java Virtual Machine","path":"/java/java-vs-c.html#Java-Virtual-Machine","body":"C &#x8A9E;&#x8A00;&#x7684;&#x958B;&#x767C;&#x6A21;&#x5F0F;&#xFF0C;&#x662F;&#x7DE8;&#x5BEB; .c &#x7684; Source Code&#xFF0C;&#x518D;&#x7D93;&#x7531; Compiler &#x7DE8;&#x8B6F;&#x6210; Object Code&#x3002;&#x6240;&#x8B02; Object Code &#x6307;&#x7684;&#x662F;&#x548C;&#x786C;&#x9AD4;&#x76F8;&#x95DC;&#x7684;&#x6A5F;&#x5668;&#x6307;&#x4EE4;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x7576;&#x6211;&#x5011;&#x60F3;&#x8981;&#x628A; C &#x7A0B;&#x5F0F;&#x79FB;&#x690D;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x786C;&#x9AD4;&#x6642;&#xFF0C;&#x5FC5;&#x9808;&#x8981;&#x91CD;&#x65B0; Compile&#xFF0C;&#x4EE5;&#x7522;&#x751F;&#x65B0;&#x7684;&#x57F7;&#x884C;&#x6A94;&#x3002;&#x9664;&#x4E86;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x7DE8;&#x8B6F;&#x5916;&#xFF0C;&#x65B0;&#x7CFB;&#x7D71;&#x662F;&#x5426;&#x5177;&#x5099;&#x61C9;&#x7528;&#x7A0B;&#x5F0F;&#x6240;&#x9700;&#x7684;&#x7A0B;&#x5F0F;&#x5EAB;&#xFF0C;include &#x7684;&#x6A94;&#x6848;&#x662F;&#x5426;&#x76F8;&#x5BB9;&#xFF0C;&#x4E5F;&#x662F;&#x7A0B;&#x5F0F;&#x80FD;&#x5426;&#x5728;&#x65B0;&#x6A5F;&#x5668;&#x4E0A;&#x9806;&#x5229;&#x7DE8;&#x8B6F;&#x548C;&#x57F7;&#x884C;&#x7684;&#x689D;&#x4EF6;&#x4E4B;&#x4E00;&#x3002; &#x5728;&#x5BE6;&#x52D9;&#x4E0A;&#xFF0C;&#x70BA;&#x4E86;&#x8B93; C &#x7A0B;&#x5F0F;&#x80FD;&#x5728;&#x4E0D;&#x540C;&#x7684; UNIX &#x7248;&#x672C;&#x4E0A;&#x90FD;&#x80FD;&#x9806;&#x5229;&#x7DE8;&#x8B6F;&#xFF0C;&#x539F;&#x4F5C;&#x8005;&#x5F80;&#x5F80;&#x5FC5;&#x9808;&#x4F7F;&#x7528;&#x524D;&#x7F6E;&#x8655;&#x7406;&#x5668;&#x7684; #ifdef &#x6307;&#x4EE4;&#xFF0C;&#x5224;&#x65B7;&#x4E0D;&#x540C;&#x74B0;&#x5883;&#x7684;&#x9069;&#x7576;&#x5BEB;&#x6CD5;&#x3002;&#x5982;&#x679C;&#x60F3;&#x628A;&#x5728; UNIX &#x4E0A;&#x958B;&#x767C;&#x7684; C &#x7A0B;&#x5F0F;&#x79FB;&#x690D;&#x5230; Windows &#x4E0A;&#xFF0C;&#x5247;&#x6709;&#x7528;&#x5230;&#x5C08;&#x5C6C;&#x7A0B;&#x5F0F;&#x5EAB;&#x7684;&#x90E8;&#x5206; (&#x5982; UNIX &#x7684;&#x4F7F;&#x7528;&#x8005;&#x4ECB;&#x9762;&#x53EF;&#x80FD;&#x7528;&#x5230; X Window &#x7684; API&#xFF0C;Windows &#x5C31;&#x6C92;&#x6709;&#x652F;&#x63F4;&#xFF0C;&#x5FC5;&#x9808;&#x4E00;&#x53F0;&#x4E00;&#x53F0;&#x704C;&#x7A0B;&#x5F0F;&#x5EAB;&#x624D;&#x884C;&#xFF0C;&#x5F88;&#x53EF;&#x80FD;&#x9084;&#x8981;&#x82B1;&#x9322;&#x8CB7;)&#xFF0C;&#x5C31;&#x5FC5;&#x9808;&#x91CD;&#x5BEB;&#x624D;&#x884C;&#x3002; &#x89E3;&#x6C7A;&#x6B64;&#x985E;&#x554F;&#x984C;&#x7684;&#x65B9;&#x6CD5;&#x4E4B;&#x4E00;&#xFF0C;&#x662F;&#x5B9A;&#x7FA9;&#x4E00;&#x7A2E; Virtual Machine(&#x865B;&#x64EC;&#x6A5F;&#x5668;)&#xFF0C;&#x8B93;&#x7A0B;&#x5F0F;&#x8A9E;&#x8A00;&#x7DE8;&#x8B6F;&#x6642;&#x4E0D;&#x8981;&#x7FFB;&#x6210;&#x5BE6;&#x9AD4;&#x6A5F;&#x5668;&#x7684;&#x6307;&#x4EE4;&#xFF0C;&#x800C;&#x662F;&#x7FFB;&#x6210; Virtual Machine &#x7684;&#x76EE;&#x7684;&#x78BC;&#x3002;Virtual Machine &#x4E00;&#x822C;&#x662F;&#x4EE5;&#x8EDF;&#x9AD4;&#x4F86;&#x6A21;&#x64EC;&#x7684;&#xFF0C;&#x53EA;&#x8981;&#x65B0;&#x7684;&#x5E73;&#x53F0;&#x6709; Virtual Machine&#xFF0C;&#x5247;&#x539F;&#x59CB;&#x7A0B;&#x5F0F;&#x4E0D;&#x7528; Compile&#xFF0C;&#x57F7;&#x884C;&#x820A;&#x6A5F;&#x5668;&#x4E0A;&#x5DF2;&#x6709;&#x7684; Virtual Machine &#x76EE;&#x7684;&#x78BC;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x7576;&#x7136;&#x8981;&#x9054;&#x5230;&#x5B8C;&#x5168;&#x4E0D;&#x7528;&#x91CD;&#x65B0; Compile &#x5C31;&#x80FD;&#x57F7;&#x884C;&#x7684;&#x7406;&#x60F3;&#xFF0C;&#x9084;&#x8981;&#x914D;&#x5408;&#x6A19;&#x6E96;&#x7684;&#x7A0B;&#x5F0F;&#x5EAB;&#x624D;&#x884C;&#x3002; Java &#x8A9E;&#x8A00;&#x57FA;&#x65BC;&#x4E0A;&#x8FF0;&#x7406;&#x5FF5;&#xFF0C;&#x5B9A;&#x7FA9;&#x4E86; Java Virtual Machine&#xFF0C;&#x5B83;&#x6240;&#x7528;&#x7684;&#x6307;&#x4EE4;&#x7A31;&#x70BA; byte code&#x3002;&#x4F7F;&#x7528; Virtual Machine &#x7684;&#x7F3A;&#x9EDE;&#x4E4B;&#x4E00;&#xFF0C;&#x662F;&#x57F7;&#x884C;&#x7684;&#x901F;&#x5EA6;&#x8F03;&#x6162;&#xFF0C;&#x4EE3;&#x50F9;&#x662F;&#x958B;&#x767C;&#x7684;&#x901F;&#x5EA6;&#x8B8A;&#x5FEB;&#x4E86;&#x3002;&#x4EE5;&#x73FE;&#x5728;&#x7684;&#x786C;&#x9AD4;&#x4F86;&#x8AAA;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x61C9;&#x7528;&#x7A0B;&#x5F0F;&#x7684;&#x57F7;&#x884C;&#x901F;&#x5EA6;&#x5DF2;&#x7D93;&#x6C92;&#x6709;&#x90A3;&#x9EBC;&#x91CD;&#x8981;&#xFF0C;&#x53CD;&#x5012;&#x662F;&#x8EDF;&#x9AD4;&#x7684;&#x958B;&#x767C;&#x901F;&#x5EA6;&#x548C;&#x54C1;&#x8CEA;&#x8D8A;&#x4F86;&#x8D8A;&#x503C;&#x5F97;&#x91CD;&#x8996;&#x3002; &#x6B64;&#x5916; JVM &#x7684;&#x6280;&#x8853;&#x4E0D;&#x65B7;&#x9032;&#x6B65;&#xFF0C;&#x8AF8;&#x5982; Just In Time(JIT) Compiler&#xFF0C;&#x6216; HotSpot &#x7B49;&#x6280;&#x8853;&#x90FD;&#x53EF;&#x4EE5;&#x8B93; Java &#x7A0B;&#x5F0F;&#x4EE5;&#x975E;&#x5E38;&#x63A5;&#x8FD1;&#x539F;&#x751F;&#x78BC; (Native Code) &#x7684;&#x901F;&#x5EA6;&#x57F7;&#x884C;&#x3002;&#x56E0;&#x6B64;&#x4E0D;&#x8981;&#x56E0;&#x70BA;&#x67D0;&#x4E9B;&#x504F;&#x9817;&#x7684;&#x5831;&#x544A;&#x6216;&#x76F4;&#x89BA;&#xFF0C;&#x5C31;&#x4E0D;&#x4F7F;&#x7528; Java &#x4E86;&#x3002; &#x958B;&#x767C; Java &#x61C9;&#x7528;&#x7A0B;&#x5F0F;&#x7684;&#x5DE5;&#x5177;&#x4E2D;&#xFF0C;&#x6700;&#x5E38;&#x898B;&#x7684;&#x662F;&#x7531; Java &#x7684;&#x539F;&#x5275;&#x516C;&#x53F8; Sun Micro &#x6240;&#x51FA;&#x7248;&#x7684; JDK(Java Development Kit)&#x3002;JDK &#x53EF;&#x4EE5;&#x514D;&#x8CBB;&#x4E0B;&#x8F09;&#x3002;&#x4EE5; Text Editor &#x5BEB;&#x597D;&#x7684; Hello.java &#x539F;&#x59CB;&#x6A94;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 public class Hello { public static int gvar; public static void say (String s) { int x = 10 ; System.out.print(s+x); } public static void main (String[] argv) { float y = 0 ; say( Hello, world\\n ); } } &#x9019;&#x7A0B;&#x5F0F;&#x7684;C&#x7248;&#x672C;&#x5982;&#x4E0B; 1 2 3 4 5 6 7 8 9 10 # include stdio.h int gvar; void say ( char [] s) { int x = 10 ; printf ( %s%d , s, x); } int main ( int argc, char ** argv) { float y = 0 ; say( Hello, world\\n ); } &#x7D93;&#x904E;&#xFF1A; $ javac Hello.java &#x7DE8;&#x8B6F;&#x5B8C;&#x6210;&#x5F8C;&#x6703;&#x7522;&#x751F; byte code &#x683C;&#x5F0F;&#x7684; Hello.class &#xFF0C; &#x7136;&#x5F8C; $ java Hello &#x5C31;&#x53EF;&#x4EE5;&#x5229;&#x7528; Java Virtual Machine(&#x6B64;&#x8655;&#x662F; java &#x9019;&#x500B;&#x57F7;&#x884C;&#x6A94;) &#x4F86;&#x57F7;&#x884C;&#x4E86;&#x3002; &#x4E0A;&#x8FF0;&#x904E;&#x7A0B;&#x4E2D;&#x5E7E;&#x500B;&#x6BD4;&#x8F03;&#x6703;&#x767C;&#x751F;&#x7684;&#x554F;&#x984C;&#x662F;&#xFF1A; javac &#x627E;&#x4E0D;&#x5230;&#xFF1A;&#x8ACB;&#x8A2D;&#x5B9A; path &#x9019;&#x500B;&#x74B0;&#x5883;&#x8B8A;&#x6578;&#x3002; javac &#x62B1;&#x6028; class Hello &#x627E;&#x4E0D;&#x5230;&#xFF1A;&#x8ACB;&#x78BA;&#x5B9A;&#x4F60;&#x7684;&#x6A94;&#x540D;&#x662F;&#x5927;&#x5BEB; Hello.java &#xFF0C;&#x7A0B;&#x5F0F;&#x5167;&#x7684; public class Hello &#x6709;&#x6C92;&#x6709;&#x5927;&#x5C0F;&#x5BEB;&#x7684;&#x554F;&#x984C;&#x3002; java &#x62B1;&#x6028;&#x627E;&#x4E0D;&#x5230; main&#xFF1A;&#x8ACB;&#x78BA;&#x5B9A; public static void main(String[] argv) &#x6BEB;&#x7121;&#x932F;&#x8AA4;&#x3002;"},"java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言":{"title":"Java &#x662F;&#x7269;&#x4EF6;&#x5C0E;&#x5411; (Object-Oriented) &#x7A0B;&#x5F0F;&#x8A9E;&#x8A00;","path":"/java/java-vs-c.html#Java-是物件導向-Object-Oriented-程式語言","body":"Java &#x662F;&#x7531; C++ &#x7C21;&#x5316;&#x4F86;&#x7684;&#x3002;&#x7531;&#x65BC; C++ &#x8981;&#x548C; C &#x5B8C;&#x5168;&#x76F8;&#x5BB9;&#xFF0C;&#x53C8;&#x5F88;&#x6CE8;&#x91CD;&#x6548;&#x80FD;&#x554F;&#x984C;&#xFF0C;&#x56E0;&#x6B64; C++ &#x7B97;&#x662F;&#x5F88;&#x8907;&#x96DC;&#x7684;&#x7A0B;&#x5F0F;&#x8A9E;&#x8A00;&#x3002;Java &#x5728;&#x8A2D;&#x8A08;&#x4E4B;&#x521D;&#xFF0C;&#x8003;&#x91CF;&#x7684;&#x91CD;&#x9EDE;&#x4E4B;&#x4E00;&#x5C31;&#x662F;&#x7C21;&#x55AE;&#xFF0C;&#x56E0;&#x6B64;&#x548C; C++ &#x6BD4;&#x8D77;&#x4F86;&#xFF0C;&#x4E0D;&#x50C5;&#x66F4;&#x70BA;&#x7269;&#x4EF6;&#x5C0E;&#x5411;&#xFF0C;&#x800C;&#x4E14;&#x6BD4; C++ &#x5BB9;&#x6613;&#x5B78;&#x7FD2;&#x3002; Java &#x8A31;&#x591A;&#x904B;&#x7B97;&#x7B26;&#x865F;&#x548C;&#x6558;&#x8FF0;&#x8A9E;&#x6CD5;&#x90FD;&#x662F;&#x4F86;&#x81EA; C &#x8A9E;&#x8A00;&#xFF0C;&#x5047;&#x8A2D;&#x5404;&#x4F4D;&#x5DF2;&#x7D93;&#x5C0D; C &#x8A9E;&#x8A00;&#x6709;&#x6240;&#x4E86;&#x89E3;&#xFF0C;&#x672C;&#x7AE0;&#x5F8C;&#x9762;&#x7684;&#x90E8;&#x5206;&#x53EA;&#x5C07; Java &#x548C; C &#x5728;&#x904B;&#x7B97;&#x7B26;&#x865F;&#x548C;&#x6558;&#x8FF0;&#x8A9E;&#x6CD5;&#x4E0A;&#x7684;&#x5DEE;&#x7570;&#x9EDE;&#x51FA;&#x4F86;&#xFF0C;&#x76F8;&#x540C;&#x7684;&#x90E8;&#x5206;&#x8ACB;&#x53C3;&#x898B; C &#x8A9E;&#x8A00;&#x7684;&#x8AB2;&#x7A0B;&#x5167;&#x5BB9;&#x3002;"},"java/java-vs-c.html#資料型別":{"title":"&#x8CC7;&#x6599;&#x578B;&#x5225;","path":"/java/java-vs-c.html#資料型別","body":"Java &#x8A9E;&#x8A00;&#x6240;&#x5B9A;&#x7FA9;&#x7684;&#x57FA;&#x672C;&#x8CC7;&#x6599;&#x578B;&#x5225;&#x6709; &#x578B;&#x5225;&#x540D;&#x7A31; &#x4F4D;&#x5143;&#x9577;&#x5EA6; &#x7BC4;&#x570D; boolean 1 true &#x6216; false byte 8 -128 ~ 127 short 16 -32768 ~ 32767 char 16 Unicode characters int 32 -2147483648 ~ 2147483647 long 64 -9223372036854775808 ~ 9223372036854775807 float 32 +-3.4028237_10+38 ~ +-1.30239846_10-45 double 64 +-1.76769313486231570_10+308 ~ 4.94065645841246544_10-324 Java &#x7684;&#x8CC7;&#x6599;&#x578B;&#x614B;&#x88E1;&#x6C92;&#x6709; unsigned&#x3002; Java &#x5C0D;&#x6578;&#x503C;&#x578B;&#x614B;&#x7684;&#x8F49;&#x63DB;&#x6BD4; C &#x7A0D;&#x5FAE;&#x56B4;&#x683C;&#x4E00;&#x9EDE;&#xFF0C;&#x4E0B;&#x5217;&#x5DE6;&#x908A;&#x7684;&#x90E8;&#x5206;&#x90FD;&#x53EF;&#x4EE5;&#x6307;&#x5B9A; (assignment) &#x7D66;&#x53F3;&#x908A;&#x7684;&#x578B;&#x5225;: byte &#x2013; short &#x2013; int &#x2013; long &#x2013; float &#x2013; double &#x9664;&#x4E0A;&#x8FF0;&#x5916;&#xFF0C;&#x5176;&#x4ED6;&#x578B;&#x5225;&#x9593;&#x7684;&#x8F49;&#x63DB;&#x90FD;&#x5FC5;&#x9808;&#x4E0B;&#x9054;&#x578B;&#x5225;&#x8F49;&#x63DB; (Type Casting) &#x547D;&#x4EE4;&#x4F86;&#x8655;&#x7406;&#xFF0C;&#x5176;&#x5F62;&#x5F0F;&#x70BA;&#x5713;&#x62EC;&#x5F27;&#x88E1;&#x5BEB;&#x4E0A;&#x578B;&#x5225;&#x540D;&#x7A31;&#xFF0C;&#x5982; (double) &#x7531;&#x65BC; Java &#x5728; char &#x7684;&#x578B;&#x614B;&#x90E8;&#x5206;&#x63A1;&#x7528; Unicode&#xFF0C;&#x56E0;&#x6B64;&#x5B57;&#x5143;&#x5E38;&#x6578;&#x7684;&#x8868;&#x793A;&#x6CD5;&#xFF0C;&#x9664;&#x56E0;&#x5FAA; C &#x7684;&#x898F;&#x5247;&#x5916;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x6307;&#x5B9A; 16 bits Unicode &#x7DE8;&#x78BC;&#x7D66; char &#x578B;&#x5225;&#x7684;&#x8B8A;&#x6578;&#x3002;&#x4F8B;&#x5982;&#x7531; Windows &#x300C;&#x5B57;&#x5143;&#x5C0D;&#x61C9;&#x8868;&#x300D; &#x7A0B;&#x5F0F;&#x4E2D;&#x53EF;&#x67E5;&#x5230;&#x8C61;&#x68CB;&#x4E2D;&#x7684;&#x7D05;&#x8ECA;&#x7684; unicode &#x7DE8;&#x78BC;&#x70BA; 4FE5 &#xFF0C;Java &#x53EF;&#x7528; \\u4fe5 &#x4F86;&#x8868;&#x9054;&#x3002;Java &#x7684;&#x8B8A;&#x6578;&#x4E5F;&#x53EF;&#x4EE5;&#x7528; Unicode &#x4F86;&#x547D;&#x540D;&#xFF0C;&#x63DB;&#x53E5;&#x8A71;&#x8AAA;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x7528;&#x4E2D;&#x6587;&#x53D6;&#x8B8A;&#x6578;&#x540D;&#x7A31;&#x3002; &#x9664;&#x4E86;&#x9019;&#x4E9B;&#x57FA;&#x672C;&#x8CC7;&#x6599;&#x578B;&#x5225;&#x5916;&#xFF0C;Java &#x9084;&#x6709;&#x4E00;&#x500B;&#x7A31;&#x70BA; Reference(&#x53C3;&#x8003;) &#x7684;&#x578B;&#x5225;&#x3002;Reference &#x7528;&#x4F86;&#x5B58;&#x53D6; Object(&#x7269;&#x4EF6;)&#xFF0C;&#x5176;&#x529F;&#x80FD;&#x548C; C &#x8A9E;&#x8A00;&#x7684; pointer &#x7528;&#x4F86;&#x5B58;&#x53D6;&#x8A18;&#x61B6;&#x9AD4;&#x6709;&#x9EDE;&#x50CF;&#xFF0C;&#x4F46;&#x6C92;&#x6709; pointer &#x7684; &amp;+- &#x7B49;&#x904B;&#x7B97;&#x7B26;&#x865F;&#xFF0C;&#x800C;&#x4E14; Reference &#x53EA;&#x80FD;&#x5B58;&#x53D6;&#x578B;&#x614B;&#x76F8;&#x7B26;&#x5408;&#x7684;&#x985E;&#x5225;&#x3002;&#x5BA3;&#x544A; Reference &#x7684;&#x8A9E;&#x6CD5;&#x662F; ClassName varName &#xFF0C;&#x4F8B;&#x5982; String s ; &#x5BA3;&#x544A; s &#x662F;&#x4E00;&#x500B;&#x578B;&#x614B;&#x70BA; reference &#x7684;&#x8B8A;&#x6578;&#xFF0C;&#x9019;&#x8868;&#x793A;&#x6211;&#x5011;&#x53EF;&#x900F;&#x904E; s &#x4F86;&#x5B58;&#x53D6;&#x5C6C;&#x65BC; String &#x985E;&#x5225;&#x7684;&#x7269;&#x4EF6; (s is a reference to String object)&#x3002; &#x8981;&#x7279;&#x5225;&#x5F37;&#x8ABF;&#x7684;&#x662F;&#xFF0C; s &#x4E26;&#x4E0D;&#x662F;&#x7269;&#x4EF6;&#xFF0C;&#x800C;&#x662F;&#x7528;&#x4F86;&#x6307;&#x5411; String &#x7269;&#x4EF6;&#x7684; reference &#x3002;&#x6253;&#x500B;&#x6BD4;&#x65B9;&#xFF0C; 1 2 3 4 5 6 7 public class &#x52D5;&#x7269; { &#x52D5;&#x7269; &#x624B;&#x6307;&#x982D;; // java &#x56E0;&#x5B57;&#x5143;&#x7DE8;&#x78BC;&#x4F7F;&#x7528;unicode, &#x6240;&#x4EE5;&#x53EF;&#x7528;&#x4E2D;&#x6587;&#x7576;&#x8B8A;&#x6578;&#x540D;&#x7A31; public static void main (String[] arg) { &#x52D5;&#x7269; &#x624B;&#x6307;&#x982D; 2 ; &#x624B;&#x6307;&#x982D; 2 = new &#x52D5;&#x7269;(); } } &#x8B8A;&#x6578; &#x624B;&#x6307;&#x982D; &#x5BA3;&#x544A;&#x70BA; reference&#xFF0C;&#x53EF;&#x6307;&#x5411;&#x5C6C;&#x65BC; class &#x52D5;&#x7269; &#x7684;&#x7269;&#x4EF6;&#xFF0C; &#x624B;&#x6307;&#x982D; &#x4E0D;&#x662F; &#x52D5;&#x7269; &#xFF0C;&#x800C;&#x662F;&#x7528; &#x624B;&#x6307;&#x982D; &#x6307;&#x5411;&#x67D0;&#x96BB; &#x52D5;&#x7269; &#x3002; 1 2 3 java.lang.Float f; java.lang.Double d; java.lang.Integer i; &#x4EE5;&#x4E0A;&#x8B8A;&#x6578;&#x7684;&#x578B;&#x614B;&#x90FD;&#x662F; reference"},"java/java-vs-c.html#運算符號-Operator":{"title":"&#x904B;&#x7B97;&#x7B26;&#x865F; (Operator)","path":"/java/java-vs-c.html#運算符號-Operator","body":"Java &#x8A9E;&#x8A00;&#x5728;&#x904B;&#x7B97;&#x5F0F;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x548C; C &#x8A9E;&#x8A00;&#x6975;&#x70BA;&#x985E;&#x4F3C;&#xFF0C;&#x9664;&#x4E86;&#x6C92;&#x6709; sizeof , pointer &#x548C; struct &#x76F8;&#x95DC;&#x7684;&#x904B;&#x7B97;&#x7B26;&#x865F;&#x5916;&#xFF0C;&#x53E6;&#x5916;&#x65B0;&#x589E;&#x4E86;  &#x5411;&#x53F3;&#x7121;&#x865F; shift&#xFF0C;&#x4EE5;&#x53CA;&#x7528;&#x4F86;&#x5224;&#x65B7;&#x7269;&#x4EF6;&#x578B;&#x614B;&#x7684; instanceof &#x3002;Java &#x7684;&#x5E38;&#x6578;&#x7684;&#x8868;&#x793A;&#x6CD5;&#x4E5F;&#x548C; C &#x76F8;&#x540C;&#xFF0C;&#x800C; Java &#x88E1;&#x7684;&#x65B0;&#x8CC7;&#x6599;&#x578B;&#x614B; boolean &#x7684;&#x5408;&#x6CD5;&#x503C;&#x70BA; true &#x548C; false &#x5169;&#x500B;&#x5E38;&#x6578;&#x3002; &#x7B97;&#x8853; (Arithmetic) &#x904B;&#x7B97;&#x7B26;&#x865F; &#x904B;&#x7B97;&#x7B26;&#x865F; &#x529F;&#x80FD;&#x6558;&#x8FF0; + &#x52A0; * &#x4E58; - &#x6E1B; / &#x9664; % &#x9918;&#x6578; ++ &#x52A0;&#x4E00; &#x2013; &#x6E1B;&#x4E00; &#x908F;&#x8F2F; (logic) &#x904B;&#x7B97;&#x7B26;&#x865F; &#x904B;&#x7B97;&#x7B26;&#x865F; &#x529F;&#x80FD;&#x6558;&#x8FF0;  &#x5927;&#x65BC;  &#x5C0F;&#x65BC; = &#x5927;&#x65BC;&#x7B49;&#x65BC; = &#x5C0F;&#x65BC;&#x7B49;&#x65BC; == &#x7B49;&#x65BC; != &#x4E0D;&#x7B49;&#x65BC; &amp;&amp; logic AND || logic OR ! logic NOT instanceof reference instanceof ClassName &#x5224;&#x65B7; reference &#x6240;&#x6307;&#x5230;&#x7684;&#x7269;&#x4EF6;&#x5176;&#x578B;&#x614B;&#x662F;&#x5426;&#x548C; ClassName &#x76F8;&#x5BB9; Java &#x8A9E;&#x8A00;&#x548C; C &#x8A9E;&#x8A00;&#x6709;&#x95DC;&#x908F;&#x8F2F;&#x904B;&#x7B97;&#x6700;&#x5927;&#x7684;&#x4E0D;&#x540C;, &#x5728;&#x65BC; Java &#x4EE5; boolean &#x8CC7;&#x6599;&#x578B;&#x614B; (&#x53EA;&#x6709; true &#x548C; false &#x5169;&#x7A2E;&#x503C;) &#x5224;&#x65B7;&#x689D;&#x4EF6;&#x662F;&#x5426;&#x6210;&#x7ACB;, &#x800C; C &#x8A9E;&#x8A00;&#x53EA;&#x80FD;&#x4F7F;&#x7528; 0 &#x6216;&#x975E; 0&#x3002; &#x4F4D;&#x5143; (Bit) &#x904B;&#x7B97;&#x7B26;&#x865F; &#x904B;&#x7B97;&#x7B26;&#x865F; &#x529F;&#x80FD;&#x6558;&#x8FF0; &amp; bit AND  left bit shift | bit OR  right bit shift with sign ^ bit XOR ~ 1 &#x88DC;&#x6578;  &#x540C;  &#x4F46;&#x5DE6;&#x908A;&#x4E00;&#x5F8B;&#x88DC;&#x96F6; &#x5176;&#x4ED6;&#x904B;&#x7B97;&#x7B26;&#x865F; &#x904B;&#x7B97;&#x7B26;&#x865F; &#x529F;&#x80FD;&#x6558;&#x8FF0; = &#x5C07;&#x53F3;&#x908A;&#x7684;&#x503C;&#x8907;&#x88FD;&#x5230;&#x5DE6;&#x908A;&#x7684;&#x8B8A;&#x6578; (type) &#x5C07;&#x53F3;&#x908A;&#x7684;&#x6578;&#x503C;&#x6216; reference &#x8F49;&#x63DB;&#x6210; type &#x578B;&#x5225; += &#x5C07;&#x53F3;&#x908A;&#x7684;&#x6578;&#x503C;&#x52A0;&#x4E0A;&#x5DE6;&#x908A;&#x7684;&#x6578;&#x503C;&#x7136;&#x5F8C;&#x6307;&#x5B9A;&#x7D66;&#x5DE6;&#x908A;&#x7684;&#x8B8A;&#x6578; ?: &#x82E5; ? &#x5DE6;&#x908A;&#x6210;&#x7ACB;&#x5247;&#x505A; : &#x5DE6;&#x908A;&#x5426;&#x5247;&#x505A; : &#x53F3;&#x908A; , &#x5408;&#x4F75;&#x5169;&#x500B;&#x904B;&#x7B97;&#x8996;&#x70BA;&#x4E00;&#x500B;&#x6558;&#x8FF0; (&#x904B;&#x7B97;&#x5F0F;) &#x8868;&#x793A; () &#x5167;&#x512A;&#x5148;&#x904B;&#x7B97; . Reference.ObjectMember &#x6216; ClassName.ClassName &#x5B58;&#x53D6;&#x7269;&#x4EF6;&#x6216;&#x985E;&#x5225;&#x6210;&#x54E1; new &#x7522;&#x751F;&#x7269;&#x4EF6; &#x512A;&#x5148;&#x6B0A; &#x7A2E;&#x985E; &#x904B;&#x7B97;&#x7B26;&#x865F; &#x7D50;&#x5408;&#x9806;&#x5E8F; group (op) left to right postfix [] . (params) op++ op&#x2013; right to left prefix ++op &#x2013;op +op -op ~ ! right to left creation or casting new (type)op right to left multiplicative * / % left to right additive + - left to right shift   left to right relational  == instanceof == left to right equality == != left to right bitwise and &amp; left to right bitwise exclusive or ^ left to right bitwise inclusive or | left to right logical and &amp;&amp; left to right logical or || left to right conditional ? : right to left assignment = += -= *= /= %= &amp;= ^= |= == = right to left seperator , left to right"},"java/java-vs-c.html#流程控制敘述":{"title":"&#x6D41;&#x7A0B;&#x63A7;&#x5236;&#x6558;&#x8FF0;","path":"/java/java-vs-c.html#流程控制敘述","body":"Java &#x7684;&#x6D41;&#x7A0B;&#x63A7;&#x5236;&#x6558;&#x8FF0;&#x548C; C &#x8A9E;&#x8A00;&#x6975;&#x70BA;&#x985E;&#x4F3C;, &#x4E0D;&#x540C;&#x8655;&#x5728;&#x65BC; break &#x548C; continue &#x5169;&#x500B;&#x6307;&#x4EE4;&#x3002;Java &#x7684; break &#x548C; continue &#x6307;&#x4EE4;&#x5F8C;&#x9762;&#x53EF;&#x4EE5;&#x52A0;&#x4E0A;&#x6A19;&#x7C64;, &#x4EE5;&#x6307;&#x793A;&#x8981;&#x8DF3;&#x51FA;&#x6216;&#x7E7C;&#x7E8C;&#x7684;&#x7BC4;&#x570D;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class BreakContinueExample { public static void main (String[] argv) { int i, j; outerLoop: for (i = 0 ; i  100 ; i++) { innerLoop: for (j = 0 ; j  100 ; j++) { if (j == 50 &amp;&amp; i == 50 ) { break outerLoop; } } } System.out.println( Loop have been terminated. ); } } &#x5728;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;, &#x7576; j == 50 &#x4E14; i == 50 &#x6642;&#xFF0C; break &#x6307;&#x4EE4;&#x6703;&#x8DF3;&#x51FA;&#x6700;&#x5916;&#x9762;&#x7684;&#x8FF4;&#x5708;&#xFF0C;&#x76F4;&#x63A5;&#x5370;&#x51FA;&#x8FF4;&#x5708;&#x7D42;&#x6B62;&#x8A0A;&#x606F;&#x3002;&#x5982;&#x679C; break &#x5F8C;&#x9762;&#x6C92;&#x6709; outerLoop &#x7684;&#x8A71;&#xFF0C;&#x53EA;&#x6703;&#x8DF3;&#x51FA;&#x88E1;&#x9762;&#x7684;&#x8FF4;&#x5708;&#xFF0C;&#x7136;&#x5F8C; i &#x5F9E; 51 &#x7E7C;&#x7E8C;&#x505A;&#x4E0B;&#x53BB;&#x3002;"},"java/java-vs-c.html#字串":{"title":"&#x5B57;&#x4E32;","path":"/java/java-vs-c.html#字串","body":"C &#x8A9E;&#x8A00;&#x5B9A;&#x7FA9;&#x4EE5; 0 &#x7D50;&#x5C3E;&#x7684;&#x5B57;&#x5143;&#x9663;&#x5217;&#x5C31;&#x662F;&#x5B57;&#x4E32;&#x3002;&#x4F46;&#x5C0D; Java &#x4F86;&#x8AAA;&#xFF0C;&#x5B57;&#x4E32;&#x662F;&#x7531; String &#x985E;&#x5225;&#x4F86;&#x8868;&#x9054;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA; String &#x662F;&#x7269;&#x4EF6;&#x800C;&#x4E0D;&#x662F;&#x9663;&#x5217;&#x3002;&#x7531;&#x65BC;&#x6211;&#x5011;&#x7D93;&#x5E38;&#x4F7F;&#x7528;&#x5B57;&#x4E32;&#xFF0C;&#x70BA;&#x4E86;&#x5BEB;&#x4F5C;&#x7A0B;&#x5F0F;&#x65B9;&#x4FBF;&#x8D77;&#x898B;&#xFF0C;Java Compiler &#x78B0;&#x5230; + &#x7B26;&#x865F;&#x67D0;&#x4E00;&#x908A;&#x7684;&#x578B;&#x614B;&#x662F; String &#x6642;&#xFF0C;&#x5C31;&#x6703;&#x628A; + &#x7FFB;&#x8B6F;&#x6210; StringBuffer &#x985E;&#x5225;&#x88E1;&#x76F8;&#x5C0D;&#x61C9;&#x7684; append Method&#x3002;&#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 public class StringTest { public static void main (String[] argv) { int x = 5 ; float y = 1.5 ; System.out.println( x =  + x + , y =  + y); } } &#x6703;&#x7FFB;&#x8B6F;&#x6210;&#xFF1A; 1 2 3 4 5 6 7 public class StringTest { public static void main (String[] argv) { int x = 5 ; float y = 1.5 ; System.out.println(( new StringBuffer( x =  )).append(x).append( , y =  ).append(y).toString()); } } &#x5982;&#x679C;&#x4F60;&#x6703; C++&#xFF0C;&#x770B;&#x5230; Java &#x5B57;&#x4E32; + &#x7B26;&#x865F;&#x7684;&#x8A9E;&#x6CD5;&#xFF0C;&#x5343;&#x842C;&#x4E0D;&#x8981;&#x4EE5;&#x70BA; Java &#x652F;&#x63F4; operator overloading&#x3002;Java &#x53EA;&#x662F;&#x900F;&#x904E; Compiler &#x4F86;&#x505A;&#x7279;&#x5225;&#x7684;&#x8F49;&#x63DB;&#xFF0C;&#x7A31;&#x9019;&#x7A2E;&#x6280;&#x8853;&#x70BA; Compiler Sugar &#x6BD4;&#x8F03;&#x9069;&#x5408;&#x3002;"},"java/java-vs-c.html#Java-語言的寫作風格":{"title":"Java &#x8A9E;&#x8A00;&#x7684;&#x5BEB;&#x4F5C;&#x98A8;&#x683C;","path":"/java/java-vs-c.html#Java-語言的寫作風格","body":"&#x5BEB;&#x4F5C; Java &#x7A0B;&#x5F0F;&#x6642;&#xFF0C;&#x8ACB;&#x6CE8;&#x610F;&#x4E0B;&#x5217;&#x5E7E;&#x7A2E;&#x98A8;&#x683C; Class Name &#x8ACB;&#x9996;&#x5B57;&#x5927;&#x5BEB; Variable Name &#x548C; Method Name &#x8ACB;&#x9996;&#x5B57;&#x5C0F;&#x5BEB; &#x5982;&#x679C;&#x540D;&#x7A31;&#x7531;&#x6578;&#x500B;&#x82F1;&#x6587;&#x5B57;&#x7D44;&#x6210;&#xFF0C;&#x7B2C;&#x4E8C;&#x500B;&#x82F1;&#x6587;&#x5B57;&#x4EE5;&#x5F8C;&#x9996;&#x5B57;&#x5927;&#x5BEB; &#x5167;&#x7E2E;&#x56DB;&#x500B;&#x7A7A;&#x683C; &#x8A3B;&#x89E3;&#x90E8;&#x5206;&#x5982;&#x8981;&#x8B8A;&#x6210;&#x8AAA;&#x660E;&#x6587;&#x4EF6;&#xFF0C;&#x8ACB;&#x9075;&#x7167; javadoc &#x9019;&#x500B;&#x5DE5;&#x5177;&#x7684;&#x5BEB;&#x4F5C;&#x898F;&#x5247; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /** * &#x7B2C;&#x4E00;&#x884C;&#x7684;&#x5169;&#x500B;**&#x7528;&#x4F86;&#x544A;&#x8A34;javadoc&#x6B64;&#x90E8;&#x4EFD;&#x8A3B;&#x89E3;&#x8981;&#x8B8A;&#x6210;HTML&#x6587;&#x4EF6;&#x7684;&#x4E00;&#x90E8;&#x4EFD; * &#x9019;&#x6BB5;&#x8A3B;&#x89E3;&#x88E1;&#x7684;&#x6240;&#x6709;&#x6587;&#x5B57;&#x90FD;&#x6703;&#x8B8A;&#x6210;&#x6B64;&#x985E;&#x5225;&#x4E00;&#x958B;&#x982D;&#x7684;&#x8AAA;&#x660E; */ public class Hello { // Class Name&#x9996;&#x5B57;&#x5927;&#x5BEB; /** * &#x6B64;&#x6BB5;&#x8A3B;&#x89E3;&#x6703;&#x8B8A;&#x6210;&#x63CF;&#x8FF0;main&#x65B9;&#x6CD5;&#x7684;&#x4E00;&#x90E8;&#x5206; * @param argv &#x4F7F;&#x7528; @param &#x8A3B;&#x8A18;&#x6703;&#x7522;&#x751F;&#x53C3;&#x6578;(parameter)argv&#x7684;&#x76F8;&#x95DC;&#x8AAA;&#x660E; * @return &#x50B3;&#x56DE;&#x503C;&#x7684;&#x610F;&#x7FA9;&#x8AAA;&#x660E; */ public static void main (String[] argv) { // Method Name&#x9996;&#x5B57;&#x5C0F;&#x5BEB; // argv: array of references to String object int myVariable; // &#x8B8A;&#x6578;&#x5BA3;&#x544A; int i, sum; for (i = 1 , sum = 0 ; i = 100 ; i++) { sum += i; } System.out.println( summation from 1 to 100 is  +sum); } }"},"java/java-vs-c.html#運算符號範例":{"title":"&#x904B;&#x7B97;&#x7B26;&#x865F;&#x7BC4;&#x4F8B;","path":"/java/java-vs-c.html#運算符號範例","body":"&#x651D;&#x6C0F;&#x6EAB;&#x5EA6;&#x8F49;&#x83EF;&#x6C0F;&#x6EAB;&#x5EA6; 1 2 3 4 5 6 public class Example { public static void main (String[] argv) { float degree = 100.0 ; System.out.println( 100C= + (degree * 9.0 / 5.0 + 32.0 )); } } &#x83EF;&#x6C0F;&#x6EAB;&#x5EA6;&#x8F49;&#x651D;&#x6C0F;&#x6EAB;&#x5EA6; &#x600E;&#x9EBC;&#x5BEB;&#x5462;? 1 + 2 + ... + n &#x7684;&#x7E3D;&#x5408; 1 2 3 4 5 6 public class Example { public static void main (String[] argv) { int n = 100 ; System.out.println( 1+2+...+ +n+  =  + ( n * (n + 1 ) / 2 )); } } &#x7279;&#x5225;&#x6CE8;&#x610F;&#x4E0A;&#x8FF0;&#x7684;&#x904B;&#x7B97;&#x5F0F;&#x88E1; /2 &#x8981;&#x653E;&#x5230;&#x6700;&#x5F8C;&#x9762;&#xFF0C;&#x5982;&#x679C;&#x5BEB;&#x6210; n/2*(n+1) &#xFF0C;&#x5F9E;&#x6578;&#x5B78;&#x5F0F;&#x5B50;&#x7684;&#x89D2;&#x5EA6;&#x770B;&#x597D;&#x50CF;&#x6C92;&#x554F;&#x984C;&#xFF0C;&#x4F46;&#x5225;&#x5FD8;&#x4E86;&#xFF0C;binary operator &#x7684;&#x5169;&#x908A;&#x5FC5;&#x9808;&#x662F;&#x540C;&#x6A23;&#x578B;&#x5225;&#x7684;&#x8CC7;&#x6599;&#xFF0C;&#x800C;&#x4E14;&#x8A08;&#x7B97;&#x7684;&#x7D50;&#x679C;&#x4E5F;&#x662F;&#x540C;&#x6A23;&#x7684;&#x578B;&#x5225;&#x3002;&#x56E0;&#x6B64; n/2*(n+1) &#x6703;&#x5148;&#x8A08;&#x7B97; n/2 &#xFF0C;&#x5982;&#x679C; n &#x4E0D;&#x80FD;&#x88AB; 2 &#x6574;&#x9664;&#x7684;&#x8A71;&#xFF0C;&#x90A3;&#x9EBC;&#x70BA;&#x4E86;&#x7B26;&#x5408;&#x8A08;&#x7B97;&#x7D50;&#x679C;&#x5FC5;&#x9808;&#x662F;&#x6574;&#x6578;&#x7684;&#x9650;&#x5236;&#xFF0C;&#x5247;&#x5C0F;&#x6578;&#x9EDE;&#x7684;&#x90E8;&#x4EFD;&#x5C31;&#x6703;&#x7121;&#x689D;&#x4EF6;&#x6368;&#x53BB;&#xFF0C;&#x4F7F;&#x5F97;&#x8A08;&#x7B97;&#x7684;&#x7D50;&#x679C;&#x932F;&#x8AA4;&#x3002;&#x4E0B;&#x9762;&#x7684;&#x7BC4;&#x4F8B;&#x4E00;&#x6A23;&#x8981;&#x6CE8;&#x610F;&#x76F8;&#x540C;&#x7684;&#x554F;&#x984C;&#x3002; 1 2 + 2 2 + &#x2026; + n 2 &#x7684;&#x7E3D;&#x548C; &#x600E;&#x9EBC;&#x5BEB;? &#x628A;&#x6D6E;&#x9EDE;&#x6578;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x70BA;&#x6574;&#x6578; Java &#x8A9E;&#x8A00;&#x898F;&#x5B9A;&#x6D6E;&#x9EDE;&#x6578;&#x8F49;&#x6574;&#x6578;&#x6642;&#xFF0C;&#x5C0F;&#x6578;&#x9EDE;&#x90E8;&#x5206;&#x7121;&#x689D;&#x4EF6;&#x6368;&#x53BB;&#x3002;&#x5982;&#x679C;&#x8981;&#x9054;&#x5230;&#x6D6E;&#x9EDE;&#x6578;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x70BA;&#x6574;&#x6578;&#x7684;&#x6548;&#x679C;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E0B;&#x9762;&#x7684;&#x5C0F;&#x6280;&#x5DE7; 1 2 3 4 5 6 7 8 9 10 public class Example { public static void main (String[] argv) { double x = 20.6 ; System.out.println(x +  &#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x70BA;  + ( int )(x+ 0.5 )); System.out.println(x +  &#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x70BA;  + round(x)); } static int round ( double y) { return ( int )(y + 0.5 ); } }"},"java/java-vs-c.html#迴圈範例":{"title":"&#x8FF4;&#x5708;&#x7BC4;&#x4F8B;","path":"/java/java-vs-c.html#迴圈範例","body":"&#x5BEB;&#x4E00;&#x7A0B;&#x5F0F;&#x8F38;&#x5165; 5 &#x500B;&#x6574;&#x6578;&#x6578;&#x5B57;&#xFF0C;&#x8A08;&#x7B97;&#x5176;&#x7E3D;&#x5408;&#x548C;&#x5E73;&#x5747;&#x3002;&#x89E3;&#x6790;&#xFF1A; &#x9700;&#x8981; 1 &#x500B;&#x8B8A;&#x6578;&#x7D00;&#x9304;&#x5230;&#x76EE;&#x524D;&#x70BA;&#x6B62;&#x6240;&#x6709; inputNum &#x7684;&#x7E3D;&#x548C;&#xFF0C;&#x7A31;&#x6B64;&#x8B8A;&#x6578;&#x70BA; sum &#xFF0C;&#x5176;&#x521D;&#x59CB;&#x503C;&#x70BA; 0 &#x4EE5;&#x8FF4;&#x5708;&#x57F7;&#x884C; 5 &#x6B21;&#xFF0C;&#x6BCF;&#x6B21;&#x8F38;&#x5165;&#x6578;&#x5B57;&#x52A0;&#x7E3D;&#x5230; sum &#xFF0C;&#x8FF4;&#x5708;&#x57F7;&#x884C;&#x7684;&#x6B21;&#x6578;&#x4EE5;&#x8B8A;&#x6578; i &#x4F86;&#x4EE3;&#x8868; &#x5E73;&#x5747;&#x6578;&#x70BA; sum/5 &#x5982;&#x4F55;&#x8B80;&#x5165;&#x8CC7;&#x6599;? 1 2 3 4 5 6 7 8 9 10 11 12 import java.util.Scanner; public class Example { public static void main (String[] argv) { int sum = 0 , i = 0 ; Scanner in = new Scanner(System.in); while (i  5 &amp;&amp; in.hasNextInt()) { sum = sum + in.nextInt(); i++; } System.out.println( sum is  +sum , average is  +(sum/ 5.0 )); } } &#x5BEB;&#x4E00;&#x51FD;&#x6578;&#x8F38;&#x5165;&#x53C3;&#x6578; int n , &#x50B3;&#x56DE; 1 + 2 + 3 ... + n &#x7684;&#x7E3D;&#x5408;&#x3002;&#x89E3;&#x6790;&#xFF1A; &#x8981;&#x60F3;&#x8FA6;&#x6CD5;&#x62DC;&#x8A2A; 1, 2, 3, ..., n &#x7684;&#x6BCF;&#x4E00;&#x500B;&#x6578;&#x5B57;&#x4E00;&#x6B21; &#x53EF;&#x7528; for (i = 1; i = n; i++) &#x7684;&#x5F62;&#x5F0F;&#x9054;&#x6210;&#x4E0A;&#x8FF0;&#x76EE;&#x6A19; &#x62DC;&#x8A2A;&#x5230;&#x9019;&#x4E9B;&#x6578;&#x5B57;&#x6642;&#xFF0C;&#x5C31;&#x628A;&#x5B83;&#x5011;&#x52A0;&#x8D77;&#x4F86; 1 2 3 4 5 6 7 8 9 10 11 12 public class Example { public static int sum ( int n) { int total = 0 ; // &#x7D00;&#x9304;&#x5230;&#x76EE;&#x524D;&#x70BA;&#x6B62;&#x7684;&#x7E3D;&#x548C; for ( int i = 1 ; i = n; i++) { total += i; } return total; } public static void main (String[] argv) { System.out.println(sum( 100 )); } } &#x5BEB;&#x4E00;&#x51FD;&#x6578;&#x8F38;&#x5165;&#x53C3;&#x6578; int n , &#x50B3;&#x56DE; 1 + 3 + 5 ... + n &#x7684;&#x7E3D;&#x5408;&#x3002;&#x89E3;&#x6790;&#xFF1A; &#x8981;&#x60F3;&#x8FA6;&#x6CD5;&#x62DC;&#x8A2A; 1, 3, 5, ..., n &#x7684;&#x6BCF;&#x4E00;&#x500B;&#x6578;&#x5B57;&#x4E00;&#x6B21;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5F9E; 1 &#x958B;&#x59CB;&#x6BCF;&#x6B21;&#x52A0; 2 &#x53EF;&#x7528; for (i = 1; i = n; i += 2) &#x7684;&#x5F62;&#x5F0F;&#x9054;&#x6210;&#x4E0A;&#x8FF0;&#x76EE;&#x6A19; &#x62DC;&#x8A2A;&#x5230;&#x9019;&#x4E9B;&#x6578;&#x5B57;&#x6642;&#xFF0C;&#x5C31;&#x628A;&#x5B83;&#x5011;&#x52A0;&#x8D77;&#x4F86; &#x600E;&#x9EBC;&#x5BEB;? &#x5BEB;&#x4E00;&#x51FD;&#x6578;&#x65BC;&#x87A2;&#x5E55;&#x4E0A;&#x756B;&#x51FA;&#x4E5D;&#x4E5D;&#x4E58;&#x6CD5;&#x8868;&#x3002;&#x89E3;&#x6790;&#xFF1A; &#x7E3D;&#x5171;&#x6709; i = 1..9 &#x5217;&#xFF0C; j = 1..9 &#x884C;&#xFF0C;&#x5C0D;&#x7B2C; i &#x5217;&#x7B2C; j &#x884C;&#x5143;&#x7D20;&#x4F86;&#x8AAA;&#xFF0C;&#x5176;&#x6578;&#x503C;&#x70BA; i*j 1 2 3 4 5 6 7 8 9 10 public class Example { public static void main (String[] argv) { for ( int i = 1 ; i = 9 ; i++) { for ( int j = 1 ; j = 9 ; j++) { System.out.print(   + (i * j)); } System.out.println(); } } } &#x8F38;&#x5165;&#x53C3;&#x6578; int size &#xFF0C;&#x4E26;&#x5728;&#x87A2;&#x5E55;&#x4E0A;&#x5370;&#x51FA;&#x6B63;&#x65B9;&#x5F62;&#xFF0C; size = 3 &#x7684;&#x6A23;&#x5B50;&#x5982;&#x4E0B; 1 2 3 *** *** *** &#x89E3;&#x6790; &#x87A2;&#x5E55;&#x4E0A;&#x7684;&#x6E38;&#x6A19;&#x53EA;&#x80FD;&#x7531;&#x4E0A;&#x800C;&#x4E0B;&#xFF0C;&#x7531;&#x5DE6;&#x800C;&#x53F3;&#xFF0C;&#x7121;&#x6CD5;&#x56DE;&#x982D;&#x3002; &#x6B64;&#x5716;&#x5F62;&#x5171;&#x6709; 1 .. size &#x5217;&#xFF0C;&#x6BCF;&#x5217;&#x6709; size &#x500B; * &#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x7528;&#x5169;&#x5C64;&#x8FF4;&#x5708;&#x4F86;&#x505A;&#x3002; &#x8981;&#x8B93;&#x4E00;&#x500B;&#x6558;&#x8FF0;&#x57F7;&#x884C; size &#x6B21;&#xFF0C;&#x53EF;&#x7528; for ( i = 1; i = size; i++ ) &#x7684;&#x5F62;&#x5F0F;&#x4F86;&#x9054;&#x6210; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class Example { public static void print ( int size) { int i, j; // &#x7B2C;i&#x5217;,&#x7B2C;j&#x884C; for (i = 1 ; i = size; i++) { // &#x5370;&#x51FA;&#x7B2C;i&#x5217; for (j = 1 ; j = size; j++) { // &#x7B2C;i&#x5217;&#x6709;size&#x500B;* System.out.print( * ); } System.out.println(); } } public static void main (String[] argv) throws Exception { BufferedReader in = new BufferedReader( new InputStreamReader(System.in)); print(Integer.parseInt(in.readLine())); } } &#x8F38;&#x5165;&#x53C3;&#x6578; int size &#xFF0C;&#x4E26;&#x5728;&#x87A2;&#x5E55;&#x4E0A;&#x5370;&#x51FA;&#x76F4;&#x89D2;&#x4E09;&#x89D2;&#x5F62;&#xFF0C; size = 3 &#x7684;&#x6A23;&#x5B50;&#x5982;&#x4E0B; 1 2 3 * ** *** &#x89E3;&#x6790; &#x87A2;&#x5E55;&#x4E0A;&#x7684;&#x6E38;&#x6A19;&#x53EA;&#x80FD;&#x7531;&#x4E0A;&#x800C;&#x4E0B;&#xFF0C;&#x7531;&#x5DE6;&#x800C;&#x53F3;&#xFF0C;&#x7121;&#x6CD5;&#x56DE;&#x982D;&#x3002; &#x6B64;&#x5716;&#x5F62;&#x5171;&#x6709; 1 .. size &#x5217;&#xFF0C;&#x7B2C; i &#x5217;&#x6709;&#x500B; * &#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x7528;&#x5169;&#x5C64;&#x8FF4;&#x5708;&#x4F86;&#x505A;&#x3002; &#x600E;&#x9EBC;&#x5BEB;? &#x64B0;&#x5BEB;&#x4E00;&#x51FD;&#x6578;&#x8F38;&#x5165; int size &#xFF0C;&#x4E26;&#x5728;&#x87A2;&#x5E55;&#x4E0A;&#x5370;&#x51FA;&#x7B49;&#x8170;&#x7684;&#x4E09;&#x89D2;&#x5F62;&#xFF0C; size = 3 &#x7684;&#x6A23;&#x5B50;&#x5982;&#x4E0B; 1 2 3 * *** ***** &#x89E3;&#x6790; &#x7E3D;&#x5171;&#x6709; 1 .. size &#x5217;&#xFF0C;&#x5C0D;&#x7B2C; i &#x5217;&#x800C;&#x8A00;&#xFF0C;&#x6709; size - i &#x500B;&#x7A7A;&#x683C;&#xFF0C;&#x4EE5;&#x53CA; (2 * i- 1) &#x500B; * &#x600E;&#x9EBC;&#x5BEB;? &#x5BEB;&#x4E00;&#x51FD;&#x6578;&#x6C42;&#x5169;&#x500B;&#x6574;&#x6578;&#x7684;&#x6700;&#x5927;&#x516C;&#x56E0;&#x6578;&#xFF0C;&#x89E3;&#x6790;&#xFF1A; &#x6B64;&#x51FD;&#x6578;&#x9700;&#x8981;&#x5169;&#x500B;&#x53C3;&#x6578; x , y &#x7576; y &#x4E0D;&#x80FD;&#x6574;&#x9664; x &#x6642;&#xFF0C;&#x5C07; x &#x8A2D;&#x6210;&#x70BA; y &#xFF0C; y &#x8A2D;&#x70BA; x % y &#xFF0C;&#x91CD;&#x8907;&#x6B64;&#x6B65;&#x9A5F;&#x76F4;&#x5230; x % y &#x70BA; 0 &#x6B64;&#x6642; y &#x5C31;&#x662F;&#x9019;&#x5169;&#x500B;&#x6578;&#x7684;&#x6700;&#x5927;&#x516C;&#x56E0;&#x6578; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class Example { public static void main (String[] argv) { System.out.println(gcd( 12 , 18 )); } public static int gcd ( int x, int y) { int tmp; // &#x5982;&#x679C;x  y &#x5247;&#x4E0B;&#x9762;&#x7684;&#x8FF4;&#x5708;&#x57F7;&#x884C;&#x7B2C;&#x4E00;&#x6B21;&#x6642;&#x5C31;&#x6703;&#x4EA4;&#x63DB;x,y&#x4E86; while (x % y != 0 ) { tmp = y; y = x % y; x = tmp; } return y; } } &#x5BEB;&#x4E00;&#x51FD;&#x6578;&#x6C42;&#x5169;&#x500B;&#x6574;&#x6578;&#x7684;&#x6700;&#x5C0F;&#x516C;&#x500D;&#x6578; &#x600E;&#x9EBC;&#x5BEB;? &#x5BEB;&#x4E00;&#x51FD;&#x6578;&#x6C42;&#x8CBB;&#x6C0F;&#x6578;&#xFF0C;&#x89E3;&#x6790;&#xFF1A; F(n) = n , if n = 1; F(n) = F(n-1) + F(n-2) , otherwise &#x53EF;&#x5B9A;&#x7FA9;&#x5169;&#x8B8A;&#x6578; fn_1 , fn_2 &#x8868;&#x793A;&#x6700;&#x8FD1;&#x5169;&#x500B;&#x627E;&#x51FA;&#x7684;&#x8CBB;&#x6C0F;&#x6578; &#x4E0B;&#x4E00;&#x500B;&#x8CBB;&#x6C0F;&#x6578;&#x4F9D;&#x5B9A;&#x7FA9;&#x70BA; fn_1 + fn_2 &#x627E;&#x5230;&#x6700;&#x65B0;&#x7684;&#x8CBB;&#x6C0F;&#x6578;&#x5F8C;, &#x6700;&#x8FD1;&#x7684;&#x5169;&#x500B;&#x8CBB;&#x6C0F;&#x6578;&#x5C31;&#x8B8A;&#x6210;&#x4E86; fn_1 + fn_2 &#x4EE5;&#x53CA; fn_1 &#x4EE5;&#x8B8A;&#x6578; i &#x7D00;&#x9304;&#x76EE;&#x524D;&#x8981;&#x6C42;&#x7684;&#x662F;&#x54EA;&#x4E00;&#x500B;&#x8CBB;&#x6C0F;&#x6578; &#x4EE5;&#x8B8A;&#x6578; tmp &#x4F5C;&#x70BA;&#x66F4;&#x65B0;&#x6700;&#x65B0;&#x5169;&#x500B;&#x8CBB;&#x6C0F;&#x6578;&#x6240;&#x9700;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public class Example { public static void main (String[] argv) { System.out.println(fab( 5 )); } public static int fab ( int n) { int fn_1 = 1 , fn_2 = 0 ; // &#x7D00;&#x9304;&#x6700;&#x8FD1;&#x627E;&#x5230;&#x7684;&#x5169;&#x500B;&#x8CBB;&#x6C0F;&#x6578; int i, tmp; // i&#x8868;&#x793A;&#x76EE;&#x524D;&#x8981;&#x627E;F(i) if (n = 1 ) return n; for (i = 2 ; i = n; i++) { tmp = fn_1; // &#x5148;&#x628A;fn_1&#x7D00;&#x9304;&#x5728;tmp fn_1 += fn_2; // &#x6700;&#x65B0;&#x7684;&#x8CBB;&#x6C0F;&#x6578;&#x662F;&#x524D;&#x9762;&#x5169;&#x500B;&#x76F8;&#x52A0; fn_2 = tmp; // &#x7B2C;&#x4E8C;&#x65B0;&#x7684;&#x5C31;&#x662F;&#x539F;&#x5148;&#x7684;fn_1 } return fn_1; } }"},"java/java-vs-c.html#遞迴-recursion-範例":{"title":"&#x905E;&#x8FF4; (recursion) &#x7BC4;&#x4F8B;","path":"/java/java-vs-c.html#遞迴-recursion-範例","body":"&#x6C42; 1 + 2 + 3 + ... + n &#x89E3;&#x6790; &#x908A;&#x969B;&#x689D;&#x4EF6;&#x662F; n = 1 &#x6642;&#xFF0C;&#x7E3D;&#x5408;&#x70BA; 1 &#x8A72;&#x51FD;&#x6578;&#x53EF;&#x5B9A;&#x6210; int sum(int n) sum(n) = n + sum(n - 1) 1 2 3 4 5 6 7 8 9 10 11 public class Example { public static void main (String[] argv) { System.out.println(sum( 100 )); } public static int sum ( int n) { if (n == 1 ) { return 1 ; } return n + sum(n - 1 ); } } &#x4EE5;&#x905E;&#x8FF4;&#x8A08;&#x7B97; 1 * 2 + 2 * 3 + 3 * 4 + ... + (n-1) * n &#x4E4B;&#x548C; &#x600E;&#x9EBC;&#x5BEB;? &#x5229;&#x7528;&#x905E;&#x8FF4;&#x6C42;&#x5F97; A &#x7684; B &#x6B21;&#x65B9; 1 2 3 4 5 6 7 8 9 10 11 public class Example { public static void main (String[] argv) { System.out.println(power( 2 , 6 )); } public static int power ( int a, int b) { switch (b) { case 0 : return 1 ; case 1 : return a; default : return (a * power(a, b - 1 )); } } &#x4EE5;&#x905E;&#x8FF4;&#x6C42;&#x5169;&#x500B;&#x6574;&#x6578; m , n &#x7684;&#x6700;&#x5927;&#x516C;&#x56E0;&#x6578; &#x89E3;&#x6790; &#x5982;&#x679C; n == 0 &#xFF0C;&#x5247;&#x6700;&#x5927;&#x516C;&#x56E0;&#x6578;&#x70BA; m &#x5982;&#x679C; n &#x4E0D;&#x7B49;&#x65BC; 0 &#xFF0C;&#x5247;&#x6700;&#x5927;&#x516C;&#x56E0;&#x6578;&#x70BA; gcd(m, n) == gcd(n, m%n) &#x600E;&#x9EBC;&#x5BEB;? &#x8CBB;&#x5F0F;&#x6578;&#x5217; &#x89E3;&#x6790; &#x8CBB;&#x6C0F;&#x6578;&#x5217;&#x7684;&#x5B9A;&#x7FA9;&#x70BA; F(n) = n , if n = 1 F(n) = F(n-1) + F(n-2), if n  1 &#x3002; 1 2 3 4 5 6 7 8 9 10 11 public class Example { public static void main (String[] argv) { System.out.println(fab( 5 )); } public static int fab ( int num) { if (num = 1 ) { return num; } return fab(num - 1 ) + fab(num - 2 ); } } Ackerman &#x51FD;&#x6578; A(m, n) &#x5B9A;&#x7FA9;&#x70BA; n + 1, if m = 0 A(m - 1, 1), if n = 0 A(m - 1, A(m, n - 1)) , otherwise &#x600E;&#x9EBC;&#x5BEB;?"},"java/jdbc.html":{"title":"JDBC","path":"/java/jdbc.html","body":"JDBC (Java DataBase Connectivity) 是 Java 程式用來連結資料庫的程式庫 java.sql.* 。 其中主要的類別有 DriverManager：用來產生資料庫連線 (Connection) Connection：用來產生下達命令給資料庫的敘述 (Statement, PreparedStatement 和 CallableStatement) Statement：用來下達查詢 ( executeQuery() 傳回 ResultSet) 和更新 ( executeUpdate() 傳回整數代表異動的資料數目) 命令 ResultSet：利用其 next() 和 getXXX() 方法抓出查詢的結果 PreparedStatement：先送出命令的模板，然後再傳遞所需要的參數 CallableStatement：呼叫資料庫內的 Stored Procedure DatabaseMetaData：用來查詢資料庫綱要 下面的 JDBCBridgeTest.java 說明上面幾種 Class 的用法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 import java.sql.*; import ncnu.sql.*; public class JDBCBridgeTest  public static void main (String[] argv)  try  Class.forName ( \"sun.jdbc.odbc.JdbcOdbcDriver\" ); String pass = \"password\" ; String db = \"jdbc:odbc:ncnu\" ; if (argv.length 0 )  pass = argv[ 0 ];  if (argv.length 1 )  db = argv[ 1 ];  Connection con = DriverManager.getConnection (db, \"sa\" , pass); con.setAutoCommit( true ); PreparedStatement pstmt; Statement stmt; ResultSet rs; stmt = con.createStatement(); int count = 0 ; long start = System.currentTimeMillis(); rs = stmt.executeQuery( \"select courseid,year,class,studentid from selected\" ); while (rs.next())  count++; rs.getBytes( 1 ); rs.getBytes( 2 ); rs.getBytes( 3 ); rs.getBytes( 4 );  rs.close(); System.out.println( \"getBytes version for \" +count+ \" rows: \" +(System.currentTimeMillis()-start)); start = System.currentTimeMillis(); rs = stmt.executeQuery( \"select courseid,year,class,studentid from selected\" ); while (rs.next())  SQL.toString(rs.getBytes( 1 )); SQL.toString(rs.getBytes( 2 )); SQL.toString(rs.getBytes( 3 )); SQL.toString(rs.getBytes( 4 ));  rs.close(); System.out.println( \"SQL.toString version for \" +count+ \" rows: \" +(System.currentTimeMillis()-start)); start = System.currentTimeMillis(); rs = stmt.executeQuery( \"select courseid,year,class,studentid from selected\" ); while (rs.next())  rs.getString( 1 ); rs.getString( 2 ); rs.getString( 3 ); rs.getString( 4 );  rs.close(); System.out.println( \"System getString version for \" +count+ \" rows: \" +(System.currentTimeMillis()-start)); stmt.executeUpdate( \"delete printlog\" ); con.commit(); start = System.currentTimeMillis(); for ( int i= 1 ; i= 10000 ; i++)  stmt.executeUpdate( \"insert printlog(printid,studentid,class,type,copy,year,email,success,ip,price) values(\" +i+ \",'90213001','B','中文歷年成績單',1,'901','ssyu@ncnu.edu.tw','Y','163.22.22.22',20)\" ); con.commit();  System.out.println( \"Statement insert 10000 rows: \" +(System.currentTimeMillis()-start)); start = System.currentTimeMillis(); for ( int i= 1 ; i= 10000 ; i++)  stmt.executeUpdate( \"delete printlog where printid=\" +i); con.commit();  System.out.println( \"Statement delete 10000 rows: \" +(System.currentTimeMillis()-start)); stmt.close(); start = System.currentTimeMillis(); pstmt = con.prepareStatement( \"insert printlog(printid,studentid,class,type,copy,year,email,success,ip,price) values(?,?,?,?,?,?,?,?,?,?)\" ); for ( int i= 1 ;i= 10000 ; i++)  pstmt.setInt( 1 ,i); pstmt.setString( 2 , \"90213001\" ); pstmt.setString( 3 , \"B\" ); pstmt.setString( 4 , \"中文歷年成績單\" ); pstmt.setInt( 5 , 3 ); pstmt.setString( 6 , \"901\" ); pstmt.setString( 7 , \"ssyu@ncnu.edu.tw\" ); pstmt.setString( 8 , \"Y\" ); pstmt.setString( 9 , \"163.22.22.22\" ); pstmt.setInt( 10 , 20 ); pstmt.executeUpdate(); con.commit();  System.out.println( \"PreparedStatement version1 insert 10000 rows: \" +(System.currentTimeMillis()-start)); pstmt.close(); start = System.currentTimeMillis(); pstmt = con.prepareStatement( \"delete printlog where printid=?\" ); for ( int i= 1 ; i= 10000 ; i++)  pstmt.setInt( 1 ,i); pstmt.executeUpdate(); con.commit();  pstmt.close(); System.out.println( \"PrepareStatement delete 10000 rows: \" +(System.currentTimeMillis()-start)); start = System.currentTimeMillis(); pstmt = con.prepareStatement( \"insert printlog(printid,studentid,class,type,copy,year,email,success,ip,price) values(?,?,?,?,?,?,?,?,?,?)\" ); for ( int i= 1 ;i= 10000 ; i++)  pstmt.setInt( 1 ,i); pstmt.setBytes( 2 ,SQL.toAscii( \"90213001\" )); pstmt.setBytes( 3 ,SQL.toAscii( \"B\" )); pstmt.setBytes( 4 ,SQL.toAscii( \"中文歷年成績單\" )); pstmt.setInt( 5 , 3 ); pstmt.setBytes( 6 ,SQL.toAscii( \"901\" )); pstmt.setBytes( 7 ,SQL.toAscii( \"ssyu@ncnu.edu.tw\" )); pstmt.setBytes( 8 ,SQL.toAscii( \"N\" )); pstmt.setBytes( 9 ,SQL.toAscii( \"163.22.22.22\" )); pstmt.setInt( 10 , 20 ); pstmt.executeUpdate(); con.commit();  System.out.println( \"PreparedStatement version2 insert 10000 rows: \" +(System.currentTimeMillis()-start)); pstmt.close(); stmt = con.createStatement(); stmt.executeUpdate( \"delete printlog\" ); stmt.close(); con.close();  catch (Exception ex)  ex.printStackTrace(); System.exit( 1 );    SQL.java 的 Source Code 如下 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 package ncnu.sql; import sun.io.*; import ncnu.rule.Environment; /** * The class is used to work around a bug in JDBC drivers. The driver truncate the leading * byte of Unicode character before sending to DBMS. This only works for ASCII character. * To handle strings to DBMS, you have to use SQL.toSQL() to wrap the output * string. JDBC drivers also treat the data from DBMS as ASCII code by adding 0 before every * bytes of the incoming data. This also produce errors for Non-ASCII characters. To work * around this bug, you have to wrap the incoming data with SQL.fromSQL() */ public class SQL  static ByteToCharConverter toChar; static CharToByteConverter toByte; static boolean trans = true ; static  try  if (System.getProperty( \"java.version\" ).startsWith( \"1.1\" ))  trans = true ;  else  trans = false ;  String encoding = \"Big5\" ; String domain = Environment.getDomain(); if (domain.endsWith( \".tw\" ))  encoding = \"Big5\" ;  SQL.toChar = ByteToCharConverter.getConverter(encoding); SQL.toByte = CharToByteConverter.getConverter(encoding);  catch (Exception ex)  ex.printStackTrace(); System.exit( 1 );   public static void setEncoding (String encoding)  try  SQL.toChar = ByteToCharConverter.getConverter(encoding); SQL.toByte = CharToByteConverter.getConverter(encoding);  catch (Exception ex)   /** * convert a string to ASCII byte array */ public static byte [] toAscii(String s)  if (s== null ) return new byte [ 0 ]; try  synchronized (toByte)  return toByte.convertAll(s.toCharArray());   catch (Exception ex)  System.out.println(ex); return new byte [ 0 ];   public static char [] toChars( byte [] data)  if (data== null )  return new char [ 0 ];  try  synchronized (toChar)  return toChar.convertAll(data);   catch (Exception ex)  System.out.println(ex); return new char [ 0 ];   public static String toStringFast ( byte [] data)  if (data== null )  return \"\" ;  char [] tmp = new char [data.length]; for ( int i= 0 ; idata.length; i++)  tmp[i] = ( char )data[i];  return new String(tmp);  public static String quote (String s)  if (s.indexOf( \"'\" ) 0 )  return s;  StringBuffer sb = new StringBuffer(); for ( int i= 0 ; is.length(); i++)  char c = s.charAt(i); sb.append(c); if (c== '\\'' )  sb.append(c);   return sb.toString();  public static String toString ( byte [] data)  if (data== null )  return \"\" ;  try  synchronized (toChar)  return new String(toChar.convertAll(data));   catch (Exception ex)  System.out.println(ex); return \"\" ;   /** * Convert a string for output to DBMS * @param s The string needs to be converted. * @return A string which will be truncated by JDBC to produce Big5 characters. */ public static String toSQL (String s)  if (s== null ) return \"\" ; if (!trans) return s; byte [] orig; try  synchronized (toChar)  orig = toByte.convertAll(s.toCharArray());  char [] dest = new char [orig.length]; for ( int i= 0 ; i  orig.length; i++) dest[i] = ( char )orig[i]; return new String(dest);  catch (Exception e)  e.printStackTrace(); return s;   /** * Convert an incorrect string produeced by JDBC drivers to correct Unicode string. * @param s The string needs to be converted. * @return A correct Unicode string. */ public static String fromSQL (String s)  int i, j; if (s== null ) return \"\" ; if (!trans) return s; char [] orig = s.toCharArray(); byte [] dest = new byte [orig.length]; for (i= 0 ; i  orig.length; i++) dest[i] = ( byte ) orig[i]; try  synchronized (toChar)  char [] tmp = toChar.convertAll(dest); return new String(tmp);   catch (Exception e)  e.printStackTrace(); return s;    查詢資料庫綱要package ncnu.sql; /* Program Name: Schema.java Subject: 資料綱要讀取程式 Author: 俞旭昇 Shiuh-Sheng Yu National ChiNan University Department of Information Management Edit Date: 01/10/2000 Last Update Date: 01/10/2000 ToolKit: JDK1.1 */ import java.sql.*; import java.util.*; import java.io.*; public class Schema implements Serializable  Vector tables= null ; String catalogSeparator= null , catalog, schema; Schema (Connection con, String catalog, String schema)  this .catalog = catalog; this .schema = schema; tables = new Vector(); ForeignKey fk; try  ResultSet rs; DatabaseMetaData md = con.getMetaData(); catalogSeparator = md.getCatalogSeparator(); String[] types = new String[ 1 ]; types[ 0 ] = \"TABLE\" ; // get all user defined tables rs = md.getTables(catalog,schema, null ,types); while (rs.next())  Table table = new Table(); tables.addElement(table); table.catalogName = rs.getString( 1 ); table.schemaName = rs.getString( 2 ); table.tableName = rs.getString( 3 ); table.totalName = getTotalName(table.catalogName,table.schemaName,table.tableName); table.tableType = rs.getString( 4 ); table.remarks = rs.getString( 5 );  rs.close(); // get all columns for ( int i= 0 ; i  tables.size(); i++)  Table check = (Table)tables.elementAt(i); rs = md.getColumns(check.catalogName, check.schemaName,check.tableName, null ); while (rs.next())  Column col = new Column(); col.tableName = check.totalName; col.columnName = rs.getString( 4 ).trim(); col.dataType = rs.getInt( 5 ); col.typeName = rs.getString( 6 ).trim(); col.columnSize = rs.getInt( 7 ); col.decimalDigits = rs.getInt( 9 ); col.radix = rs.getInt( 10 ); col.remarks = SQL.fromSQL(rs.getString( 12 )); col.columnDefault = SQL.fromSQL(rs.getString( 13 )).trim(); while (col.columnDefault.startsWith( \"'\" ) || col.columnDefault.startsWith( \"(\" ))  col.columnDefault = col.columnDefault.substring( 1 ,col.columnDefault.length());  while (col.columnDefault.endsWith( \"'\" ) || col.columnDefault.endsWith( \")\" ))  col.columnDefault = col.columnDefault.substring( 0 ,col.columnDefault.length()- 1 );  col.isNullable = SQL.toString(rs.getBytes( 18 )).trim(); if (col.remarks== null || col.remarks.equals( \"\" ))  col.remarks=col.columnName;  check.addColumn(col);  rs.close();  // get Primary key for ( int i= 0 ; i  tables.size(); i++)  Table check = (Table)tables.elementAt(i); rs = md.getPrimaryKeys(check.catalogName, check.schemaName,check.tableName); while (rs.next())  check.primaryKey.addElement(findColumn(check,rs.getString( 4 )));  rs.close();  // get Foreign Keys for ( int i= 0 ; i  tables.size(); i++)  Table check = (Table)tables.elementAt(i); rs = md.getImportedKeys(check.catalogName, check.schemaName,check.tableName); fk = null ; while (rs.next())  String tmp1 = rs.getString( 1 ); // remote primary catalog String tmp2 = rs.getString( 2 ); // remote primary schema String tmp3 = rs.getString( 3 ); // remote primary table String tmp4 = rs.getString( 4 ); // remote primary column String tmp8 = rs.getString( 8 ); // local foreign column int tmp9 = rs.getInt( 9 ); if (tmp9 == 1 )  if (fk != null )  check.addForeignKey(fk);  fk = new ForeignKey();  fk.primaryTable = findTable(tmp1,tmp2,tmp3); fk.foreignTable = check; fk.primary.addElement(findColumn(tmp1,tmp2,tmp3,tmp4)); fk.foreign.addElement(findColumn(check,tmp8));  rs.close(); if (fk != null )  check.addForeignKey(fk);   // get Reference By for ( int i= 0 ; i  tables.size(); i++)  Table check = (Table)tables.elementAt(i); rs = md.getExportedKeys(check.catalogName, check.schemaName,check.tableName); fk = null ; while (rs.next())  String tmp4 = rs.getString( 4 ); // local primary column String tmp5 = rs.getString( 5 ); // remote foreign catalog String tmp6 = rs.getString( 6 ); // remote foreign schema String tmp7 = rs.getString( 7 ); // remote foreign table String tmp8 = rs.getString( 8 ); // remote foreign column int tmp9 = rs.getInt( 9 ); if (tmp9 == 1 )  if (fk != null )  check.addReferenceBy(fk);  fk = new ForeignKey();  fk.primaryTable = check; fk.foreignTable = findTable(tmp5,tmp6,tmp7); fk.primary.addElement(findColumn(check,tmp4)); fk.foreign.addElement(findColumn(tmp5,tmp6,tmp7,tmp8));  rs.close(); if (fk != null )  check.addReferenceBy(fk);    catch (SQLException ex)  ShowSQLException.show(ex);  finally  try  con.commit();  catch (Exception e2)     public Table findTable (String catalog, String schema, String table)  return findTable(getTotalName(catalog, schema, table));  public Table findTable (String totalName)  int i, j; for (i=j= 0 ; totalName.indexOf(catalogSeparator,i) != - 1 ; j++)  i = totalName.indexOf(catalogSeparator,i) + catalogSeparator.length();  // How many full name still need to fill? eg student.name == ncnu.dbo.student.name if (j== 0 )  // we miss all totalName = catalog+catalogSeparator+schema+catalogSeparator+totalName;  else if (j== 1 )  // we miss catalogName totalName = catalog+catalogSeparator+totalName;  else  // we have all  for (i= 0 ; i  tables.size(); i++)  if (((Table)tables.elementAt(i)).totalName.equals(totalName))  return (Table)tables.elementAt(i);   return null ;  public Column findColumn (String totalName, String columnName)  Table t = findTable(totalName); if (t == null )  return null ;  return findColumn(t, columnName);  public Column findColumn (String catalog, String schema, String table, String column)  Table t = findTable(catalog, schema, table); if (t == null )  return null ;  return findColumn(t, column);  public Column findColumn (Table t, String column)  for ( int i= 0 ; i  t.columns.size(); i++)  if (((Column)t.columns.elementAt(i)).columnName.equals(column))  return (Column)t.columns.elementAt(i);   return null ;  public String getTotalName (String catalog, String schema, String table)  String totalName = \"\" ; if (catalog!= null &amp;&amp; catalog.trim().length() 0 )  totalName = catalog.trim()+catalogSeparator;  if (schema!= null &amp;&amp; schema.trim().length() 0 )  totalName += schema.trim()+catalogSeparator;  if (table!= null &amp;&amp; table.trim().length() 0 )  totalName += table.trim();  return totalName;  public String getCatalogSeparator ()  return catalogSeparator;  public Vector getTables ()  return tables;   Table.java 如下 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 package ncnu.sql; /* Program Name: Table.java Subject: 定義資料表格的屬性 CopyRight: 俞旭昇 Shiuh-Sheng Yu National Chi-Nan University Institute of Management Information Edit Date: 01/03/1998 Last Update Date: 01/04/1997 ToolKit: JDK1.1.5 */ import java.util.*; import java.io.Serializable; public class Table implements Serializable  String catalogName; String schemaName; String tableName; String totalName; String tableType; String remarks; Vector columns; Vector primaryKey; Vector foreignKeys; Vector referenceBy; Table()  columns = new Vector(); foreignKeys = new Vector(); primaryKey = new Vector(); referenceBy = new Vector();  void addColumn (Column c)  columns.addElement(c);  Column getColumn (String cname)  for ( int i= 0 ; i  columns.size(); i++)  Column c = (Column)columns.elementAt(i); if (c.columnName.equalsIgnoreCase(cname))  return c;   return null ;  void addForeignKey (ForeignKey fk)  foreignKeys.addElement(fk);  void removeForeignKey (Table t)  for ( int i= 0 ; i  foreignKeys.size(); i++)  ForeignKey fk = (ForeignKey)foreignKeys.elementAt(i); if (fk.primaryTable==t)  foreignKeys.removeElementAt(i); i--;    void addReferenceBy (ForeignKey fk)  referenceBy.addElement(fk);  void print ()  System.out.println( \"Table: \" +catalogName+ \".\" +schemaName+ \".\" +tableName); for ( int i= 0 ; i  columns.size(); i++)  ((Column)columns.elementAt(i)).print();  if (primaryKey != null )  System.out.println( \"PrimaryKey:\" ); for ( int i= 0 ; i  primaryKey.size(); i++)  ((Column)primaryKey.elementAt(i)).print();   if (foreignKeys != null )  for ( int i= 0 ; i  foreignKeys.size(); i++)  System.out.println( \"ForeignKey:\" ); ((ForeignKey)foreignKeys.elementAt(i)).print();   if (referenceBy != null )  for ( int i= 0 ; i  referenceBy.size(); i++)  System.out.println( \"Reference By:\" ); ((ForeignKey)referenceBy.elementAt(i)).print();     ForeignKey.java 如下 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 package ncnu.sql; /* Program Name: ForeignKey.java Subject: Foreign Key, used bye View.java CopyRight: 俞旭昇 Shiuh-Sheng Yu National ChiNan University Department of Information Management Edit Date: 01/03/1998 Last Update Date: 08/21/1998 ToolKit: JDK1.1.6 */ import java.util.Vector; import java.io.Serializable; public class ForeignKey implements Serializable  Table primaryTable; Table foreignTable; Vector primary; // vector of Columns Vector foreign; // vecotr of Columns ForeignKey()  primary = new Vector(); foreign = new Vector();  String getJoinCondition (String sep)  String cond = \"\" ; for ( int i= 0 ; i  primary.size(); i++)  Column x = (Column)primary.elementAt(i); Column y = (Column)foreign.elementAt(i); cond += x.tableName+sep+x.columnName+ \"=\" +y.tableName+sep+y.columnName+ \" and \" ;  return cond;  void print ()  System.out.println( \"ForeignKey:\" ); for ( int i= 0 ; iprimary.size(); i++)  ((Column)primary.elementAt(i)).print();  System.out.println( \"references\" ); for ( int i= 0 ; iforeign.size(); i++)  ((Column)foreign.elementAt(i)).print();    Column.java 如下 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 package ncnu.sql; /* Program Name: Column.java Subject: 定義資料欄位的屬性 CopyRight: 俞旭昇 Shiuh-Sheng Yu National Chi-Nan University Institute of Management Information Edit Date: 01/03/1998 Last Update Date: 01/04/1997 ToolKit: JDK1.1.5 */ import java.io.Serializable; import java.sql.Types; public class Column implements Serializable  String tableName; String columnName; String typeName; int dataType; int columnSize; int decimalDigits; int radix; String isNullable; String remarks; String columnDefault; public static boolean isNumeric ( int type)  switch (type)  case Types.BIGINT: case Types.TINYINT: case Types.SMALLINT: case Types.NUMERIC: case Types.DECIMAL: case Types.FLOAT: case Types.INTEGER: case Types.REAL: case Types.DOUBLE: case Types.BIT: return true ;  return false ;  void print ()  System.out.print(tableName+ \".\" +columnName+ \" \" +typeName+ \" \" +columnSize+ \" \" ); if (typeName.equals( \"numeric\" ))  System.out.print( \"decimal:\" +decimalDigits+ \" radix:\" +radix+ \" \" );  System.out.println(isNullable+ \" \" +remarks+ \" default:\" +columnDefault);  "},"java/message-passing.html":{"title":"訊息傳遞","path":"/java/message-passing.html","body":"訊息傳遞 (Message Passing) 和函數呼叫 (Function Call) 的不同點 Procedure Language 以函數作為寫作和執行的主體。函數由一群程式碼所組成，函數的開頭地址在 Compile time 或 Link time 就已經決定好了，而在 Runtime 呼叫函數時給予適當的參數。函數和記憶體之間沒有關聯性，而且函數 A 可以被任何其他函數呼叫，程式語言並沒有特別的規範。 Object-Oriented Language 以 Class 作為寫作的主體，執行時主要由 Object 來紀錄程式狀態。由於物件導向程式語言將 Object Variable 和 Object Method 一起定義在 Class 內，再透過 Encapsulation 的機制規範存取 Object Member 的範圍，因此 Object 的 Variable 和 Method 就組成了一個完整的個體。 雖然 Object Method 寫起來就像 Function，但執行 Method 內程式碼的機制和 Function 不同： Object Method 定義物件接受到訊息時的反應，也就是說執行 Method 時有一個隱形的參數，意即這個物件 (this) Function 的實際地址在 Compile 或 Link time 就已經決定好了，但對 OO 來說，Object 必須在 Runtime 接受到訊息後，才能決定實際要執行的 Method。 Message Passing 的語法 由於 Java 只能透過 reference 來存取物件，因此 Message Passing 的語法是 reference.method 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 /** * 假設People有variable age,其值限定於0到130之間 */ public class People  private int age; public People ( int d)  this .age = d;  public int getAge ()  return age;  public void setAge ( int d)  if (d = 0 &amp;&amp; d = 130 )  // 檢查年齡是否合法 age = d;   public void increaseAge ()  if (age  130 )  // 檢查年齡是否合法 this .age++;   public static void main (String[] argv)  People e1, e2; // e1,e2 are references to Object People, not the Object themselves e1 = new People( 3 ); e2 = new People( 5 ); e1.setAge( 30 ); e2.setAge( 50 ); e1.increaseAge(); e2.increaseAge();   this 這個 keyword 表示接收到此訊息的物件。由於設計時是定義 Class，而執行時則是 Object 接受訊息，Class 只有一個，但 Object 可以有很多個，因此必須使用 this 表達現在接收到此訊息的物件。 由於 Object Method 具有隱形的物件參數，因此 Class Method 不能去存取 Object Member 1 2 3 4 5 6 7 8 9 10 public class ErrorCall  int data; // object variable public void objectMethod ()  data = 10 ;  public static void classMethod ()  objectMethod(); // Compile Error data = 10 ; // Compile Error   Message Passing 在執行期間才會決定實際 Method 的機制，我們將在 Inheritance(繼承) 裡敘述。"},"java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點":{"title":"&#x8A0A;&#x606F;&#x50B3;&#x905E; (Message Passing) &#x548C;&#x51FD;&#x6578;&#x547C;&#x53EB; (Function Call) &#x7684;&#x4E0D;&#x540C;&#x9EDE;","path":"/java/message-passing.html#訊息傳遞-Message-Passing-和函數呼叫-Function-Call-的不同點","body":"Procedure Language &#x4EE5;&#x51FD;&#x6578;&#x4F5C;&#x70BA;&#x5BEB;&#x4F5C;&#x548C;&#x57F7;&#x884C;&#x7684;&#x4E3B;&#x9AD4;&#x3002;&#x51FD;&#x6578;&#x7531;&#x4E00;&#x7FA4;&#x7A0B;&#x5F0F;&#x78BC;&#x6240;&#x7D44;&#x6210;&#xFF0C;&#x51FD;&#x6578;&#x7684;&#x958B;&#x982D;&#x5730;&#x5740;&#x5728; Compile time &#x6216; Link time &#x5C31;&#x5DF2;&#x7D93;&#x6C7A;&#x5B9A;&#x597D;&#x4E86;&#xFF0C;&#x800C;&#x5728; Runtime &#x547C;&#x53EB;&#x51FD;&#x6578;&#x6642;&#x7D66;&#x4E88;&#x9069;&#x7576;&#x7684;&#x53C3;&#x6578;&#x3002;&#x51FD;&#x6578;&#x548C;&#x8A18;&#x61B6;&#x9AD4;&#x4E4B;&#x9593;&#x6C92;&#x6709;&#x95DC;&#x806F;&#x6027;&#xFF0C;&#x800C;&#x4E14;&#x51FD;&#x6578; A &#x53EF;&#x4EE5;&#x88AB;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x51FD;&#x6578;&#x547C;&#x53EB;&#xFF0C;&#x7A0B;&#x5F0F;&#x8A9E;&#x8A00;&#x4E26;&#x6C92;&#x6709;&#x7279;&#x5225;&#x7684;&#x898F;&#x7BC4;&#x3002; Object-Oriented Language &#x4EE5; Class &#x4F5C;&#x70BA;&#x5BEB;&#x4F5C;&#x7684;&#x4E3B;&#x9AD4;&#xFF0C;&#x57F7;&#x884C;&#x6642;&#x4E3B;&#x8981;&#x7531; Object &#x4F86;&#x7D00;&#x9304;&#x7A0B;&#x5F0F;&#x72C0;&#x614B;&#x3002;&#x7531;&#x65BC;&#x7269;&#x4EF6;&#x5C0E;&#x5411;&#x7A0B;&#x5F0F;&#x8A9E;&#x8A00;&#x5C07; Object Variable &#x548C; Object Method &#x4E00;&#x8D77;&#x5B9A;&#x7FA9;&#x5728; Class &#x5167;&#xFF0C;&#x518D;&#x900F;&#x904E; Encapsulation &#x7684;&#x6A5F;&#x5236;&#x898F;&#x7BC4;&#x5B58;&#x53D6; Object Member &#x7684;&#x7BC4;&#x570D;&#xFF0C;&#x56E0;&#x6B64; Object &#x7684; Variable &#x548C; Method &#x5C31;&#x7D44;&#x6210;&#x4E86;&#x4E00;&#x500B;&#x5B8C;&#x6574;&#x7684;&#x500B;&#x9AD4;&#x3002; &#x96D6;&#x7136; Object Method &#x5BEB;&#x8D77;&#x4F86;&#x5C31;&#x50CF; Function&#xFF0C;&#x4F46;&#x57F7;&#x884C; Method &#x5167;&#x7A0B;&#x5F0F;&#x78BC;&#x7684;&#x6A5F;&#x5236;&#x548C; Function &#x4E0D;&#x540C;&#xFF1A; Object Method &#x5B9A;&#x7FA9;&#x7269;&#x4EF6;&#x63A5;&#x53D7;&#x5230;&#x8A0A;&#x606F;&#x6642;&#x7684;&#x53CD;&#x61C9;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x57F7;&#x884C; Method &#x6642;&#x6709;&#x4E00;&#x500B;&#x96B1;&#x5F62;&#x7684;&#x53C3;&#x6578;&#xFF0C;&#x610F;&#x5373;&#x9019;&#x500B;&#x7269;&#x4EF6; (this) Function &#x7684;&#x5BE6;&#x969B;&#x5730;&#x5740;&#x5728; Compile &#x6216; Link time &#x5C31;&#x5DF2;&#x7D93;&#x6C7A;&#x5B9A;&#x597D;&#x4E86;&#xFF0C;&#x4F46;&#x5C0D; OO &#x4F86;&#x8AAA;&#xFF0C;Object &#x5FC5;&#x9808;&#x5728; Runtime &#x63A5;&#x53D7;&#x5230;&#x8A0A;&#x606F;&#x5F8C;&#xFF0C;&#x624D;&#x80FD;&#x6C7A;&#x5B9A;&#x5BE6;&#x969B;&#x8981;&#x57F7;&#x884C;&#x7684; Method&#x3002;"},"java/message-passing.html#Message-Passing-的語法":{"title":"Message Passing &#x7684;&#x8A9E;&#x6CD5;","path":"/java/message-passing.html#Message-Passing-的語法","body":"&#x7531;&#x65BC; Java &#x53EA;&#x80FD;&#x900F;&#x904E; reference &#x4F86;&#x5B58;&#x53D6;&#x7269;&#x4EF6;&#xFF0C;&#x56E0;&#x6B64; Message Passing &#x7684;&#x8A9E;&#x6CD5;&#x662F; reference.method 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 /** * &#x5047;&#x8A2D;People&#x6709;variable age,&#x5176;&#x503C;&#x9650;&#x5B9A;&#x65BC;0&#x5230;130&#x4E4B;&#x9593; */ public class People { private int age; public People ( int d) { this .age = d; } public int getAge () { return age; } public void setAge ( int d) { if (d = 0 &amp;&amp; d = 130 ) { // &#x6AA2;&#x67E5;&#x5E74;&#x9F61;&#x662F;&#x5426;&#x5408;&#x6CD5; age = d; } } public void increaseAge () { if (age  130 ) { // &#x6AA2;&#x67E5;&#x5E74;&#x9F61;&#x662F;&#x5426;&#x5408;&#x6CD5; this .age++; } } public static void main (String[] argv) { People e1, e2; // e1,e2 are references to Object People, not the Object themselves e1 = new People( 3 ); e2 = new People( 5 ); e1.setAge( 30 ); e2.setAge( 50 ); e1.increaseAge(); e2.increaseAge(); } } this &#x9019;&#x500B; keyword &#x8868;&#x793A;&#x63A5;&#x6536;&#x5230;&#x6B64;&#x8A0A;&#x606F;&#x7684;&#x7269;&#x4EF6;&#x3002;&#x7531;&#x65BC;&#x8A2D;&#x8A08;&#x6642;&#x662F;&#x5B9A;&#x7FA9; Class&#xFF0C;&#x800C;&#x57F7;&#x884C;&#x6642;&#x5247;&#x662F; Object &#x63A5;&#x53D7;&#x8A0A;&#x606F;&#xFF0C;Class &#x53EA;&#x6709;&#x4E00;&#x500B;&#xFF0C;&#x4F46; Object &#x53EF;&#x4EE5;&#x6709;&#x5F88;&#x591A;&#x500B;&#xFF0C;&#x56E0;&#x6B64;&#x5FC5;&#x9808;&#x4F7F;&#x7528; this &#x8868;&#x9054;&#x73FE;&#x5728;&#x63A5;&#x6536;&#x5230;&#x6B64;&#x8A0A;&#x606F;&#x7684;&#x7269;&#x4EF6;&#x3002; &#x7531;&#x65BC; Object Method &#x5177;&#x6709;&#x96B1;&#x5F62;&#x7684;&#x7269;&#x4EF6;&#x53C3;&#x6578;&#xFF0C;&#x56E0;&#x6B64; Class Method &#x4E0D;&#x80FD;&#x53BB;&#x5B58;&#x53D6; Object Member 1 2 3 4 5 6 7 8 9 10 public class ErrorCall { int data; // object variable public void objectMethod () { data = 10 ; } public static void classMethod () { objectMethod(); // Compile Error data = 10 ; // Compile Error } } Message Passing &#x5728;&#x57F7;&#x884C;&#x671F;&#x9593;&#x624D;&#x6703;&#x6C7A;&#x5B9A;&#x5BE6;&#x969B; Method &#x7684;&#x6A5F;&#x5236;&#xFF0C;&#x6211;&#x5011;&#x5C07;&#x5728; Inheritance(&#x7E7C;&#x627F;) &#x88E1;&#x6558;&#x8FF0;&#x3002;"},"java/net.html":{"title":"NET","path":"/java/net.html","body":"SMTP Client 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 /* Program Name: SMTP.java Subject: 寄信程式 Editor: 俞旭昇 Shiuh-Sheng Yu National ChiNan University Department of Information Management Edit Date: 04/24/2000 Last Update Date: 04/24/2000 Modify Date: 2004/09/21, 加入mime content type Modify Date: 2005/09/16, 改用UTF-8來傳送資料 Modify Date: 2005/09/22, 改回用big5 :( Modify Date: 2006/02/16, 失敗改retry, 利用queue來smooth需求量 ToolKit: JDK1.1 */ package ncnu.net; import java.io.*; import java.net.*; import ncnu.rule.Environment; import ncnu.gui.SpeedBar; class Request  String sender; String[] receiver; String subject; String[] data;  class Queue  private Request[] data; int size; private int head; private int tail; public Queue ()  size = head = tail = 0 ; data = new Request[ 3000 ];  public synchronized Request deQueue ()  while (size== 0 )  try  wait();  catch (Exception ex) ;  Request tmp = data[head]; data[head] = null ; head = (head+ 1 )%data.length; size--; if (size==data.length- 1 )  notifyAll();  return tmp;  public synchronized void enQueue (Request c)  while (size==data.length)  try  wait();  catch (Exception ex) ;  data[tail++] = c; tail %= data.length; size++; if (size== 1 )  notifyAll();   public boolean isFull ()  return size == data.length;   public class SMTP extends Thread  private static Queue queue = new Queue(); private static int nowHave; public static void showProgress ()  SpeedBar sb = new SpeedBar( \"待送郵件數目\" ); while (queue.size  0 )  sb.setSpeed(queue.size, \"待送郵件數目:\" ); try  Thread.currentThread().sleep( 3000 );  catch (Exception epp)   sb.dispose();  /** * Send email to a group of users. The method will be called by all mail fuctions * @param sender Mail sender's email account * @param resceiver Array of receivers' email account * @param subject email subject * @param data An array of String which constructs the content of the email */ public static void send (String sender,String[] receiver,String subject,String[] data)  Request req = new Request(); req.sender = sender; req.receiver = receiver; req.subject = subject; req.data = data; queue.enQueue(req); while (nowHave 5 )  ( new SMTP()).start(); nowHave++;   public void run ()  for (;;)  Request tmp = queue.deQueue(); String sender = tmp.sender; String[] receiver = tmp.receiver; String subject = tmp.subject; String[] data = tmp.data; for (;;)  try  Socket smtps = new Socket(Environment.getMailServer(), 25 ); PrintStream smtpsOutput = new PrintStream(smtps.getOutputStream()); BufferedReader smtpsInput = new BufferedReader( new InputStreamReader(smtps.getInputStream())); smtpsInput.readLine(); smtpsOutput.println( \"HELO \" +Environment.getDomain()); smtpsOutput.flush(); smtpsInput.readLine(); smtpsOutput.println( \"MAIL FROM:\" +sender); // 寄 信 人 smtpsOutput.flush(); smtpsInput.readLine(); for ( int i= 0 ; i \"); smtpsOutput.flush(); smtpsOutput.print(\" To: \"); for (int i=0; i\" ); // 收 信 人  smtpsOutput.println( \"\" ); smtpsOutput.flush(); smtpsOutput.println( \"MIME-Version: 1.0\" ); smtpsOutput.flush(); smtpsOutput.println( \"Content-Type: text/plain;\\n\\tcharset=\\\"big5\\\"\" ); smtpsOutput.flush(); smtpsOutput.println( \"Content-Transfer-Encoding: 8bit\" ); smtpsOutput.flush(); smtpsOutput.print( \"Subject:\" ); // 標 題 smtpsOutput.write(subject.getBytes( \"big5\" )); smtpsOutput.println(); smtpsOutput.flush(); smtpsOutput.println(); smtpsOutput.flush(); for ( int i= 0 ; i0 &amp;&amp; data[i].charAt( 0 )== '.' )  smtpsOutput.write( '.' );  smtpsOutput.write(data[i].getBytes( \"big5\" )); smtpsOutput.println(); smtpsOutput.flush();  smtpsOutput.println( \".\" ); // 資料結束 smtpsOutput.flush(); smtpsInput.readLine(); smtpsOutput.println( \"QUIT\" ); // 斷線 smtpsOutput.close(); smtpsInput.close(); smtps.close(); break ;  catch (Exception sendEx)  if (queue.isFull())  System.out.println( \"drop mail \" +sender+ \" \" +subject); break ;       HTTP Server 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 /* * File: HTTPServer.java * Author: Shiuh-Sheng Yu * Department of Information Management * National ChiNan University * Purpose: A Simple HTTP Server Example * Update Date: 01/11/2000 * Modified Date: 0206/2002 * Modified Date: 2005/03/20,加入Cleaner Thread, 以避免Client要求準備檔案後,卻不擷取 */ import java.net.*; import java.io.*; import java.util.*; public class HTTPServer extends Thread  Hashtable ht = new Hashtable(); class Queue  private Socket[] data; private int size; private int head; private int tail; public Queue ()  size = head = tail = 0 ; data = new Socket[ 100 ];  public synchronized Socket deQueue ()  while (size== 0 )  try  wait();  catch (Exception ex) ;  Socket tmp = data[head]; data[head] = null ; head = (head+ 1 )%data.length; size--; if (size==data.length- 1 )  notifyAll();  return tmp;  public synchronized void enQueue (Socket c)  while (size==data.length)  try  wait();  catch (Exception ex) ;  data[tail++] = c; tail %= data.length; size++; if (size== 1 )  notifyAll();    class Cleaner extends Thread  public void run ()  for (;;)  try  sleep( 60000 ); long currentTime = System.currentTimeMillis(); for (Enumeration e = HTTPServer. this .ht.elements(); e.hasMoreElements(); )  CacheData tmp = (CacheData)e.nextElement(); if (tmp.time  currentTime- 30000 )  HTTPServer. this .ht.remove(tmp.fileName);    catch (InterruptedException epp)     class HTTPCon extends Thread  Queue queue; public HTTPCon (Queue q)  queue = q;  public void run ()  BufferedOutputStream out = null ; BufferedReader in = null ; for (;;)  // loop forever to serve HTTP clients try  Socket s = queue.deQueue(); out = new BufferedOutputStream(s.getOutputStream()); in = new BufferedReader( new InputStreamReader(s.getInputStream())); String line; String whichFile= \"/\" ; while ((line=in.readLine())!= null &amp;&amp; !line.equals( \"\" ))  //System.out.println(line); // dump for debugging if (line.startsWith( \"GET\" ))  // StringTokenizer將字串以空白分開 StringTokenizer st = new StringTokenizer(line); st.nextToken(); whichFile = st.nextToken(); break ;   if (whichFile.equals( \"/\" ))  whichFile = \"/Welcome.html\" ;  // 過濾掉第一個 '/' whichFile = whichFile.substring( 1 ,whichFile.length()); String fileType = \"text/plain\" ; if (whichFile.endsWith( \".html\" ))  // HTML文字檔 fileType = \"text/html\" ;  else if (whichFile.endsWith( \".txt\" ))  // 文字檔 fileType = \"text/plain\" ;  else if (whichFile.endsWith( \".jpg\" ))  // JPG圖檔 fileType = \"image/jpg\" ;  else if (whichFile.endsWith( \".gif\" ))  // GIF圖檔 fileType = \"image/gif\" ;  // read from cache instead of file CacheData tmp; byte [] data; if ((tmp=((CacheData)HTTPServer. this .ht.get(whichFile)))!= null )  data = tmp.data; HTTPServer. this .ht.remove(whichFile); // clear cache. Assume read once only out.write( \"HTTP/1.0 200 OK\\n\" .getBytes()); out.write( \"Connection: close\\n\" .getBytes()); out.write(( \"Content-Type: \" +fileType+ \"\\n\" ).getBytes()); out.write(( \"Content-Length: \" +data.length+ \"\\n\\n\" ).getBytes()); out.write(data);  else  out.write( \"HTTP/1.0 404 找不到物件\\n\" .getBytes()); out.write( \"Content-Type: text/html\\n\\n\" .getBytes()); out.write( \"htmlbodyh1HTTP/1.0 404 找不到物件 /h1/body/html\" .getBytes());  out.flush(); in.close(); out.close(); s.close();  catch (Exception ex)  // fail to listen port //System.out.println(ex);     class CacheData  String fileName; byte [] data; long time; public CacheData (String fileName, byte [] data, long time)  this .fileName = fileName; this .data = data; this .time = time;   public String put (String extension, byte [] data)  String fileName; do  fileName = Integer.toString(( int )(Math.random()* 1000000 ))+extension;  while (ht.get(fileName)!= null ); ht.put(fileName, new CacheData(fileName,data,System.currentTimeMillis())); return fileName;  public void run ()  try  ServerSocket ss = new ServerSocket( 1999 ); Queue q = new Queue(); for ( int i= 0 ; i 3 ; i++)  ( new HTTPCon(q)).start();  ( new Cleaner()).start(); for (;;)  // loop forever to serve HTTP clients try  // 接收新的網路連線 Socket s = ss.accept(); s.setSoTimeout( 5000 ); // 5秒內要讀到資料 q.enQueue(s);  catch (Exception ex2)  // fail to process Socket ex2.printStackTrace();    catch (Exception ex)  // fail to listen port ex.printStackTrace();   "},"java/net.html#SMTP-Client":{"title":"SMTP Client","path":"/java/net.html#SMTP-Client","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 /* Program Name: SMTP.java Subject: &#x5BC4;&#x4FE1;&#x7A0B;&#x5F0F; Editor: &#x4FDE;&#x65ED;&#x6607; Shiuh-Sheng Yu National ChiNan University Department of Information Management Edit Date: 04/24/2000 Last Update Date: 04/24/2000 Modify Date: 2004/09/21, &#x52A0;&#x5165;mime content type Modify Date: 2005/09/16, &#x6539;&#x7528;UTF-8&#x4F86;&#x50B3;&#x9001;&#x8CC7;&#x6599; Modify Date: 2005/09/22, &#x6539;&#x56DE;&#x7528;big5 :( Modify Date: 2006/02/16, &#x5931;&#x6557;&#x6539;retry, &#x5229;&#x7528;queue&#x4F86;smooth&#x9700;&#x6C42;&#x91CF; ToolKit: JDK1.1 */ package ncnu.net; import java.io.*; import java.net.*; import ncnu.rule.Environment; import ncnu.gui.SpeedBar; class Request { String sender; String[] receiver; String subject; String[] data; } class Queue { private Request[] data; int size; private int head; private int tail; public Queue () { size = head = tail = 0 ; data = new Request[ 3000 ]; } public synchronized Request deQueue () { while (size== 0 ) { try { wait(); } catch (Exception ex) {}; } Request tmp = data[head]; data[head] = null ; head = (head+ 1 )%data.length; size--; if (size==data.length- 1 ) { notifyAll(); } return tmp; } public synchronized void enQueue (Request c) { while (size==data.length) { try { wait(); } catch (Exception ex) {}; } data[tail++] = c; tail %= data.length; size++; if (size== 1 ) { notifyAll(); } } public boolean isFull () { return size == data.length; } } public class SMTP extends Thread { private static Queue queue = new Queue(); private static int nowHave; public static void showProgress () { SpeedBar sb = new SpeedBar( &#x5F85;&#x9001;&#x90F5;&#x4EF6;&#x6578;&#x76EE; ); while (queue.size  0 ) { sb.setSpeed(queue.size, &#x5F85;&#x9001;&#x90F5;&#x4EF6;&#x6578;&#x76EE;: ); try { Thread.currentThread().sleep( 3000 ); } catch (Exception epp) {} } sb.dispose(); } /** * Send email to a group of users. The method will be called by all mail fuctions * @param sender Mail sender&apos;s email account * @param resceiver Array of receivers&apos; email account * @param subject email subject * @param data An array of String which constructs the content of the email */ public static void send (String sender,String[] receiver,String subject,String[] data) { Request req = new Request(); req.sender = sender; req.receiver = receiver; req.subject = subject; req.data = data; queue.enQueue(req); while (nowHave 5 ) { ( new SMTP()).start(); nowHave++; } } public void run () { for (;;) { Request tmp = queue.deQueue(); String sender = tmp.sender; String[] receiver = tmp.receiver; String subject = tmp.subject; String[] data = tmp.data; for (;;) { try { Socket smtps = new Socket(Environment.getMailServer(), 25 ); PrintStream smtpsOutput = new PrintStream(smtps.getOutputStream()); BufferedReader smtpsInput = new BufferedReader( new InputStreamReader(smtps.getInputStream())); smtpsInput.readLine(); smtpsOutput.println( HELO  +Environment.getDomain()); smtpsOutput.flush(); smtpsInput.readLine(); smtpsOutput.println( MAIL FROM: +sender); // &#x5BC4; &#x4FE1; &#x4EBA; smtpsOutput.flush(); smtpsInput.readLine(); for ( int i= 0 ; i ); smtpsOutput.flush(); smtpsOutput.print( To: ); for (int i=0; i ); // &#x6536; &#x4FE1; &#x4EBA; } smtpsOutput.println(  ); smtpsOutput.flush(); smtpsOutput.println( MIME-Version: 1.0 ); smtpsOutput.flush(); smtpsOutput.println( Content-Type: text/plain;\\n\\tcharset=\\big5\\ ); smtpsOutput.flush(); smtpsOutput.println( Content-Transfer-Encoding: 8bit ); smtpsOutput.flush(); smtpsOutput.print( Subject: ); // &#x6A19; &#x984C; smtpsOutput.write(subject.getBytes( big5 )); smtpsOutput.println(); smtpsOutput.flush(); smtpsOutput.println(); smtpsOutput.flush(); for ( int i= 0 ; i0 &amp;&amp; data[i].charAt( 0 )== &apos;.&apos; ) { smtpsOutput.write( &apos;.&apos; ); } smtpsOutput.write(data[i].getBytes( big5 )); smtpsOutput.println(); smtpsOutput.flush(); } smtpsOutput.println( . ); // &#x8CC7;&#x6599;&#x7D50;&#x675F; smtpsOutput.flush(); smtpsInput.readLine(); smtpsOutput.println( QUIT ); // &#x65B7;&#x7DDA; smtpsOutput.close(); smtpsInput.close(); smtps.close(); break ; } catch (Exception sendEx) { if (queue.isFull()) { System.out.println( drop mail  +sender+   +subject); break ; } } } } } }"},"java/net.html#HTTP-Server":{"title":"HTTP Server","path":"/java/net.html#HTTP-Server","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 /* * File: HTTPServer.java * Author: Shiuh-Sheng Yu * Department of Information Management * National ChiNan University * Purpose: A Simple HTTP Server Example * Update Date: 01/11/2000 * Modified Date: 0206/2002 * Modified Date: 2005/03/20,&#x52A0;&#x5165;Cleaner Thread, &#x4EE5;&#x907F;&#x514D;Client&#x8981;&#x6C42;&#x6E96;&#x5099;&#x6A94;&#x6848;&#x5F8C;,&#x537B;&#x4E0D;&#x64F7;&#x53D6; */ import java.net.*; import java.io.*; import java.util.*; public class HTTPServer extends Thread { Hashtable ht = new Hashtable(); class Queue { private Socket[] data; private int size; private int head; private int tail; public Queue () { size = head = tail = 0 ; data = new Socket[ 100 ]; } public synchronized Socket deQueue () { while (size== 0 ) { try { wait(); } catch (Exception ex) {}; } Socket tmp = data[head]; data[head] = null ; head = (head+ 1 )%data.length; size--; if (size==data.length- 1 ) { notifyAll(); } return tmp; } public synchronized void enQueue (Socket c) { while (size==data.length) { try { wait(); } catch (Exception ex) {}; } data[tail++] = c; tail %= data.length; size++; if (size== 1 ) { notifyAll(); } } } class Cleaner extends Thread { public void run () { for (;;) { try { sleep( 60000 ); long currentTime = System.currentTimeMillis(); for (Enumeration e = HTTPServer. this .ht.elements(); e.hasMoreElements(); ) { CacheData tmp = (CacheData)e.nextElement(); if (tmp.time  currentTime- 30000 ) { HTTPServer. this .ht.remove(tmp.fileName); } } } catch (InterruptedException epp) {} } } } class HTTPCon extends Thread { Queue queue; public HTTPCon (Queue q) { queue = q; } public void run () { BufferedOutputStream out = null ; BufferedReader in = null ; for (;;) { // loop forever to serve HTTP clients try { Socket s = queue.deQueue(); out = new BufferedOutputStream(s.getOutputStream()); in = new BufferedReader( new InputStreamReader(s.getInputStream())); String line; String whichFile= / ; while ((line=in.readLine())!= null &amp;&amp; !line.equals(  )) { //System.out.println(line); // dump for debugging if (line.startsWith( GET )) { // StringTokenizer&#x5C07;&#x5B57;&#x4E32;&#x4EE5;&#x7A7A;&#x767D;&#x5206;&#x958B; StringTokenizer st = new StringTokenizer(line); st.nextToken(); whichFile = st.nextToken(); break ; } } if (whichFile.equals( / )) { whichFile = /Welcome.html ; } // &#x904E;&#x6FFE;&#x6389;&#x7B2C;&#x4E00;&#x500B; &apos;/&apos; whichFile = whichFile.substring( 1 ,whichFile.length()); String fileType = text/plain ; if (whichFile.endsWith( .html )) { // HTML&#x6587;&#x5B57;&#x6A94; fileType = text/html ; } else if (whichFile.endsWith( .txt )) { // &#x6587;&#x5B57;&#x6A94; fileType = text/plain ; } else if (whichFile.endsWith( .jpg )) { // JPG&#x5716;&#x6A94; fileType = image/jpg ; } else if (whichFile.endsWith( .gif )) { // GIF&#x5716;&#x6A94; fileType = image/gif ; } // read from cache instead of file CacheData tmp; byte [] data; if ((tmp=((CacheData)HTTPServer. this .ht.get(whichFile)))!= null ) { data = tmp.data; HTTPServer. this .ht.remove(whichFile); // clear cache. Assume read once only out.write( HTTP/1.0 200 OK\\n .getBytes()); out.write( Connection: close\\n .getBytes()); out.write(( Content-Type:  +fileType+ \\n ).getBytes()); out.write(( Content-Length:  +data.length+ \\n\\n ).getBytes()); out.write(data); } else { out.write( HTTP/1.0 404 &#x627E;&#x4E0D;&#x5230;&#x7269;&#x4EF6;\\n .getBytes()); out.write( Content-Type: text/html\\n\\n .getBytes()); out.write( htmlbodyh1HTTP/1.0 404 &#x627E;&#x4E0D;&#x5230;&#x7269;&#x4EF6; /h1/body/html .getBytes()); } out.flush(); in.close(); out.close(); s.close(); } catch (Exception ex) { // fail to listen port //System.out.println(ex); } } } } class CacheData { String fileName; byte [] data; long time; public CacheData (String fileName, byte [] data, long time) { this .fileName = fileName; this .data = data; this .time = time; } } public String put (String extension, byte [] data) { String fileName; do { fileName = Integer.toString(( int )(Math.random()* 1000000 ))+extension; } while (ht.get(fileName)!= null ); ht.put(fileName, new CacheData(fileName,data,System.currentTimeMillis())); return fileName; } public void run () { try { ServerSocket ss = new ServerSocket( 1999 ); Queue q = new Queue(); for ( int i= 0 ; i 3 ; i++) { ( new HTTPCon(q)).start(); } ( new Cleaner()).start(); for (;;) { // loop forever to serve HTTP clients try { // &#x63A5;&#x6536;&#x65B0;&#x7684;&#x7DB2;&#x8DEF;&#x9023;&#x7DDA; Socket s = ss.accept(); s.setSoTimeout( 5000 ); // 5&#x79D2;&#x5167;&#x8981;&#x8B80;&#x5230;&#x8CC7;&#x6599; q.enQueue(s); } catch (Exception ex2) { // fail to process Socket ex2.printStackTrace(); } } } catch (Exception ex) { // fail to listen port ex.printStackTrace(); } } }"},"java/thread.html":{"title":"線串與同步處理","path":"/java/thread.html","body":"Program, Process, Thread 在介紹 Thread 之前，我們必須先把 Program 和 Process 這兩個觀念作一個釐清。 Program：一群程式碼的集合，用以解決特定的問題。以物件導向的觀念來類比，相當於 Class。 Process：由 Program 所產生的執行個體，一個 Program 可以同時執行多次，產生多個Process。以物件導向的觀念來類比，相當於 Object。 每一個 Process 又由以下兩個東西組成 一個 Memory Space：相當於 Object 的 variable，不同 Process 的 Memory Space 也不同，彼此看不到對方的 Memory Space。 一個或以上的 Thread：Thread 代表從某個起始點開始(例如 main )，到目前為止所有函數的呼叫路徑，以及這些呼叫路徑上所用到的區域變數。當然程式的執行狀態，除了紀錄在主記憶體外，CPU 內部的暫存器(如 Program Counter 、 Stack Pointer 、 Program Status Word 等)也需要一起紀錄。 所以 Thread 又由下面兩項組成 Stack：紀錄函數呼叫路徑，以及這些函數所用到的區域變數 目前 CPU 的狀態 由上面的描述中，我們在歸納 Thread 的重點如下 一個 Process 可以有多個 Thread。 同一個 Process 內的 Thread 使用相同的 Memory Space，但這些 Thread 各自擁有其 Stack。換句話說，Thread 能透過 reference 存取到相同的 Object，但是 local variable 卻是各自獨立的。 作業系統會根據 Thread 的優先權以及已經用掉的 CPU 時間，在不同的 Thread 作切換，以讓各個 Thread 都有機會執行。 如何產生 Thread Java 以 java.lang.Thread 這個類別來表示 Thread。 Class Thread 有兩個 Constructor： Thread() Thread(Runnable) 第一個 Constrctor 沒有參數，第二個需要一個 Runnable 物件當參數。 Runnable 是一個 interface，定義於 java.lang 內，其宣告為 1 2 3 public interface Runnable  public void run () ;  使用 Thread() 產生的 Thread，其進入點為 Thread 裡的 run() ；使用 Thread(Runnable) 產生的 Thread，其進入點為 Runnable 物件裡的 run() 。 當 run() 結束時，這個 Thread 也就結束了；這和 main() 結束有相同的效果。其用法以下面範例說明： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class ThreadExample1 extends Thread  public void run ()  // override Thread's run() System.out.println( \"Here is the starting point of Thread.\" ); for (;;)  // infinite loop to print message System.out.println( \"User Created Thread\" );   public static void main (String[] argv)  Thread t = new ThreadExample1(); // 產生Thread物件 t.start(); // 開始執行t.run() for (;;)  System.out.println( \"Main Thread\" );    以上程式執行後，螢幕上會持續印出 User Created Thread 或 Main Thread 的字樣。 利用 Runnable 的寫法如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class ThreadExample2 implements Runnable  public void run ()  // implements Runnable run() System.out.println( \"Here is the starting point of Thread.\" ); for (;;)  // infinite loop to print message System.out.println( \"User Created Thread\" );   public static void main (String[] argv)  Thread t = new Thread( new ThreadExample2()); // 產生Thread物件 t.start(); // 開始執行Runnable.run(); for (;;)  System.out.println( \"Main Thread\" );    Thread 的優先權與影響資源的相關方法 Thread.setPriority(int) 可以設定 Thread 的優先權，數字越大優先權越高。 Thread 定義了 3 個相關的 static final variable： 1 2 3 public static final int MAX_PRIORITY 10 public static final int MIN_PRIORITY 1 public static final int NORM_PRIORITY 5 要提醒讀者的是，優先權高的 Thread 其佔有 CPU 的機會比較高，但優先權低的也都會有機會執行到。其他有關 Thread 執行的方法有： yield() ：先讓給別的 Thread 執行 sleep(int time) ：休息 time mini second (1/1000秒) join() ：呼叫 ThreadA.join() 的執行緒會等到 ThreadA 結束後，才能繼續執行 你可以執行下面的程式，看看 yield() 的效果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public class ThreadExample1 extends Thread  public void run ()  // overwrite Thread's run() System.out.println( \"Here is the starting point of Thread.\" ); for (;;)  // infinite loop to print message System.out.println( \"User Created Thread\" ); yield();   public static void main (String[] argv)  Thread t = new ThreadExample1(); // 產生Thread物件 t.start(); // 開始執行t.run() for (;;)  System.out.println( \"Main Thread\" ); yield();    觀看 join() 的效果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 public class JoinExample extends Thread  String myId; public JoinExample (String id)  myId = id;  public void run ()  // overwrite Thread's run() \t for ( int i= 0 ; i  500 ; i++)  System.out.println(myId+ \" Thread\" );   public static void main (String[] argv)  Thread t1 = new JoinExample( \"T1\" ); // 產生Thread物件 Thread t2 = new JoinExample( \"T2\" ); // 產生Thread物件 t1.start(); // 開始執行t1.run() t2.start(); try  t1.join(); // 等待t1結束 t2.join(); // 等待t2結束  catch (InterruptedException e)  for ( int i= 0 ;i  5 ; i++)  System.out.println( \"Main Thread\" );    觀看 sleep() 的效果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class SleepExample extends Thread  String myId; public SleepExample (String id)  myId = id;  public void run ()  // overwrite Thread's run() for ( int i= 0 ; i  500 ; i++)  System.out.println(myId+ \" Thread\" ); try  sleep( 100 );  catch (InterruptedException e)    public static void main (String[] argv)  Thread t1 = new SleepExample( \"T1\" ); // 產生Thread物件 Thread t2 = new SleepExample( \"T2\" ); // 產生Thread物件 t1.start(); // 開始執行t1.run() t2.start();   Critical Section (關鍵時刻) 的保護措施 如果設計者沒有提供保護機制的話，Thread 取得和失去 CPU 控制權的時機是由作業系統來決定。 也就是說 Thread 可能在執行任何一個機器指令時，被作業系統取走 CPU 控制權，並交給另一個 Thread。 由於某些真實世界的動作是不可分割的，例如跨行轉帳 X 元由 A 帳戶到 B 帳戶，轉帳前後這兩個帳戶的總金額必須相同，但以程式來實作時，卻無法用一個指令就完成，如轉帳可能要寫成下面的這一段程式碼 1 2 3 4 if (A = X)  A = A - X; // 翻譯成3個機器指令LOAD A, SUB X, STORE A B = B + X;  如果兩個 Thread 同時要存取 A、B 兩帳戶進行轉帳，假設當 Thread 1 執行到 SUBX 後被中斷，Thread 2 接手執行完成另一個轉帳要求，然後 Thread 1 繼續執行未完成的動作，請問這兩個轉帳動作正確嗎？ 我們以 A = 1000、B = 0 分別轉帳 100、200 元來說明此結果 1 2 3 4 5 6 7 8 9 10 11 12 LOAD A // Thread 1 現在 A 還是 1000 SUB 100 // Thread 1 LOAD A // 假設此時 Thread 1 被中斷，Thread 2 接手，因為 Thread 1 還沒有執行 STORE A，所以變數 A 還是 1000 SUB 200 // Thread 2 STORE A // Thread 2，A = 800 LOAD B // Thread 2，B 現在是 0 ADD 200 // Thread 2 STORE B // B = 200 STORE A // Thread 1 拿回控制權，A = 900 LOAD B // Thread 1，B = 200 ADD 100 // Thread 1 STORE B // B = 300 你會發現執行完成後 A = 900、B = 300，也就是說銀行平白損失了 200 元，當然另外的執行順序可能造成其他不正確的結果。 我們把這問題再整理一下： 寫程式時假設指令會循序執行 某些不可分割的動作，需要以多個機器指令來完成 Thread 執行時可能在某個機器指令被中斷 兩個 Thread 可能執行同一段程式碼，存取同一個資料結構 這樣就破壞了第 1 點的假設 因此在撰寫多執行緒的程式時，必須特別考慮這種狀況(又稱為 race condition)。 Java 的解決辦法是，JVM 會在每個物件上擺一把鎖(lock)，然後程式設計者可以宣告執行某一段程式(通常是用來存取共同資料結構的程式碼，又稱為 Critical Section)時，必須拿到某物件的鎖才行，這個鎖同時間最多只有一個執行緒可以擁有它。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 public class Transfer extends Thread  public static Object lock = new Object(); public static int A = 1000 ; public static int B = 0 ; private int amount; public Transfer ( int x)  amount = x;  public void run ()  synchronized (lock)  // 取得lock,如果別的thread A已取得,則目前這個thread會等到thread A釋放該lock if (A = amount)  A = A - amount; B = B + amount;   // 離開synchronized區塊後,此thread會自動釋放lock  public static void main (String[] argv)  Thread t1 = new Transfer( 100 ); Thread t2 = new Transfer( 200 ); t1.start(); t2.start();   除了 synchronized(ref) 的語法可以鎖定 ref 指到的物件外，synchronized 也可以用在 object method 前面，表示要鎖定 this 物件才能執行該方法。 以下是 Queue 結構的範例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class Queue  private Object[] data; private int size; private int head; private int tail; public Queue ( int maxLen)  data = new Object[maxLen];  public synchronized Object deQueue ()  Object tmp = data[head]; data[head] = null ; head = (head+ 1 )%data.length; size--; return tmp;  public synchronized void enQueue (Object c)  data[tail++] = c; tail %= data.length; size++;   雖然上面的程式正確無誤，但並未考慮資源不足時該如何處理。 例如 Queue 已經沒有資料了，卻還想拿出來；或是 Queue 裡已經塞滿了資料，使用者卻還要放進去？ 我們當然可以使用 Exception Handling 的機制： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 public class Queue  private Object[] data; private int size; private int head; private int tail; public Queue ( int maxLen)  data = new Object[maxLen];  public synchronized Object deQueue () throws Exception  if (size == 0 )  throw new Exception();  Object tmp = data[head]; data[head] = null ; head = (head+ 1 )%data.length; size--; return tmp;  public synchronized void enQueue (Object c) throws Exception  if (size = maxLen)  throw new Exception();  data[tail++] = c; tail %= data.length; size++;   但假設我們的執行環境是，某些 Thread 專門負責讀取使用者的需求，並把工作放到 Queue 裡面，某些 Thread 則專門由 Queue 裡抓取工作需求做進一步處理。 這種架構的好處是，可以把慢速或不定速的輸入(如透過網路讀資料，連線速度可能差很多)和快速的處理分開，可使系統的反應速度更快，更節省資源。 那麼以 Exceptoin 來處理 Queue 空掉或爆掉的情況並不合適，因為使用 Queue 的人必須處理例外狀況，並不斷的消耗CPU資源： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 public class Getter extends Thread  Queue q; public Getter (Queue q)  this .q = q;  public void run ()  for (;;)  try  Object data = q.deQueue(); // processing  catch (Exception e)  // if we try to sleep here, user may feel slow response // if we do not sleep, CPU will be wasted     public class Putter extends Thread  Queue q; public Putter (Queue q)  this .q = q;  public void run ()  for (;;)  try  Object data = null ; // get user request q.enQueue(data);  catch (Exception e)  // if we try to sleep here, user may feel slow response // if we do not sleep, CPU will be wasted     public class Main  public static void main (String[] argv)  Queue q = new Queue( 10 ); Getter r1 = new Getter(q); Getter r2 = new Getter(q); Putter w1 = new Putter(q); Putter w2 = new Putter(q); r1.start(); r2.start(); w1.start(); w2.start();   為了解決這類資源分配的問題，Java Object 提供了下面三個 method： wait() ：使呼叫此方法的 Thread 進入 Blocking Mode，並設為等待該 Object，呼叫 wait() 時，該 Thread 必須擁有該物件的 lock。Blocking Mode 下的 Thread 必須釋放所有手中的 lock，並且無法使用CPU。 notifyAll() ：讓等待該 Object 的所有 Thread 進入 Runnable Mode。 notify() ：讓等待該 Object 的某一個 Thread 進入 Runnable Mode。 所謂 Runnable Mode 是指該 Thread 隨時可由作業系統分配CPU資源。 Blocking Mode 表示該 Thread 正在等待某個事件發生，作業系統不會讓這種 Thread 取得 CPU 資源。 前一個 Queue 的範例就可以寫成： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 public class Queue  private Object[] data; private int size; private int head; private int tail; public Queue ( int maxLen)  data = new Object[maxLen];  public synchronized Object deQueue ()  while (size== 0 )  // When executing here, Thread must have got lock and be in running mode // Let current Thread wait this object(to sleeping mode) try  wait(); // to sleeping mode, and release all lock  catch (Exception ex) ;  Object tmp = data[head]; data[head] = null ; head = (head+ 1 )%data.length; if (size==data.length)  // wake up all Threads waiting this object notifyAll();  size--; return tmp;  // release lock public synchronized void enQueue (Object c)  while (size==data.length)  // When executing here, Thread must have got lock and be in running mode // Let current thread wait this object(to sleeping mode) try  wait(); // to sleeping mode, and release all lock  catch (Exception ex) ;  data[tail++] = c; tail %= data.length; size++; if (size== 1 )  // wake up all Threads waiting this object notifyAll();    public class ReaderWriter extends Thread  public static final int READER = 1 ; public static final int WRITER = 2 ; private Queue q; private int mode; public void run ()  for ( int i= 0 ; i  1000 ; i++)  if (mode==READER)  q.deQueue();  else if (mode==WRITER)  q.enQueue( new Integer(i));    public ReaderWriter (Queue q, int mode)  this .q = q; this .mode = mode;  public static void main (String[] args)  Queue q = new Queue( 5 ); ReaderWriter r1, r2, w1, w2; (w1 = new ReaderWriter(q, WRITER)).start(); (w2 = new ReaderWriter(q, WRITER)).start(); (r1 = new ReaderWriter(q, READER)).start(); (r2 = new ReaderWriter(q, READER)).start(); try  w1.join(); // wait until w1 complete w2.join(); // wait until w2 complete r1.join(); // wait until r1 complete r2.join(); // wait until r2 complete  catch (InterruptedException epp)     Multiple Reader-Writer Monitors 上一節的 Queue 資料結構，不論是 enQueue() 或 deQueue() 都會更動到 Queue 的內容。而在許多應用裡，資料結構可以允許同時多個讀一個寫。 本節舉出幾個不同的例子，說明多個 Reader-Writer 時的可能排程法。 Single Reader-Writer：只同時允許一個執行緒存取 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 public class SingleReaderWriter  int n; // number of reader and write, 0 or 1 public synchronized void startReading () throws InterruptedException  while (n != 0 )  wait();  n = 1 ;  public synchronized void stopReading ()  n = 0 ; notify();  public synchronized void startWriting () throws InterruptedException  while (n != 0 )  wait();  n = 1 ;  public synchronized void stopWriting ()  n = 0 ; notify();   // 這是一個使用範例, 程式能否正確執行要靠呼叫正確的start和stop public class WriterThread extends Thread  SingleReaderWriter srw; public WriterThread (SingleReaderWriter srw)  this .srw = srw;  public void run ()  startWring(); // insert real job here stopWriting();   public class ReaderThread extends Thread  SingleReaderWriter srw; public ReaderThread (SingleReaderWriter srw)  this .srw = srw;  public void run ()  startReading(); // insert real job here stopReading();   public class Test  public static void main (String[] argv)  SingleReaderWriter srw = new SingleReaderWriter; // create four threads ( new WriterThread(srw)).start(); ( new WriterThread(srw)).start(); ( new ReaderThread(srw)).start(); ( new ReaderThread(srw)).start();   Reader 優先 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 public class ReadersPreferredMonitor  int nr; // The number of threads currently reading, nr  = 0 int nw; // The number of threads currently writing, 0 or 1 int nrtotal; // The number of threads either reading or waiting to read, nrtotal  = nr int nwtotal; // The number of threads either writing or waiting to write public synchronized void startReading () throws InterruptedException  nrtotal++; // 想要read的thread又多了一個 while (nw != 0 )  // 還有write thread正在write wait();  nr++; // 正在讀的thread多了一個  public synchronized void startWriting () throws InterruptedException  nwtotal++; // 想要寫的thread又多了一個 while (nrtotal+nw != 0 )  // 只要有thread想要讀,或是有thread正在寫,禮讓 wait();  nw = 1 ;  public synchronized void stopReading ()  nr--; // 正在讀的少一個 nrtotal--; // 想要讀的少一個 if (nrtotal == 0 )  // 如果沒有要讀的,叫醒想寫的 notify();   public synchronized void stopWriting ()  nw = 0 ; // 沒有thread正在寫 nwtotal--; // 想寫的少一個 notifyAll(); // 叫醒所有想讀和想寫的   Writer 優先 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 public class WritersPreferredMonitor  int nr; // The number of threads currently reading, nr  = 0 int nw; // The number of threads currently writing, 0 or 1 int nrtotal; // The number of threads either reading or waiting to read, nrtotal  = nr int nwtotal; // The number of threads either writing or waiting to write public synchronized void startReading () throws InterruptedException  nrtotal++; // 想要read的thread又多了一個 while (nwtotal != 0 )  // 還有thread想要write wait();  nr++; // 正在讀的thread多了一個  public synchronized void startWriting () throws InterruptedException  nwtotal++; // 想要寫的thread又多了一個 while (nr+nw != 0 )  // 有thread正在讀,或是有thread正在寫 wait();  nw = 1 ;  public synchronized void stopReading ()  nr--; // 正在讀的少一個 nrtotal--; // 想要讀的少一個 if (nr == 0 )  // 如果沒有正在讀的,叫醒所有的(包括想寫的) notifyAll();   public synchronized void stopWriting ()  nw = 0 ; // 沒有thread正在寫 nwtotal--; // 想寫的少一個 notifyAll(); // 叫醒所有想讀和想寫的   Reader 和 Writer 交互執行 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 public class AlternatingReadersWritersMonitor  int [] nr = new int [ 2 ]; // The number of threads currently reading int thisBatch; // Index in nr of the batch of readers currently reading(0 or 1) int nextBatch = 1 ; // Index in nr of the batch of readers waitin to read(always 1-thisBatch) int nw; // The number of threads currently writing(0 or 1) int nwtotal; // The number of threads either writing or waiting to write public synchronized void startReading () throws InterruptedException  if (nwtotal == 0 )  // 沒有thread要write, 將reader都放到目前要處理的這一批 nr[thisBatch]++;  else  nr[nextBatch]++; int myBatch = nextBatch; while (thisBatch != myBatch)  wait();    public synchronized void stopReading ()  nr[thisBatch]--; if (nr[thisBatch] == 0 )  // 目前這批的reader都讀完了,找下一個writer notifyAll();   public synchronized void startWriting () throws InterruptedException  nwtotal++; while (nr[thisBatch]+nw != 0 )  // 目前這批還沒完,或有thread正在寫 wait();  nw = 1 ;  public synchronized void stopWriting ()  nw = 0 ; nwtotal--; int tmp = thisBatch; // 交換下一批要讀的 thisBatch = nextBatch; nextBatch = tmp; notifyAll();   給號依序執行 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 public class TakeANumberMonitor  int nr; // The number of threads currently reading int nextNumber; // The number to be taken by the next thread to arrive int nowServing; // The number of the thread to be served next public synchronized void startReading () throws InterruptedException  int myNumber = nextNumber++; while (nowServing != myNumber)  // 還沒輪到我 wait();  nr++; // 多了一個Reader nowServing++; // 準備檢查下一個 notifyAll();  public synchronized void startWriting () throws InterruptedException  int myNumber = nextNumber++; while (nowServing != myNumber)  // 還沒輪到我 wait();  while (nr  0 )  // 要等所有的Reader結束 wait();   public synchronized void stopReading ()  nr--; // 少了一個Reader if (nr == 0 )  notifyAll();   public synchronized void stopWriting ()  nowServing++; // 準備檢查下一個 notifyAll();  "},"java/thread.html#Program-Process-Thread":{"title":"Program, Process, Thread","path":"/java/thread.html#Program-Process-Thread","body":"&#x5728;&#x4ECB;&#x7D39; Thread &#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x5011;&#x5FC5;&#x9808;&#x5148;&#x628A; Program &#x548C; Process &#x9019;&#x5169;&#x500B;&#x89C0;&#x5FF5;&#x4F5C;&#x4E00;&#x500B;&#x91D0;&#x6E05;&#x3002; Program&#xFF1A;&#x4E00;&#x7FA4;&#x7A0B;&#x5F0F;&#x78BC;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x7528;&#x4EE5;&#x89E3;&#x6C7A;&#x7279;&#x5B9A;&#x7684;&#x554F;&#x984C;&#x3002;&#x4EE5;&#x7269;&#x4EF6;&#x5C0E;&#x5411;&#x7684;&#x89C0;&#x5FF5;&#x4F86;&#x985E;&#x6BD4;&#xFF0C;&#x76F8;&#x7576;&#x65BC; Class&#x3002; Process&#xFF1A;&#x7531; Program &#x6240;&#x7522;&#x751F;&#x7684;&#x57F7;&#x884C;&#x500B;&#x9AD4;&#xFF0C;&#x4E00;&#x500B; Program &#x53EF;&#x4EE5;&#x540C;&#x6642;&#x57F7;&#x884C;&#x591A;&#x6B21;&#xFF0C;&#x7522;&#x751F;&#x591A;&#x500B;Process&#x3002;&#x4EE5;&#x7269;&#x4EF6;&#x5C0E;&#x5411;&#x7684;&#x89C0;&#x5FF5;&#x4F86;&#x985E;&#x6BD4;&#xFF0C;&#x76F8;&#x7576;&#x65BC; Object&#x3002; &#x6BCF;&#x4E00;&#x500B; Process &#x53C8;&#x7531;&#x4EE5;&#x4E0B;&#x5169;&#x500B;&#x6771;&#x897F;&#x7D44;&#x6210; &#x4E00;&#x500B; Memory Space&#xFF1A;&#x76F8;&#x7576;&#x65BC; Object &#x7684; variable&#xFF0C;&#x4E0D;&#x540C; Process &#x7684; Memory Space &#x4E5F;&#x4E0D;&#x540C;&#xFF0C;&#x5F7C;&#x6B64;&#x770B;&#x4E0D;&#x5230;&#x5C0D;&#x65B9;&#x7684; Memory Space&#x3002; &#x4E00;&#x500B;&#x6216;&#x4EE5;&#x4E0A;&#x7684; Thread&#xFF1A;Thread &#x4EE3;&#x8868;&#x5F9E;&#x67D0;&#x500B;&#x8D77;&#x59CB;&#x9EDE;&#x958B;&#x59CB;(&#x4F8B;&#x5982; main )&#xFF0C;&#x5230;&#x76EE;&#x524D;&#x70BA;&#x6B62;&#x6240;&#x6709;&#x51FD;&#x6578;&#x7684;&#x547C;&#x53EB;&#x8DEF;&#x5F91;&#xFF0C;&#x4EE5;&#x53CA;&#x9019;&#x4E9B;&#x547C;&#x53EB;&#x8DEF;&#x5F91;&#x4E0A;&#x6240;&#x7528;&#x5230;&#x7684;&#x5340;&#x57DF;&#x8B8A;&#x6578;&#x3002;&#x7576;&#x7136;&#x7A0B;&#x5F0F;&#x7684;&#x57F7;&#x884C;&#x72C0;&#x614B;&#xFF0C;&#x9664;&#x4E86;&#x7D00;&#x9304;&#x5728;&#x4E3B;&#x8A18;&#x61B6;&#x9AD4;&#x5916;&#xFF0C;CPU &#x5167;&#x90E8;&#x7684;&#x66AB;&#x5B58;&#x5668;(&#x5982; Program Counter &#x3001; Stack Pointer &#x3001; Program Status Word &#x7B49;)&#x4E5F;&#x9700;&#x8981;&#x4E00;&#x8D77;&#x7D00;&#x9304;&#x3002; &#x6240;&#x4EE5; Thread &#x53C8;&#x7531;&#x4E0B;&#x9762;&#x5169;&#x9805;&#x7D44;&#x6210; Stack&#xFF1A;&#x7D00;&#x9304;&#x51FD;&#x6578;&#x547C;&#x53EB;&#x8DEF;&#x5F91;&#xFF0C;&#x4EE5;&#x53CA;&#x9019;&#x4E9B;&#x51FD;&#x6578;&#x6240;&#x7528;&#x5230;&#x7684;&#x5340;&#x57DF;&#x8B8A;&#x6578; &#x76EE;&#x524D; CPU &#x7684;&#x72C0;&#x614B; &#x7531;&#x4E0A;&#x9762;&#x7684;&#x63CF;&#x8FF0;&#x4E2D;&#xFF0C;&#x6211;&#x5011;&#x5728;&#x6B78;&#x7D0D; Thread &#x7684;&#x91CD;&#x9EDE;&#x5982;&#x4E0B; &#x4E00;&#x500B; Process &#x53EF;&#x4EE5;&#x6709;&#x591A;&#x500B; Thread&#x3002; &#x540C;&#x4E00;&#x500B; Process &#x5167;&#x7684; Thread &#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684; Memory Space&#xFF0C;&#x4F46;&#x9019;&#x4E9B; Thread &#x5404;&#x81EA;&#x64C1;&#x6709;&#x5176; Stack&#x3002;&#x63DB;&#x53E5;&#x8A71;&#x8AAA;&#xFF0C;Thread &#x80FD;&#x900F;&#x904E; reference &#x5B58;&#x53D6;&#x5230;&#x76F8;&#x540C;&#x7684; Object&#xFF0C;&#x4F46;&#x662F; local variable &#x537B;&#x662F;&#x5404;&#x81EA;&#x7368;&#x7ACB;&#x7684;&#x3002; &#x4F5C;&#x696D;&#x7CFB;&#x7D71;&#x6703;&#x6839;&#x64DA; Thread &#x7684;&#x512A;&#x5148;&#x6B0A;&#x4EE5;&#x53CA;&#x5DF2;&#x7D93;&#x7528;&#x6389;&#x7684; CPU &#x6642;&#x9593;&#xFF0C;&#x5728;&#x4E0D;&#x540C;&#x7684; Thread &#x4F5C;&#x5207;&#x63DB;&#xFF0C;&#x4EE5;&#x8B93;&#x5404;&#x500B; Thread &#x90FD;&#x6709;&#x6A5F;&#x6703;&#x57F7;&#x884C;&#x3002;"},"java/thread.html#如何產生-Thread":{"title":"&#x5982;&#x4F55;&#x7522;&#x751F; Thread","path":"/java/thread.html#如何產生-Thread","body":"Java &#x4EE5; java.lang.Thread &#x9019;&#x500B;&#x985E;&#x5225;&#x4F86;&#x8868;&#x793A; Thread&#x3002; Class Thread &#x6709;&#x5169;&#x500B; Constructor&#xFF1A; Thread() Thread(Runnable) &#x7B2C;&#x4E00;&#x500B; Constrctor &#x6C92;&#x6709;&#x53C3;&#x6578;&#xFF0C;&#x7B2C;&#x4E8C;&#x500B;&#x9700;&#x8981;&#x4E00;&#x500B; Runnable &#x7269;&#x4EF6;&#x7576;&#x53C3;&#x6578;&#x3002; Runnable &#x662F;&#x4E00;&#x500B; interface&#xFF0C;&#x5B9A;&#x7FA9;&#x65BC; java.lang &#x5167;&#xFF0C;&#x5176;&#x5BA3;&#x544A;&#x70BA; 1 2 3 public interface Runnable { public void run () ; } &#x4F7F;&#x7528; Thread() &#x7522;&#x751F;&#x7684; Thread&#xFF0C;&#x5176;&#x9032;&#x5165;&#x9EDE;&#x70BA; Thread &#x88E1;&#x7684; run() &#xFF1B;&#x4F7F;&#x7528; Thread(Runnable) &#x7522;&#x751F;&#x7684; Thread&#xFF0C;&#x5176;&#x9032;&#x5165;&#x9EDE;&#x70BA; Runnable &#x7269;&#x4EF6;&#x88E1;&#x7684; run() &#x3002; &#x7576; run() &#x7D50;&#x675F;&#x6642;&#xFF0C;&#x9019;&#x500B; Thread &#x4E5F;&#x5C31;&#x7D50;&#x675F;&#x4E86;&#xFF1B;&#x9019;&#x548C; main() &#x7D50;&#x675F;&#x6709;&#x76F8;&#x540C;&#x7684;&#x6548;&#x679C;&#x3002;&#x5176;&#x7528;&#x6CD5;&#x4EE5;&#x4E0B;&#x9762;&#x7BC4;&#x4F8B;&#x8AAA;&#x660E;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class ThreadExample1 extends Thread { public void run () { // override Thread&apos;s run() System.out.println( Here is the starting point of Thread. ); for (;;) { // infinite loop to print message System.out.println( User Created Thread ); } } public static void main (String[] argv) { Thread t = new ThreadExample1(); // &#x7522;&#x751F;Thread&#x7269;&#x4EF6; t.start(); // &#x958B;&#x59CB;&#x57F7;&#x884C;t.run() for (;;) { System.out.println( Main Thread ); } } } &#x4EE5;&#x4E0A;&#x7A0B;&#x5F0F;&#x57F7;&#x884C;&#x5F8C;&#xFF0C;&#x87A2;&#x5E55;&#x4E0A;&#x6703;&#x6301;&#x7E8C;&#x5370;&#x51FA; User Created Thread &#x6216; Main Thread &#x7684;&#x5B57;&#x6A23;&#x3002; &#x5229;&#x7528; Runnable &#x7684;&#x5BEB;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class ThreadExample2 implements Runnable { public void run () { // implements Runnable run() System.out.println( Here is the starting point of Thread. ); for (;;) { // infinite loop to print message System.out.println( User Created Thread ); } } public static void main (String[] argv) { Thread t = new Thread( new ThreadExample2()); // &#x7522;&#x751F;Thread&#x7269;&#x4EF6; t.start(); // &#x958B;&#x59CB;&#x57F7;&#x884C;Runnable.run(); for (;;) { System.out.println( Main Thread ); } } }"},"java/thread.html#Thread-的優先權與影響資源的相關方法":{"title":"Thread &#x7684;&#x512A;&#x5148;&#x6B0A;&#x8207;&#x5F71;&#x97FF;&#x8CC7;&#x6E90;&#x7684;&#x76F8;&#x95DC;&#x65B9;&#x6CD5;","path":"/java/thread.html#Thread-的優先權與影響資源的相關方法","body":"Thread.setPriority(int) &#x53EF;&#x4EE5;&#x8A2D;&#x5B9A; Thread &#x7684;&#x512A;&#x5148;&#x6B0A;&#xFF0C;&#x6578;&#x5B57;&#x8D8A;&#x5927;&#x512A;&#x5148;&#x6B0A;&#x8D8A;&#x9AD8;&#x3002; Thread &#x5B9A;&#x7FA9;&#x4E86; 3 &#x500B;&#x76F8;&#x95DC;&#x7684; static final variable&#xFF1A; 1 2 3 public static final int MAX_PRIORITY 10 public static final int MIN_PRIORITY 1 public static final int NORM_PRIORITY 5 &#x8981;&#x63D0;&#x9192;&#x8B80;&#x8005;&#x7684;&#x662F;&#xFF0C;&#x512A;&#x5148;&#x6B0A;&#x9AD8;&#x7684; Thread &#x5176;&#x4F54;&#x6709; CPU &#x7684;&#x6A5F;&#x6703;&#x6BD4;&#x8F03;&#x9AD8;&#xFF0C;&#x4F46;&#x512A;&#x5148;&#x6B0A;&#x4F4E;&#x7684;&#x4E5F;&#x90FD;&#x6703;&#x6709;&#x6A5F;&#x6703;&#x57F7;&#x884C;&#x5230;&#x3002;&#x5176;&#x4ED6;&#x6709;&#x95DC; Thread &#x57F7;&#x884C;&#x7684;&#x65B9;&#x6CD5;&#x6709;&#xFF1A; yield() &#xFF1A;&#x5148;&#x8B93;&#x7D66;&#x5225;&#x7684; Thread &#x57F7;&#x884C; sleep(int time) &#xFF1A;&#x4F11;&#x606F; time mini second (1/1000&#x79D2;) join() &#xFF1A;&#x547C;&#x53EB; ThreadA.join() &#x7684;&#x57F7;&#x884C;&#x7DD2;&#x6703;&#x7B49;&#x5230; ThreadA &#x7D50;&#x675F;&#x5F8C;&#xFF0C;&#x624D;&#x80FD;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; &#x4F60;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&#x4E0B;&#x9762;&#x7684;&#x7A0B;&#x5F0F;&#xFF0C;&#x770B;&#x770B; yield() &#x7684;&#x6548;&#x679C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public class ThreadExample1 extends Thread { public void run () { // overwrite Thread&apos;s run() System.out.println( Here is the starting point of Thread. ); for (;;) { // infinite loop to print message System.out.println( User Created Thread ); yield(); } } public static void main (String[] argv) { Thread t = new ThreadExample1(); // &#x7522;&#x751F;Thread&#x7269;&#x4EF6; t.start(); // &#x958B;&#x59CB;&#x57F7;&#x884C;t.run() for (;;) { System.out.println( Main Thread ); yield(); } } } &#x89C0;&#x770B; join() &#x7684;&#x6548;&#x679C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 public class JoinExample extends Thread { String myId; public JoinExample (String id) { myId = id; } public void run () { // overwrite Thread&apos;s run() \t for ( int i= 0 ; i  500 ; i++) { System.out.println(myId+  Thread ); } } public static void main (String[] argv) { Thread t1 = new JoinExample( T1 ); // &#x7522;&#x751F;Thread&#x7269;&#x4EF6; Thread t2 = new JoinExample( T2 ); // &#x7522;&#x751F;Thread&#x7269;&#x4EF6; t1.start(); // &#x958B;&#x59CB;&#x57F7;&#x884C;t1.run() t2.start(); try { t1.join(); // &#x7B49;&#x5F85;t1&#x7D50;&#x675F; t2.join(); // &#x7B49;&#x5F85;t2&#x7D50;&#x675F; } catch (InterruptedException e) {} for ( int i= 0 ;i  5 ; i++) { System.out.println( Main Thread ); } } } &#x89C0;&#x770B; sleep() &#x7684;&#x6548;&#x679C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class SleepExample extends Thread { String myId; public SleepExample (String id) { myId = id; } public void run () { // overwrite Thread&apos;s run() for ( int i= 0 ; i  500 ; i++) { System.out.println(myId+  Thread ); try { sleep( 100 ); } catch (InterruptedException e) {} } } public static void main (String[] argv) { Thread t1 = new SleepExample( T1 ); // &#x7522;&#x751F;Thread&#x7269;&#x4EF6; Thread t2 = new SleepExample( T2 ); // &#x7522;&#x751F;Thread&#x7269;&#x4EF6; t1.start(); // &#x958B;&#x59CB;&#x57F7;&#x884C;t1.run() t2.start(); } }"},"java/thread.html#Critical-Section-關鍵時刻-的保護措施":{"title":"Critical Section (&#x95DC;&#x9375;&#x6642;&#x523B;) &#x7684;&#x4FDD;&#x8B77;&#x63AA;&#x65BD;","path":"/java/thread.html#Critical-Section-關鍵時刻-的保護措施","body":"&#x5982;&#x679C;&#x8A2D;&#x8A08;&#x8005;&#x6C92;&#x6709;&#x63D0;&#x4F9B;&#x4FDD;&#x8B77;&#x6A5F;&#x5236;&#x7684;&#x8A71;&#xFF0C;Thread &#x53D6;&#x5F97;&#x548C;&#x5931;&#x53BB; CPU &#x63A7;&#x5236;&#x6B0A;&#x7684;&#x6642;&#x6A5F;&#x662F;&#x7531;&#x4F5C;&#x696D;&#x7CFB;&#x7D71;&#x4F86;&#x6C7A;&#x5B9A;&#x3002; &#x4E5F;&#x5C31;&#x662F;&#x8AAA; Thread &#x53EF;&#x80FD;&#x5728;&#x57F7;&#x884C;&#x4EFB;&#x4F55;&#x4E00;&#x500B;&#x6A5F;&#x5668;&#x6307;&#x4EE4;&#x6642;&#xFF0C;&#x88AB;&#x4F5C;&#x696D;&#x7CFB;&#x7D71;&#x53D6;&#x8D70; CPU &#x63A7;&#x5236;&#x6B0A;&#xFF0C;&#x4E26;&#x4EA4;&#x7D66;&#x53E6;&#x4E00;&#x500B; Thread&#x3002; &#x7531;&#x65BC;&#x67D0;&#x4E9B;&#x771F;&#x5BE6;&#x4E16;&#x754C;&#x7684;&#x52D5;&#x4F5C;&#x662F;&#x4E0D;&#x53EF;&#x5206;&#x5272;&#x7684;&#xFF0C;&#x4F8B;&#x5982;&#x8DE8;&#x884C;&#x8F49;&#x5E33; X &#x5143;&#x7531; A &#x5E33;&#x6236;&#x5230; B &#x5E33;&#x6236;&#xFF0C;&#x8F49;&#x5E33;&#x524D;&#x5F8C;&#x9019;&#x5169;&#x500B;&#x5E33;&#x6236;&#x7684;&#x7E3D;&#x91D1;&#x984D;&#x5FC5;&#x9808;&#x76F8;&#x540C;&#xFF0C;&#x4F46;&#x4EE5;&#x7A0B;&#x5F0F;&#x4F86;&#x5BE6;&#x4F5C;&#x6642;&#xFF0C;&#x537B;&#x7121;&#x6CD5;&#x7528;&#x4E00;&#x500B;&#x6307;&#x4EE4;&#x5C31;&#x5B8C;&#x6210;&#xFF0C;&#x5982;&#x8F49;&#x5E33;&#x53EF;&#x80FD;&#x8981;&#x5BEB;&#x6210;&#x4E0B;&#x9762;&#x7684;&#x9019;&#x4E00;&#x6BB5;&#x7A0B;&#x5F0F;&#x78BC; 1 2 3 4 if (A = X) { A = A - X; // &#x7FFB;&#x8B6F;&#x6210;3&#x500B;&#x6A5F;&#x5668;&#x6307;&#x4EE4;LOAD A, SUB X, STORE A B = B + X; } &#x5982;&#x679C;&#x5169;&#x500B; Thread &#x540C;&#x6642;&#x8981;&#x5B58;&#x53D6; A&#x3001;B &#x5169;&#x5E33;&#x6236;&#x9032;&#x884C;&#x8F49;&#x5E33;&#xFF0C;&#x5047;&#x8A2D;&#x7576; Thread 1 &#x57F7;&#x884C;&#x5230; SUBX &#x5F8C;&#x88AB;&#x4E2D;&#x65B7;&#xFF0C;Thread 2 &#x63A5;&#x624B;&#x57F7;&#x884C;&#x5B8C;&#x6210;&#x53E6;&#x4E00;&#x500B;&#x8F49;&#x5E33;&#x8981;&#x6C42;&#xFF0C;&#x7136;&#x5F8C; Thread 1 &#x7E7C;&#x7E8C;&#x57F7;&#x884C;&#x672A;&#x5B8C;&#x6210;&#x7684;&#x52D5;&#x4F5C;&#xFF0C;&#x8ACB;&#x554F;&#x9019;&#x5169;&#x500B;&#x8F49;&#x5E33;&#x52D5;&#x4F5C;&#x6B63;&#x78BA;&#x55CE;&#xFF1F; &#x6211;&#x5011;&#x4EE5; A = 1000&#x3001;B = 0 &#x5206;&#x5225;&#x8F49;&#x5E33; 100&#x3001;200 &#x5143;&#x4F86;&#x8AAA;&#x660E;&#x6B64;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 11 12 LOAD A // Thread 1 &#x73FE;&#x5728; A &#x9084;&#x662F; 1000 SUB 100 // Thread 1 LOAD A // &#x5047;&#x8A2D;&#x6B64;&#x6642; Thread 1 &#x88AB;&#x4E2D;&#x65B7;&#xFF0C;Thread 2 &#x63A5;&#x624B;&#xFF0C;&#x56E0;&#x70BA; Thread 1 &#x9084;&#x6C92;&#x6709;&#x57F7;&#x884C; STORE A&#xFF0C;&#x6240;&#x4EE5;&#x8B8A;&#x6578; A &#x9084;&#x662F; 1000 SUB 200 // Thread 2 STORE A // Thread 2&#xFF0C;A = 800 LOAD B // Thread 2&#xFF0C;B &#x73FE;&#x5728;&#x662F; 0 ADD 200 // Thread 2 STORE B // B = 200 STORE A // Thread 1 &#x62FF;&#x56DE;&#x63A7;&#x5236;&#x6B0A;&#xFF0C;A = 900 LOAD B // Thread 1&#xFF0C;B = 200 ADD 100 // Thread 1 STORE B // B = 300 &#x4F60;&#x6703;&#x767C;&#x73FE;&#x57F7;&#x884C;&#x5B8C;&#x6210;&#x5F8C; A = 900&#x3001;B = 300&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x9280;&#x884C;&#x5E73;&#x767D;&#x640D;&#x5931;&#x4E86; 200 &#x5143;&#xFF0C;&#x7576;&#x7136;&#x53E6;&#x5916;&#x7684;&#x57F7;&#x884C;&#x9806;&#x5E8F;&#x53EF;&#x80FD;&#x9020;&#x6210;&#x5176;&#x4ED6;&#x4E0D;&#x6B63;&#x78BA;&#x7684;&#x7D50;&#x679C;&#x3002; &#x6211;&#x5011;&#x628A;&#x9019;&#x554F;&#x984C;&#x518D;&#x6574;&#x7406;&#x4E00;&#x4E0B;&#xFF1A; &#x5BEB;&#x7A0B;&#x5F0F;&#x6642;&#x5047;&#x8A2D;&#x6307;&#x4EE4;&#x6703;&#x5FAA;&#x5E8F;&#x57F7;&#x884C; &#x67D0;&#x4E9B;&#x4E0D;&#x53EF;&#x5206;&#x5272;&#x7684;&#x52D5;&#x4F5C;&#xFF0C;&#x9700;&#x8981;&#x4EE5;&#x591A;&#x500B;&#x6A5F;&#x5668;&#x6307;&#x4EE4;&#x4F86;&#x5B8C;&#x6210; Thread &#x57F7;&#x884C;&#x6642;&#x53EF;&#x80FD;&#x5728;&#x67D0;&#x500B;&#x6A5F;&#x5668;&#x6307;&#x4EE4;&#x88AB;&#x4E2D;&#x65B7; &#x5169;&#x500B; Thread &#x53EF;&#x80FD;&#x57F7;&#x884C;&#x540C;&#x4E00;&#x6BB5;&#x7A0B;&#x5F0F;&#x78BC;&#xFF0C;&#x5B58;&#x53D6;&#x540C;&#x4E00;&#x500B;&#x8CC7;&#x6599;&#x7D50;&#x69CB; &#x9019;&#x6A23;&#x5C31;&#x7834;&#x58DE;&#x4E86;&#x7B2C; 1 &#x9EDE;&#x7684;&#x5047;&#x8A2D; &#x56E0;&#x6B64;&#x5728;&#x64B0;&#x5BEB;&#x591A;&#x57F7;&#x884C;&#x7DD2;&#x7684;&#x7A0B;&#x5F0F;&#x6642;&#xFF0C;&#x5FC5;&#x9808;&#x7279;&#x5225;&#x8003;&#x616E;&#x9019;&#x7A2E;&#x72C0;&#x6CC1;(&#x53C8;&#x7A31;&#x70BA; race condition)&#x3002; Java &#x7684;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5;&#x662F;&#xFF0C;JVM &#x6703;&#x5728;&#x6BCF;&#x500B;&#x7269;&#x4EF6;&#x4E0A;&#x64FA;&#x4E00;&#x628A;&#x9396;(lock)&#xFF0C;&#x7136;&#x5F8C;&#x7A0B;&#x5F0F;&#x8A2D;&#x8A08;&#x8005;&#x53EF;&#x4EE5;&#x5BA3;&#x544A;&#x57F7;&#x884C;&#x67D0;&#x4E00;&#x6BB5;&#x7A0B;&#x5F0F;(&#x901A;&#x5E38;&#x662F;&#x7528;&#x4F86;&#x5B58;&#x53D6;&#x5171;&#x540C;&#x8CC7;&#x6599;&#x7D50;&#x69CB;&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#xFF0C;&#x53C8;&#x7A31;&#x70BA; Critical Section)&#x6642;&#xFF0C;&#x5FC5;&#x9808;&#x62FF;&#x5230;&#x67D0;&#x7269;&#x4EF6;&#x7684;&#x9396;&#x624D;&#x884C;&#xFF0C;&#x9019;&#x500B;&#x9396;&#x540C;&#x6642;&#x9593;&#x6700;&#x591A;&#x53EA;&#x6709;&#x4E00;&#x500B;&#x57F7;&#x884C;&#x7DD2;&#x53EF;&#x4EE5;&#x64C1;&#x6709;&#x5B83;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 public class Transfer extends Thread { public static Object lock = new Object(); public static int A = 1000 ; public static int B = 0 ; private int amount; public Transfer ( int x) { amount = x; } public void run () { synchronized (lock) { // &#x53D6;&#x5F97;lock,&#x5982;&#x679C;&#x5225;&#x7684;thread A&#x5DF2;&#x53D6;&#x5F97;,&#x5247;&#x76EE;&#x524D;&#x9019;&#x500B;thread&#x6703;&#x7B49;&#x5230;thread A&#x91CB;&#x653E;&#x8A72;lock if (A = amount) { A = A - amount; B = B + amount; } } // &#x96E2;&#x958B;synchronized&#x5340;&#x584A;&#x5F8C;,&#x6B64;thread&#x6703;&#x81EA;&#x52D5;&#x91CB;&#x653E;lock } public static void main (String[] argv) { Thread t1 = new Transfer( 100 ); Thread t2 = new Transfer( 200 ); t1.start(); t2.start(); } } &#x9664;&#x4E86; synchronized(ref) &#x7684;&#x8A9E;&#x6CD5;&#x53EF;&#x4EE5;&#x9396;&#x5B9A; ref &#x6307;&#x5230;&#x7684;&#x7269;&#x4EF6;&#x5916;&#xFF0C;synchronized &#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x5728; object method &#x524D;&#x9762;&#xFF0C;&#x8868;&#x793A;&#x8981;&#x9396;&#x5B9A; this &#x7269;&#x4EF6;&#x624D;&#x80FD;&#x57F7;&#x884C;&#x8A72;&#x65B9;&#x6CD5;&#x3002; &#x4EE5;&#x4E0B;&#x662F; Queue &#x7D50;&#x69CB;&#x7684;&#x7BC4;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class Queue { private Object[] data; private int size; private int head; private int tail; public Queue ( int maxLen) { data = new Object[maxLen]; } public synchronized Object deQueue () { Object tmp = data[head]; data[head] = null ; head = (head+ 1 )%data.length; size--; return tmp; } public synchronized void enQueue (Object c) { data[tail++] = c; tail %= data.length; size++; } } &#x96D6;&#x7136;&#x4E0A;&#x9762;&#x7684;&#x7A0B;&#x5F0F;&#x6B63;&#x78BA;&#x7121;&#x8AA4;&#xFF0C;&#x4F46;&#x4E26;&#x672A;&#x8003;&#x616E;&#x8CC7;&#x6E90;&#x4E0D;&#x8DB3;&#x6642;&#x8A72;&#x5982;&#x4F55;&#x8655;&#x7406;&#x3002; &#x4F8B;&#x5982; Queue &#x5DF2;&#x7D93;&#x6C92;&#x6709;&#x8CC7;&#x6599;&#x4E86;&#xFF0C;&#x537B;&#x9084;&#x60F3;&#x62FF;&#x51FA;&#x4F86;&#xFF1B;&#x6216;&#x662F; Queue &#x88E1;&#x5DF2;&#x7D93;&#x585E;&#x6EFF;&#x4E86;&#x8CC7;&#x6599;&#xFF0C;&#x4F7F;&#x7528;&#x8005;&#x537B;&#x9084;&#x8981;&#x653E;&#x9032;&#x53BB;&#xFF1F; &#x6211;&#x5011;&#x7576;&#x7136;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; Exception Handling &#x7684;&#x6A5F;&#x5236;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 public class Queue { private Object[] data; private int size; private int head; private int tail; public Queue ( int maxLen) { data = new Object[maxLen]; } public synchronized Object deQueue () throws Exception { if (size == 0 ) { throw new Exception(); } Object tmp = data[head]; data[head] = null ; head = (head+ 1 )%data.length; size--; return tmp; } public synchronized void enQueue (Object c) throws Exception { if (size = maxLen) { throw new Exception(); } data[tail++] = c; tail %= data.length; size++; } } &#x4F46;&#x5047;&#x8A2D;&#x6211;&#x5011;&#x7684;&#x57F7;&#x884C;&#x74B0;&#x5883;&#x662F;&#xFF0C;&#x67D0;&#x4E9B; Thread &#x5C08;&#x9580;&#x8CA0;&#x8CAC;&#x8B80;&#x53D6;&#x4F7F;&#x7528;&#x8005;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x4E26;&#x628A;&#x5DE5;&#x4F5C;&#x653E;&#x5230; Queue &#x88E1;&#x9762;&#xFF0C;&#x67D0;&#x4E9B; Thread &#x5247;&#x5C08;&#x9580;&#x7531; Queue &#x88E1;&#x6293;&#x53D6;&#x5DE5;&#x4F5C;&#x9700;&#x6C42;&#x505A;&#x9032;&#x4E00;&#x6B65;&#x8655;&#x7406;&#x3002; &#x9019;&#x7A2E;&#x67B6;&#x69CB;&#x7684;&#x597D;&#x8655;&#x662F;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;&#x6162;&#x901F;&#x6216;&#x4E0D;&#x5B9A;&#x901F;&#x7684;&#x8F38;&#x5165;(&#x5982;&#x900F;&#x904E;&#x7DB2;&#x8DEF;&#x8B80;&#x8CC7;&#x6599;&#xFF0C;&#x9023;&#x7DDA;&#x901F;&#x5EA6;&#x53EF;&#x80FD;&#x5DEE;&#x5F88;&#x591A;)&#x548C;&#x5FEB;&#x901F;&#x7684;&#x8655;&#x7406;&#x5206;&#x958B;&#xFF0C;&#x53EF;&#x4F7F;&#x7CFB;&#x7D71;&#x7684;&#x53CD;&#x61C9;&#x901F;&#x5EA6;&#x66F4;&#x5FEB;&#xFF0C;&#x66F4;&#x7BC0;&#x7701;&#x8CC7;&#x6E90;&#x3002; &#x90A3;&#x9EBC;&#x4EE5; Exceptoin &#x4F86;&#x8655;&#x7406; Queue &#x7A7A;&#x6389;&#x6216;&#x7206;&#x6389;&#x7684;&#x60C5;&#x6CC1;&#x4E26;&#x4E0D;&#x5408;&#x9069;&#xFF0C;&#x56E0;&#x70BA;&#x4F7F;&#x7528; Queue &#x7684;&#x4EBA;&#x5FC5;&#x9808;&#x8655;&#x7406;&#x4F8B;&#x5916;&#x72C0;&#x6CC1;&#xFF0C;&#x4E26;&#x4E0D;&#x65B7;&#x7684;&#x6D88;&#x8017;CPU&#x8CC7;&#x6E90;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 public class Getter extends Thread { Queue q; public Getter (Queue q) { this .q = q; } public void run () { for (;;) { try { Object data = q.deQueue(); // processing } catch (Exception e) { // if we try to sleep here, user may feel slow response // if we do not sleep, CPU will be wasted } } } } public class Putter extends Thread { Queue q; public Putter (Queue q) { this .q = q; } public void run () { for (;;) { try { Object data = null ; // get user request q.enQueue(data); } catch (Exception e) { // if we try to sleep here, user may feel slow response // if we do not sleep, CPU will be wasted } } } } public class Main { public static void main (String[] argv) { Queue q = new Queue( 10 ); Getter r1 = new Getter(q); Getter r2 = new Getter(q); Putter w1 = new Putter(q); Putter w2 = new Putter(q); r1.start(); r2.start(); w1.start(); w2.start(); } } &#x70BA;&#x4E86;&#x89E3;&#x6C7A;&#x9019;&#x985E;&#x8CC7;&#x6E90;&#x5206;&#x914D;&#x7684;&#x554F;&#x984C;&#xFF0C;Java Object &#x63D0;&#x4F9B;&#x4E86;&#x4E0B;&#x9762;&#x4E09;&#x500B; method&#xFF1A; wait() &#xFF1A;&#x4F7F;&#x547C;&#x53EB;&#x6B64;&#x65B9;&#x6CD5;&#x7684; Thread &#x9032;&#x5165; Blocking Mode&#xFF0C;&#x4E26;&#x8A2D;&#x70BA;&#x7B49;&#x5F85;&#x8A72; Object&#xFF0C;&#x547C;&#x53EB; wait() &#x6642;&#xFF0C;&#x8A72; Thread &#x5FC5;&#x9808;&#x64C1;&#x6709;&#x8A72;&#x7269;&#x4EF6;&#x7684; lock&#x3002;Blocking Mode &#x4E0B;&#x7684; Thread &#x5FC5;&#x9808;&#x91CB;&#x653E;&#x6240;&#x6709;&#x624B;&#x4E2D;&#x7684; lock&#xFF0C;&#x4E26;&#x4E14;&#x7121;&#x6CD5;&#x4F7F;&#x7528;CPU&#x3002; notifyAll() &#xFF1A;&#x8B93;&#x7B49;&#x5F85;&#x8A72; Object &#x7684;&#x6240;&#x6709; Thread &#x9032;&#x5165; Runnable Mode&#x3002; notify() &#xFF1A;&#x8B93;&#x7B49;&#x5F85;&#x8A72; Object &#x7684;&#x67D0;&#x4E00;&#x500B; Thread &#x9032;&#x5165; Runnable Mode&#x3002; &#x6240;&#x8B02; Runnable Mode &#x662F;&#x6307;&#x8A72; Thread &#x96A8;&#x6642;&#x53EF;&#x7531;&#x4F5C;&#x696D;&#x7CFB;&#x7D71;&#x5206;&#x914D;CPU&#x8CC7;&#x6E90;&#x3002; Blocking Mode &#x8868;&#x793A;&#x8A72; Thread &#x6B63;&#x5728;&#x7B49;&#x5F85;&#x67D0;&#x500B;&#x4E8B;&#x4EF6;&#x767C;&#x751F;&#xFF0C;&#x4F5C;&#x696D;&#x7CFB;&#x7D71;&#x4E0D;&#x6703;&#x8B93;&#x9019;&#x7A2E; Thread &#x53D6;&#x5F97; CPU &#x8CC7;&#x6E90;&#x3002; &#x524D;&#x4E00;&#x500B; Queue &#x7684;&#x7BC4;&#x4F8B;&#x5C31;&#x53EF;&#x4EE5;&#x5BEB;&#x6210;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 public class Queue { private Object[] data; private int size; private int head; private int tail; public Queue ( int maxLen) { data = new Object[maxLen]; } public synchronized Object deQueue () { while (size== 0 ) { // When executing here, Thread must have got lock and be in running mode // Let current Thread wait this object(to sleeping mode) try { wait(); // to sleeping mode, and release all lock } catch (Exception ex) {}; } Object tmp = data[head]; data[head] = null ; head = (head+ 1 )%data.length; if (size==data.length) { // wake up all Threads waiting this object notifyAll(); } size--; return tmp; } // release lock public synchronized void enQueue (Object c) { while (size==data.length) { // When executing here, Thread must have got lock and be in running mode // Let current thread wait this object(to sleeping mode) try { wait(); // to sleeping mode, and release all lock } catch (Exception ex) {}; } data[tail++] = c; tail %= data.length; size++; if (size== 1 ) { // wake up all Threads waiting this object notifyAll(); } } } public class ReaderWriter extends Thread { public static final int READER = 1 ; public static final int WRITER = 2 ; private Queue q; private int mode; public void run () { for ( int i= 0 ; i  1000 ; i++) { if (mode==READER) { q.deQueue(); } else if (mode==WRITER) { q.enQueue( new Integer(i)); } } } public ReaderWriter (Queue q, int mode) { this .q = q; this .mode = mode; } public static void main (String[] args) { Queue q = new Queue( 5 ); ReaderWriter r1, r2, w1, w2; (w1 = new ReaderWriter(q, WRITER)).start(); (w2 = new ReaderWriter(q, WRITER)).start(); (r1 = new ReaderWriter(q, READER)).start(); (r2 = new ReaderWriter(q, READER)).start(); try { w1.join(); // wait until w1 complete w2.join(); // wait until w2 complete r1.join(); // wait until r1 complete r2.join(); // wait until r2 complete } catch (InterruptedException epp) { } } }"},"java/thread.html#Multiple-Reader-Writer-Monitors":{"title":"Multiple Reader-Writer Monitors","path":"/java/thread.html#Multiple-Reader-Writer-Monitors","body":"&#x4E0A;&#x4E00;&#x7BC0;&#x7684; Queue &#x8CC7;&#x6599;&#x7D50;&#x69CB;&#xFF0C;&#x4E0D;&#x8AD6;&#x662F; enQueue() &#x6216; deQueue() &#x90FD;&#x6703;&#x66F4;&#x52D5;&#x5230; Queue &#x7684;&#x5167;&#x5BB9;&#x3002;&#x800C;&#x5728;&#x8A31;&#x591A;&#x61C9;&#x7528;&#x88E1;&#xFF0C;&#x8CC7;&#x6599;&#x7D50;&#x69CB;&#x53EF;&#x4EE5;&#x5141;&#x8A31;&#x540C;&#x6642;&#x591A;&#x500B;&#x8B80;&#x4E00;&#x500B;&#x5BEB;&#x3002; &#x672C;&#x7BC0;&#x8209;&#x51FA;&#x5E7E;&#x500B;&#x4E0D;&#x540C;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x8AAA;&#x660E;&#x591A;&#x500B; Reader-Writer &#x6642;&#x7684;&#x53EF;&#x80FD;&#x6392;&#x7A0B;&#x6CD5;&#x3002; Single Reader-Writer&#xFF1A;&#x53EA;&#x540C;&#x6642;&#x5141;&#x8A31;&#x4E00;&#x500B;&#x57F7;&#x884C;&#x7DD2;&#x5B58;&#x53D6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 public class SingleReaderWriter { int n; // number of reader and write, 0 or 1 public synchronized void startReading () throws InterruptedException { while (n != 0 ) { wait(); } n = 1 ; } public synchronized void stopReading () { n = 0 ; notify(); } public synchronized void startWriting () throws InterruptedException { while (n != 0 ) { wait(); } n = 1 ; } public synchronized void stopWriting () { n = 0 ; notify(); } } // &#x9019;&#x662F;&#x4E00;&#x500B;&#x4F7F;&#x7528;&#x7BC4;&#x4F8B;, &#x7A0B;&#x5F0F;&#x80FD;&#x5426;&#x6B63;&#x78BA;&#x57F7;&#x884C;&#x8981;&#x9760;&#x547C;&#x53EB;&#x6B63;&#x78BA;&#x7684;start&#x548C;stop public class WriterThread extends Thread { SingleReaderWriter srw; public WriterThread (SingleReaderWriter srw) { this .srw = srw; } public void run () { startWring(); // insert real job here stopWriting(); } } public class ReaderThread extends Thread { SingleReaderWriter srw; public ReaderThread (SingleReaderWriter srw) { this .srw = srw; } public void run () { startReading(); // insert real job here stopReading(); } } public class Test { public static void main (String[] argv) { SingleReaderWriter srw = new SingleReaderWriter; // create four threads ( new WriterThread(srw)).start(); ( new WriterThread(srw)).start(); ( new ReaderThread(srw)).start(); ( new ReaderThread(srw)).start(); } } Reader &#x512A;&#x5148; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 public class ReadersPreferredMonitor { int nr; // The number of threads currently reading, nr  = 0 int nw; // The number of threads currently writing, 0 or 1 int nrtotal; // The number of threads either reading or waiting to read, nrtotal  = nr int nwtotal; // The number of threads either writing or waiting to write public synchronized void startReading () throws InterruptedException { nrtotal++; // &#x60F3;&#x8981;read&#x7684;thread&#x53C8;&#x591A;&#x4E86;&#x4E00;&#x500B; while (nw != 0 ) { // &#x9084;&#x6709;write thread&#x6B63;&#x5728;write wait(); } nr++; // &#x6B63;&#x5728;&#x8B80;&#x7684;thread&#x591A;&#x4E86;&#x4E00;&#x500B; } public synchronized void startWriting () throws InterruptedException { nwtotal++; // &#x60F3;&#x8981;&#x5BEB;&#x7684;thread&#x53C8;&#x591A;&#x4E86;&#x4E00;&#x500B; while (nrtotal+nw != 0 ) { // &#x53EA;&#x8981;&#x6709;thread&#x60F3;&#x8981;&#x8B80;,&#x6216;&#x662F;&#x6709;thread&#x6B63;&#x5728;&#x5BEB;,&#x79AE;&#x8B93; wait(); } nw = 1 ; } public synchronized void stopReading () { nr--; // &#x6B63;&#x5728;&#x8B80;&#x7684;&#x5C11;&#x4E00;&#x500B; nrtotal--; // &#x60F3;&#x8981;&#x8B80;&#x7684;&#x5C11;&#x4E00;&#x500B; if (nrtotal == 0 ) { // &#x5982;&#x679C;&#x6C92;&#x6709;&#x8981;&#x8B80;&#x7684;,&#x53EB;&#x9192;&#x60F3;&#x5BEB;&#x7684; notify(); } } public synchronized void stopWriting () { nw = 0 ; // &#x6C92;&#x6709;thread&#x6B63;&#x5728;&#x5BEB; nwtotal--; // &#x60F3;&#x5BEB;&#x7684;&#x5C11;&#x4E00;&#x500B; notifyAll(); // &#x53EB;&#x9192;&#x6240;&#x6709;&#x60F3;&#x8B80;&#x548C;&#x60F3;&#x5BEB;&#x7684; } } Writer &#x512A;&#x5148; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 public class WritersPreferredMonitor { int nr; // The number of threads currently reading, nr  = 0 int nw; // The number of threads currently writing, 0 or 1 int nrtotal; // The number of threads either reading or waiting to read, nrtotal  = nr int nwtotal; // The number of threads either writing or waiting to write public synchronized void startReading () throws InterruptedException { nrtotal++; // &#x60F3;&#x8981;read&#x7684;thread&#x53C8;&#x591A;&#x4E86;&#x4E00;&#x500B; while (nwtotal != 0 ) { // &#x9084;&#x6709;thread&#x60F3;&#x8981;write wait(); } nr++; // &#x6B63;&#x5728;&#x8B80;&#x7684;thread&#x591A;&#x4E86;&#x4E00;&#x500B; } public synchronized void startWriting () throws InterruptedException { nwtotal++; // &#x60F3;&#x8981;&#x5BEB;&#x7684;thread&#x53C8;&#x591A;&#x4E86;&#x4E00;&#x500B; while (nr+nw != 0 ) { // &#x6709;thread&#x6B63;&#x5728;&#x8B80;,&#x6216;&#x662F;&#x6709;thread&#x6B63;&#x5728;&#x5BEB; wait(); } nw = 1 ; } public synchronized void stopReading () { nr--; // &#x6B63;&#x5728;&#x8B80;&#x7684;&#x5C11;&#x4E00;&#x500B; nrtotal--; // &#x60F3;&#x8981;&#x8B80;&#x7684;&#x5C11;&#x4E00;&#x500B; if (nr == 0 ) { // &#x5982;&#x679C;&#x6C92;&#x6709;&#x6B63;&#x5728;&#x8B80;&#x7684;,&#x53EB;&#x9192;&#x6240;&#x6709;&#x7684;(&#x5305;&#x62EC;&#x60F3;&#x5BEB;&#x7684;) notifyAll(); } } public synchronized void stopWriting () { nw = 0 ; // &#x6C92;&#x6709;thread&#x6B63;&#x5728;&#x5BEB; nwtotal--; // &#x60F3;&#x5BEB;&#x7684;&#x5C11;&#x4E00;&#x500B; notifyAll(); // &#x53EB;&#x9192;&#x6240;&#x6709;&#x60F3;&#x8B80;&#x548C;&#x60F3;&#x5BEB;&#x7684; } } Reader &#x548C; Writer &#x4EA4;&#x4E92;&#x57F7;&#x884C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 public class AlternatingReadersWritersMonitor { int [] nr = new int [ 2 ]; // The number of threads currently reading int thisBatch; // Index in nr of the batch of readers currently reading(0 or 1) int nextBatch = 1 ; // Index in nr of the batch of readers waitin to read(always 1-thisBatch) int nw; // The number of threads currently writing(0 or 1) int nwtotal; // The number of threads either writing or waiting to write public synchronized void startReading () throws InterruptedException { if (nwtotal == 0 ) { // &#x6C92;&#x6709;thread&#x8981;write, &#x5C07;reader&#x90FD;&#x653E;&#x5230;&#x76EE;&#x524D;&#x8981;&#x8655;&#x7406;&#x7684;&#x9019;&#x4E00;&#x6279; nr[thisBatch]++; } else { nr[nextBatch]++; int myBatch = nextBatch; while (thisBatch != myBatch) { wait(); } } } public synchronized void stopReading () { nr[thisBatch]--; if (nr[thisBatch] == 0 ) { // &#x76EE;&#x524D;&#x9019;&#x6279;&#x7684;reader&#x90FD;&#x8B80;&#x5B8C;&#x4E86;,&#x627E;&#x4E0B;&#x4E00;&#x500B;writer notifyAll(); } } public synchronized void startWriting () throws InterruptedException { nwtotal++; while (nr[thisBatch]+nw != 0 ) { // &#x76EE;&#x524D;&#x9019;&#x6279;&#x9084;&#x6C92;&#x5B8C;,&#x6216;&#x6709;thread&#x6B63;&#x5728;&#x5BEB; wait(); } nw = 1 ; } public synchronized void stopWriting () { nw = 0 ; nwtotal--; int tmp = thisBatch; // &#x4EA4;&#x63DB;&#x4E0B;&#x4E00;&#x6279;&#x8981;&#x8B80;&#x7684; thisBatch = nextBatch; nextBatch = tmp; notifyAll(); } } &#x7D66;&#x865F;&#x4F9D;&#x5E8F;&#x57F7;&#x884C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 public class TakeANumberMonitor { int nr; // The number of threads currently reading int nextNumber; // The number to be taken by the next thread to arrive int nowServing; // The number of the thread to be served next public synchronized void startReading () throws InterruptedException { int myNumber = nextNumber++; while (nowServing != myNumber) { // &#x9084;&#x6C92;&#x8F2A;&#x5230;&#x6211; wait(); } nr++; // &#x591A;&#x4E86;&#x4E00;&#x500B;Reader nowServing++; // &#x6E96;&#x5099;&#x6AA2;&#x67E5;&#x4E0B;&#x4E00;&#x500B; notifyAll(); } public synchronized void startWriting () throws InterruptedException { int myNumber = nextNumber++; while (nowServing != myNumber) { // &#x9084;&#x6C92;&#x8F2A;&#x5230;&#x6211; wait(); } while (nr  0 ) { // &#x8981;&#x7B49;&#x6240;&#x6709;&#x7684;Reader&#x7D50;&#x675F; wait(); } } public synchronized void stopReading () { nr--; // &#x5C11;&#x4E86;&#x4E00;&#x500B;Reader if (nr == 0 ) { notifyAll(); } } public synchronized void stopWriting () { nowServing++; // &#x6E96;&#x5099;&#x6AA2;&#x67E5;&#x4E0B;&#x4E00;&#x500B; notifyAll(); } }"},"java/gui.html":{"title":"GUI","path":"/java/gui.html","body":"GUI 簡介 GUI 是由 Component、LayoutManager 以及 Listener 所組成的。 Component 是畫面的主要組成成分，本身並沒有可見的實體，其子類別才有顯現的效果。 如果 Component 可以放入其他的 Component，則這種 Component 就稱為是 Container。 Container 裡面的 Component 的排放位置，可以用絕對座標，也可以透過 LayoutManager 加以調整。 使用者以 Mouse、Keyboard 等操作 GUI 時，會產生相對應的 Event，並由視窗系統將該 Event 傳遞給程式設計者所指定的 Listener。 例如使用者以 Mouse 的左鍵按下 Button (一種 Component) 時，視窗系統會將 ActionEvent 傳給該 Button 的 ActionListener (設計者實作的物件)，由 ActionListener 決定採取的步驟。 這種由使用者觸發的執行動作，和程序式語言由主程式開始呼叫其他程序的模式不同，我們稱之為事件驅動 (Event Driven) 模式。 AWT (Abstract Window Toolkit java.awt.* ) 是 JDK 1.0 所提出來有關 GUI 的函式庫，在 JDK 1.1 時又修改了 Event Handling 的機制，成為現在的樣子。 當初為了快速開發出 AWT，以符合 Java 出版的時程，因此在設計上，是利用視窗系統已有的 GUI 元件為主。 由於 Java 原始的設計理念具有跨平台的性質，因此 AWT 只好取各家視窗系統 (Windows、Open Look、Motif、Machintosh) 上元件的交集，因此 AWT 頗為陽春。 為了彌補 AWT 的不足，JDK 自 1.2 以後提供新的 JFC(Java Foundation Class)/Swing 的程式庫 javax.swing 。 Swing 是以 Java 語言所寫出來的，因此提供了更多樣化而複雜的元件，如 Image JButton 、 Image JLabel 、 JTree 、 JTable 、 JTabbedPane 、 JPopupMenu 等等。 而且由於 Swing 並不依靠底層的視窗系統畫出元件的外觀，因此 Swing 可以讓使用者自行選定其所喜愛的 look and feel。 為了讓原先使用 AWT 的應用程式能改用 Swing 的程式庫，AWT 內所有的元件都有相對應以 J 開頭的 Swing 元件，如 Button 對應 JButton 、 TextField 對應 JTextField 。 原先 AWT 的程式只要把 Source Code 裡面的 AWT 元件前面加上 J 即可，其餘 Event Handling 和 LayoutManager 均可沿用(除了 JFrame 、 JDialog 、 JApplet 、 JWindow 等最上層的 Container 不能直接加入元件，必須透過 getContentPane() 取得放置的地方)。 在以下的範例中，我們主要採用 AWT，並在最後面給一個 Swing 的範例，以說明兩者間的相似性。 AWT AWT 中直接繼承 Component 的子類別有： Button Canvas ：空白的方形區域 Checkbox ：勾選 Choice ：拉下式表單 Container ：裡面還可以放入其他 Component，其子類別有 Window ：最上層的視窗，又有 Frame (可以設定 MenuBar 的獨立視窗)、 Dialog (必須依附在 Frame 下的視窗)、 FileDialog 等子類別 Panel ：沒有顯示的容器 ScrollPane ：具有 ScrollBar 的容器 Label ：可以顯示文字 List ：捲軸表單 Scrollbar ：捲軸 TextComponent ：可用以編輯文字，其子類別有 TextField (單行) TextArea (多行) AWT 提供的 LayoutManager 有： BorderLayout CardLayout FlowLayout GridBagLayout GridLayout AWT 定義的 Event 主要是 java.awt.AWTEvent ，其下又有許多子類別 java.awt.event.* ActionEvent ：component-defined action occured AdjustmentEvent ：ScrollBar 被拉動 ComponentEvent ：一般不直接使用，其子類別有 ContainerEvent ：Container 加入或移除 Component，也很少用 FocusEvent ：Gain or Lose Focus InputEvent ：有兩個子類別 KeyEvent MouseEvent PaintEvent ：供 AWT 內部使用，不用管他 WindowEvent ：視窗狀態改變 HierarchyEvent ：AWT 自動處理，不用管他 InputMethodEvent InvocationEvent ：由 AWT event dispatcher thread 呼叫 Runnable 物件裡的 run() ItemEvent ：an item was selected or deselected TextEvent ：an object’s text changed 以上的 Event 都有相對應的 Listener Interface 來處理，如 ActionEvent 相對應的是 ActionListener 井字遊戲import java.awt.*; import java.awt.event.*; public class OXMain extends Frame implements ActionListener  private OX oxBoard; private OXMain ()  super ( \"井字遊戲\" ); Menu m; MenuBar mb; oxBoard = new OX( this ); this .add(oxBoard); CloseWindow close = new CloseWindow( this , true ); this .setMenuBar(mb = new MenuBar()); mb.add(m = new Menu( \"遊戲\" )).add( new MenuItem( \"新遊戲\" )).addActionListener( this ); m.add( new MenuItem( \"結束\" )).addActionListener(close); mb.add( new Menu( \"說明\" )).add( new MenuItem( \"關於本遊戲\" )).addActionListener( this ); this .addWindowListener(close); pack(); setVisible( true );  public static void main (String argv[])  new OXMain();  // implements the ActionListener interface public void actionPerformed (ActionEvent e)  String command = e.getActionCommand(); if (command.equals( \"關於本遊戲\" ))  new ErrorDialog( this , \"俞旭昇寫好玩的\" );  else if (command.equals( \"新遊戲\" ))  oxBoard.newGame();    class OX extends Component implements MouseListener  public static final byte EMPTY = 0 ; public static final byte CIRCLE = 1 ; public static final byte CROSS = 2 ; private byte [] board = new byte [ 9 ]; private byte playing = CIRCLE; private Dimension mySize = new Dimension( 300 , 300 ); private Frame parent; private byte [][] directions =  0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 0 , 3 , 6 , 1 , 4 , 7 , 2 , 5 , 8 , 0 , 4 , 8 , 2 , 4 , 6 ; public OX (Frame p)  this .addMouseListener( this ); parent = p;  // The following 5 functions implement the MouseListener interface public void mouseClicked (MouseEvent e)  public void mouseEntered (MouseEvent e)  public void mouseExited (MouseEvent e)  public void mouseReleased (MouseEvent e)  public void mousePressed (MouseEvent e)  int row = e.getY()/ 100 ; int col = e.getX()/ 100 ; if (row = 3 || col = 3 ) return ; // 超過邊界 if (board[row* 3 +col] == EMPTY)  // 此位置可以下 board[row* 3 +col] = playing; repaint(); // notify Window Manager // Anyone Win? for ( int i= 0 ; i  directions.length; i++)  int j; for (j = 0 ; j  3 &amp;&amp; board[directions[i][j]]==playing; j++) ; if (j== 3 )  if (playing == CIRCLE)  new ErrorDialog(parent, \"圓圈贏了\" );  else if (playing == CROSS)  new ErrorDialog(parent, \"叉叉贏了\" );  this .newGame(); return ;   playing ^= 0x03 ;   // override paint() defined in Component public void paint (Graphics g)  g.drawLine( 0 , 100 , 300 , 100 ); g.drawLine( 0 , 200 , 300 , 200 ); g.drawLine( 100 , 0 , 100 , 300 ); g.drawLine( 200 , 0 , 200 , 300 ); for ( int i = 0 ; i  3 ; i++)  for ( int j = 0 ; j  3 ; j++)  if (board[i* 3 +j] == CIRCLE)  g.drawOval( 50 +j* 100 - 25 , 50 +i* 100 - 25 , 50 , 50 );  else if (board[i* 3 +j] == CROSS)  g.drawLine( 25 +j* 100 , 25 +i* 100 , 75 +j* 100 , 75 +i* 100 ); g.drawLine( 75 +j* 100 , 25 +i* 100 , 25 +j* 100 , 75 +i* 100 );     public void newGame ()  for ( int i = 0 ; i  3 ; i++)  for ( int j = 0 ; j  3 ; j++)  board[i* 3 +j] = EMPTY;   playing = CIRCLE; repaint();  // override getPreferredSize defined in Component, // so that the Component has proper size on screen public Dimension getPreferredSize ()  return mySize;   // WindowAdapter implements the WindowLister interface // We extends WindowAdapter to reduce the line numer of code class CloseWindow extends WindowAdapter implements ActionListener  private Window target; private boolean exit; public CloseWindow (Window target, boolean exit)  this .target = target; this .exit = exit;  public CloseWindow (Window target)  this .target = target;  public void windowClosing (WindowEvent e)  target.dispose(); if (exit) System.exit( 0 );  public void actionPerformed (ActionEvent e)  target.dispose(); if (exit) System.exit( 0 );   class AddConstraint  public static void addConstraint (Container container, Component component, int grid_x, int grid_y, int grid_width, int grid_height, int fill, int anchor, double weight_x, double weight_y, int top, int left, int bottom, int right)  GridBagConstraints c = new GridBagConstraints(); c.gridx = grid_x; c.gridy = grid_y; c.gridwidth = grid_width; c.gridheight = grid_height; c.fill = fill; c.anchor = anchor; c.weightx = weight_x; c.weighty = weight_y; c.insets = new Insets(top,left,bottom,right); ((GridBagLayout)container.getLayout()).setConstraints(component,c); container.add(component);   class ErrorDialog extends Dialog  public ErrorDialog (Frame parent, String all[])  this (parent, all, null );  public ErrorDialog (Frame parent, String all[], String msg)  super (parent, \"\" , true ); StringBuffer sb = new StringBuffer(); for ( int i= 0 ; i  all.length; i++)  sb.append(all[i]); sb.append( '\\n' );  if (msg!= null )  sb.append(msg);  setup(parent, sb.toString());  public ErrorDialog (Frame parent, String message)  super (parent, \"\" , true ); setup(parent, message);  private void setup (Frame parent, String message)  this .setLayout( new GridBagLayout()); int row= 0 , col= 0 , i, width= 0 ; Font font = new Font( \"Serif\" , Font.PLAIN, 16 ); char c= ' ' ; for (i = 0 ; i  message.length(); i++)  c = message.charAt(i); if (c== '\\n' )  row++; if (width  col)  col = width;  width= 0 ;  else if (c == '\\t' )  width += 7 -width% 7 ;  else  if (c  0x00FF )  width+= 2 ;  else  width++;    if (c!= '\\n' )  row++; if (width  col)  col = width;   col++; // 希望視窗出來不要太大或太小 row = (row  24 ) ? 24 : row; if (row  5 )  row= 5 ;  if (col  20 )  col = 20 ;  TextArea tx = new TextArea(message,row,col); tx.setEditable( false ); tx.setFont(font); AddConstraint.addConstraint( this , tx, 0 , 0 , 1 , 1 , GridBagConstraints.BOTH, GridBagConstraints.NORTHWEST, 1 , 1 , 0 , 0 , 0 , 0 ); Button b = new Button( \"確定\" ); b.setFont(font); AddConstraint.addConstraint( this , b, 0 , 1 , 1 , 1 , GridBagConstraints.HORIZONTAL, GridBagConstraints.CENTER, 1 , 0 , 0 , 0 , 0 , 0 ); CloseWindow cw = new CloseWindow( this ); this .addWindowListener(cw); b.addActionListener(cw); pack(); setVisible( true );   井字遊戲的 Swing 版本 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 /** * Program Name: SwingOXMain.java * Purpose: Showing how to Swing to write 井字遊戲 * Modify Date: 2005/03/29 */ import java.awt.*; import java.awt.event.*; import javax.swing.*; public class SwingOXMain extends JFrame implements ActionListener  private OX oxBoard; private SwingOXMain ()  super ( \"井字遊戲\" ); JMenu m; JMenuBar mb; oxBoard = new OX( this ); this .getContentPane().add(oxBoard); CloseWindow close = new CloseWindow( this , true ); this .setJMenuBar(mb = new JMenuBar()); mb.add(m = new JMenu( \"遊戲\" )).add( new JMenuItem( \"新遊戲\" )).addActionListener( this ); m.add( new JMenuItem( \"結束\" )).addActionListener(close); mb.add( new JMenu( \"說明\" )).add( new JMenuItem( \"關於本遊戲\" )).addActionListener( this ); this .addWindowListener(close); pack(); setVisible( true );  public static void main (String argv[])  new SwingOXMain();  // implements the ActionListener interface public void actionPerformed (ActionEvent e)  String command = e.getActionCommand(); if (command.equals( \"關於本遊戲\" ))  new ErrorDialog( this , \"俞旭昇寫好玩的\" );  else if (command.equals( \"新遊戲\" ))  oxBoard.newGame();    class OX extends Component implements MouseListener  public static final byte EMPTY = 0 ; public static final byte CIRCLE = 1 ; public static final byte CROSS = 2 ; private byte [] board = new byte [ 9 ]; private byte playing = CIRCLE; private Dimension mySize = new Dimension( 300 , 300 ); private JFrame parent; private byte [][] directions =  0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 0 , 3 , 6 , 1 , 4 , 7 , 2 , 5 , 8 , 0 , 4 , 8 , 2 , 4 , 6 ; public OX (JFrame p)  this .addMouseListener( this ); parent = p;  // The following 5 functions implement the MouseListener interface public void mouseClicked (MouseEvent e)  public void mouseEntered (MouseEvent e)  public void mouseExited (MouseEvent e)  public void mouseReleased (MouseEvent e)  public void mousePressed (MouseEvent e)  int row = e.getY()/ 100 ; int col = e.getX()/ 100 ; if (row = 3 || col = 3 ) return ; // 超過邊界 if (board[row* 3 +col] == EMPTY)  // 此位置可以下 board[row* 3 +col] = playing; repaint(); // notify Window Manager // Anyone Win? for ( int i= 0 ; i  directions.length; i++)  int j; for (j= 0 ; j &amp;tl; 3 &amp;&amp; board[directions[i][j]]==playing; j++) ; if (j== 3 )  if (playing == CIRCLE)  new ErrorDialog(parent, \"圓圈贏了\" );  else if (playing == CROSS)  new ErrorDialog(parent, \"叉叉贏了\" );  this .newGame(); return ;   playing ^= 0x03 ;   // override paint() defined in Component public void paint (Graphics g)  g.drawLine( 0 , 100 , 300 , 100 ); g.drawLine( 0 , 200 , 300 , 200 ); g.drawLine( 100 , 0 , 100 , 300 ); g.drawLine( 200 , 0 , 200 , 300 ); for ( int i = 0 ; i  3 ; i++)  for ( int j = 0 ; j  3 ; j++)  if (board[i* 3 +j] == CIRCLE)  g.drawOval( 50 +j* 100 - 25 , 50 +i* 100 - 25 , 50 , 50 );  else if (board[i* 3 +j] == CROSS)  g.drawLine( 25 +j* 100 , 25 +i* 100 , 75 +j* 100 , 75 +i* 100 ); g.drawLine( 75 +j* 100 , 25 +i* 100 , 25 +j* 100 , 75 +i* 100 );     public void newGame ()  for ( int i = 0 ; i  3 ; i++)  for ( int j = 0 ; j  3 ; j++)  board[i* 3 +j] = EMPTY;   playing = CIRCLE; repaint();  // override getPreferredSize defined in Component, // so that the Component has proper size on screen public Dimension getPreferredSize ()  return mySize;   // WindowAdapter implements the WindowLister interface // We extends WindowAdapter to reduce the line numer of code class CloseWindow extends WindowAdapter implements ActionListener  private Window target; private boolean exit; public CloseWindow (Window target, boolean exit)  this .target = target; this .exit = exit;  public CloseWindow (Window target)  this .target = target;  public void windowClosing (WindowEvent e)  target.dispose(); if (exit) System.exit( 0 );  public void actionPerformed (ActionEvent e)  target.dispose(); if (exit) System.exit( 0 );   class AddConstraint  public static void addConstraint (Container container, Component component, int grid_x, int grid_y, int grid_width, int grid_height, int fill, int anchor, double weight_x, double weight_y, int top, int left, int bottom, int right)  GridBagConstraints c = new GridBagConstraints(); c.gridx = grid_x; c.gridy = grid_y; c.gridwidth = grid_width; c.gridheight = grid_height; c.fill = fill; c.anchor = anchor; c.weightx = weight_x; c.weighty = weight_y; c.insets = new Insets(top,left,bottom,right); ((GridBagLayout)container.getLayout()).setConstraints(component,c); container.add(component);   鍵盤事件處理範例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 /* Program Name: Field.java Subject: 單一欄位輸入 Author: 俞旭昇 Shiuh-Sheng Yu National ChiNan University Department of Information Management Since 1997/08/17 Last Update Date: 08/23/1998 2003/12/17, fix delete, tab 2004/04/26, 支援jdk1.2以後版本使用Ctrl-C,Ctrl-V複製貼上功能 ToolKit: JDK1.1.6 */ package ncnu.gui; import java.awt.*; import java.awt.event.*; import java.sql.Types; import java.awt.datatransfer.*; import java.io.IOException; public class Field implements ActionListener , KeyListener , Transferable , ClipboardOwner  static  try  if (System.getProperty( \"java.version\" ).startsWith( \"1.1\" ))  checkCopy = false ;  else  checkCopy = true ;   catch (Exception ex)    public DataFlavor[] getTransferDataFlavors()  DataFlavor[] myFlavors = new DataFlavor[ 1 ]; myFlavors[ 0 ] = DataFlavor.stringFlavor; return myFlavors;  public boolean isDataFlavorSupported (DataFlavor flavor)  return flavor.equals(DataFlavor.stringFlavor);  public Object getTransferData (DataFlavor flavor) throws UnsupportedFlavorException, IOException  return myData;  public void lostOwnership (Clipboard clipboard, Transferable contents)   static String myData; static boolean checkCopy; public static final int OVR= 0 ; public static final int INS= 1 ; TextField t; int limit; int type; int decimalDigits; int mode= 0 ; KeyJump parent; public Field (KeyJump parent, TextField t, int limit, int type, int decimalDigits)  this .t = t; this .limit = limit; this .type = type; this .decimalDigits = decimalDigits; this .parent = parent; this .mode = OVR; t.addActionListener((ActionListener) this ); t.addKeyListener((KeyListener) this );  public void keyPressed (KeyEvent e)  String s; int pos,sstart,send; StringBuffer sb; switch (e.getKeyCode())  case KeyEvent.VK_PASTE: case KeyEvent.VK_COPY: case KeyEvent.VK_UNDO: case KeyEvent.VK_CUT: case KeyEvent.VK_FIND: return ; case KeyEvent.VK_INSERT: if (mode==OVR)  mode = INS;  else  mode = OVR;  e.consume(); break ; case KeyEvent.VK_TAB: case KeyEvent.VK_ENTER: case KeyEvent.VK_DOWN: parent.next(t); e.consume(); break ; case KeyEvent.VK_UP: parent.previous(t); e.consume(); break ; case KeyEvent.VK_LEFT: case KeyEvent.VK_RIGHT: case KeyEvent.VK_HOME: case KeyEvent.VK_END: return ; case KeyEvent.VK_PAGE_UP: parent.pageUp(t); e.consume(); break ; case KeyEvent.VK_PAGE_DOWN: parent.pageDown(t); e.consume(); break ; case KeyEvent.VK_DELETE: e.consume(); if (!t.isEditable())  return ;  s = t.getText(); pos = t.getCaretPosition(); sstart=t.getSelectionStart(); send=t.getSelectionEnd(); if (sendsstart)  sb = new StringBuffer(s.substring( 0 ,sstart)); if (send!=s.length())  sb.append(s.substring(send));  if ((type==Types.NUMERIC||type==Types.DECIMAL) &amp;&amp; !legalNumber(sb.toString()))  return ;  t.setText(sb.toString()); t.setCaretPosition(sstart);  else  if (pos==s.length())  return ;  sb = new StringBuffer(s.substring( 0 ,pos)); sb.append(s.substring(pos+ 1 )); if ((type==Types.NUMERIC || type==Types.DECIMAL) &amp;&amp; !legalNumber(sb.toString()))  return ;  t.setText(sb.toString()); t.setCaretPosition(pos);  return ; case KeyEvent.VK_BACK_SPACE: e.consume(); if (!t.isEditable())  return ;  s = t.getText(); pos = t.getCaretPosition(); sstart=t.getSelectionStart(); send=t.getSelectionEnd(); if (sendsstart)  sb = new StringBuffer(s.substring( 0 ,sstart)); if (send!=s.length())  sb.append(s.substring(send));  if ((type==Types.NUMERIC||type==Types.DECIMAL) &amp;&amp; !legalNumber(sb.toString()))  return ;  t.setText(sb.toString()); t.setCaretPosition(sstart);  else  if (pos== 0 )  return ;  if (pos= 1 )  sb = new StringBuffer();  else  sb = new StringBuffer(s.substring( 0 ,pos- 1 ));  sb.append(s.substring(pos)); if ((type==Types.NUMERIC||type==Types.DECIMAL) &amp;&amp; !legalNumber(sb.toString()))  return ;  t.setText(sb.toString()); t.setCaretPosition(pos- 1 );  return ;   public void keyTyped (KeyEvent e)  String s; int pos,sstart,send; StringBuffer sb; if (!t.isEditable())  e.consume(); return ;  char ch = e.getKeyChar(); // 3copy, 22 paste,127 delete,8 backspace if (checkCopy)  if (ch== 3 )  e.consume(); s = t.getText(); pos = t.getCaretPosition(); sstart=t.getSelectionStart(); send=t.getSelectionEnd(); if (sendsstart)  myData = s.substring(sstart,send);  else  myData = \"\" ;  Toolkit.getDefaultToolkit().getSystemClipboard().setContents( this , this );  if (ch== 22 )  e.consume(); Transferable tt = Toolkit.getDefaultToolkit().getSystemClipboard().getContents( this ); if (tt != null )  String data; try  data = (String)tt.getTransferData(DataFlavor.stringFlavor);  catch (Exception eppp)  System.out.println(eppp); return ;  s = t.getText(); pos = t.getCaretPosition(); sstart=t.getSelectionStart(); send=t.getSelectionEnd(); if (sendsstart)  // 有選起來 sb = new StringBuffer(s.substring( 0 ,sstart)); sb.append(data); if (send!=s.length())  sb.append(s.substring(send));  if ((type==Types.NUMERIC||type==Types.DECIMAL) &amp;&amp; !legalNumber(sb.toString()))  return ;  t.setText(sb.toString()); t.setCaretPosition(sstart);  else  sb = new StringBuffer(s.substring( 0 ,pos)); sb.append(data); if (pos  s.length())  sb.append(s.substring(pos));  if ((type==Types.NUMERIC || type==Types.DECIMAL) &amp;&amp; !legalNumber(sb.toString()))  return ;  t.setText(sb.toString()); t.setCaretPosition(pos);     if (ch== 3 || ch== 22 || ch== 8 || ch== 127 || ch== '\\t' || ch== '\\n' )  e.consume(); return ;  if (ch!=KeyEvent.CHAR_UNDEFINED)  s = t.getText(); sstart=t.getSelectionStart(); send=t.getSelectionEnd(); if (send  sstart)  sb = new StringBuffer(s.substring( 0 ,sstart)); sb.append(ch); if (send!=s.length())  sb.append(s.substring(send));   else  pos = t.getCaretPosition(); sb = new StringBuffer(s.substring( 0 ,pos)); sb.append(ch); if (pos!=s.length())  if (mode==INS)  sb.append(s.substring(pos));  else  sb.append(s.substring(pos+ 1 ));    if ((type==Types.NUMERIC||type==Types.DECIMAL) &amp;&amp; !legalNumber(sb.toString()))  return ;  pos = t.getCaretPosition(); t.setText(inputTruncate(sb.toString())); t.setCaretPosition(pos+ 1 );  e.consume();  public void keyReleased (KeyEvent e)  return ;  public void actionPerformed (ActionEvent e)  int currentIndex, i; TextComponent next; switch (e.getID())  case ActionEvent.ACTION_PERFORMED: parent.next(t); break ; default : break ;   protected String inputTruncate (String s)  int i,j=limit; if (type==Types.NUMERIC||type==Types.DECIMAL)  int k= 0 , leading; if (decimalDigits== 0 )  leading = limit;  else  leading = limit-decimalDigits;  if (s.charAt( 0 )== '-' )  k++;  for (; k  leading &amp;&amp; k  s.length(); k++)  if (!(s.charAt(k) = '0' &amp;&amp; s.charAt(k) = '9' ))  break ;   if (decimalDigits!= 0 )  k += decimalDigits+ 1 ;  j = k;  if (s.getBytes().lengthj)  for (i=s.length()- 1 ; i  0 ;i--)  if (s.substring( 0 ,i).getBytes().length=j)  break ;   return (s.substring( 0 ,i));  return s;  protected boolean legalNumber (String s)  int leading; int i= 0 ,j= 0 ; if (s.length()== 0 )  return true ;  if (decimalDigits == 0 )  leading = limit;  else  leading = limit - decimalDigits;  if (s.charAt(i)== '-' )  j++;  for (;(j  s.length()) &amp;&amp; (j  leading); j++)  if (!(s.charAt(j) = '0' &amp;&amp; s.charAt(j) = '9' ))  break ;   if (j==s.length())  return true ;  if (decimalDigits== 0 )  return false ;  else  if (s.charAt(j)== '.' )  j++; for (i=j; i!=s.length() &amp;&amp; i-j  decimalDigits; i++)  if (!(s.charAt(i) = '0' &amp;&amp; s.charAt(i) = '9' ))  break ;   if (i==s.length())  return true ;   return false ;    文字編輯器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 import java.awt.*; import java.awt.event.*; import javax.swing.*; import javax.swing.event.*; import java.io.*; public class Editor extends WindowAdapter implements ActionListener  JFrame topWindow; JTextArea jta; public void actionPerformed (ActionEvent e)  String command = e.getActionCommand(); if (command.equals( \"Open\" ))  JFileChooser fd = new JFileChooser( \".\" ); fd.setDialogType(JFileChooser.OPEN_DIALOG); int returnVal = fd.showOpenDialog(topWindow); if (returnVal == JFileChooser.APPROVE_OPTION)  try  File file = fd.getSelectedFile(); BufferedReader fin = new BufferedReader( new FileReader(file)); StringBuffer sb = new StringBuffer(); String x; while ((x=fin.readLine()) != null )  sb.append(x); sb.append( \"\\n\" );  jta.setText(sb.toString());  catch (Exception epp)  jta.setCaretPosition( 0 );   else if (command.equals( \"Save\" ))  JFileChooser fd = new JFileChooser( \".\" ); fd.setDialogType(JFileChooser.SAVE_DIALOG); int returnVal = fd.showSaveDialog(topWindow); if (returnVal == JFileChooser.APPROVE_OPTION)  try  File file = fd.getSelectedFile(); FileWriter fout = new FileWriter(file); fout.write(jta.getText()); fout.close();  catch (Exception epp)    else if (command.equals( \"Find\" ))  String x = jta.getText(); int at = x.indexOf( \"int\" , jta.getCaretPosition()); if (at = 0 )  jta.setCaretPosition(at); jta.setSelectionStart(at); jta.setSelectionEnd(at+ 3 );   else  System.out.println( \"Unknown \" +command);   public void windowClosing (WindowEvent e)  topWindow.dispose(); System.exit( 0 );  public Editor ()  Font myFont = new Font( \"細明體\" , Font.PLAIN, 20 ); topWindow = new JFrame( \"My IDE\" ); // get the root container of JFrame Container c = topWindow.getContentPane(); c.setLayout( new GridLayout( 1 , 1 )); JMenuBar jmb = new JMenuBar(); JMenu m = new JMenu( \"File\" ); m.setFont(myFont); JMenuItem mi = new JMenuItem( \"Open\" ); mi.setFont(myFont); mi.addActionListener( this ); m.add(mi); mi = new JMenuItem( \"Save\" ); mi.setFont(myFont); mi.addActionListener( this ); m.add(mi); mi = new JMenuItem( \"Find\" ); mi.setFont(myFont); mi.addActionListener( this ); m.add(mi); jmb.add(m); topWindow.setJMenuBar(jmb); jta = new JTextArea( 24 , 80 ); jta.setFont(myFont); jta.setCursor( new Cursor(Cursor.HAND_CURSOR)); JScrollPane jsp = new JScrollPane(jta); c.add(jsp); topWindow.addWindowListener( this ); topWindow.pack(); // 壓縮到最適當的大小 topWindow.show(); // 顯示JFrame  public static void main (String[] argv)  new Editor();  "},"java/gui.html#GUI-簡介":{"title":"GUI &#x7C21;&#x4ECB;","path":"/java/gui.html#GUI-簡介","body":"GUI &#x662F;&#x7531; Component&#x3001;LayoutManager &#x4EE5;&#x53CA; Listener &#x6240;&#x7D44;&#x6210;&#x7684;&#x3002; Component &#x662F;&#x756B;&#x9762;&#x7684;&#x4E3B;&#x8981;&#x7D44;&#x6210;&#x6210;&#x5206;&#xFF0C;&#x672C;&#x8EAB;&#x4E26;&#x6C92;&#x6709;&#x53EF;&#x898B;&#x7684;&#x5BE6;&#x9AD4;&#xFF0C;&#x5176;&#x5B50;&#x985E;&#x5225;&#x624D;&#x6709;&#x986F;&#x73FE;&#x7684;&#x6548;&#x679C;&#x3002; &#x5982;&#x679C; Component &#x53EF;&#x4EE5;&#x653E;&#x5165;&#x5176;&#x4ED6;&#x7684; Component&#xFF0C;&#x5247;&#x9019;&#x7A2E; Component &#x5C31;&#x7A31;&#x70BA;&#x662F; Container&#x3002; Container &#x88E1;&#x9762;&#x7684; Component &#x7684;&#x6392;&#x653E;&#x4F4D;&#x7F6E;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x7D55;&#x5C0D;&#x5EA7;&#x6A19;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x900F;&#x904E; LayoutManager &#x52A0;&#x4EE5;&#x8ABF;&#x6574;&#x3002; &#x4F7F;&#x7528;&#x8005;&#x4EE5; Mouse&#x3001;Keyboard &#x7B49;&#x64CD;&#x4F5C; GUI &#x6642;&#xFF0C;&#x6703;&#x7522;&#x751F;&#x76F8;&#x5C0D;&#x61C9;&#x7684; Event&#xFF0C;&#x4E26;&#x7531;&#x8996;&#x7A97;&#x7CFB;&#x7D71;&#x5C07;&#x8A72; Event &#x50B3;&#x905E;&#x7D66;&#x7A0B;&#x5F0F;&#x8A2D;&#x8A08;&#x8005;&#x6240;&#x6307;&#x5B9A;&#x7684; Listener&#x3002; &#x4F8B;&#x5982;&#x4F7F;&#x7528;&#x8005;&#x4EE5; Mouse &#x7684;&#x5DE6;&#x9375;&#x6309;&#x4E0B; Button (&#x4E00;&#x7A2E; Component) &#x6642;&#xFF0C;&#x8996;&#x7A97;&#x7CFB;&#x7D71;&#x6703;&#x5C07; ActionEvent &#x50B3;&#x7D66;&#x8A72; Button &#x7684; ActionListener (&#x8A2D;&#x8A08;&#x8005;&#x5BE6;&#x4F5C;&#x7684;&#x7269;&#x4EF6;)&#xFF0C;&#x7531; ActionListener &#x6C7A;&#x5B9A;&#x63A1;&#x53D6;&#x7684;&#x6B65;&#x9A5F;&#x3002; &#x9019;&#x7A2E;&#x7531;&#x4F7F;&#x7528;&#x8005;&#x89F8;&#x767C;&#x7684;&#x57F7;&#x884C;&#x52D5;&#x4F5C;&#xFF0C;&#x548C;&#x7A0B;&#x5E8F;&#x5F0F;&#x8A9E;&#x8A00;&#x7531;&#x4E3B;&#x7A0B;&#x5F0F;&#x958B;&#x59CB;&#x547C;&#x53EB;&#x5176;&#x4ED6;&#x7A0B;&#x5E8F;&#x7684;&#x6A21;&#x5F0F;&#x4E0D;&#x540C;&#xFF0C;&#x6211;&#x5011;&#x7A31;&#x4E4B;&#x70BA;&#x4E8B;&#x4EF6;&#x9A45;&#x52D5; (Event Driven) &#x6A21;&#x5F0F;&#x3002; AWT (Abstract Window Toolkit java.awt.* ) &#x662F; JDK 1.0 &#x6240;&#x63D0;&#x51FA;&#x4F86;&#x6709;&#x95DC; GUI &#x7684;&#x51FD;&#x5F0F;&#x5EAB;&#xFF0C;&#x5728; JDK 1.1 &#x6642;&#x53C8;&#x4FEE;&#x6539;&#x4E86; Event Handling &#x7684;&#x6A5F;&#x5236;&#xFF0C;&#x6210;&#x70BA;&#x73FE;&#x5728;&#x7684;&#x6A23;&#x5B50;&#x3002; &#x7576;&#x521D;&#x70BA;&#x4E86;&#x5FEB;&#x901F;&#x958B;&#x767C;&#x51FA; AWT&#xFF0C;&#x4EE5;&#x7B26;&#x5408; Java &#x51FA;&#x7248;&#x7684;&#x6642;&#x7A0B;&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x8A2D;&#x8A08;&#x4E0A;&#xFF0C;&#x662F;&#x5229;&#x7528;&#x8996;&#x7A97;&#x7CFB;&#x7D71;&#x5DF2;&#x6709;&#x7684; GUI &#x5143;&#x4EF6;&#x70BA;&#x4E3B;&#x3002; &#x7531;&#x65BC; Java &#x539F;&#x59CB;&#x7684;&#x8A2D;&#x8A08;&#x7406;&#x5FF5;&#x5177;&#x6709;&#x8DE8;&#x5E73;&#x53F0;&#x7684;&#x6027;&#x8CEA;&#xFF0C;&#x56E0;&#x6B64; AWT &#x53EA;&#x597D;&#x53D6;&#x5404;&#x5BB6;&#x8996;&#x7A97;&#x7CFB;&#x7D71; (Windows&#x3001;Open Look&#x3001;Motif&#x3001;Machintosh) &#x4E0A;&#x5143;&#x4EF6;&#x7684;&#x4EA4;&#x96C6;&#xFF0C;&#x56E0;&#x6B64; AWT &#x9817;&#x70BA;&#x967D;&#x6625;&#x3002; &#x70BA;&#x4E86;&#x5F4C;&#x88DC; AWT &#x7684;&#x4E0D;&#x8DB3;&#xFF0C;JDK &#x81EA; 1.2 &#x4EE5;&#x5F8C;&#x63D0;&#x4F9B;&#x65B0;&#x7684; JFC(Java Foundation Class)/Swing &#x7684;&#x7A0B;&#x5F0F;&#x5EAB; javax.swing &#x3002; Swing &#x662F;&#x4EE5; Java &#x8A9E;&#x8A00;&#x6240;&#x5BEB;&#x51FA;&#x4F86;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x591A;&#x6A23;&#x5316;&#x800C;&#x8907;&#x96DC;&#x7684;&#x5143;&#x4EF6;&#xFF0C;&#x5982; Image JButton &#x3001; Image JLabel &#x3001; JTree &#x3001; JTable &#x3001; JTabbedPane &#x3001; JPopupMenu &#x7B49;&#x7B49;&#x3002; &#x800C;&#x4E14;&#x7531;&#x65BC; Swing &#x4E26;&#x4E0D;&#x4F9D;&#x9760;&#x5E95;&#x5C64;&#x7684;&#x8996;&#x7A97;&#x7CFB;&#x7D71;&#x756B;&#x51FA;&#x5143;&#x4EF6;&#x7684;&#x5916;&#x89C0;&#xFF0C;&#x56E0;&#x6B64; Swing &#x53EF;&#x4EE5;&#x8B93;&#x4F7F;&#x7528;&#x8005;&#x81EA;&#x884C;&#x9078;&#x5B9A;&#x5176;&#x6240;&#x559C;&#x611B;&#x7684; look and feel&#x3002; &#x70BA;&#x4E86;&#x8B93;&#x539F;&#x5148;&#x4F7F;&#x7528; AWT &#x7684;&#x61C9;&#x7528;&#x7A0B;&#x5F0F;&#x80FD;&#x6539;&#x7528; Swing &#x7684;&#x7A0B;&#x5F0F;&#x5EAB;&#xFF0C;AWT &#x5167;&#x6240;&#x6709;&#x7684;&#x5143;&#x4EF6;&#x90FD;&#x6709;&#x76F8;&#x5C0D;&#x61C9;&#x4EE5; J &#x958B;&#x982D;&#x7684; Swing &#x5143;&#x4EF6;&#xFF0C;&#x5982; Button &#x5C0D;&#x61C9; JButton &#x3001; TextField &#x5C0D;&#x61C9; JTextField &#x3002; &#x539F;&#x5148; AWT &#x7684;&#x7A0B;&#x5F0F;&#x53EA;&#x8981;&#x628A; Source Code &#x88E1;&#x9762;&#x7684; AWT &#x5143;&#x4EF6;&#x524D;&#x9762;&#x52A0;&#x4E0A; J &#x5373;&#x53EF;&#xFF0C;&#x5176;&#x9918; Event Handling &#x548C; LayoutManager &#x5747;&#x53EF;&#x6CBF;&#x7528;(&#x9664;&#x4E86; JFrame &#x3001; JDialog &#x3001; JApplet &#x3001; JWindow &#x7B49;&#x6700;&#x4E0A;&#x5C64;&#x7684; Container &#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x52A0;&#x5165;&#x5143;&#x4EF6;&#xFF0C;&#x5FC5;&#x9808;&#x900F;&#x904E; getContentPane() &#x53D6;&#x5F97;&#x653E;&#x7F6E;&#x7684;&#x5730;&#x65B9;)&#x3002; &#x5728;&#x4EE5;&#x4E0B;&#x7684;&#x7BC4;&#x4F8B;&#x4E2D;&#xFF0C;&#x6211;&#x5011;&#x4E3B;&#x8981;&#x63A1;&#x7528; AWT&#xFF0C;&#x4E26;&#x5728;&#x6700;&#x5F8C;&#x9762;&#x7D66;&#x4E00;&#x500B; Swing &#x7684;&#x7BC4;&#x4F8B;&#xFF0C;&#x4EE5;&#x8AAA;&#x660E;&#x5169;&#x8005;&#x9593;&#x7684;&#x76F8;&#x4F3C;&#x6027;&#x3002;"},"java/gui.html#AWT":{"title":"AWT","path":"/java/gui.html#AWT","body":"AWT &#x4E2D;&#x76F4;&#x63A5;&#x7E7C;&#x627F; Component &#x7684;&#x5B50;&#x985E;&#x5225;&#x6709;&#xFF1A; Button Canvas &#xFF1A;&#x7A7A;&#x767D;&#x7684;&#x65B9;&#x5F62;&#x5340;&#x57DF; Checkbox &#xFF1A;&#x52FE;&#x9078; Choice &#xFF1A;&#x62C9;&#x4E0B;&#x5F0F;&#x8868;&#x55AE; Container &#xFF1A;&#x88E1;&#x9762;&#x9084;&#x53EF;&#x4EE5;&#x653E;&#x5165;&#x5176;&#x4ED6; Component&#xFF0C;&#x5176;&#x5B50;&#x985E;&#x5225;&#x6709; Window &#xFF1A;&#x6700;&#x4E0A;&#x5C64;&#x7684;&#x8996;&#x7A97;&#xFF0C;&#x53C8;&#x6709; Frame (&#x53EF;&#x4EE5;&#x8A2D;&#x5B9A; MenuBar &#x7684;&#x7368;&#x7ACB;&#x8996;&#x7A97;)&#x3001; Dialog (&#x5FC5;&#x9808;&#x4F9D;&#x9644;&#x5728; Frame &#x4E0B;&#x7684;&#x8996;&#x7A97;)&#x3001; FileDialog &#x7B49;&#x5B50;&#x985E;&#x5225; Panel &#xFF1A;&#x6C92;&#x6709;&#x986F;&#x793A;&#x7684;&#x5BB9;&#x5668; ScrollPane &#xFF1A;&#x5177;&#x6709; ScrollBar &#x7684;&#x5BB9;&#x5668; Label &#xFF1A;&#x53EF;&#x4EE5;&#x986F;&#x793A;&#x6587;&#x5B57; List &#xFF1A;&#x6372;&#x8EF8;&#x8868;&#x55AE; Scrollbar &#xFF1A;&#x6372;&#x8EF8; TextComponent &#xFF1A;&#x53EF;&#x7528;&#x4EE5;&#x7DE8;&#x8F2F;&#x6587;&#x5B57;&#xFF0C;&#x5176;&#x5B50;&#x985E;&#x5225;&#x6709; TextField (&#x55AE;&#x884C;) TextArea (&#x591A;&#x884C;) AWT &#x63D0;&#x4F9B;&#x7684; LayoutManager &#x6709;&#xFF1A; BorderLayout CardLayout FlowLayout GridBagLayout GridLayout AWT &#x5B9A;&#x7FA9;&#x7684; Event &#x4E3B;&#x8981;&#x662F; java.awt.AWTEvent &#xFF0C;&#x5176;&#x4E0B;&#x53C8;&#x6709;&#x8A31;&#x591A;&#x5B50;&#x985E;&#x5225; java.awt.event.* ActionEvent &#xFF1A;component-defined action occured AdjustmentEvent &#xFF1A;ScrollBar &#x88AB;&#x62C9;&#x52D5; ComponentEvent &#xFF1A;&#x4E00;&#x822C;&#x4E0D;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#xFF0C;&#x5176;&#x5B50;&#x985E;&#x5225;&#x6709; ContainerEvent &#xFF1A;Container &#x52A0;&#x5165;&#x6216;&#x79FB;&#x9664; Component&#xFF0C;&#x4E5F;&#x5F88;&#x5C11;&#x7528; FocusEvent &#xFF1A;Gain or Lose Focus InputEvent &#xFF1A;&#x6709;&#x5169;&#x500B;&#x5B50;&#x985E;&#x5225; KeyEvent MouseEvent PaintEvent &#xFF1A;&#x4F9B; AWT &#x5167;&#x90E8;&#x4F7F;&#x7528;&#xFF0C;&#x4E0D;&#x7528;&#x7BA1;&#x4ED6; WindowEvent &#xFF1A;&#x8996;&#x7A97;&#x72C0;&#x614B;&#x6539;&#x8B8A; HierarchyEvent &#xFF1A;AWT &#x81EA;&#x52D5;&#x8655;&#x7406;&#xFF0C;&#x4E0D;&#x7528;&#x7BA1;&#x4ED6; InputMethodEvent InvocationEvent &#xFF1A;&#x7531; AWT event dispatcher thread &#x547C;&#x53EB; Runnable &#x7269;&#x4EF6;&#x88E1;&#x7684; run() ItemEvent &#xFF1A;an item was selected or deselected TextEvent &#xFF1A;an object&#x2019;s text changed &#x4EE5;&#x4E0A;&#x7684; Event &#x90FD;&#x6709;&#x76F8;&#x5C0D;&#x61C9;&#x7684; Listener Interface &#x4F86;&#x8655;&#x7406;&#xFF0C;&#x5982; ActionEvent &#x76F8;&#x5C0D;&#x61C9;&#x7684;&#x662F; ActionListener"},"java/gui.html#井字遊戲":{"title":"&#x4E95;&#x5B57;&#x904A;&#x6232;","path":"/java/gui.html#井字遊戲","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 import java.awt.*; import java.awt.event.*; public class OXMain extends Frame implements ActionListener { private OX oxBoard; private OXMain () { super ( &#x4E95;&#x5B57;&#x904A;&#x6232; ); Menu m; MenuBar mb; oxBoard = new OX( this ); this .add(oxBoard); CloseWindow close = new CloseWindow( this , true ); this .setMenuBar(mb = new MenuBar()); mb.add(m = new Menu( &#x904A;&#x6232; )).add( new MenuItem( &#x65B0;&#x904A;&#x6232; )).addActionListener( this ); m.add( new MenuItem( &#x7D50;&#x675F; )).addActionListener(close); mb.add( new Menu( &#x8AAA;&#x660E; )).add( new MenuItem( &#x95DC;&#x65BC;&#x672C;&#x904A;&#x6232; )).addActionListener( this ); this .addWindowListener(close); pack(); setVisible( true ); } public static void main (String argv[]) { new OXMain(); } // implements the ActionListener interface public void actionPerformed (ActionEvent e) { String command = e.getActionCommand(); if (command.equals( &#x95DC;&#x65BC;&#x672C;&#x904A;&#x6232; )) { new ErrorDialog( this , &#x4FDE;&#x65ED;&#x6607;&#x5BEB;&#x597D;&#x73A9;&#x7684; ); } else if (command.equals( &#x65B0;&#x904A;&#x6232; )) { oxBoard.newGame(); } } } class OX extends Component implements MouseListener { public static final byte EMPTY = 0 ; public static final byte CIRCLE = 1 ; public static final byte CROSS = 2 ; private byte [] board = new byte [ 9 ]; private byte playing = CIRCLE; private Dimension mySize = new Dimension( 300 , 300 ); private Frame parent; private byte [][] directions = {{ 0 , 1 , 2 },{ 3 , 4 , 5 },{ 6 , 7 , 8 },{ 0 , 3 , 6 },{ 1 , 4 , 7 },{ 2 , 5 , 8 },{ 0 , 4 , 8 },{ 2 , 4 , 6 }}; public OX (Frame p) { this .addMouseListener( this ); parent = p; } // The following 5 functions implement the MouseListener interface public void mouseClicked (MouseEvent e) {} public void mouseEntered (MouseEvent e) {} public void mouseExited (MouseEvent e) {} public void mouseReleased (MouseEvent e) {} public void mousePressed (MouseEvent e) { int row = e.getY()/ 100 ; int col = e.getX()/ 100 ; if (row = 3 || col = 3 ) return ; // &#x8D85;&#x904E;&#x908A;&#x754C; if (board[row* 3 +col] == EMPTY) { // &#x6B64;&#x4F4D;&#x7F6E;&#x53EF;&#x4EE5;&#x4E0B; board[row* 3 +col] = playing; repaint(); // notify Window Manager // Anyone Win? for ( int i= 0 ; i  directions.length; i++) { int j; for (j = 0 ; j  3 &amp;&amp; board[directions[i][j]]==playing; j++) ; if (j== 3 ) { if (playing == CIRCLE) { new ErrorDialog(parent, &#x5713;&#x5708;&#x8D0F;&#x4E86; ); } else if (playing == CROSS) { new ErrorDialog(parent, &#x53C9;&#x53C9;&#x8D0F;&#x4E86; ); } this .newGame(); return ; } } playing ^= 0x03 ; } } // override paint() defined in Component public void paint (Graphics g) { g.drawLine( 0 , 100 , 300 , 100 ); g.drawLine( 0 , 200 , 300 , 200 ); g.drawLine( 100 , 0 , 100 , 300 ); g.drawLine( 200 , 0 , 200 , 300 ); for ( int i = 0 ; i  3 ; i++) { for ( int j = 0 ; j  3 ; j++) { if (board[i* 3 +j] == CIRCLE) { g.drawOval( 50 +j* 100 - 25 , 50 +i* 100 - 25 , 50 , 50 ); } else if (board[i* 3 +j] == CROSS) { g.drawLine( 25 +j* 100 , 25 +i* 100 , 75 +j* 100 , 75 +i* 100 ); g.drawLine( 75 +j* 100 , 25 +i* 100 , 25 +j* 100 , 75 +i* 100 ); } } } } public void newGame () { for ( int i = 0 ; i  3 ; i++) { for ( int j = 0 ; j  3 ; j++) { board[i* 3 +j] = EMPTY; } } playing = CIRCLE; repaint(); } // override getPreferredSize defined in Component, // so that the Component has proper size on screen public Dimension getPreferredSize () { return mySize; } } // WindowAdapter implements the WindowLister interface // We extends WindowAdapter to reduce the line numer of code class CloseWindow extends WindowAdapter implements ActionListener { private Window target; private boolean exit; public CloseWindow (Window target, boolean exit) { this .target = target; this .exit = exit; } public CloseWindow (Window target) { this .target = target; } public void windowClosing (WindowEvent e) { target.dispose(); if (exit) System.exit( 0 ); } public void actionPerformed (ActionEvent e) { target.dispose(); if (exit) System.exit( 0 ); } } class AddConstraint { public static void addConstraint (Container container, Component component, int grid_x, int grid_y, int grid_width, int grid_height, int fill, int anchor, double weight_x, double weight_y, int top, int left, int bottom, int right) { GridBagConstraints c = new GridBagConstraints(); c.gridx = grid_x; c.gridy = grid_y; c.gridwidth = grid_width; c.gridheight = grid_height; c.fill = fill; c.anchor = anchor; c.weightx = weight_x; c.weighty = weight_y; c.insets = new Insets(top,left,bottom,right); ((GridBagLayout)container.getLayout()).setConstraints(component,c); container.add(component); } } class ErrorDialog extends Dialog { public ErrorDialog (Frame parent, String all[]) { this (parent, all, null ); } public ErrorDialog (Frame parent, String all[], String msg) { super (parent,  , true ); StringBuffer sb = new StringBuffer(); for ( int i= 0 ; i  all.length; i++) { sb.append(all[i]); sb.append( &apos;\\n&apos; ); } if (msg!= null ) { sb.append(msg); } setup(parent, sb.toString()); } public ErrorDialog (Frame parent, String message) { super (parent,  , true ); setup(parent, message); } private void setup (Frame parent, String message) { this .setLayout( new GridBagLayout()); int row= 0 , col= 0 , i, width= 0 ; Font font = new Font( Serif , Font.PLAIN, 16 ); char c= &apos; &apos; ; for (i = 0 ; i  message.length(); i++) { c = message.charAt(i); if (c== &apos;\\n&apos; ) { row++; if (width  col) { col = width; } width= 0 ; } else if (c == &apos;\\t&apos; ) { width += 7 -width% 7 ; } else { if (c  0x00FF ) { width+= 2 ; } else { width++; } } } if (c!= &apos;\\n&apos; ) { row++; if (width  col) { col = width; } } col++; // &#x5E0C;&#x671B;&#x8996;&#x7A97;&#x51FA;&#x4F86;&#x4E0D;&#x8981;&#x592A;&#x5927;&#x6216;&#x592A;&#x5C0F; row = (row  24 ) ? 24 : row; if (row  5 ) { row= 5 ; } if (col  20 ) { col = 20 ; } TextArea tx = new TextArea(message,row,col); tx.setEditable( false ); tx.setFont(font); AddConstraint.addConstraint( this , tx, 0 , 0 , 1 , 1 , GridBagConstraints.BOTH, GridBagConstraints.NORTHWEST, 1 , 1 , 0 , 0 , 0 , 0 ); Button b = new Button( &#x78BA;&#x5B9A; ); b.setFont(font); AddConstraint.addConstraint( this , b, 0 , 1 , 1 , 1 , GridBagConstraints.HORIZONTAL, GridBagConstraints.CENTER, 1 , 0 , 0 , 0 , 0 , 0 ); CloseWindow cw = new CloseWindow( this ); this .addWindowListener(cw); b.addActionListener(cw); pack(); setVisible( true ); } }"},"java/gui.html#井字遊戲的-Swing-版本":{"title":"&#x4E95;&#x5B57;&#x904A;&#x6232;&#x7684; Swing &#x7248;&#x672C;","path":"/java/gui.html#井字遊戲的-Swing-版本","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 /** * Program Name: SwingOXMain.java * Purpose: Showing how to Swing to write &#x4E95;&#x5B57;&#x904A;&#x6232; * Modify Date: 2005/03/29 */ import java.awt.*; import java.awt.event.*; import javax.swing.*; public class SwingOXMain extends JFrame implements ActionListener { private OX oxBoard; private SwingOXMain () { super ( &#x4E95;&#x5B57;&#x904A;&#x6232; ); JMenu m; JMenuBar mb; oxBoard = new OX( this ); this .getContentPane().add(oxBoard); CloseWindow close = new CloseWindow( this , true ); this .setJMenuBar(mb = new JMenuBar()); mb.add(m = new JMenu( &#x904A;&#x6232; )).add( new JMenuItem( &#x65B0;&#x904A;&#x6232; )).addActionListener( this ); m.add( new JMenuItem( &#x7D50;&#x675F; )).addActionListener(close); mb.add( new JMenu( &#x8AAA;&#x660E; )).add( new JMenuItem( &#x95DC;&#x65BC;&#x672C;&#x904A;&#x6232; )).addActionListener( this ); this .addWindowListener(close); pack(); setVisible( true ); } public static void main (String argv[]) { new SwingOXMain(); } // implements the ActionListener interface public void actionPerformed (ActionEvent e) { String command = e.getActionCommand(); if (command.equals( &#x95DC;&#x65BC;&#x672C;&#x904A;&#x6232; )) { new ErrorDialog( this , &#x4FDE;&#x65ED;&#x6607;&#x5BEB;&#x597D;&#x73A9;&#x7684; ); } else if (command.equals( &#x65B0;&#x904A;&#x6232; )) { oxBoard.newGame(); } } } class OX extends Component implements MouseListener { public static final byte EMPTY = 0 ; public static final byte CIRCLE = 1 ; public static final byte CROSS = 2 ; private byte [] board = new byte [ 9 ]; private byte playing = CIRCLE; private Dimension mySize = new Dimension( 300 , 300 ); private JFrame parent; private byte [][] directions = {{ 0 , 1 , 2 },{ 3 , 4 , 5 },{ 6 , 7 , 8 },{ 0 , 3 , 6 },{ 1 , 4 , 7 },{ 2 , 5 , 8 },{ 0 , 4 , 8 },{ 2 , 4 , 6 }}; public OX (JFrame p) { this .addMouseListener( this ); parent = p; } // The following 5 functions implement the MouseListener interface public void mouseClicked (MouseEvent e) {} public void mouseEntered (MouseEvent e) {} public void mouseExited (MouseEvent e) {} public void mouseReleased (MouseEvent e) {} public void mousePressed (MouseEvent e) { int row = e.getY()/ 100 ; int col = e.getX()/ 100 ; if (row = 3 || col = 3 ) return ; // &#x8D85;&#x904E;&#x908A;&#x754C; if (board[row* 3 +col] == EMPTY) { // &#x6B64;&#x4F4D;&#x7F6E;&#x53EF;&#x4EE5;&#x4E0B; board[row* 3 +col] = playing; repaint(); // notify Window Manager // Anyone Win? for ( int i= 0 ; i  directions.length; i++) { int j; for (j= 0 ; j &amp;tl; 3 &amp;&amp; board[directions[i][j]]==playing; j++) ; if (j== 3 ) { if (playing == CIRCLE) { new ErrorDialog(parent, &#x5713;&#x5708;&#x8D0F;&#x4E86; ); } else if (playing == CROSS) { new ErrorDialog(parent, &#x53C9;&#x53C9;&#x8D0F;&#x4E86; ); } this .newGame(); return ; } } playing ^= 0x03 ; } } // override paint() defined in Component public void paint (Graphics g) { g.drawLine( 0 , 100 , 300 , 100 ); g.drawLine( 0 , 200 , 300 , 200 ); g.drawLine( 100 , 0 , 100 , 300 ); g.drawLine( 200 , 0 , 200 , 300 ); for ( int i = 0 ; i  3 ; i++) { for ( int j = 0 ; j  3 ; j++) { if (board[i* 3 +j] == CIRCLE) { g.drawOval( 50 +j* 100 - 25 , 50 +i* 100 - 25 , 50 , 50 ); } else if (board[i* 3 +j] == CROSS) { g.drawLine( 25 +j* 100 , 25 +i* 100 , 75 +j* 100 , 75 +i* 100 ); g.drawLine( 75 +j* 100 , 25 +i* 100 , 25 +j* 100 , 75 +i* 100 ); } } } } public void newGame () { for ( int i = 0 ; i  3 ; i++) { for ( int j = 0 ; j  3 ; j++) { board[i* 3 +j] = EMPTY; } } playing = CIRCLE; repaint(); } // override getPreferredSize defined in Component, // so that the Component has proper size on screen public Dimension getPreferredSize () { return mySize; } } // WindowAdapter implements the WindowLister interface // We extends WindowAdapter to reduce the line numer of code class CloseWindow extends WindowAdapter implements ActionListener { private Window target; private boolean exit; public CloseWindow (Window target, boolean exit) { this .target = target; this .exit = exit; } public CloseWindow (Window target) { this .target = target; } public void windowClosing (WindowEvent e) { target.dispose(); if (exit) System.exit( 0 ); } public void actionPerformed (ActionEvent e) { target.dispose(); if (exit) System.exit( 0 ); } } class AddConstraint { public static void addConstraint (Container container, Component component, int grid_x, int grid_y, int grid_width, int grid_height, int fill, int anchor, double weight_x, double weight_y, int top, int left, int bottom, int right) { GridBagConstraints c = new GridBagConstraints(); c.gridx = grid_x; c.gridy = grid_y; c.gridwidth = grid_width; c.gridheight = grid_height; c.fill = fill; c.anchor = anchor; c.weightx = weight_x; c.weighty = weight_y; c.insets = new Insets(top,left,bottom,right); ((GridBagLayout)container.getLayout()).setConstraints(component,c); container.add(component); } }"},"java/gui.html#鍵盤事件處理範例":{"title":"&#x9375;&#x76E4;&#x4E8B;&#x4EF6;&#x8655;&#x7406;&#x7BC4;&#x4F8B;","path":"/java/gui.html#鍵盤事件處理範例","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 /* Program Name: Field.java Subject: &#x55AE;&#x4E00;&#x6B04;&#x4F4D;&#x8F38;&#x5165; Author: &#x4FDE;&#x65ED;&#x6607; Shiuh-Sheng Yu National ChiNan University Department of Information Management Since 1997/08/17 Last Update Date: 08/23/1998 2003/12/17, fix delete, tab 2004/04/26, &#x652F;&#x63F4;jdk1.2&#x4EE5;&#x5F8C;&#x7248;&#x672C;&#x4F7F;&#x7528;Ctrl-C,Ctrl-V&#x8907;&#x88FD;&#x8CBC;&#x4E0A;&#x529F;&#x80FD; ToolKit: JDK1.1.6 */ package ncnu.gui; import java.awt.*; import java.awt.event.*; import java.sql.Types; import java.awt.datatransfer.*; import java.io.IOException; public class Field implements ActionListener , KeyListener , Transferable , ClipboardOwner { static { try { if (System.getProperty( java.version ).startsWith( 1.1 )) { checkCopy = false ; } else { checkCopy = true ; } } catch (Exception ex) { } } public DataFlavor[] getTransferDataFlavors() { DataFlavor[] myFlavors = new DataFlavor[ 1 ]; myFlavors[ 0 ] = DataFlavor.stringFlavor; return myFlavors; } public boolean isDataFlavorSupported (DataFlavor flavor) { return flavor.equals(DataFlavor.stringFlavor); } public Object getTransferData (DataFlavor flavor) throws UnsupportedFlavorException, IOException { return myData; } public void lostOwnership (Clipboard clipboard, Transferable contents) { } static String myData; static boolean checkCopy; public static final int OVR= 0 ; public static final int INS= 1 ; TextField t; int limit; int type; int decimalDigits; int mode= 0 ; KeyJump parent; public Field (KeyJump parent, TextField t, int limit, int type, int decimalDigits) { this .t = t; this .limit = limit; this .type = type; this .decimalDigits = decimalDigits; this .parent = parent; this .mode = OVR; t.addActionListener((ActionListener) this ); t.addKeyListener((KeyListener) this ); } public void keyPressed (KeyEvent e) { String s; int pos,sstart,send; StringBuffer sb; switch (e.getKeyCode()) { case KeyEvent.VK_PASTE: case KeyEvent.VK_COPY: case KeyEvent.VK_UNDO: case KeyEvent.VK_CUT: case KeyEvent.VK_FIND: return ; case KeyEvent.VK_INSERT: if (mode==OVR) { mode = INS; } else { mode = OVR; } e.consume(); break ; case KeyEvent.VK_TAB: case KeyEvent.VK_ENTER: case KeyEvent.VK_DOWN: parent.next(t); e.consume(); break ; case KeyEvent.VK_UP: parent.previous(t); e.consume(); break ; case KeyEvent.VK_LEFT: case KeyEvent.VK_RIGHT: case KeyEvent.VK_HOME: case KeyEvent.VK_END: return ; case KeyEvent.VK_PAGE_UP: parent.pageUp(t); e.consume(); break ; case KeyEvent.VK_PAGE_DOWN: parent.pageDown(t); e.consume(); break ; case KeyEvent.VK_DELETE: e.consume(); if (!t.isEditable()) { return ; } s = t.getText(); pos = t.getCaretPosition(); sstart=t.getSelectionStart(); send=t.getSelectionEnd(); if (sendsstart) { sb = new StringBuffer(s.substring( 0 ,sstart)); if (send!=s.length()) { sb.append(s.substring(send)); } if ((type==Types.NUMERIC||type==Types.DECIMAL) &amp;&amp; !legalNumber(sb.toString())) { return ; } t.setText(sb.toString()); t.setCaretPosition(sstart); } else { if (pos==s.length()) { return ; } sb = new StringBuffer(s.substring( 0 ,pos)); sb.append(s.substring(pos+ 1 )); if ((type==Types.NUMERIC || type==Types.DECIMAL) &amp;&amp; !legalNumber(sb.toString())) { return ; } t.setText(sb.toString()); t.setCaretPosition(pos); } return ; case KeyEvent.VK_BACK_SPACE: e.consume(); if (!t.isEditable()) { return ; } s = t.getText(); pos = t.getCaretPosition(); sstart=t.getSelectionStart(); send=t.getSelectionEnd(); if (sendsstart) { sb = new StringBuffer(s.substring( 0 ,sstart)); if (send!=s.length()) { sb.append(s.substring(send)); } if ((type==Types.NUMERIC||type==Types.DECIMAL) &amp;&amp; !legalNumber(sb.toString())) { return ; } t.setText(sb.toString()); t.setCaretPosition(sstart); } else { if (pos== 0 ) { return ; } if (pos= 1 ) { sb = new StringBuffer(); } else { sb = new StringBuffer(s.substring( 0 ,pos- 1 )); } sb.append(s.substring(pos)); if ((type==Types.NUMERIC||type==Types.DECIMAL) &amp;&amp; !legalNumber(sb.toString())) { return ; } t.setText(sb.toString()); t.setCaretPosition(pos- 1 ); } return ; } } public void keyTyped (KeyEvent e) { String s; int pos,sstart,send; StringBuffer sb; if (!t.isEditable()) { e.consume(); return ; } char ch = e.getKeyChar(); // 3copy, 22 paste,127 delete,8 backspace if (checkCopy) { if (ch== 3 ) { e.consume(); s = t.getText(); pos = t.getCaretPosition(); sstart=t.getSelectionStart(); send=t.getSelectionEnd(); if (sendsstart) { myData = s.substring(sstart,send); } else { myData =  ; } Toolkit.getDefaultToolkit().getSystemClipboard().setContents( this , this ); } if (ch== 22 ) { e.consume(); Transferable tt = Toolkit.getDefaultToolkit().getSystemClipboard().getContents( this ); if (tt != null ) { String data; try { data = (String)tt.getTransferData(DataFlavor.stringFlavor); } catch (Exception eppp) { System.out.println(eppp); return ; } s = t.getText(); pos = t.getCaretPosition(); sstart=t.getSelectionStart(); send=t.getSelectionEnd(); if (sendsstart) { // &#x6709;&#x9078;&#x8D77;&#x4F86; sb = new StringBuffer(s.substring( 0 ,sstart)); sb.append(data); if (send!=s.length()) { sb.append(s.substring(send)); } if ((type==Types.NUMERIC||type==Types.DECIMAL) &amp;&amp; !legalNumber(sb.toString())) { return ; } t.setText(sb.toString()); t.setCaretPosition(sstart); } else { sb = new StringBuffer(s.substring( 0 ,pos)); sb.append(data); if (pos  s.length()) { sb.append(s.substring(pos)); } if ((type==Types.NUMERIC || type==Types.DECIMAL) &amp;&amp; !legalNumber(sb.toString())) { return ; } t.setText(sb.toString()); t.setCaretPosition(pos); } } } } if (ch== 3 || ch== 22 || ch== 8 || ch== 127 || ch== &apos;\\t&apos; || ch== &apos;\\n&apos; ) { e.consume(); return ; } if (ch!=KeyEvent.CHAR_UNDEFINED) { s = t.getText(); sstart=t.getSelectionStart(); send=t.getSelectionEnd(); if (send  sstart) { sb = new StringBuffer(s.substring( 0 ,sstart)); sb.append(ch); if (send!=s.length()) { sb.append(s.substring(send)); } } else { pos = t.getCaretPosition(); sb = new StringBuffer(s.substring( 0 ,pos)); sb.append(ch); if (pos!=s.length()) { if (mode==INS) { sb.append(s.substring(pos)); } else { sb.append(s.substring(pos+ 1 )); } } } if ((type==Types.NUMERIC||type==Types.DECIMAL) &amp;&amp; !legalNumber(sb.toString())) { return ; } pos = t.getCaretPosition(); t.setText(inputTruncate(sb.toString())); t.setCaretPosition(pos+ 1 ); } e.consume(); } public void keyReleased (KeyEvent e) { return ; } public void actionPerformed (ActionEvent e) { int currentIndex, i; TextComponent next; switch (e.getID()) { case ActionEvent.ACTION_PERFORMED: parent.next(t); break ; default : break ; } } protected String inputTruncate (String s) { int i,j=limit; if (type==Types.NUMERIC||type==Types.DECIMAL) { int k= 0 , leading; if (decimalDigits== 0 ) { leading = limit; } else { leading = limit-decimalDigits; } if (s.charAt( 0 )== &apos;-&apos; ) { k++; } for (; k  leading &amp;&amp; k  s.length(); k++) { if (!(s.charAt(k) = &apos;0&apos; &amp;&amp; s.charAt(k) = &apos;9&apos; )) { break ; } } if (decimalDigits!= 0 ) { k += decimalDigits+ 1 ; } j = k; } if (s.getBytes().lengthj) { for (i=s.length()- 1 ; i  0 ;i--) { if (s.substring( 0 ,i).getBytes().length=j) { break ; } } return (s.substring( 0 ,i)); } return s; } protected boolean legalNumber (String s) { int leading; int i= 0 ,j= 0 ; if (s.length()== 0 ) { return true ; } if (decimalDigits == 0 ) { leading = limit; } else { leading = limit - decimalDigits; } if (s.charAt(i)== &apos;-&apos; ) { j++; } for (;(j  s.length()) &amp;&amp; (j  leading); j++) { if (!(s.charAt(j) = &apos;0&apos; &amp;&amp; s.charAt(j) = &apos;9&apos; )) { break ; } } if (j==s.length()) { return true ; } if (decimalDigits== 0 ) { return false ; } else { if (s.charAt(j)== &apos;.&apos; ) { j++; for (i=j; i!=s.length() &amp;&amp; i-j  decimalDigits; i++) { if (!(s.charAt(i) = &apos;0&apos; &amp;&amp; s.charAt(i) = &apos;9&apos; )) { break ; } } if (i==s.length()) { return true ; } } return false ; } } }"},"java/gui.html#文字編輯器":{"title":"&#x6587;&#x5B57;&#x7DE8;&#x8F2F;&#x5668;","path":"/java/gui.html#文字編輯器","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 import java.awt.*; import java.awt.event.*; import javax.swing.*; import javax.swing.event.*; import java.io.*; public class Editor extends WindowAdapter implements ActionListener { JFrame topWindow; JTextArea jta; public void actionPerformed (ActionEvent e) { String command = e.getActionCommand(); if (command.equals( Open )) { JFileChooser fd = new JFileChooser( . ); fd.setDialogType(JFileChooser.OPEN_DIALOG); int returnVal = fd.showOpenDialog(topWindow); if (returnVal == JFileChooser.APPROVE_OPTION) { try { File file = fd.getSelectedFile(); BufferedReader fin = new BufferedReader( new FileReader(file)); StringBuffer sb = new StringBuffer(); String x; while ((x=fin.readLine()) != null ) { sb.append(x); sb.append( \\n ); } jta.setText(sb.toString()); } catch (Exception epp) {} jta.setCaretPosition( 0 ); } } else if (command.equals( Save )) { JFileChooser fd = new JFileChooser( . ); fd.setDialogType(JFileChooser.SAVE_DIALOG); int returnVal = fd.showSaveDialog(topWindow); if (returnVal == JFileChooser.APPROVE_OPTION) { try { File file = fd.getSelectedFile(); FileWriter fout = new FileWriter(file); fout.write(jta.getText()); fout.close(); } catch (Exception epp) {} } } else if (command.equals( Find )) { String x = jta.getText(); int at = x.indexOf( int , jta.getCaretPosition()); if (at = 0 ) { jta.setCaretPosition(at); jta.setSelectionStart(at); jta.setSelectionEnd(at+ 3 ); } } else { System.out.println( Unknown  +command); } } public void windowClosing (WindowEvent e) { topWindow.dispose(); System.exit( 0 ); } public Editor () { Font myFont = new Font( &#x7D30;&#x660E;&#x9AD4; , Font.PLAIN, 20 ); topWindow = new JFrame( My IDE ); // get the root container of JFrame Container c = topWindow.getContentPane(); c.setLayout( new GridLayout( 1 , 1 )); JMenuBar jmb = new JMenuBar(); JMenu m = new JMenu( File ); m.setFont(myFont); JMenuItem mi = new JMenuItem( Open ); mi.setFont(myFont); mi.addActionListener( this ); m.add(mi); mi = new JMenuItem( Save ); mi.setFont(myFont); mi.addActionListener( this ); m.add(mi); mi = new JMenuItem( Find ); mi.setFont(myFont); mi.addActionListener( this ); m.add(mi); jmb.add(m); topWindow.setJMenuBar(jmb); jta = new JTextArea( 24 , 80 ); jta.setFont(myFont); jta.setCursor( new Cursor(Cursor.HAND_CURSOR)); JScrollPane jsp = new JScrollPane(jta); c.add(jsp); topWindow.addWindowListener( this ); topWindow.pack(); // &#x58D3;&#x7E2E;&#x5230;&#x6700;&#x9069;&#x7576;&#x7684;&#x5927;&#x5C0F; topWindow.show(); // &#x986F;&#x793A;JFrame } public static void main (String[] argv) { new Editor(); } }"},"c/examples/avg.html":{"title":"","path":"/c/examples/avg.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 /* 程式功能: 輸入5個實數，計算並輸出其平均值 */ # include stdio.h void main ( void )  int inv= 0 ; /*計數用變數*/ double sum= 0 ; /*計算總和*/ float Data; /*輸入值存在Data變數*/ do  printf ( \"輸入實數:\" ); /*在螢幕上顯示字串*/ scanf ( \"%f\" , &amp;Data); /*由鍵盤輸入數值*/ sum = sum + Data; /*將輸入值加到sum */ inv = inv+ 1 ;  while (inv  5 ); /*若inv小於5，繼續執行*/ printf ( \"平均值= %f \" ,sum/ 5.0 ); /*印出平均值*/ printf ( \"\\n\" ); /*換行*/ "},"c/examples/fibonacci-number.html":{"title":"","path":"/c/examples/fibonacci-number.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 /* 程式功能: 輸入一個正整數N，計算第N項之費氏級數 (使用for的流程控制) */ # include stdio.h void main ( void )  int N; int i, Y= 0 , X= 1 , Fn, Z= 0 ; printf ( \"計算正整數N的費氏級數:\\n\" ); printf ( \"N = \" ); scanf ( \"%d\" , &amp;N); if (N == 1 )  Fn = 1 ;  else  for (i = 2 ; i = N; i++)  Z = X + Y; Fn = Z; Y = X; X = Z;   printf ( \"第 %d 項費氏級數= %d \" , N, Fn); printf ( \"\\n\" ); "},"c/examples/find-max-min.html":{"title":"","path":"/c/examples/find-max-min.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /* 程式功能: 輸入10個數，並從中找出最大與最小的數 */ # include stdio.h void main ( void )  int i= 1 ; float L, S, X; /* L=最大數，S=最小數，X=輸入值*/ printf ( \"輸入一數值: \" ); scanf ( \"%f\" , &amp;X); /*由鍵盤輸入數值*/ L = S = X; do  printf ( \"輸入一數值: \" ); scanf ( \"%f\" ,&amp;X); if (X  L)  L = X; /*若輸入的值大於L，將L設成輸入值X */  if (X  S)  S = X; /*若輸入的值小於S，將S設成輸入值X */  i = i + 1 ;  while (i  10 ); /*印出總和*/ printf ( \"最大值為 %f, 最小值為 %f \" , L, S) ; printf ( \"\\n\" ) ; "},"c/examples/find-prime-numbers.html":{"title":"","path":"/c/examples/find-prime-numbers.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 /** * Program Name: prime2.c * Purpose: List all prime numbers less than or equal n * Author: Shiuh-Sheng Yu * Department of Information Management National ChiNan University * Since: 2004/12/08 * Modified Date: */ # include stdio.h # include stdlib.h # include sys/timeb.h int main ()  int n= 10000000 , checkNum, total= 1 , i, j, found; struct timeb begin , end ; int primes[ 1000000 ]; printf ( \"Please input an integer:\" ); scanf ( \"%d\" , &amp;n); if (n = 1 )  printf ( \"Please input an integer larger than 1.\\n\" ); return 1 ;  ftime(&amp;begin); primes[ 0 ] = 2 ; j = 0 ; for (checkNum = 3 ; checkNum = n; checkNum++)  found = 1 ; for (i = 0 ; i = j; i++)  if (checkNum%primes[i] == 0 )  found = 0 ; break ;   if (found)  primes[total++] = checkNum; if (primes[j]*primes[j] = checkNum)  j++;    ftime(&amp;end); printf ( \"There are %d primes less than or equal %d, used %dms\\n\" , total, n, end.time* 1000 +end.millitm-begin.time* 1000 -begin.millitm);  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 /** * Program Name: prime.c * Purpose: List all prime numbers less than or equal n * Author: Shiuh-Sheng Yu * Department of Information Management National ChiNan University * Since: 2004/11/21 * Modified Date: */ # include stdio.h # include stdlib.h # include sys/timeb.h int main ()  unsigned int n= 10000000 , checkNum, multiple, total; struct timeb begin , end ; unsigned char *dividable; // 每一個bit代表該位置是否可被整除 printf ( \"Please input an integer:\" ); scanf ( \"%ud\" , &amp;n); ftime(&amp;begin); dividable = ( unsigned char *) calloc ((n+ 7 )/ 8 , 1 ); if (dividable == NULL )  printf ( \"No enought memory.\\n\" ); return ;  total = 0 ; for (checkNum = 2 ; checkNum = n; checkNum++)  if (!(dividable[checkNum/ 8 ] &amp; 1  checkNum % 8 ))  // 如果不被整除 total++; // 消去checkNum的倍數 for (multiple = checkNum  1 ; multiple = n; multiple += checkNum)  dividable[multiple/ 8 ] |= 1  multiple % 8 ;    ftime(&amp;end); printf ( \"There are %d primes less than or equal %d, used %dms\\n\" , total, n, end.time* 1000 +end.millitm-begin.time* 1000 -begin.millitm); "},"c/examples/input-is-prime-number-or-not.html":{"title":"","path":"/c/examples/input-is-prime-number-or-not.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 /* 程式功能: 輸入一個正整數N，並判別此數是否為質數 */ # include math.h # include stdio.h main()  long N; int i; int key = 0 ; printf ( \"輸入一正整數N:\" ); scanf ( \"%ld\" , &amp;N); if (N == 1 )  /*小於2的數非質數*/ printf ( \"%ld非質數\\n\" , N);  else  if (N = 3 )  /* 2 和 3 為質數*/ printf ( \"%ld是質數\\n\" , N);  else  for (i= 3 ; i = N/ 2 ; i++)  if (N % i == 0 )  printf ( \"%ld非質數\\n\" , N); return ;   printf ( \"%ld是質數\\n\" , N);   "},"c/examples/least-common-multiple.html":{"title":"","path":"/c/examples/least-common-multiple.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 int gcd ( int x, int y)  int tmp; // 如果x  y 則下面的迴圈執行第一次時就會交換x,y了 while (x % y != 0 )  tmp = y; y = x % y; x = tmp;  return y;  int lcm ( int x, int y)  return x * y / gcd(x,y); "},"c/examples/open-file.html":{"title":"","path":"/c/examples/open-file.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 # include stdio.h # include stdlib.h # include fcntl.h # define size 512 int main ()  char filename[ 20 ],copyfile[ 20 ]; char buf [size]; int fd1,fd2,fd3; //see if correct number of command line arguments printf ( \"please input filename:\\n\" ); scanf ( \"%s\" ,filename); if ((fd1= open(filename,O_RDONLY)) == -1 )  printf ( \"cannot open file.\" ); exit ( 1 );  printf ( \"please input copyfile:\\n\" ); scanf ( \"%s\" ,copyfile); fd3=open(copyfile,O_CREAT|O_WRONLY, 0644 ); while ((fd2=read(fd1,buf,size)) 0 ) write(fd3,buf,fd2);  close(fd1); close(fd3); "},"c/examples/sum1toN.html":{"title":"","path":"/c/examples/sum1toN.html","body":"1 2 3 4 5 6 int sum ( int n)  if (n == 1 )  return 1 ;  return n + sum(n - 1 ); "},"c/examples/taxi-fee-calculator.html":{"title":"","path":"/c/examples/taxi-fee-calculator.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* 程式功能：計算計程車費率 */ # include stdio.h int main ( void )  int i, diff, cost; printf ( \"請輸入里程(單位為公尺):\" ); scanf ( \"%d\" , &amp;i); if (i = 1500 ) /*里程數小於等於1500公尺*/ cost = 70 ; else  diff = i - 1500 ; /*計算里程數超過1500公尺的里程費率*/ if (diff% 500 == 0 ) /*里程數不足500公尺仍以500公尺費率計算*/ cost = 70 + (diff / 500 ) * 5 ; else cost= 70 + ((diff / 500 ) + 1 ) * 5 ;  printf ( \"總共車資為: %d 元\" , cost); printf ( \"\\n\" ); return 0 ; "},"java/examples/OX-game.html":{"title":"","path":"/java/examples/OX-game.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 /** * Program Name: OXMain.java * Purpose: Showing how to AWT to write 井字遊戲 * Modify Date: 2004/05/10 */ import java.awt.*; import java.awt.event.*; public class OXMain extends Frame implements ActionListener  private OX oxBoard; private OXMain ()  super ( \"井字遊戲\" ); Menu m; MenuBar mb; oxBoard = new OX( this ); this .add(oxBoard); this .setMenuBar(mb = new MenuBar()); mb.add(m = new Menu( \"遊戲\" )).add( new MenuItem( \"新遊戲\" )).addActionListener( this ); mb.add( new Menu( \"說明\" )).add( new MenuItem( \"關於本遊戲\" )).addActionListener( this ); setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); this .pack(); this .show();  public static void main (String argv[])  new OXMain();  // implements the ActionListener interface public void actionPerformed (ActionEvent e)  String command = e.getActionCommand(); if (command.equals( \"關於本遊戲\" ))  JOptionPane.showMessageDialog( this , \"俞旭昇寫好玩的\" , \"遊戲說明\" , JOptionPane.INFORMATION_MESSAGE);  else if (command.equals( \"新遊戲\" ))  oxBoard.newGame();    class OX extends Component implements MouseListener  public static final byte EMPTY = 0 ; public static final byte CIRCLE = 1 ; public static final byte CROSS = 2 ; private byte [] board = new byte [ 9 ]; private byte playing = CIRCLE; private Dimension mySize = new Dimension( 300 , 300 ); private Frame parent; private byte [][] directions =  0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 0 , 3 , 6 , 1 , 4 , 7 , 2 , 5 , 8 , 0 , 4 , 8 , 2 , 4 , 6 ; public OX (Frame p)  this .addMouseListener( this ); parent = p;  // The following 5 functions implement the MouseListener interface public void mouseClicked (MouseEvent e)  public void mouseEntered (MouseEvent e)  public void mouseExited (MouseEvent e)  public void mouseReleased (MouseEvent e)  public void mousePressed (MouseEvent e)  int row = e.getY()/ 100 ; int col = e.getX()/ 100 ; if (row = 3 || col = 3 ) return ; // 超過邊界 if (board[row* 3 +col] == EMPTY)  // 此位置可以下 board[row* 3 +col] = playing; repaint(); // notify Window Manager // Anyone Win? for ( int i= 0 ; idirections.length; i++)  int j; for (j= 0 ; j 3 &amp;&amp; board[directions[i][j]]==playing; j++) ; if (j== 3 )  if (playing == CIRCLE)  JOptionPane.showMessageDialog( this , \"圓圈贏了\" , \"圓圈贏了\" , JOptionPane.INFORMATION_MESSAGE);  else if (playing == CROSS)  JOptionPane.showMessageDialog( this , \"叉叉贏了\" , \"叉叉贏了\" , JOptionPane.INFORMATION_MESSAGE);  this .newGame(); return ;   playing ^= 0x03 ;   // override paint() defined in Component public void paint (Graphics g)  g.drawLine( 0 , 100 , 300 , 100 ); g.drawLine( 0 , 200 , 300 , 200 ); g.drawLine( 100 , 0 , 100 , 300 ); g.drawLine( 200 , 0 , 200 , 300 ); for ( int i = 0 ; i  3 ; i++)  for ( int j = 0 ; j  3 ; j++)  if (board[i* 3 +j] == CIRCLE)  g.drawOval( 50 +j* 100 - 25 , 50 +i* 100 - 25 , 50 , 50 );  else if (board[i* 3 +j] == CROSS)  g.drawLine( 25 +j* 100 , 25 +i* 100 , 75 +j* 100 , 75 +i* 100 ); g.drawLine( 75 +j* 100 , 25 +i* 100 , 25 +j* 100 , 75 +i* 100 );     public void newGame ()  for ( int i = 0 ; i  3 ; i++)  for ( int j = 0 ; j  3 ; j++)  board[i* 3 +j] = EMPTY;   playing = CIRCLE; repaint();  // override getPreferredSize defined in Component, // so that the Component has proper size on screen public Dimension getPreferredSize ()  return mySize;   class AddConstraint  public static void addConstraint (Container container, Component component, int grid_x, int grid_y, int grid_width, int grid_height, int fill, int anchor, double weight_x, double weight_y, int top, int left, int bottom, int right)  GridBagConstraints c = new GridBagConstraints(); c.gridx = grid_x; c.gridy = grid_y; c.gridwidth = grid_width; c.gridheight = grid_height; c.fill = fill; c.anchor = anchor; c.weightx = weight_x; c.weighty = weight_y; c.insets = new Insets(top,left,bottom,right); ((GridBagLayout)container.getLayout()).setConstraints(component,c); container.add(component);  "},"java/examples/bingo.html":{"title":"","path":"/java/examples/bingo.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 public class Bingo  private int [] board; // using one dimensional array to represent the board private int [][] lines; // there are (2*size+2) lines private int size; public Bingo ( int size)  this .size = size; genMap(); genLine();  private void genMap ()  int len = size*size; board = new int [len]; for ( int i = 0 ; i  len; i++)  board[i] = i+ 1 ;  // random swap each position 4 times for ( int i = 0 ; i  len* 4 ; i++)  // try to swap x and y int x = i % len; int y = ( int )(Math.random()*len); int tmp = board[x]; board[x] = board[y]; board[y] = tmp;   public void print ()  int len = size * size; for ( int i = 0 ; i  len; i++)  \t if (board[i]  10 ) System.out.print( \" \" ); System.out.print( \" \" +board[i]); if (i % size == size- 1 )  System.out.println();   System.out.println();  public int choose ()  int len = size*size; int [] weight = new int [len]; for ( int i = 0 ; i  2 *size+ 2 ; i++)  int degree = 0 ; for ( int j = 0 ; j  size; j++)  if (board[lines[i][j]] = 0 )  degree++;   // already know the degree of line i int delta = degree*degree*degree; for ( int j = 0 ; j  size; j++)  if (board[lines[i][j]]  0 )  weight[lines[i][j]] += delta;    int start = ( int )(Math.random()*len); int at; int maxWeight = 0 ; int pos = len/ 2 ; for ( int i = 0 ; i  len; i++)  at = (start+i)%len; if (board[at]  0 &amp;&amp; maxWeight  weight[at])  maxWeight = weight[at]; pos = at;   return board[pos];  private void genLines ()  lines = new int [ 2 *size+ 2 ][size]; for ( int i = 0 ; i  size; i++)  // horizontal lines for ( int j = 0 ; j  size; j++)  lines[i][j] = i*size + j;   for ( int i = 0 ; i  size; i++)  // vertical lines for ( int j = 0 ; j  size; j++)  lines[i+size][j] = i + size*j;   for ( int j = 0 ; j  size; j++)  // \\ lines[ 2 *size][j] = (size+ 1 ) * j; lines[ 2 *size+ 1 ][j] = size- 1 +j*(size- 1 );   public boolean bingo ()  int i, j; int count = 0 ; for (i = 0 ; i  2 *size+ 2 ; i++)  // check each line for (j = 0 ; j  size; j++)  if (board[lines[i][j]]  0 )  break ;   if (j == size)  // found aline count++;   if (count = size) return true ; return false ;  public boolean setChecked ( int num)  int pos; int len = size*size; for (pos = 0 ; pos  len; pos++)  if (board[pos] == num)  break ;   if (pos == len)  // error!!! print(); System.out.println( \"error set +\" +pos); System.exit( 1 );  board[pos] = -board[pos]; return bingo();  public static void main (String[] argv)  int size = 5 ; if (argv.length  0 )  try  size = Integer.parseInt(argv[ 0 ]);  catch (NumberFormatException nfe)  System.out.println( \"Warning: Command line argument must be an integer\" );   Bingo x = new Bingo(size); x.print(); Bingo y = new Bingo(size); y.print(); boolean exit = false ; int count = 0 ; while (!exit)  int num = x.choose(); System.out.println( \"x choose \" +num); if (x.setChecked(num))  System.out.println( \"X bingo\" ); exit = true ;  if (y.setChecked(num))  System.out.println( \"Y bingo\" ); exit = true ;  count ++; if (!exit)  // y's turn num = y.choose(); System.out.println( \"y choose \" +num); if (x.setChecked(num))  System.out.println( \"X bingo\" ); exit = true ;  if (y.setChecked(num))  System.out.println( \"Y bingo\" ); exit = true ;  count ++;   System.out.println(count+ \" numbers were choosed\" );  "},"java/examples/editor.html":{"title":"","path":"/java/examples/editor.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 import java.awt.*; import java.awt.event.*; import javax.swing.*; import javax.swing.event.*; import java.io.*; public class Editor extends WindowAdapter implements ActionListener  JFrame topWindow; JTextArea jta; public void actionPerformed (ActionEvent e)  String command = e.getActionCommand(); if (command.equals( \"Open\" ))  JFileChooser fd = new JFileChooser( \".\" ); fd.setDialogType(JFileChooser.OPEN_DIALOG); int returnVal = fd.showOpenDialog(topWindow); if (returnVal == JFileChooser.APPROVE_OPTION)  try  File file = fd.getSelectedFile(); BufferedReader fin = new BufferedReader( new FileReader(file)); StringBuffer sb = new StringBuffer(); String x; while ((x=fin.readLine()) != null )  sb.append(x); sb.append( \"\\n\" );  jta.setText(sb.toString());  catch (Exception epp)  jta.setCaretPosition( 0 );   else if (command.equals( \"Save\" ))  JFileChooser fd = new JFileChooser( \".\" ); fd.setDialogType(JFileChooser.SAVE_DIALOG); int returnVal = fd.showSaveDialog(topWindow); if (returnVal == JFileChooser.APPROVE_OPTION)  try  File file = fd.getSelectedFile(); FileWriter fout = new FileWriter(file); fout.write(jta.getText()); fout.close();  catch (Exception epp)    else if (command.equals( \"Find\" ))  String x = jta.getText(); int at = x.indexOf( \"int\" , jta.getCaretPosition()); if (at = 0 )  jta.setCaretPosition(at); jta.setSelectionStart(at); jta.setSelectionEnd(at+ 3 );   else  System.out.println( \"Unknown \" +command);   public void windowClosing (WindowEvent e)  topWindow.dispose(); System.exit( 0 );  public Editor ()  Font myFont = new Font( \"細明體\" , Font.PLAIN, 20 ); topWindow = new JFrame( \"My IDE\" ); // get the root container of JFrame Container c = topWindow.getContentPane(); c.setLayout( new GridLayout( 1 , 1 )); JMenuBar jmb = new JMenuBar(); JMenu m = new JMenu( \"File\" ); m.setFont(myFont); JMenuItem mi = new JMenuItem( \"Open\" ); mi.setFont(myFont); mi.addActionListener( this ); m.add(mi); mi = new JMenuItem( \"Save\" ); mi.setFont(myFont); mi.addActionListener( this ); m.add(mi); mi = new JMenuItem( \"Find\" ); mi.setFont(myFont); mi.addActionListener( this ); m.add(mi); jmb.add(m); topWindow.setJMenuBar(jmb); jta = new JTextArea( 24 , 80 ); jta.setFont(myFont); jta.setCursor( new Cursor(Cursor.HAND_CURSOR)); JScrollPane jsp = new JScrollPane(jta); c.add(jsp); topWindow.addWindowListener( this ); topWindow.pack(); // 壓縮到最適當的大小 topWindow.show(); // 顯示JFrame  public static void main (String[] argv)  new Editor();  "},"java/examples/eight-queens-puzzle.html":{"title":"","path":"/java/examples/eight-queens-puzzle.html","body":"在程式語言教學中，訓練學習者分析問題的能力相當重要。 很多有趣的範例程式來自數學家的研究，以八皇后為例，Franz Nauck在1850年提出「在西洋棋的棋盤上放八個皇后，使得沒有一個王后能吃掉其他皇后」。 西洋棋的皇后如同象棋的車，可以縱、橫、斜向移動，把 8 個皇后排在 8 乘以 8 的棋盤上，卻不使彼此攻伐的排法有幾種？數學家高斯猜測有 96 個解，實際上只有 92 個形式解，本質解有 12 個。 本質解是無法經由某一個解旋轉或反射得到的解。 八皇后問題可以擴展成 N 皇后，藉由程式語言的幫助將易於求解。 在教學上為了方便解說，以四皇后說明此類問題的核心想法。 使用四維向量 (a,b,c,d) 表示四皇后在 4 乘以 4 棋盤上的放法，圖一的擺法表示成 (2,4,1,3)。 圖一 圖二 假使如圖二，已排好三個皇后，對應的向量為 (1,4,2,X)，第四個分量 X 是未確定的第四個皇后位置。 N 皇后求解的條件是：沒有任兩個皇后在同一行、同一列、同一對角線上。 圖二的 (1,4,2,X) 不管怎麼放，都不可能符合上開條件。 下列樹狀圖每個節點表示棋盤上放皇后的一種情形，詳細說明所有可能的排法。 由樹狀圖看來，找出四皇后問題的解，最好的辦法是檢查所有的狀況一次，此次有 4 4 = 256 個可能解，不僅耗費時間，問題擴大時也難以負荷。 改用一個比較可行的方法來處理，首先，依次序先檢查 (1,X,X,X)，再往下層檢查 (1,1,X,X)。 因為 (1,1,X,X) 表示前兩個皇后都位於第一行上，違反條件。所以 (1,1,X,X) 以下的子樹的樹枝就都不必再逐一的搜索了。 這時，應退回到上一級的頂點 (1,X,X,X) 處，以下一個頂點 (1,2,X,X) 開始。 可以發現 (1,2,X,X) 這個頂點也違反了條件，因為同一對角線上。於是再返回(1,X,X,X)。 現在利用圖四至圖七，以此方法繼續做下去： 圖四，表示第一個皇后放在第一行，第二個皇后就不能放在第一列也不能放在第二列，只能以第三列開始搜尋； 圖五，表示以 (1,3,X,X) 為樹根的子樹都不是問題的解，因為第三個皇后無論怎麼放，都違反條件； 圖六，表示 (1,4,1,X) 違反條件，而 (1,4,2,X) 仍能符合條件； 圖七，表示 (1,4,2,X) 在考慮第四個皇后位置，就被否決了。 按上述方式做下去，可得到一個結論：四皇后問題共有兩個解，如圖八中的 (2,4,1,3) 和圖九 (3,1,4,2)。 讓我們審視 (2,4,1,3) 和 (3,1,4,2) 這兩個解，發現它們是互相對稱的，本質上是同一個解。 在這裡，我們得到了數學上形式解和本質解的觀念。 以上是 N 皇后問題的解說，以程式語言求解的範例如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 /** * Program Name: Queen.java * Purpose: 找N皇后問題有幾組解 * Author: Shiuh-Sheng Yu * Date: 2003/05/20 */ import java.io.*; public class Queen  private int [] board, directions; private int size, numSolutions; public static final int QUEEN = 0x01000000 ; public static void main (String[] argv)  int size, c; for (;;)  StringBuffer sb = new StringBuffer(); System.out.print( \"Please input the Queen size: \" ); for (;;)  try  c = System.in.read(); if (!(c= '0' &amp;&amp; c= '9' ))  if (sb.length() 0 ) break ; continue ;   catch (IOException ex)  return ;  sb.append(( char )c);  try  size = Integer.parseInt(sb.toString());  catch (NumberFormatException ex)  continue ;  if (size== 0 ) break ; Queen x = new Queen(size); x.arrange(); System.out.println( \"The \" +size+ \" Queen has \" +x.getSolutionNum()+ \" solutions\" );   public Queen ( int size)  this .size = size; directions = new int [ 3 ]; directions[ 0 ] = size+ 1 ; directions[ 1 ] = size+ 2 ; directions[ 2 ] = size+ 3 ; board = new int [(size+ 2 )*(size+ 2 )]; int lastLine = (size+ 2 )*(size+ 1 ); // 設定盤面上的哨兵 for ( int i= 0 ; i size+ 2 ; i++)  // 上下兩排 board[i] = - 1 ; board[lastLine+i] = - 1 ;  for ( int i= 1 ; i=size; i++)  // 左右兩排 board[i*(size+ 2 )] = - 1 ; board[i*(size+ 2 )+size+ 1 ] = - 1 ;   public int getSolutionNum ()  return numSolutions;  public void arrange ()  arrange( 1 );  /** * 嘗試放到第row列 */ private void arrange ( int row)  for ( int i= 1 ; i = size; i++)  // 檢查此列上的每一行 int puton = (size+ 2 )*row+i; if (board[puton] == 0 )  // 不在任何皇后範圍內 if (row==size)  // 已經到最後一個row, 此為一種解 numSolutions++;  else  board[puton] = QUEEN; // 放上皇后 for ( int j= 0 ; j 3 ; j++)  // 設定此皇后的勢力範圍 for ( int k=puton+directions[j]; board[k]= 0 ; k+=directions[j])  board[k]++;   arrange(row+ 1 ); board[puton] = 0 ; // 移除皇后 for ( int j= 0 ; j 3 ; j++)  // 移除此皇后的勢力範圍 for ( int k=puton+directions[j]; board[k]= 0 ; k+=directions[j])  board[k]--;       "},"java/examples/engineering-calculator.html":{"title":"","path":"/java/examples/engineering-calculator.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 /** * Author: Shiuh-Sheng Yu * Last Update: 4/21/1998 * Modified Date: 03/31/2003 */ import java.awt.*; import java.awt.event.*; public class Calc implements ActionListener  private Frame f; private TextField display; public Calc ()  Font font = new Font( \"Serif\" ,Font.PLAIN, 16 ); f = new Frame( \"小算盤\" ); MenuBar mb = new MenuBar(); mb.setFont(font); f.setMenuBar(mb); Menu m = new Menu( \"說明\" ); mb.add(m); MenuItem mi = new MenuItem( \"about\" ); m.add(mi); f.addWindowListener( new CloseWindow(f, true )); mi.addActionListener( this ); f.setLayout( new GridBagLayout()); f.setFont(font); display = new TextField( 40 ); AddConstraint.addConstraint(f,display, 0 , 0 , 1 , 1 , GridBagConstraints.HORIZONTAL, GridBagConstraints.NORTHWEST, 1 , 0 , 0 , 0 , 0 , 0 ); Panel funButtons = new Panel(); AddConstraint.addConstraint(f,funButtons, 0 , 1 , 1 , 1 , GridBagConstraints.BOTH, GridBagConstraints.NORTHWEST, 1 , 1 , 0 , 0 , 0 , 0 ); funButtons.setLayout( new GridLayout( 1 , 1 )); ((Button)funButtons.add( new Button( \"clear\" ))).addActionListener( this ); Panel keyButtons = new Panel(); keyButtons.setLayout( new GridLayout( 6 , 5 )); AddConstraint.addConstraint(f,keyButtons, 0 , 2 , 1 , 1 , GridBagConstraints.BOTH, GridBagConstraints.NORTHWEST, 1 , 1 , 0 , 0 , 0 , 0 ); String[] buttons =  \"7\" , \"8\" , \"9\" , \"/\" , \"^\" , \"4\" , \"5\" , \"6\" , \"*\" , \"%\" , \"1\" , \"2\" , \"3\" , \"-\" , \".\" , \"0\" , \"+\" , \"=\" , \"sqrt\" , \"abs\" , \"acos\" , \"asin\" , \"atan\" , \"cos\" , \"sin\" , \"tan\" , \"exp\" , \"log\" , \"round\" ; for ( int i= 0 ; ibuttons.length; i++)  ((Button)keyButtons.add( new Button(buttons[i]))).addActionListener( this );  f.pack(); f.show();  public static void main (String argv[])  new Calc();  public void actionPerformed (ActionEvent e)  String see = display.getText(); String rel; int i = display.getCaretPosition(); String command = e.getActionCommand(); if (command.equals( \"=\" ))  rel = eval(display.getText()); display.setText(rel); display.setCaretPosition(rel.length());  else if (command.length()== 1 )  // 數字按鍵 display.setText(see.substring( 0 ,i)+command+see.substring(i)); display.setCaretPosition((see.substring( 0 ,i)+command).length());  else if (command.equals( \"clear\" ))  display.setText( \"\" );  else if (command.equals( \"about\" ))  new About(f, \"俞旭昇寫好玩的\" );  else  // 其他函數 display.setText(see.substring( 0 ,i)+command+ \"()\" +see.substring(i)); display.setCaretPosition((see.substring( 0 ,i)+command).length()+ 1 );  display.requestFocus();  public static final int SQRT = 0 ; public static final int ABS = 1 ; public static final int ACOS = 2 ; public static final int ASIN = 3 ; public static final int ATAN = 4 ; public static final int COS = 5 ; public static final int SIN = 6 ; public static final int TAN = 7 ; public static final int EXP = 8 ; public static final int LOG = 9 ; public static final int ROUND = 10 ; public static final int PLUS = 0 ; public static final int MINUS = 1 ; public static final int MULTIPLY = 2 ; public static final int DIVIDE = 3 ; public static final int MODE = 4 ; public static final int POWER = 5 ; public static final int FUN = 6 ; public static final int LEFT_ROUND_BRACKET = 7 ; public static final int RIGHT_ROUND_BRACKET = 8 ; public static final int END = 9 ; public static final int LITERAL = 10 ; public static final int ERROR = 11 ; public static final int PUSH = 0 ; public static final int POP = 1 ; public static final int ELIMINATE = 2 ; public static final int DEAD = 3 ; public static final int TERMINATE = 4 ; public static final int table[][] =  // add more elements // + - * / % ^ FUN ( ) end POP, POP, POP, POP, POP, POP, POP, PUSH, DEAD,PUSH, // + POP, POP, POP, POP, POP, POP, POP, PUSH, DEAD,PUSH, // - PUSH,PUSH,POP, POP, POP, POP, POP, PUSH, DEAD,PUSH, // * PUSH,PUSH,POP, POP, POP, POP, POP, PUSH, DEAD,PUSH, // / PUSH,PUSH,POP, POP, POP, POP, POP, PUSH, DEAD,PUSH, // % PUSH,PUSH,PUSH,PUSH,PUSH,PUSH,POP, PUSH, DEAD,PUSH, // ^ PUSH,PUSH,PUSH,PUSH,PUSH,PUSH,DEAD,PUSH, DEAD,PUSH, // FUN PUSH,PUSH,PUSH,PUSH,PUSH,PUSH,PUSH,PUSH, DEAD,PUSH, // ( POP, POP, POP, POP, POP, POP, POP, ELIMINATE,DEAD,DEAD, // ) POP, POP, POP, POP, POP, POP, POP, DEAD, DEAD,TERMINATE // end ; String eval (String expression)  Expression exp = new Expression(expression); IntStack operator_stack = new IntStack(); DoubleStack operand_stack = new DoubleStack(); Token token; int act, op; double op1,op2,tmp; operator_stack.push(END); // put sentinel for (;;)  token = exp.next_token(); if (token.type == ERROR)  return \"算式不合法\" ;  if (token.type == LITERAL)  operand_stack.push(Double.valueOf(token.data).doubleValue());  else  act = table[token.type][operator_stack.peek()]; while (act == POP)  // pop out all higher priority operator op2 = operand_stack.pop(); op1 = operand_stack.pop(); tmp = 0 ; op = operator_stack.pop(); if (op == PLUS)  tmp = op1 + op2;  else if (op == MINUS)  tmp = op1 - op2;  else if (op == MULTIPLY)  tmp = op1 * op2;  else if (op == MODE)  if (( int )op2 != 0 )  tmp = ( int )op1 % ( int )op2;  else  return \"zero divisor\" ;   else if (op == DIVIDE)  if (op2 != 0 )  tmp = op1 / op2;  else  return \"zero divisor\" ;   else if (op == POWER)  tmp = Math.pow(op1,op2);  else if (op == FUN)  if (op1 == SQRT)  tmp = Math.sqrt(op2);  else if (op1 == ABS)  tmp = Math.abs(op2);  else if (op1 == ACOS)  tmp = Math.acos(op2);  else if (op1 == ASIN)  tmp = Math.asin(op2);  else if (op1 == ATAN)  tmp = Math.atan(op2);  else if (op1 == COS)  tmp = Math.cos(op2);  else if (op1 == SIN)  tmp = Math.sin(op2);  else if (op1 == TAN)  tmp = Math.tan(op2);  else if (op1 == EXP)  tmp = Math.exp(op2);  else if (op1 == LOG)  tmp = Math.log(op2);  else if (op1 == ROUND)  tmp = Math.round(op2);  else  return ( \"內部錯誤\" );   operand_stack.push(tmp); act = table[token.type][operator_stack.peek()];  if (act == PUSH)  operator_stack.push(token.type); if (token.type == FUN)  if (token.data.equals( \"sqrt\" ))  operand_stack.push(( double )SQRT);  else if (token.data.equals( \"abs\" ))  operand_stack.push(( double )ABS);  else if (token.data.equals( \"acos\" ))  operand_stack.push(( double )ACOS);  else if (token.data.equals( \"asin\" ))  operand_stack.push(( double )ASIN);  else if (token.data.equals( \"atan\" ))  operand_stack.push(( double )ATAN);  else if (token.data.equals( \"cos\" ))  operand_stack.push(( double )COS);  else if (token.data.equals( \"sin\" ))  operand_stack.push(( double )SIN);  else if (token.data.equals( \"tan\" ))  operand_stack.push(( double )TAN);  else if (token.data.equals( \"exp\" ))  operand_stack.push(( double )EXP);  else if (token.data.equals( \"log\" ))  operand_stack.push(( double )LOG);  else if (token.data.equals( \"round\" ))  operand_stack.push(( double )ROUND);  else  return ( \"算式不合法\" );    else if (act == ELIMINATE)  if (operator_stack.peek() == LEFT_ROUND_BRACKET)  operator_stack.pop();  else  return \"括弧不對稱\" ;   else if (act == TERMINATE)  return Double.toString(operand_stack.pop());  else  // DEAD return ( \"算式不合法\" );      class DoubleStack  private int top; private double data[]; public DoubleStack ()  top = 0 ; data = new double [ 100 ];  public void push ( double val)  data[top++] = val;  public double pop ()  return data[--top];  public double peek ()  return data[top- 1 ];   class IntStack  private int top; private int data[]; public IntStack ()  top = 0 ; data = new int [ 100 ];  public void push ( int val)  data[top++] = val;  public int pop ()  return data[--top];  public int peek ()  return data[top- 1 ];   class Token  int type; String data; Token( int t, String d)  type = t; data = d;   class Expression  private int ptr; private String data; private boolean wantOperand = true ; public Expression (String s)  ptr = 0 ; data = s;  public Token next_token ()  int i; for (i = ptr; i  data.length() &amp;&amp; data.charAt(i)== ' ' ; i++)   ptr = i; if (i == data.length())  return new Token(Calc.END, \"\" );  switch (data.charAt(i))  case '+' : ptr++; wantOperand = true ; return new Token(Calc.PLUS, \"+\" ); case '*' : ptr++; wantOperand = true ; return new Token(Calc.MULTIPLY, \"*\" ); case '/' : ptr++; wantOperand = true ; return new Token(Calc.DIVIDE, \"/\" ); case '%' : ptr++; wantOperand = true ; return new Token(Calc.MODE, \"%\" ); case '^' : ptr++; wantOperand = true ; return new Token(Calc.POWER, \"^\" ); case '(' : ptr++; wantOperand = true ; return new Token(Calc.LEFT_ROUND_BRACKET, \"(\" ); case ')' : ptr++; wantOperand = false ; return new Token(Calc.RIGHT_ROUND_BRACKET, \")\" ); default : if (data.charAt(i) == '-' &amp;&amp; !wantOperand)  ptr++; wantOperand = true ; return new Token(Calc.MINUS, \"-\" );  StringBuffer buf = new StringBuffer(); if (data.charAt(i)== '-' ||(data.charAt(i)= '0' &amp;&amp; data.charAt(i)= '9' ) || data.charAt(i)== '.' )  wantOperand = false ; if (data.charAt(i) == '-' )  buf.append(data.charAt(i++));  while (idata.length() &amp;&amp; data.charAt(i)= '0' &amp;&amp; data.charAt(i)= '9' )  buf.append(data.charAt(i++));  if (idata.length() &amp;&amp; data.charAt(i) == '.' )  buf.append(data.charAt(i++)); while (idata.length() &amp;&amp; data.charAt(i)= '0' &amp;&amp; data.charAt(i)= '9' )  buf.append(data.charAt(i++));   if (idata.length() &amp;&amp; data.charAt(i) == 'E' )  buf.append(data.charAt(i++)); if (idata.length() &amp;&amp; data.charAt(i) == '-' )  buf.append(data.charAt(i++));  while (idata.length() &amp;&amp; data.charAt(i)= '0' &amp;&amp; data.charAt(i)= '9' )  buf.append(data.charAt(i++));   ptr = i; if (buf.length()== 0 )  return new Token(Calc.ERROR, \"\" );  else  return new Token(Calc.LITERAL,buf.toString());   else  while (idata.length() &amp;&amp; data.charAt(i)= 'a' &amp;&amp; data.charAt(i)= 'z' )  buf.append(data.charAt(i++));  ptr = i; if (buf.length()== 0 )  return new Token(Calc.ERROR, \"\" );  else if (i=data.length() || data.charAt(i)!= '(' )  return new Token(Calc.ERROR, \"\" );  else  return new Token(Calc.FUN,buf.toString());      class About  public About (Frame f, String message)  Dialog d = new Dialog(f, true ); d.addWindowListener( new CloseWindow(d, false )); Label l = new Label(message); d.setLayout( new GridBagLayout()); AddConstraint.addConstraint(d,l, 0 , 0 , 1 , 1 , GridBagConstraints.BOTH, GridBagConstraints.NORTHWEST, 1 , 1 , 0 , 0 , 0 , 0 ); Button b = new Button( \"OK\" ); AddConstraint.addConstraint(d,b, 0 , 1 , 1 , 1 , GridBagConstraints.BOTH, GridBagConstraints.NORTHWEST, 1 , 1 , 0 , 0 , 0 , 0 ); b.addActionListener( new CloseWindow(d, false )); d.pack(); d.show();   class CloseWindow extends WindowAdapter implements ActionListener  private Window target; private boolean exit; public CloseWindow (Window target, boolean exit)  super (); this .target = target; this .exit = exit;  public void windowClosing (WindowEvent e)  target.dispose(); if (exit) System.exit( 0 );  public void actionPerformed (ActionEvent e)  target.dispose(); if (exit) System.exit( 0 );   class AddConstraint  public static void addConstraint (Container container, Component component, int grid_x, int grid_y, int grid_width, int grid_height, int fill, int anchor, double weight_x, double weight_y, int top, int left, int bottom, int right)  GridBagConstraints c = new GridBagConstraints(); c.gridx = grid_x; c.gridy = grid_y; c.gridwidth = grid_width; c.gridheight = grid_height; c.fill = fill; c.anchor = anchor; c.weightx = weight_x; c.weighty = weight_y; c.insets = new Insets(top,left,bottom,right); ((GridBagLayout)container.getLayout()).setConstraints(component,c); container.add(component);  "},"java/examples/file-handler.html":{"title":"","path":"/java/examples/file-handler.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 /** * Programming Methodology Homework #2 Example. * Author: Shiuh-Sheng Yu * Date: 3/16/1998 * Last updated date: 3/17/1998 */ import java.io.*; import java.util.*; public class H2  private static String nextToken (BufferedReader din) throws IOException  StringBuffer sb = new StringBuffer(); int c; try  do  c = din.read();  while (c== ' ' || c== '\\n' || c== '\\r' || c== '\\t' ); while (c!=- 1 &amp;&amp; c!= ' ' &amp;&amp; c!= '\\n' &amp;&amp; c!= '\\t' &amp;&amp; c!= '\\r' )  sb.append(( char )c); c = din.read();   catch (EOFException e)   if (sb.length()== 0 )  return \"\" ;  return sb.toString();  private static Matrix readMatrix (BufferedReader din) throws MalMatrixException, IOException  String token = nextToken(din); int x, y; double [][] data; if (!token.equals( \"matrix\" ))  throw new MalMatrixException();  token = nextToken(din); try  x = Integer.parseInt(token);  catch (NumberFormatException eNum)  throw new MalMatrixException();  token = nextToken(din); try  y = Integer.parseInt(token);  catch (NumberFormatException eNum)  throw new MalMatrixException();  data = new double [x][y]; for ( int i= 0 ; ix; i++)  for ( int j= 0 ; jy; j++)  try  token = nextToken(din); data[i][j] = Double.valueOf(token).doubleValue();  catch (NumberFormatException eNum)  throw new MalMatrixException();    return new Matrix(data);  public static void main (String[] args)  BufferedReader din; if (args.length != 1 )  System.out.println( \"Usage: java H2 fname\" ); System.out.println( \"where fname is a file contains matrix data.\" ); System.exit( 0 );  try  String inputbuf; din = new BufferedReader( new FileReader(args[ 0 ])); for (;!(inputbuf=nextToken(din)).equals( \"\" );)  if (inputbuf.equals( \"+\" ))  Matrix a = readMatrix(din); Matrix b = readMatrix(din); a.print(); a.add(b); System.out.println( \"+\" ); b.print(); System.out.println( \"=\" ); a.print();  else if (inputbuf.equals( \"*\" ))  Matrix a = readMatrix(din); Matrix b = readMatrix(din); Matrix c = a.multiply(b); a.print(); System.out.println( \"*\" ); b.print(); System.out.println( \"=\" ); c.print();  else if (inputbuf.equals( \"value\" ))  Matrix a = readMatrix(din); System.out.println( \"value of \" ); a.print(); System.out.println( \"=\" ); System.out.println(a.determinant());  else  break ;    catch (Exception e)  e.printStackTrace(); System.exit( 1 );   "},"java/examples/guess-sever-client.html":{"title":"","path":"/java/examples/guess-sever-client.html","body":"以下是 GuessClient.java 與 GuessServer.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 /** * Program: GuessClient.java * Author: Shiuh-Sheng Yu * Department of Information Management * National ChiNan University * Last Update Date: 04/30/2000 */ import java.io.*; import java.net.*; public class GuessClient  byte num[][]; boolean checked[]; byte [] studentID =  8 , 7 , 3 , 2 , 1 , 0 , 0 , 6 ; void init ()  num = new byte [ 5040 ][ 4 ]; checked = new boolean [ 5040 ]; int m= 0 ; for ( byte i= 0 ; i= 9 ; i++)  for ( byte j= 0 ; j= 9 ; j++)  if (j==i) continue ; for ( byte k= 0 ; k= 9 ; k++)  if (k==i || k==j) continue ; for ( byte l= 0 ; l= 9 ; l++)  if (l==i || l==j || l==k) continue ; num[m][ 0 ] = i; num[m][ 1 ] = j; num[m][ 2 ] = k; num[m++][ 3 ] = l;      void reset ()  for ( int i= 0 ; i 5040 ; i++) checked[i] = false ;  public GuessClient ()  init(); byte [] ans = new byte [ 2 ]; try  Socket s = new Socket( \"163.22.20.114\" , 1234 ); InputStream in = s.getInputStream(); OutputStream out = s.getOutputStream(); out.write(studentID); for ( int i= 0 ; i 100 ; i++)  reset(); while ( true )  byte [] guess = guess(); out.write(guess); in.read(ans); if (ans[ 0 ]== 4 &amp;&amp; ans[ 1 ]== 0 ) break ; eliminate(guess, ans);   in.close(); out.close(); s.close();  catch (Exception e)  System.out.println(e);   public byte [] guess()  for ( int i= 0 ; ; i++)  if (!checked[i])  checked[i] = true ; return num[i];    private boolean match ( byte [] pre, byte [] x, byte [] answer)  int a= 0 , b= 0 ; for ( int i= 0 ; i 4 ; i++) for ( int j= 0 ; j 4 ; j++) if (pre[j] == x[i])  if (i==j) a++; else b++; break ;  return (answer[ 0 ]==a &amp;&amp; answer[ 1 ]==b);  public void eliminate ( byte [] guess, byte [] answer)  for ( int i= 0 ; ichecked.length; i++) if (!checked[i] &amp;&amp; !match(guess, num[i], answer)) checked[i] = true ;  public static void main (String argv[])  new GuessClient();   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 /** * Program: GuessServer.java * Author: Shiuh-Sheng Yu * Department of Information Management * National ChiNan University * Last Update Date: 04/30/2000 */ import java.net.*; import java.io.*; public class GuessServer  PrintWriter outFile; byte [][] num; public GuessServer ()  try  ServerSocket listenSocket = new ServerSocket( 1234 ); outFile = new PrintWriter( new FileOutputStream( \"guess.log\" , true )); init(); while ( true )  new GuessConnection(listenSocket.accept(), this );   catch (IOException e)  System.out.println(e); System.exit( 0 );   private void init ()  num = new byte [ 5040 ][ 4 ]; int m= 0 ; for ( byte i= 0 ; i= 9 ; i++)  for ( byte j= 0 ; j= 9 ; j++)  if (j==i)  continue ;  for ( byte k= 0 ; k= 9 ; k++)  if (k==i || k==j)  continue ;  for ( byte l= 0 ; l= 9 ; l++)  if (l==i || l==j || l==k)  continue ;  num[m][ 0 ] = i; num[m][ 1 ] = j; num[m][ 2 ] = k; num[m][ 3 ] = l; m++;      public static void main (String[] argv)  new GuessServer();   class GuessConnection extends Thread  Socket client; GuessServer master; OutputStream out; InputStream in; String hostName; byte [] studentID; public GuessConnection (Socket clientSocket, GuessServer parent)  client = clientSocket; master = parent; try  out = client.getOutputStream(); in = client.getInputStream(); hostName = client.getInetAddress().getHostAddress(); studentID = new byte [ 8 ];  catch (Exception e)  System.out.println( \"Read from \" +hostName+ \" failed\" ); try  client.close();  catch (Exception ex)  return ;  this .setPriority(Thread.MIN_PRIORITY); this .start();  public void run ()  int guessNum= 0 ; byte [] inputNum = new byte [ 4 ]; try  in.read(studentID); for ( int i= 0 ; i 100 ; i++)  // run 100 times to evaluate performance int answer = ( int )(Math.random()* 5040 ); while ( true )  in.read(inputNum); guessNum++; byte [] rel = nanb(inputNum, master.num[answer]); out.write(rel); if (rel[ 0 ]== 4 &amp;&amp; rel[ 1 ]== 0 )  break ;    master.outFile.println(( char )(studentID[ 0 ]+ '0' )+ \"\" + ( char )(studentID[ 1 ]+ '0' )+ \"\" + ( char )(studentID[ 2 ]+ '0' )+ \"\" + ( char )(studentID[ 3 ]+ '0' )+ \"\" + ( char )(studentID[ 4 ]+ '0' )+ \"\" + ( char )(studentID[ 5 ]+ '0' )+ \"\" + ( char )(studentID[ 6 ]+ '0' )+ \"\" + ( char )(studentID[ 7 ]+ '0' )+ \" \" +guessNum+ \" \" +hostName); master.outFile.flush();  catch (Exception e)   finally  try  in.close(); out.close(); client.close();  catch (Exception ex)     static private byte [] nanb( byte [] x, byte [] y)  byte [] rel = new byte [ 2 ]; rel[ 0 ] = rel[ 1 ] = 0 ; for ( int i= 0 ; i 4 ; i++)  for ( int j= 0 ; j 4 ; j++)  if (y[j]==x[i])  if (i==j)  rel[ 0 ]++;  else  rel[ 1 ]++;  break ;    return rel;  "},"java/examples/matrix.html":{"title":"","path":"/java/examples/matrix.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 /** * FileName: Matrix.java * Author: Shiuh-Sheng Yu * Since: 1998/3/17 * Modify Date: 2005/07/11, add more comments */ public class Matrix  private double [][] data; /* constructor */ public Matrix ( double [][] array)  data = array;  /* constructor */ private Matrix ( int x, int y)  data = new double [x][y];  /* * 複製物件 */ public Object clone ()  double [][] x = new double [data.length][data[ 0 ].length]; for ( int i= 0 ; i  x.length; i++)  for ( int j= 0 ; j  x[ 0 ].length; j++)  x[i][j] = data[i][j];   return new Matrix(x);  /** * 矩陣加法 * X is m by n, Y is m by n, Z = X + Y is m by n * Zij = Xij + Yij */ public Matrix add (Matrix x) throws MalMatrixException  /* 判斷兩矩陣是否同樣大小 */ if (data.length != x.data.length || data[ 0 ].length != x.data[ 0 ].length)  throw new MalMatrixException(); // 丟出例外  Matrix rel = (Matrix) this .clone(); // 先將this物件複製到rel for ( int i= 0 ; i  data.length; i++)  for ( int j= 0 ; j  data[ 0 ].length; j++)  rel.data[i][j] += x.data[i][j];   return rel;  /** * 矩陣相乘 * X is m by n, Y is n by p * result Z is m by p where for each 0= i  m, 0 = j  p * Zij = Sum Xik*Ykj * k=0 to n-1 */ public Matrix multiply (Matrix x) throws MalMatrixException  if (data[ 0 ].length!=x.data.length)  throw new MalMatrixException();  Matrix rel = new Matrix(data.length,x.data[ 0 ].length); for ( int i= 0 ; i  data.length; i++)  for ( int j= 0 ; j  x.data[ 0 ].length; j++)  double tmp = 0 ; for ( int k= 0 ; k  data[ 0 ].length; k++)  tmp += data[i][k] * x.data[k][j];  rel.data[i][j]= tmp;   return rel;  /** * 將矩陣內容印到螢幕上 */ public void print ()  for ( int i= 0 ; i  data.length; i++)  for ( int j= 0 ; j  data[ 0 ].length; j++)  System.out.print(data[i][j]+ \" \" );  System.out.println( \"\" );   /** * 高斯消去法求行列式值 */ public double determinant () throws NonSquareMatrixException  if (data.length != data[ 0 ].length)  throw new NonSquareMatrixException();  int n = data.length; int i, j, k, l; double sign = 1 ; double tmp, factor, result; double [][] right = new double [n][n]; // 將資料copy到另一個陣列 for (i= 0 ; i  n; i++)  for (j= 0 ; j  n; j++)  right[i][j] = data[i][j];   for (i= 0 ; i  n- 1 ; i++)  // 由左而右 for (k=i; k  n; k++)  // 找對角線以下非0之元素 if (right[k][i]!= 0 )  break ;   if (k==n)  // 找不到非0的元素 return 0 ;  if (k != i)  // 對角線上是0, 需做列交換 for (l=i; l  n; l++)  tmp = right[i][l]; right[i][l] = right[k][l]; right[k][l] = tmp;  sign *= - 1 ; // 列交換需乘-1  for (k=i+ 1 ;k  n;k++)  // 由上而下 if (right[k][i] != 0 )  // 列運算. 若right[k][i]是0的話就不用再算了 factor = right[k][i]/right[i][i]; right[k][i]= 0 ; for (j=i+ 1 ; j  n; j++)  right[k][j] -= right[i][j]*factor;     for (i= 1 , result=right[ 0 ][ 0 ]; i  n; i++)  result*=right[i][i];  return sign*result;   MalMatrix.java如下 public class MalMatrixException extends Exception  MalMatrixException()  super ( \"MalMatrixException:\" );   NonSquareMatrixException.java如下 public class NonSquareMatrixException extends Exception  NonSquareMatrixException()  super ( \"NonSquareMatrixException:\" );  "},"java/examples/minesweeper.html":{"title":"","path":"/java/examples/minesweeper.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 /* * 踩地雷 * FileName: Mine2.java * Author: Shiuh-Sheng Yu * Date: 5/19/1999 * Last Update: 5/05/2002 */ import java.awt.*; import java.awt.event.*; import java.util.Random; public class Mine2 extends Component implements MouseListener , ActionListener  private byte [] map; // 以一維陣列來取代二維,以減少物件的使用 private int x, y; private Frame f; private int [] directions; // 前四個bits用來記錄此格的資料, 後面四個bits用來記錄旁邊的地雷數 private static final byte BOMB = 0x10 ; // 用以紀錄本格有地雷 private static final byte VISIT = 0x20 ; // 用以紀錄已按左鍵 private static final byte MARK = 0x40 ; // 用以紀錄已按右鍵 private static final byte NEB = 0x0f ; // 用以取出旁邊的地雷數 void checkWin ()  int width = x + 2 ; for ( int i = 1 ; i = y; i++)  // 由上而下 int tmp = i * width; for ( int j = 1 ; j = x; j++)  // 由左而右 int tt = tmp + j; if ((((map[tt] &amp; MARK)  0 ) &amp;&amp; ((map[tt] &amp; BOMB) == 0 )) || (((map[tt] &amp; MARK) == 0 ) &amp;&amp; ((map[tt] &amp; BOMB)  0 )))  return ;    showAll(); showWin();  void showAll ()  int width = x + 2 ; for ( int i = 1 ; i = y; i++)  // 由上而下 int tmp = i*width; for ( int j= 1 ; j=y; j++)  // 由左而右 int tt = tmp + j; if ((map[tt] &amp; BOMB) != 0 )  // 畫上標示 map[tt] |= MARK;  else  map[tt] = ( byte )((map[tt] | VISIT) &amp; ~MARK); // 設為按過, 再把標示拿掉    repaint();  void showWin ()  Dialog d; (d = new Dialog(f, true )).addWindowListener( new CloseWindow(d)); ((Button)d.add( new Button( \"恭喜過關\" ))).addActionListener( new CloseWindow(d)); d.pack(); d.show();  public Dimension getPreferredSize ()  return new Dimension( 22 *x, 22 *y);  void reset ()  map = new byte [(x+ 2 )*(y+ 2 )]; int width = x + 2 ; for ( int i = 0 ; i = y + 1 ; i++)  // 由上而下 int tmp = i * width; for ( int j = 0 ; j = x + 1 ; j++)  // 由左而右 int tt = tmp + j; if (i== 0 || i == (x + 1 ) || j == 0 || j == (y + 1 ))  map[tt] = VISIT; // boundary  else  map[tt] = 0 ; // normal position    // 15%為地雷 for ( int i = 0 , bombNumber = ( int )(x*y* 0.15 ); i  bombNumber;)  // setup bombs int row = ( int )(Math.random()*y)+ 1 ; int col = ( int )(Math.random()*x)+ 1 ; int tt = row * width + col; if ((map[tt] &amp; BOMB) == 0 )  // has no bomb yet i++; map[tt] |= BOMB;   // 計算旁邊的地雷數 for ( int i = 1 ; i = y; i++)  // 由上而下 int tmp = i * width; for ( int j = 1 ; j = x; j++)  // 由左而右 int tt = tmp + j; for ( int k = 0 ; k  8 ; k++)  if ((map[tt + directions[k]] &amp; BOMB) != 0 )  // 旁有地雷 map[tt]++; // 後面四個bit用來記錄旁邊的地雷數     repaint();  // 畫出盤面 public void paint (Graphics g)  g.setColor(Color.red); for ( int i = 1 ; i = x; i++)  // 畫縱線 g.drawLine(i* 20 , 0 , i* 20 , 200 );  for ( int j = 1 ; j = y; j++)  // 畫橫線 g.drawLine( 0 , j* 20 , 200 , j* 20 );  int width = x + 2 ; // 畫出每一格目前的狀態 for ( int i = 1 ; i = y; i++)  // 由上而下 int tmp = i * width; for ( int j = 1 ; j = x; j++)  // 由左而右 int tt = tmp + j; if ((map[tt] &amp; VISIT) != 0 )  // 已經翻過來了 g.setColor(Color.blue); if ((map[tt] &amp; NEB) != 0 )  // 旁有地雷, show出地雷數 g.drawString(Integer.toString(map[tt] &amp; NEB), j * 20 - 15 , i * 20 - 5 );  else  // 沒有地雷, 填空白 g.fillRect((j - 1 ) * 20 , (i - 1 ) * 20 , 20 , 20 );   else if ((map[tt] &amp; MARK) != 0 )  // 已用右鍵做記號 g.setColor(Color.green); g.fillOval((j - 1 ) * 20 , (i - 1 ) * 20 , 20 , 20 );     public void actionPerformed (ActionEvent e)  String command = e.getActionCommand(); if (command.equals( \"Exit\" ))  System.exit( 0 );  else if (command.equals( \"New Game\" ))  reset();  else  System.out.println( \"Unknown Command\" );   public Mine2 ( int x, int y)  MenuBar mb; Menu m; this .x = x; this .y = y; int width = y + 2 ; directions = new int [ 8 ]; directions[ 0 ] = 1 ; directions[ 1 ] = - 1 ; directions[ 2 ] = width; directions[ 3 ] = -width; directions[ 4 ] = -width - 1 ; directions[ 5 ] = -width + 1 ; directions[ 6 ] = width - 1 ; directions[ 7 ] = width + 1 ; (f = new Frame( \"踩地雷\" )).add( this ).addMouseListener( this ); f.addWindowListener( new CloseWindow(f, true )); f.setMenuBar(mb= new MenuBar()); mb.add(m = new Menu( \"File\" )); m.add( new MenuItem( \"New Game\" )).addActionListener( this ); m.add( new MenuItem( \"Exit\" )).addActionListener( this ); reset(); f.pack(); f.show();  void setTouched ( int tt)  map[tt] |= VISIT; if ((map[tt] &amp; NEB) == 0 )  // no bomb around, auto flip for ( int i = 0 ; i  8 ; i++)  if ((map[tt + directions[i]] &amp; VISIT) == 0 )  // 已翻開就不用再做了 setTouched(tt + directions[i]);     public void mouseClicked (MouseEvent e)  public void mouseEntered (MouseEvent e)  public void mouseExited (MouseEvent e)  public void mouseReleased (MouseEvent e)  public void mousePressed (MouseEvent e)  int row = e.getY()/ 20 + 1 ; int col = e.getX()/ 20 + 1 ; int tt = row*(y + 2 ) + col; if (row  x || col  y || (map[tt] &amp; VISIT) != 0 )  // 超出邊界或已經翻過就不必處理 return ;  if (e.isMetaDown())  // 按右鍵, 作個標記就好了 map[tt] ^= MARK;  else if ((map[tt] &amp; BOMB) != 0 )  // 按到地雷了 showAll(); return ;  else  setTouched(tt);  checkWin(); repaint();  public static void main (String[] argv)  new Mine2( 10 , 10 );  "},"java/examples/othello.html":{"title":"","path":"/java/examples/othello.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 /** * Program Name: Othello.java * Purpose: Showing how to AWT to write Othello * Since: 2005/05/23 * Modify Date: 2005/05/24 */ import java.awt.*; import java.awt.event.*; import javax.swing.*; import java.util.*; public class Othello extends JFrame implements ActionListener  private OX oxBoard; private MenuItem black, white; private Othello ()  super ( \"Othello\" ); Menu m; MenuBar mb; add(oxBoard = new OX( this )); CloseWindow close = new CloseWindow( this , true ); setMenuBar(mb = new MenuBar()); mb.add(m = new Menu( \"遊戲\" )).add( new MenuItem( \"新遊戲\" )).addActionListener( this ); m.add(black = new MenuItem( \"電腦下黑方\" )).addActionListener( this ); m.add(white = new MenuItem( \"電腦下白方\" )).addActionListener( this ); m.add( new MenuItem( \"結束\" )).addActionListener(close); mb.add( new Menu( \"說明\" )).add( new MenuItem( \"關於本遊戲\" )).addActionListener( this ); addWindowListener(close); pack(); setResizable( false ); setVisible( true );  public static void main (String argv[])  new Othello();  // implements the ActionListener interface public void actionPerformed (ActionEvent e)  String command = e.getActionCommand(); if (command.equals( \"關於本遊戲\" ))  new ErrorDialog( this , \"程式設計黑白棋(蘋果花)範例.\\n作者:俞旭昇於暨南大學資管系\" );  else if (command.equals( \"新遊戲\" ))  oxBoard.newGame();  else if (command.equals( \"ˇ電腦下黑方\" ))  oxBoard.setBlackPlayer( 0 ); black.setLabel( \"電腦下黑方\" );  else if (command.equals( \"電腦下黑方\" ))  oxBoard.setBlackPlayer( 1 ); black.setLabel( \"ˇ電腦下黑方\" );  else if (command.equals( \"ˇ電腦下白方\" ))  oxBoard.setWhitePlayer( 0 ); white.setLabel( \"電腦下白方\" );  else if (command.equals( \"電腦下白方\" ))  oxBoard.setWhitePlayer( 1 ); white.setLabel( \"ˇ電腦下白方\" );    class OX extends Component implements MouseListener , MouseMotionListener , Runnable  private int [] board; // 盤面狀況,表達有邊框的10*10盤面 private int turn, diskdiff; // 現在哪方可下, 與敵方的子數差異 private OX parent; // 由哪一個盤面變化而來 private double val = - 1000000 ; // 估計此盤面的優勢狀況 private int hashval; // for hashtable private int [] legals; // 儲存此盤面可以下的著手 public static final int EMPTY = 0x00 ; // 空格 public static final int BLACK = 0x01 ; // 黑子 public static final int WHITE = 0x02 ; // 白子 public static final int STONE = 0x03 ; // 上面兩個 or public static final int BOUND = 0x04 ; // 邊界 public static final int ADEMP = 0x08 ; // 是否鄰接子的空點 private static final Cursor normalCursor = new Cursor(Cursor.DEFAULT_CURSOR); // 箭頭游標 private static final Cursor hintCursor = new Cursor(Cursor.HAND_CURSOR); // 手形游標 private static final Cursor thinkCursor = new Cursor(Cursor.WAIT_CURSOR); // 漏斗游標 private static Dimension mySize = new Dimension( 600 , 400 ); // 固定畫面的大小為寬600,高400 private static JFrame top; // 包含此元件的最上層Frame private static Thread thinking; // 計算中的Thread private static final byte [] directions =  1 ,- 1 , 10 ,- 10 , 9 ,- 9 , 11 ,- 11 ; // 一維陣列下的8個方向 private static final int HASHSIZE = 63999979 ; // 小於64M的最大質數 public static int whoPlayBlack, whoPlayWhite; public static final int HUMAN = 0 , COMPUTER = 1 ; private static int newboard[] =  // 遊戲開始的最初畫面public OX (JFrame p)  addMouseListener( this ); addMouseMotionListener( this ); top = p; board = new int [ 100 ]; System.arraycopy(newboard, 0 , board, 0 , 100 ); turn = BLACK; legals = new int []  34 , 43 , 56 , 65 ;  // 複製p的狀態 public OX (OX p)  board = new int [ 100 ]; System.arraycopy(p.board, 0 , board, 0 , 100 ); turn = p.turn; diskdiff = p.diskdiff; val = - 1000000 ;  public void setBlackPlayer ( int who)  if (whoPlayBlack == who) return ; if (whoPlayBlack == 0 &amp;&amp; thinking == null &amp;&amp; (hasLegal(turn) || hasLegal(turn^STONE)))  (thinking = new Thread( this )).start();  whoPlayBlack = who;  public void setWhitePlayer ( int who)  if (whoPlayWhite == who) return ; if (whoPlayWhite == 0 &amp;&amp; thinking == null &amp;&amp; (hasLegal(turn) || hasLegal(turn^STONE)))  (thinking = new Thread( this )).start();  whoPlayWhite = who;  // 檢查pos是否合法 boolean isLegal ( int pos)  return isLegal(turn, pos);  // 檢查side這個顏色,能否下在pos boolean isLegal ( int side, int pos)  int opp = side^STONE; for ( int i = 0 , scan; i  8 ; i++)  scan = pos+directions[i]; if (board[scan] == opp)  for (scan+=directions[i]; board[scan] == opp; scan+=directions[i]); if ((board[scan] &amp; side) != 0 )  // 可夾住對方 return true ;    return false ;  // 檢查side是否有合法的著手可下 boolean hasLegal ( int side)  for ( int i= 11 ; i  89 ; i++)  if ((board[i]==ADEMP) &amp;&amp; isLegal(side, i))  return true ;   return false ;  // 下在pos,並改變盤面結構. 若pos為0, 表示此著手為pass boolean addMove ( int pos)  int opp = turn^STONE; if (pos != 0 )  // 0 表示pass int legal = diskdiff; for ( int i = 0 , scan; i  8 ; i++)  scan = pos+directions[i]; if (board[scan] == opp)  // 此方向緊鄰著敵方的子 // 跳過連續的敵方子 for (scan += directions[i]; board[scan] == opp; scan+=directions[i]); if (board[scan] == turn)  // 可夾住對方 // 將所有敵方子變成我方子 for ( int c = pos+directions[i]; c!=scan ;board[c]=turn, c+=directions[i], diskdiff+= 2 );    if (diskdiff==legal)  // 如果都沒有吃到 return false ;  diskdiff++; board[pos] = turn; for ( int i = 0 ; i  8 ; i++)  // 設定此點旁的空點為ADEMP if (board[pos+directions[i]] == EMPTY)  board[pos+directions[i]] = ADEMP;    turn = opp; // 換對方下了 diskdiff = -diskdiff; hashval=(hashval* 64 +(pos- 11 ))%HASHSIZE; return true ;  // Thread的進入點 public void run ()  setCursor(thinkCursor); for (;;)  // 當敵方需pass時,我方一直下 if (turn==BLACK &amp;&amp; whoPlayBlack == HUMAN)  // 先檢查是否改由人下 break ;  if (turn==WHITE &amp;&amp; whoPlayWhite == HUMAN)  // 先檢查是否改由人下 break ;  addMove(best()); repaint(); // ask winder manager to call paint() in another thread if (turn==BLACK &amp;&amp; whoPlayBlack==HUMAN &amp;&amp; hasLegal(turn))  // 人可以下了 break ;  if (turn==WHITE &amp;&amp; whoPlayWhite==HUMAN &amp;&amp; hasLegal(turn))  // 人可以下了 break ;  if (!hasLegal(turn) &amp;&amp; !hasLegal(turn^STONE))  // 對手和自己都不能下了 new ErrorDialog(top, \"Game Over\" ); break ;  if (!hasLegal(turn))  addMove( 0 );   setCursor(normalCursor); thinking = null ;  // The following 2 methods implement the MouseMotionListener interface public void mouseDragged (MouseEvent e)  public void mouseMoved (MouseEvent e)  if (thinking != null ) return ; int row = e.getY()/ 40 ; int col = e.getX()/ 40 ; if (row = 8 || col = 8 )  setCursor(normalCursor); return ; // 超過邊界  int pos = row* 10 + col + 11 ; if (board[pos]==ADEMP &amp;&amp; isLegal(turn, pos))  setCursor(hintCursor);  else  setCursor(normalCursor);   // The following 5 methods implement the MouseListener interface public void mouseClicked (MouseEvent e)  public void mouseEntered (MouseEvent e)  public void mouseExited (MouseEvent e)  public void mouseReleased (MouseEvent e)  public void mousePressed (MouseEvent e)  int row = e.getY()/ 40 ; int col = e.getX()/ 40 ; if (row = 8 || col = 8 ) return ; // 超過邊界 if (thinking != null ) return ; // 電腦思考中 int pos = row* 10 +col+ 11 ; if (board[pos] == ADEMP &amp;&amp; addMove(pos))  // 此位置可以下 repaint(); if (hasLegal(turn))  if ((turn==WHITE &amp;&amp; whoPlayWhite==COMPUTER) || (turn==BLACK &amp;&amp; whoPlayBlack==COMPUTER))  // let computer play (thinking = new Thread( this )).start();   else  if (!hasLegal(turn^STONE))  // 雙方都不能下 new ErrorDialog(top, \"Game Over\" ); return ;  addMove( 0 ); // 對方不能下,force pass    // 棋力強弱關鍵的求值函數 private void eval ()  val = diskdiff;  private void alphaBeta ( int level)  if (legals == null )  findLegals();  for ( int i= 0 ; ilegals.length; i++)  OX tmp = new OX( this ); tmp.addMove(legals[i]); if (level 1 )  tmp.eval();  else  tmp.alphaBeta(level- 1 );  // alphaBeta cut if (val  -tmp.val)  val = -tmp.val; for (OX p = parent; p != null ;)  if (val = -p.val)  // 對手不會選擇這條路的 return ;  // 往上跳兩層 p = p.parent; if (p != null ) p = p.parent;     private void findLegals ()  int count = 0 ; int [] tmp = new int [ 60 ]; for ( int i= 11 ; i 89 ; i++)  if (board[i]==ADEMP &amp;&amp; isLegal(turn, i))  tmp[count++] = i;   legals = new int [count]; System.arraycopy(tmp, 0 , legals, 0 , count);  private int best ()  int bestMove = 0 ; findLegals(); val = - 100000000 ; for ( int i= 0 ; ilegals.length; i++)  OX tmp = new OX( this ); tmp.addMove(legals[i]); tmp.alphaBeta( 3 ); if (-tmp.val  val)  bestMove = legals[i]; val = -tmp.val;   return bestMove;  // override paint() defined in Component public void paint (Graphics g)  int black, white; black = white = 0 ; for ( int i = 0 ; i = 8 ; i++)  // draw grids g.drawLine( 0 , i* 40 , 320 , i* 40 ); g.drawLine(i* 40 , 0 , i* 40 , 320 );  for ( int i = 0 ; i  8 ; i++)  for ( int j = 0 ; j  8 ; j++)  int pos = i* 10 + j + 11 ; if ((board[pos] &amp; BLACK) != 0 )  g.fillOval(j* 40 ,i* 40 , 40 , 40 ); black++;  else if ((board[pos] &amp; WHITE) != 0 )  g.drawOval(j* 40 ,i* 40 , 40 , 40 ); white++;    g.drawString( \"BLACK:\" +black, 400 , 100 ); g.drawString( \"WHITE:\" +white, 400 , 150 );  public void newGame ()  System.arraycopy(newboard, 0 , board, 0 , 100 ); turn = BLACK; hashval = diskdiff = 0 ; if (thinking != null )  try  thinking.join();  catch (Exception epp)   if (whoPlayBlack == COMPUTER)  (thinking = new Thread( this )).start();  repaint();  // override getPreferredSize defined in java.lang.Component, // so that the Component has proper size on screen public Dimension getPreferredSize ()  return mySize;  // override hashCode() in java.lang.Object public int hashCode ()  return hashval;  public boolean equals (Object o)  if (!(o instanceof OX)) return false ; OX t = (OX) o; for ( int i= 11 ; i 89 ; i++)  if (board[i] != t.board[i]) return false ;  return true ;   // WindowAdapter implements the WindowLister interface // We extends WindowAdapter to reduce the line numer of code class CloseWindow extends WindowAdapter implements ActionListener  private Window target; private boolean exit; public CloseWindow (Window target, boolean exit)  this .target = target; this .exit = exit;  public CloseWindow (Window target)  this .target = target;  public void windowClosing (WindowEvent e)  target.dispose(); if (exit) System.exit( 0 );  public void actionPerformed (ActionEvent e)  target.dispose(); if (exit) System.exit( 0 );   class AddConstraint  public static void addConstraint (Container container, Component component, int grid_x, int grid_y, int grid_width, int grid_height, int fill, int anchor, double weight_x, double weight_y, int top, int left, int bottom, int right)  GridBagConstraints c = new GridBagConstraints(); c.gridx = grid_x; c.gridy = grid_y; c.gridwidth = grid_width; c.gridheight = grid_height; c.fill = fill; c.anchor = anchor; c.weightx = weight_x; c.weighty = weight_y; c.insets = new Insets(top,left,bottom,right); ((GridBagLayout)container.getLayout()).setConstraints(component,c); container.add(component);   class ErrorDialog extends JDialog  public ErrorDialog (JFrame parent, String all[])  this (parent, all, null );  public ErrorDialog (JFrame parent, String all[], String msg)  super (parent, \"\" , true ); StringBuffer sb = new StringBuffer(); for ( int i= 0 ; iall.length; i++)  sb.append(all[i]); sb.append( '\\n' );  if (msg!= null )  sb.append(msg);  setup(parent, sb.toString());  public ErrorDialog (JFrame parent, String message)  super (parent, \"\" , true ); setup(parent, message);  private void setup (JFrame parent, String message)  this .getContentPane().setLayout( new GridBagLayout()); int row= 0 , col= 0 , i, width= 0 ; Font font = new Font( \"Serif\" , Font.PLAIN, 16 ); char c= ' ' ; for (i= 0 ; imessage.length(); i++)  c = message.charAt(i); if (c== '\\n' )  row++; if (widthcol)  col = width;  width= 0 ;  else if (c== '\\t' )  width += 7 -width% 7 ;  else  if (c 0x00FF )  width+= 2 ;  else  width++;    if (c!= '\\n' )  row++; if (widthcol)  col = width;   col++; // 希望視窗出來不要太大或太小 row = (row 24 ) ? 24 : row; if (row 5 )  row= 5 ;  if (col 20 )  col = 20 ;  TextArea tx = new TextArea(message,row,col); tx.setEditable( false ); tx.setFont(font); AddConstraint.addConstraint( this .getContentPane(), tx, 0 , 0 , 1 , 1 , GridBagConstraints.BOTH, GridBagConstraints.NORTHWEST, 1 , 1 , 0 , 0 , 0 , 0 ); Button b = new Button( \"確定\" ); b.setFont(font); AddConstraint.addConstraint( this .getContentPane(), b, 0 , 1 , 1 , 1 , GridBagConstraints.HORIZONTAL, GridBagConstraints.CENTER, 1 , 0 , 0 , 0 , 0 , 0 ); CloseWindow cw = new CloseWindow( this ); this .addWindowListener(cw); b.addActionListener(cw); pack(); setVisible( true );  "},"java/examples/queue.html":{"title":"","path":"/java/examples/queue.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 public class Queue  private Object[] data; private int size; private int head; private int tail; public Queue ( int maxLen)  data = new Object[maxLen];  public synchronized Object deQueue ()  while (size== 0 )  // Let current Thread wait this object(to sleeping mode) try  wait();  catch (Exception ex) ;  Object tmp = data[head]; data[head] = null ; head = (head+ 1 )%data.length; if (size==data.length)  // wake up all Threads waiting this object notifyAll();  size--; return tmp;  public synchronized void enQueue (Object c)  while (size==data.length)  // Let current thread wait this object(to sleeping mode) try  wait();  catch (Exception ex) ;  data[tail++] = c; tail %= data.length; size++; if (size== 1 )  // wake up all Threads waiting this object notifyAll();   "},"java/examples/read-write-queue.html":{"title":"","path":"/java/examples/read-write-queue.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 public class ReaderWriter extends Thread  public static final int READER = 1 ; public static final int WRITER = 2 ; private Queue q; private int mode; private String id; public void run ()  for ( int i= 0 ; i  1000 ; i++)  if (mode==READER)  q.deQueue();  else if (mode==WRITER)  q.enQueue( new Integer(i));    public ReaderWriter (String id, Queue q, int mode)  this .id = id; this .q = q; this .mode = mode;  public static void main (String[] args)  Queue q = new Queue( 5 ); ReaderWriter r1, r2, w1, w2; (w1 = new ReaderWriter( \"W1\" , q, WRITER)).start(); (w2 = new ReaderWriter( \"W2\" , q, WRITER)).start(); (r1 = new ReaderWriter( \"R1\" , q, READER)).start(); (r2 = new ReaderWriter( \"R2\" , q, READER)).start(); try  w1.join(); // wait until w1 complete w2.join(); // wait until w2 complete r1.join(); // wait until r1 complete r2.join(); // wait until r2 complete  catch (InterruptedException epp)    "},"java/examples/reverse-matrix.html":{"title":"","path":"/java/examples/reverse-matrix.html","body":"gnu.gleem.linalg Class NonSquareMatrixException java.lang.Object &emsp;| &emsp;+– java.lang.Throwable &emsp;&emsp;&emsp;| &emsp;&emsp;&emsp;+– java.lang.Exception &emsp;&emsp;&emsp;&emsp;&emsp;| &emsp;&emsp;&emsp;&emsp;&emsp;+– java.lang.RuntimeException &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;| &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;+– gnu.gleem.linalg.NonSquareMatrixException All Implemented Interfaces: java.io.Serializable Download package gnu.gleem.linalg.* 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 /** * FileName: Matrix.java * Author: Shiuh-Sheng Yu * Date: 4/13/1998 * Last Update: 4/13/2003 */ public class Matrix  private double [][] data; public Matrix ( double [][] array)  data = array;  /** * 高斯消去法求反矩陣 */ public Matrix inverse () throws NonSquareMatrixException  int n = data.length; if (n != data[ 0 ].length)  throw new NonSquareMatrixException();  double factor, tmp; // 建立兩陣列,左邊同原資料,右邊為單位矩陣 double [][] rel = new double [n][n]; double [][] left = new double [n][n]; for ( int row= 0 ; rown; row++)  for ( int col= 0 ; coln; col++)  left[row][col] = data[row][col]; if (row==col)  rel[row][col]= 1 ;  else  rel[row][col]= 0 ;    /* 消去左下角 */ for ( int col= 0 ; coln; col++)  // 由左而右 int nonzero; for (nonzero=col; nonzeron &amp;&amp; left[nonzero][col]== 0 ; nonzero++) ; // 找非0之元素 if (nonzero==n)  // 反矩陣不存在 return null ;  if (nonzero != col)  // 需要列交換,記得要乘-1 for ( int each= 0 ; eachn; each++)  tmp = left[col][each]; left[col][each] = left[nonzero][each]; left[nonzero][each] = -tmp; tmp = rel[col][each]; rel[col][each] = rel[nonzero][each]; rel[nonzero][each] = -tmp;   for ( int row=col+ 1 ;rown;row++)  // 由上而下 if (left[row][col] != 0 )  // 需要做列運算 factor = left[row][col]/left[col][col]; for ( int each= 0 ; eachn; each++)  // 由左而右做列運算 left[row][each] -= left[col][each]*factor; rel[row][each] -= rel[col][each]*factor;     /* 消去右上角, 此時對角線上不可能是0 */ for ( int col=n- 1 ; col 0 ; col--)  // 由右而左 for ( int row=col- 1 ; row= 0 ; row--)  // 由下而上 if (left[row][col] != 0 )  factor = left[row][col]/left[col][col]; for ( int each= 0 ; eachn; each++)  // 由左而右做列運算 // 左邊陣列的右上角不必管了 rel[row][each] -= rel[col][each]*factor;     /* 將只剩對角線的左邊矩陣變成單位矩陣 */ for ( int row= 0 ; rown; row++)  for ( int col= 0 ; coln; col++)  rel[row][col] /= left[row][row];   return new Matrix(rel);  /** * 高斯消去法求值 */ public double value () throws NonSquareMatrixException  int n = data.length; if (n != data[ 0 ].length)  throw new NonSquareMatrixException();  double tmp, factor, result = 1.0 ; // 複製原矩陣 double [][] right = new double [n][n]; for ( int row= 0 ; rown; row++)  for ( int col= 0 ; coln; col++)  right[row][col] = data[row][col];   for ( int col= 0 ; coln- 1 ; col++)  // 由左而右 int nonzero; for (nonzero=col; nonzeron &amp;&amp; right[nonzero][col]== 0 ; nonzero++) ; // 找非0之元素 if (nonzero==n)  // 矩陣值為0 return 0 ;  if (nonzero != col)  // 列交換 result *= - 1.0 ; for ( int each= 0 ; eachn; each++)  tmp = right[col][each]; right[col][each] = right[nonzero][each]; right[nonzero][each] = tmp;   for ( int row=col+ 1 ; rown; row++)  // 由上而下 if (right[row][col] != 0 )  // 需要列運算 factor = right[row][col]/right[col][col]; right[row][col]= 0 ; // col左邊的怎麼算都是0,不用管他 for ( int each=col+ 1 ; eachn; each++)  right[row][each] -= right[col][each]*factor;     // 對角線上的連乘績即為行列式值 result *= right[ 0 ][ 0 ]; for ( int i= 1 ; in; i++)  result*=right[i][i];  return result;  "},"java/examples/river-cross.html":{"title":"","path":"/java/examples/river-cross.html","body":"過河問題是數學上頗具趣味的題目，有夫妻過河、商人過河、農夫過河、人狗雞米過河問題。 夫妻過河問題是古老的阿拉伯智力題，敘述有三對夫妻要過河，小船只能載兩人，妻子不能在丈夫不在場時和別的異性渡河。 這類的數學模型稱為狀態轉移模型。把 M 個丈夫、F 個妻子視為一種狀態，以 (M,F) 表示。其中 M、F 都是不大於三的正整數。 並非所有狀態都是被允許的，例如 (1,2) 就不被允許，因為妻子 2 在丈夫 2 不在場時與異性 1 相處。把允許的狀態整理如下： S = { (0,0), (0,1), (0,2), (0,3), (1,1), (2,2), (3,3), (3,2), (3,1), (3,0), (2,1) } 有了允許狀態集合後，還要知道轉換的過程，如何從都在此岸的 (3,3) 轉換成都在彼岸的 (0,0)。 每一次小船載人渡河都視為一次運算，第 n 次運算 d n 由第 n + 1 個狀態 S n + 1 減去第 n 個狀態 S n 決定。 d n = S n + 1 - S n 小船由此岸駛向彼岸時，此岸人數變少，當船駛回此岸，人數又變多，又因為小船不能載超過兩人，故 d n 必然滿足下式： 其中 p 和 q 分別表示小船離岸時船上的丈夫、妻子人數，當 S n + 1 和 S n 都是允許狀態時，S n + 1 = S n + d n 稱為狀態轉移方程。接下來是求解： (3,3) + d 1 + d 2 + … + d m = (0,0) 以下是夫妻過河問題的一條路徑： 當討論的變量不很多時，也常用作圖的方法解決狀態轉移問題，在 M - F 平面上標出允許狀態 S 的點，將允許狀態運算看成沿方格移動一格或兩格。 以實線標記小船由此岸到彼岸、虛線是由彼岸至此岸，下圖是夫妻過河的圖解法： 以下是用 java 寫的野蠻人渡河問題，仔細審題後，會發現題目的限制是相同的。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 import java.util.*; public class MB  private byte boatAt; // 0表示在河左岸,1表示在河右岸 private byte mat[], bat[]; // 兩岸的傳教士和野人數量,最多127人 private short people; // 傳教士+野人總人數 public MB ( int Msize, int Bsize)  if (Msize 127 || Bsize 127 )  System.out.println( \"Current implementation support size = 127\" ); System.exit( 0 );  mat = new byte [ 2 ]; bat = new byte [ 2 ]; mat[ 0 ] = ( byte )Msize; bat[ 0 ] = ( byte )Bsize; this .people = ( byte )(Msize+Bsize); // 一開始所有的人都在左岸  public int getKey ()  return (boatAt 14 )+(mat[ 0 ] 7 )+bat[ 0 ]; // 左岸傳教士和野人數目,以及船在哪一邊三個參數可以唯一決定盤面  public boolean isSolution ()  return (mat[ 1 ]+bat[ 1 ])==people; // 所有人都到右岸就是解了  public boolean isValid ()  // 人數必須=0,且任何一邊傳教士人數不得少於野人 return (mat[ 0 ]= 0 &amp;&amp; mat[ 1 ]= 0 &amp;&amp; bat[ 0 ]= 0 &amp;&amp; bat[ 1 ]= 0 &amp;&amp; (mat[ 0 ]== 0 || mat[ 0 ]=bat[ 0 ]) &amp;&amp; (mat[ 1 ]== 0 || mat[ 1 ]=bat[ 1 ]));  public String getSide ()  // 傳回此狀態船可以走的方向 return (boatAt== 0 ) ? \"往左邊\" : \"往右邊\" ;  public void move ( int m, int b)  // 移動m個傳教士,b個野人 byte otherSide = (boatAt== 1 ) ? ( byte ) 0 : ( byte ) 1 ; mat[boatAt] -= m; mat[otherSide] += m; bat[boatAt] -= b; bat[otherSide] += b; boatAt = otherSide;  private static final byte [][] branches =  1 , 0 , 0 , 1 , 2 , 0 , 0 , 2 , 1 , 1 ; private static final String[] display =  \"一個傳教士\" , \"一個野蠻人\" , \"兩個傳教士\" , \"兩個野蠻人\" , \"一個傳教士和一個野蠻人\" ; private static int numSol; private static boolean [] visited; private static Vector history; // steps runs to this situation private void expand ()  if (isSolution())  // 如果目前的盤面是一組解 numSol++; return ;  for ( int i= 0 ; i  branches.length; i++)  // 展開五種可能性 move(branches[i][ 0 ], branches[i][ 1 ]); // 更改盤面成新的狀態 // 如果此盤面符合規則,而且沒有走過 if (isValid() &amp;&amp; visited[getKey()]== false )  visited[getKey()] = true ; // 紀錄來過此盤面 history.add(display[i]+getSide()); // 紀錄此步驟 expand(); // recursive call to expand all possibles history.remove(history.size()- 1 ); // 移除此步驟 visited[getKey()] = false ; // 移除來過此盤面  move(branches[i][ 0 ], branches[i][ 1 ]); // 改為原來的狀態   public static void findSolutions ( int Msize, int Bsize)  // 設定需要的資料結構 numSol = 0 ; visited = new boolean [ 32786 ]; // 走過的盤面 MB init = new MB(Msize, Bsize); // 初始盤面 visited[init.getKey()] = true ; // 目前的盤面已經來過了 history = new Vector(); init.expand(); System.out.println(numSol+ \" solutions found\" );  public static void main (String[] argv) throws Exception  int Msize = 3 ; int Bsize = 3 ; System.out.println( \"Usage java MB Msize Bsize.\\nThe default size is 3\" ); if (argv.length  0 )  Msize = Integer.parseInt(argv[ 0 ]);  if (argv.length  1 )  Bsize = Integer.parseInt(argv[ 1 ]);  findSolutions(Msize, Bsize);  "},"java/examples/stack.html":{"title":"","path":"/java/examples/stack.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public class Stack  private Object[] data; private int top; public Stack ( int maxSize)  data = new Object[maxSize];  public void push (Object o)  data[top++] = o;  public Object pop ()  return data[--top];  public Object peek ()  return data[top- 1 ];  "},"java/examples/sudoku.html":{"title":"","path":"/java/examples/sudoku.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 /** * Program Name: Unique.java, for 數獨 * Author: Shiuh-Sheng Yu at * Department of Infromation Management * National ChiNan University * Since: 2005/09/12 */ import java.util.Vector; public class Unique  // 以下是各位置的坐標 // 0 1 2 3 4 5 6 7 8 // 9 10 11 12 13 14 15 16 17 // 18 19 20 21 22 23 24 25 26 // 27 28 29 30 31 32 33 34 35 // 36 37 38 39 40 41 42 43 44 // 45 46 47 48 49 50 51 52 53 // 54 55 56 57 58 59 60 61 62 // 63 64 65 66 67 68 69 70 71 // 72 73 74 75 76 77 78 79 80 public static int near[][] =  // 依遊戲規則, 每個位置都有20個不得重複的位置  1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 18 , 27 , 36 , 45 , 54 , 63 , 72 , 10 , 11 , 19 , 20 , // 0  0 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 10 , 19 , 28 , 37 , 46 , 55 , 64 , 73 , 9 , 11 , 18 , 20 , // 1  0 , 1 , 3 , 4 , 5 , 6 , 7 , 8 , 11 , 20 , 29 , 38 , 47 , 56 , 65 , 74 , 9 , 10 , 18 , 19 , // 2  0 , 1 , 2 , 4 , 5 , 6 , 7 , 8 , 12 , 21 , 30 , 39 , 48 , 57 , 66 , 75 , 13 , 14 , 22 , 23 , // 3  0 , 1 , 2 , 3 , 5 , 6 , 7 , 8 , 13 , 22 , 31 , 40 , 49 , 58 , 67 , 76 , 12 , 14 , 21 , 23 , // 4  0 , 1 , 2 , 3 , 4 , 6 , 7 , 8 , 14 , 23 , 32 , 41 , 50 , 59 , 68 , 77 , 12 , 13 , 21 , 22 , // 5  0 , 1 , 2 , 3 , 4 , 5 , 7 , 8 , 15 , 24 , 33 , 42 , 51 , 60 , 69 , 78 , 16 , 17 , 25 , 26 , // 6  0 , 1 , 2 , 3 , 4 , 5 , 6 , 8 , 16 , 25 , 34 , 43 , 52 , 61 , 70 , 79 , 15 , 17 , 24 , 26 , // 7  0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 17 , 26 , 35 , 44 , 53 , 62 , 71 , 80 , 15 , 16 , 24 , 25 , // 8  10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 0 , 18 , 27 , 36 , 45 , 54 , 63 , 72 , 1 , 2 , 19 , 20 , // 9  9 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 1 , 19 , 28 , 37 , 46 , 55 , 64 , 73 , 0 , 2 , 18 , 20 , // 10  9 , 10 , 12 , 13 , 14 , 15 , 16 , 17 , 2 , 20 , 29 , 38 , 47 , 56 , 65 , 74 , 0 , 1 , 18 , 19 , // 11  9 , 10 , 11 , 13 , 14 , 15 , 16 , 17 , 3 , 21 , 30 , 39 , 48 , 57 , 66 , 75 , 4 , 5 , 22 , 23 , // 12  9 , 10 , 11 , 12 , 14 , 15 , 16 , 17 , 4 , 22 , 31 , 40 , 49 , 58 , 67 , 76 , 3 , 5 , 21 , 23 , // 13  9 , 10 , 11 , 12 , 13 , 15 , 16 , 17 , 5 , 23 , 32 , 41 , 50 , 59 , 68 , 77 , 3 , 4 , 21 , 22 , // 14  9 , 10 , 11 , 12 , 13 , 14 , 16 , 17 , 6 , 24 , 33 , 42 , 51 , 60 , 69 , 78 , 7 , 8 , 25 , 26 , // 15  9 , 10 , 11 , 12 , 13 , 14 , 15 , 17 , 7 , 25 , 34 , 43 , 52 , 61 , 70 , 79 , 6 , 8 , 24 , 26 , // 16  9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 8 , 26 , 35 , 44 , 53 , 62 , 71 , 80 , 6 , 7 , 24 , 25 , // 17  19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 0 , 9 , 27 , 36 , 45 , 54 , 63 , 72 , 1 , 2 , 10 , 11 , // 18  18 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 1 , 10 , 28 , 37 , 46 , 55 , 64 , 73 , 0 , 2 , 9 , 11 , // 19  18 , 19 , 21 , 22 , 23 , 24 , 25 , 26 , 2 , 11 , 29 , 38 , 47 , 56 , 65 , 74 , 0 , 1 , 9 , 10 , // 20  18 , 19 , 20 , 22 , 23 , 24 , 25 , 26 , 3 , 12 , 30 , 39 , 48 , 57 , 66 , 75 , 4 , 5 , 13 , 14 , // 21  18 , 19 , 20 , 21 , 23 , 24 , 25 , 26 , 4 , 13 , 31 , 40 , 49 , 58 , 67 , 76 , 3 , 5 , 12 , 14 , // 22  18 , 19 , 20 , 21 , 23 , 24 , 25 , 26 , 5 , 14 , 32 , 41 , 50 , 59 , 68 , 77 , 3 , 4 , 12 , 13 , // 23  18 , 19 , 20 , 21 , 22 , 23 , 25 , 26 , 6 , 15 , 33 , 42 , 51 , 60 , 69 , 78 , 7 , 8 , 16 , 17 , // 24  18 , 19 , 20 , 21 , 22 , 23 , 24 , 26 , 7 , 16 , 34 , 43 , 52 , 61 , 70 , 79 , 6 , 8 , 15 , 17 , // 25  18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 8 , 17 , 35 , 44 , 53 , 62 , 71 , 80 , 6 , 7 , 15 , 16 , // 26  28 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 0 , 9 , 18 , 36 , 45 , 54 , 63 , 72 , 37 , 38 , 46 , 47 , // 27  27 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 1 , 10 , 19 , 37 , 46 , 55 , 64 , 73 , 36 , 38 , 45 , 47 , // 28  27 , 28 , 30 , 31 , 32 , 33 , 34 , 35 , 2 , 11 , 20 , 38 , 47 , 56 , 65 , 74 , 36 , 37 , 45 , 46 , // 29  27 , 28 , 29 , 31 , 32 , 33 , 34 , 35 , 3 , 12 , 21 , 39 , 48 , 57 , 66 , 75 , 40 , 41 , 49 , 50 , // 30  27 , 28 , 29 , 30 , 32 , 33 , 34 , 35 , 4 , 13 , 22 , 40 , 49 , 58 , 67 , 76 , 39 , 41 , 48 , 50 , // 31  27 , 28 , 29 , 30 , 31 , 33 , 34 , 35 , 5 , 14 , 23 , 41 , 50 , 59 , 68 , 77 , 39 , 40 , 48 , 49 , // 32  27 , 28 , 29 , 30 , 31 , 32 , 34 , 35 , 6 , 15 , 24 , 42 , 51 , 60 , 69 , 78 , 43 , 44 , 52 , 53 , // 33  27 , 28 , 29 , 30 , 31 , 32 , 33 , 35 , 7 , 16 , 25 , 43 , 52 , 61 , 70 , 79 , 42 , 44 , 51 , 53 , // 34  27 , 28 , 29 , 30 , 31 , 32 , 33 , 34 , 8 , 17 , 26 , 44 , 53 , 62 , 71 , 80 , 42 , 43 , 51 , 52 , // 35  37 , 38 , 39 , 40 , 41 , 42 , 43 , 44 , 0 , 9 , 18 , 27 , 45 , 54 , 63 , 72 , 28 , 29 , 46 , 47 , // 36  36 , 38 , 39 , 40 , 41 , 42 , 43 , 44 , 1 , 10 , 19 , 28 , 46 , 55 , 64 , 73 , 27 , 27 , 45 , 47 , // 37  36 , 37 , 39 , 40 , 41 , 42 , 43 , 44 , 2 , 11 , 20 , 29 , 47 , 56 , 65 , 74 , 27 , 28 , 45 , 46 , // 38  36 , 37 , 38 , 40 , 41 , 42 , 43 , 44 , 3 , 12 , 21 , 30 , 48 , 57 , 66 , 75 , 31 , 32 , 49 , 50 , // 39  36 , 37 , 38 , 39 , 41 , 42 , 43 , 44 , 4 , 13 , 22 , 31 , 49 , 58 , 67 , 76 , 30 , 32 , 48 , 50 , // 40  36 , 37 , 38 , 39 , 40 , 42 , 43 , 44 , 5 , 14 , 23 , 32 , 50 , 59 , 68 , 77 , 30 , 31 , 48 , 49 , // 41  36 , 37 , 38 , 39 , 40 , 41 , 43 , 44 , 6 , 15 , 24 , 33 , 51 , 60 , 69 , 78 , 34 , 35 , 52 , 53 , // 42  36 , 37 , 38 , 39 , 40 , 41 , 42 , 44 , 7 , 16 , 25 , 34 , 52 , 61 , 70 , 79 , 33 , 35 , 51 , 53 , // 43  36 , 37 , 38 , 39 , 40 , 41 , 42 , 43 , 8 , 17 , 26 , 35 , 53 , 62 , 71 , 80 , 33 , 34 , 51 , 52 , // 44  46 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 0 , 9 , 18 , 27 , 36 , 54 , 63 , 72 , 28 , 29 , 37 , 38 , // 45  45 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 1 , 10 , 19 , 28 , 37 , 55 , 64 , 73 , 27 , 29 , 36 , 38 , // 46  45 , 46 , 48 , 49 , 50 , 51 , 52 , 53 , 2 , 11 , 20 , 29 , 38 , 56 , 65 , 74 , 27 , 28 , 36 , 37 , // 47  45 , 46 , 47 , 49 , 50 , 51 , 52 , 53 , 3 , 12 , 21 , 30 , 39 , 57 , 66 , 75 , 31 , 32 , 40 , 41 , // 48  45 , 46 , 47 , 48 , 50 , 51 , 52 , 53 , 4 , 13 , 22 , 31 , 40 , 58 , 67 , 76 , 30 , 32 , 39 , 41 , // 49  45 , 46 , 47 , 48 , 49 , 51 , 52 , 53 , 5 , 14 , 23 , 32 , 41 , 59 , 68 , 77 , 30 , 31 , 39 , 40 , // 50  45 , 46 , 47 , 48 , 49 , 50 , 52 , 53 , 6 , 15 , 24 , 33 , 42 , 60 , 69 , 78 , 34 , 35 , 43 , 44 , // 51  45 , 46 , 47 , 48 , 49 , 50 , 51 , 53 , 7 , 16 , 25 , 34 , 43 , 61 , 70 , 79 , 33 , 35 , 42 , 44 , // 52  45 , 46 , 47 , 48 , 49 , 50 , 51 , 52 , 8 , 17 , 26 , 35 , 44 , 62 , 71 , 80 , 33 , 34 , 42 , 43 , // 53  55 , 56 , 57 , 58 , 59 , 60 , 61 , 62 , 0 , 9 , 18 , 27 , 36 , 45 , 63 , 72 , 64 , 65 , 73 , 74 , // 54  54 , 56 , 57 , 58 , 59 , 60 , 61 , 62 , 1 , 10 , 19 , 28 , 37 , 46 , 64 , 73 , 63 , 65 , 72 , 74 , // 55  54 , 55 , 57 , 58 , 59 , 60 , 61 , 62 , 2 , 11 , 20 , 29 , 38 , 47 , 65 , 74 , 63 , 64 , 72 , 73 , // 56  54 , 55 , 56 , 58 , 59 , 60 , 61 , 62 , 3 , 12 , 21 , 30 , 39 , 48 , 66 , 75 , 67 , 68 , 76 , 77 , // 57  54 , 55 , 56 , 57 , 59 , 60 , 61 , 62 , 4 , 13 , 22 , 31 , 40 , 49 , 67 , 76 , 66 , 68 , 75 , 77 , // 58  54 , 55 , 56 , 57 , 58 , 60 , 61 , 62 , 5 , 14 , 23 , 32 , 41 , 50 , 68 , 77 , 66 , 67 , 75 , 76 , // 59  54 , 55 , 56 , 57 , 58 , 59 , 61 , 62 , 6 , 15 , 24 , 33 , 42 , 51 , 69 , 78 , 70 , 71 , 79 , 80 , // 60  54 , 55 , 56 , 57 , 58 , 59 , 60 , 62 , 7 , 16 , 25 , 34 , 43 , 52 , 70 , 79 , 69 , 71 , 78 , 80 , // 61  54 , 55 , 56 , 57 , 58 , 59 , 60 , 61 , 8 , 17 , 26 , 35 , 44 , 53 , 71 , 80 , 69 , 70 , 78 , 79 , // 62  64 , 65 , 66 , 67 , 68 , 69 , 70 , 71 , 0 , 9 , 18 , 27 , 36 , 45 , 54 , 72 , 55 , 56 , 73 , 74 , // 63  63 , 65 , 66 , 67 , 68 , 69 , 70 , 71 , 1 , 10 , 19 , 28 , 37 , 46 , 55 , 73 , 54 , 56 , 72 , 74 , // 64  63 , 64 , 66 , 67 , 68 , 69 , 70 , 71 , 2 , 11 , 20 , 29 , 38 , 47 , 56 , 74 , 54 , 55 , 72 , 73 , // 65  63 , 64 , 65 , 67 , 68 , 69 , 70 , 71 , 3 , 12 , 21 , 30 , 39 , 48 , 57 , 75 , 58 , 59 , 76 , 77 , // 66  63 , 64 , 65 , 66 , 68 , 69 , 70 , 71 , 4 , 13 , 22 , 31 , 40 , 49 , 58 , 76 , 57 , 59 , 75 , 77 , // 67  63 , 64 , 65 , 66 , 67 , 69 , 70 , 71 , 5 , 14 , 23 , 32 , 41 , 50 , 59 , 77 , 57 , 58 , 75 , 76 , // 68  63 , 64 , 65 , 66 , 67 , 68 , 70 , 71 , 6 , 15 , 24 , 33 , 42 , 51 , 60 , 78 , 61 , 62 , 79 , 80 , // 69  63 , 64 , 65 , 66 , 67 , 68 , 69 , 71 , 7 , 16 , 25 , 34 , 43 , 52 , 61 , 79 , 60 , 62 , 78 , 80 , // 70  63 , 64 , 65 , 66 , 67 , 68 , 69 , 70 , 8 , 17 , 26 , 35 , 44 , 53 , 62 , 80 , 60 , 61 , 78 , 79 , // 71  73 , 74 , 75 , 76 , 77 , 78 , 79 , 80 , 0 , 9 , 18 , 27 , 36 , 45 , 54 , 63 , 55 , 56 , 64 , 65 , // 72  72 , 74 , 75 , 76 , 77 , 78 , 79 , 80 , 1 , 10 , 19 , 28 , 37 , 46 , 55 , 64 , 54 , 56 , 63 , 65 , // 73  72 , 73 , 75 , 76 , 77 , 78 , 79 , 80 , 2 , 11 , 20 , 29 , 38 , 47 , 56 , 65 , 54 , 55 , 63 , 64 , // 74  72 , 73 , 74 , 76 , 77 , 78 , 79 , 80 , 3 , 12 , 21 , 30 , 39 , 48 , 57 , 66 , 58 , 59 , 67 , 68 , // 75  72 , 73 , 74 , 75 , 77 , 78 , 79 , 80 , 4 , 13 , 22 , 31 , 40 , 49 , 58 , 67 , 57 , 59 , 66 , 68 , // 76  72 , 73 , 74 , 75 , 76 , 78 , 79 , 80 , 5 , 14 , 23 , 32 , 41 , 50 , 59 , 68 , 57 , 58 , 66 , 67 , // 77  72 , 73 , 74 , 75 , 76 , 77 , 79 , 80 , 6 , 15 , 24 , 33 , 42 , 51 , 60 , 69 , 61 , 62 , 70 , 71 , // 78  72 , 73 , 74 , 75 , 76 , 77 , 78 , 80 , 7 , 16 , 25 , 34 , 43 , 52 , 61 , 70 , 60 , 62 , 69 , 71 , // 79  72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 8 , 17 , 26 , 35 , 44 , 53 , 62 , 71 , 60 , 61 , 69 , 70  // 80 ; int [] board; // 棋盤 int [] count; // 每個格子被消去的數目 boolean [][] elim; // 紀錄每個格子被消掉的數字 int found; // 有幾個格子已經決定好了 public Unique ( int [] data)  int i, j; board = new int [ 81 ]; count = new int [ 81 ]; elim = new boolean [ 81 ][ 9 ]; for (i = 0 ; i  81 ; i++)  // 先掃瞄題目 if (data[i] != 0 )  // 這位置的數字已知 board[i] = data[i]; found++; for (j = 0 ; j  20 ; j++)  // 掃描不能重複的其它20格 if (elim[near[i][j]][data[i]- 1 ] == false )  // 如果這位置還沒被消去 count[near[i][j]]++;  elim[near[i][j]][data[i]- 1 ] = true ;     public Unique print ()  for ( int i = 0 ; i  81 ; i++)  System.out.print(( char )(board[i]+ '0' )); if ((i + 1 ) % 9 == 0 )  System.out.println();   System.out.println(); return this ;  public Vector sol ()  int i, j, max, maxAt; Vector rel = new Vector(); for (i = 0 ; i  81 ; i++)  // 掃瞄每個格子 if (board[i] == 0 &amp;&amp; count[i] == 8 )  // 如果還沒確定,但只剩一種可能了, 則直接選取 for (j = 0 ; j  9 ; j++)  // 檢查該填那個數字 if (!elim[i][j])  board[i] = j + 1 ; // 填上去 found++; // 多找到一個 for ( int k = 0 ; k  20 ; k++)  // 標示其它20格不能再選此數字 if (elim[near[i][k]][j] == false )  count[near[i][k]]++;  elim[near[i][k]][j] = true ;  break ;   i = - 1 ; // 重頭在掃一次   if (found == 81 )  rel.addElement( this );  else  max = maxAt = - 1 ; // 只展開最少可能的格子 for (i = 0 ; i  81 ; i++)  if (board[i] == 0 &amp;&amp; count[i]  max)  max = count[i]; maxAt = i;   // 依次展開各種可能性 for (i = 0 ; i  9 ; i++)  // 逐一檢查 if (!elim[maxAt][i])  board[maxAt] = i + 1 ; Vector tmp = ( new Unique(board)).sol(); // 複製一份,並找其解 for (j = 0 ; j  tmp.size(); j++)  // 將找到的解記下來 rel.addElement(tmp.elementAt(j));  board[maxAt] = 0 ; // 還元, 以展開下一個可能性    return rel;  public static void printResult (Vector tmp)  for ( int i = 0 ; i  tmp.size(); i++)  System.out.println( \"Solution \" +(i+ 1 )+ \":\" ); ((Unique)tmp.elementAt(i)).print();   public static void main (String[] argv)  int [] data0 =  5 , 3 , 0 , 0 , 7 , 0 , 0 , 0 , 0 , 6 , 0 , 0 , 1 , 9 , 5 , 0 , 0 , 0 , 0 , 9 , 8 , 0 , 0 , 0 , 0 , 6 , 0 , 8 , 0 , 0 , 0 , 6 , 0 , 0 , 0 , 3 , 4 , 0 , 0 , 8 , 0 , 3 , 0 , 0 , 1 , 7 , 0 , 0 , 0 , 2 , 0 , 0 , 0 , 6 , 0 , 6 , 0 , 0 , 0 , 0 , 2 , 8 , 0 , 0 , 0 , 0 , 4 , 1 , 9 , 0 , 0 , 5 , 0 , 0 , 0 , 0 , 8 , 0 , 0 , 7 , 9 ; int [] data1 =  0 , 5 , 0 , 0 , 0 , 1 , 4 , 0 , 0 , 2 , 0 , 3 , 0 , 0 , 0 , 7 , 0 , 0 , 0 , 7 , 0 , 3 , 0 , 0 , 1 , 8 , 2 , 0 , 0 , 4 , 0 , 5 , 0 , 0 , 0 , 7 , 0 , 0 , 0 , 1 , 0 , 3 , 0 , 0 , 0 , 8 , 0 , 0 , 0 , 2 , 0 , 6 , 0 , 0 , 1 , 8 , 5 , 0 , 0 , 6 , 0 , 9 , 0 , 0 , 0 , 2 , 0 , 0 , 0 , 8 , 0 , 3 , 0 , 0 , 6 , 4 , 0 , 0 , 0 , 7 , 0 ; int [] data2 =  6 , 0 , 0 , 1 , 0 , 0 , 0 , 5 , 0 , 0 , 4 , 0 , 0 , 0 , 2 , 0 , 0 , 3 , 0 , 0 , 3 , 0 , 5 , 0 , 1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 3 , 0 , 0 , 4 , 0 , 0 , 5 , 0 , 6 , 0 , 9 , 0 , 0 , 2 , 0 , 0 , 9 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 6 , 0 , 8 , 0 , 7 , 0 , 0 , 3 , 0 , 0 , 7 , 0 , 0 , 0 , 6 , 0 , 0 , 2 , 0 , 0 , 0 , 6 , 0 , 0 , 1 ; int [] data3 =  3 , 2 , 0 , 0 , 0 , 0 , 7 , 0 , 0 , 0 , 0 , 9 , 8 , 0 , 0 , 3 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 6 , 0 , 0 , 2 , 0 , 5 , 0 , 0 , 0 , 9 , 0 , 0 , 3 , 0 , 4 , 0 , 0 , 0 , 0 , 0 , 2 , 0 , 7 , 0 , 0 , 3 , 0 , 0 , 0 , 4 , 0 , 1 , 0 , 0 , 7 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 6 , 0 , 0 , 2 , 5 , 0 , 0 , 0 , 0 , 4 , 0 , 0 , 0 , 0 , 8 , 6 ; int [] data4 =  4 , 5 , 0 , 0 , 0 , 0 , 0 , 0 , 6 , 0 , 0 , 3 , 0 , 0 , 1 , 0 , 0 , 7 , 0 , 0 , 0 , 0 , 2 , 3 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 4 , 0 , 2 , 5 , 0 , 0 , 0 , 9 , 3 , 0 , 2 , 1 , 0 , 0 , 0 , 8 , 1 , 0 , 7 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5 , 8 , 0 , 0 , 0 , 0 , 9 , 0 , 0 , 7 , 0 , 0 , 8 , 0 , 0 , 7 , 0 , 0 , 0 , 0 , 0 , 0 , 6 , 4 ; int [] data5 =  0 , 0 , 4 , 0 , 5 , 0 , 0 , 6 , 0 , 0 , 6 , 0 , 1 , 0 , 0 , 8 , 0 , 9 , 3 , 0 , 0 , 0 , 0 , 7 , 0 , 0 , 0 , 0 , 8 , 0 , 0 , 0 , 0 , 5 , 0 , 0 , 0 , 0 , 0 , 4 , 0 , 3 , 0 , 0 , 0 , 0 , 0 , 6 , 0 , 0 , 0 , 0 , 7 , 0 , 0 , 0 , 0 , 2 , 0 , 0 , 0 , 0 , 6 , 1 , 0 , 5 , 0 , 0 , 4 , 0 , 3 , 0 , 0 , 2 , 0 , 0 , 7 , 0 , 1 , 0 , 0 ; int [] data6 =  0 , 0 , 0 , 0 , 0 , 4 , 0 , 0 , 7 , 0 , 0 , 8 , 5 , 0 , 1 , 0 , 0 , 4 , 0 , 5 , 0 , 0 , 0 , 0 , 2 , 8 , 0 , 0 , 7 , 0 , 4 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 9 , 0 , 3 , 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 8 , 0 , 7 , 0 , 0 , 2 , 4 , 0 , 0 , 0 , 0 , 6 , 0 , 8 , 0 , 0 , 1 , 0 , 2 , 3 , 0 , 0 , 5 , 0 , 0 , 8 , 0 , 0 , 0 , 0 , 0 ; int [] data7 =  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 7 , 8 , 3 , 0 , 0 , 0 , 0 , 0 , 0 , 5 , 0 , 0 , 2 , 6 , 4 , 0 , 0 , 0 , 2 , 6 , 0 , 0 , 0 , 7 , 0 , 0 , 4 , 0 , 0 , 0 , 0 , 0 , 8 , 0 , 0 , 6 , 0 , 0 , 0 , 3 , 2 , 0 , 0 , 0 , 2 , 8 , 4 , 0 , 0 , 5 , 0 , 0 , 0 , 0 , 0 , 0 , 9 , 6 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ; int [] data8 =  6 , 0 , 0 , 0 , 0 , 0 , 5 , 4 , 0 , 0 , 3 , 0 , 0 , 2 , 7 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 9 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5 , 3 , 0 , 0 , 4 , 0 , 0 , 0 , 8 , 0 , 0 , 2 , 6 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 8 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 4 , 6 , 0 , 0 , 7 , 0 , 0 , 5 , 9 , 0 , 0 , 0 , 0 , 0 , 2 ; int [] data9 =  0 , 7 , 0 , 0 , 1 , 0 , 0 , 9 , 0 , 9 , 0 , 0 , 8 , 0 , 0 , 0 , 0 , 7 , 0 , 0 , 3 , 0 , 0 , 0 , 0 , 0 , 6 , 0 , 4 , 0 , 0 , 0 , 1 , 5 , 0 , 0 , 0 , 3 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 2 , 7 , 0 , 0 , 0 , 6 , 0 , 5 , 0 , 0 , 0 , 0 , 0 , 6 , 0 , 0 , 6 , 0 , 0 , 0 , 0 , 5 , 0 , 0 , 2 , 0 , 8 , 0 , 0 , 2 , 0 , 0 , 7 , 0 ; int [] data10 =  2 , 0 , 0 , 6 , 7 , 0 , 0 , 0 , 0 , 0 , 0 , 6 , 0 , 0 , 0 , 2 , 0 , 1 , 4 , 0 , 0 , 0 , 0 , 0 , 8 , 0 , 0 , 5 , 0 , 0 , 0 , 0 , 9 , 3 , 0 , 0 , 0 , 3 , 0 , 0 , 0 , 0 , 0 , 5 , 0 , 0 , 0 , 2 , 8 , 0 , 0 , 0 , 0 , 7 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 4 , 7 , 0 , 8 , 0 , 0 , 0 , 6 , 0 , 0 , 0 , 0 , 0 , 0 , 5 , 3 , 0 , 0 , 8 ; printResult(( new Unique(data0)).print().sol()); printResult(( new Unique(data1)).print().sol()); printResult(( new Unique(data2)).print().sol()); printResult(( new Unique(data3)).print().sol()); printResult(( new Unique(data4)).print().sol()); printResult(( new Unique(data5)).print().sol()); printResult(( new Unique(data6)).print().sol()); printResult(( new Unique(data7)).print().sol()); printResult(( new Unique(data8)).print().sol()); printResult(( new Unique(data9)).print().sol()); printResult(( new Unique(data10)).print().sol());  "},"java/examples/tax-calculate.html":{"title":"","path":"/java/examples/tax-calculate.html","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 /* * Program Name: Tax.java * Purpose: 計算所得稅(程設二作業) * Author: Shiuh-Sheng Yu * Department of Information Management * Date: 03/24/2000 * Last Update: 03/29/2000 */ import java.io.*; public class Tax  public static long calTax ( long income)  long [] range =  300000 , 300000 , 400000 , 600000 , 800000 , 1000000 , Long.MAX_VALUE; double [] rate =  0 , 0.06 , 0.13 , 0.21 , 0.30 , 0.45 , 0.6 ; double tax = 0 ; int i; for (i = 0 ; income  range[i]; income -= range[i++])  tax += range[i] * rate[i];  tax += income * rate[i]; return ( long )(tax+ 0.5 );  public static long readIncome (InputStreamReader in)  StringBuffer sb = new StringBuffer(); long income = 0 ; char c; try  while ((c=( char )in.read())!= '\\n' &amp;&amp; c!= '\\r' )  sb.append(c);  income = Long.valueOf(sb.toString()).longValue();  catch (IOException ioe)  System.out.println( \"讀入錯誤\" );  catch (NumberFormatException nfe)  System.out.println( \"格式錯誤:資料不為整數\" );  catch (Exception e)   return income;  public static void main (String[] argv)  InputStreamReader in = new InputStreamReader(System.in); System.out.print( \"請輸入您今年的所得:\" ); long income = readIncome(in); System.out.println( \"您今年需繳的所得稅為:\" +calTax(income)+ \"元\" );  "},"java/examples/tower-of-hanoi.html":{"title":"","path":"/java/examples/tower-of-hanoi.html","body":"Hanoi.html Hanoi.java ：An applet shows how to solve Hanoi tower problem Pile.java ：Maintain and render a pile of disks AddConstraint.java ：GridBagLayout輔助類別，簡化GridBagLayout的使用 1 2 3 4  html   applet code = \"Hanoi.class\" width = 300 height = 300  / applet  / html  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 /** * Program Name: Hanoi.java * Subject: An applet shows how to solve Hanoi tower problem * Author: 俞旭昇 Shiuh-Sheng Yu * Department of Information Management * Edit Date: 3/20/1999 * Last Update Date: 3/21/1999 * Toolkit: JDK1.1.7B */ import java.applet.Applet; import java.awt.*; import java.awt.event.*; public class Hanoi extends Applet implements ActionListener , Runnable  TextField input; Pile a= null , b= null , c= null ; Panel display; int size; // Setup GUI public void init ()  this .setLayout( new GridBagLayout()); AddConstraint.addConstraint( this , new Label( \"Enter integer and press Enter:\" ), 0 , 1 , 1 , 1 , GridBagConstraints.NONE, GridBagConstraints.WEST, 0 , 0 , 0 , 0 , 0 , 0 ); AddConstraint.addConstraint( this , input = new TextField( 10 ), 1 , 1 , 1 , 1 , GridBagConstraints.HORIZONTAL, GridBagConstraints.WEST, 1 , 0 , 0 , 0 , 0 , 0 ); input.addActionListener( this ); AddConstraint.addConstraint( this , display = new Panel(), 0 , 0 , 2 , 1 , GridBagConstraints.BOTH, GridBagConstraints.CENTER, 1 , 1 , 0 , 0 , 0 , 0 ); display.setLayout( new GridLayout( 1 , 3 )); input.requestFocus();  // process user's action in TextField input public void actionPerformed (ActionEvent e)  try  size = Integer.parseInt(e.getActionCommand()); if (size  0 )  display.removeAll(); // 清掉前一次的元件 display.add(a = new Pile(size)); display.add(b = new Pile( 0 )); display.add(c = new Pile( 0 )); display.validate(); // Ensures that this component has a valid layout. // Creates a thread to move our disks. // So that we can return control back immediately to window system. ( new Thread( this )).start();   catch (NumberFormatException ex)  // not a number in TextField input.setText( \"\" );   // starts to move disks public void run ()  move(size, a, b, c);  // recursively solve the Hanoi problem private void move ( int n, Pile from, Pile to, Pile free)  if (n  0 )  move(n- 1 , from, free, to); to.push(from.pop()); try  // sleep 1 second to let users see what happened Thread.currentThread().sleep( 1000 );  catch (InterruptedException ex)   move(n- 1 , free, to, from);    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 /* Program Name: Pile.java Subject: Maintain and render a pile of disks Author: 俞旭昇 Shiuh-Sheng Yu National ChiNan University Department of Information Management Edit Date: 03/20/1999 Last Update Date: 03/21/1999 ToolKit: JDK1.1.7B */ import java.awt.*; public class Pile extends Canvas  private int top; private int [] data; /** * @param initDisks 一開始的碟子數 */ public Pile ( int initDisks)  super (); top = 0 ; data = new int [ 100 ]; for ( int i = initDisks; i  0 ; i--)  data[top++] = i;   /** * Push a disk of size n to this pile. This method enfoces screen update ASAP. * @param size the size of the disk */ public void push ( int size)  data[top++] = size; repaint();  /** * Pop out a disk. This method enfoces screen update ASAP. * @return size of the disk on top of the pile */ public int pop ()  top--; repaint(); return (data[top]);  /** * Draw disks of the pile on Graphics g */ public void paint (Graphics g)  // getSize is define in Component int x = getWidth()/ 2 ; int y = getHeight(); // 設為藍色 g.setColor(Color.blue); // 畫出填滿的長方形, 當作柱子 g.fillRect(x- 2 , 0 , 4 ,y- 2 ); g.setColor(Color.red); // 畫出碟子 for ( int i= 0 ; itop; i++)  g.fillRect(x - 5 * data[i], y - 5 * (i + 1 ), 10 * data[i], 3 );    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 /* Program Name: AddConstraint.java Subject: GridBagLayout輔助類別 Author: 俞旭昇 Shiuh-Sheng Yu National ChiNan University Department of Information Management Edit Date: 06/14/1997 Last Update Date: 10/28/1997 ToolKit: JDK1.1.7 */ import java.awt.*; /** * 此類別是用來簡化GridBagLayout的使用, 在Java Tutorial這本書內可以找到相關資料 */ public class AddConstraint  /** * Set component position in a container whose layout manager is GridBagLayout. * @param container The container to be put in * @param component The component put in container * @param grid_x X coordinate * @param grid_y Y coordinate * @param grid_width Width * @param grid_height Height * @param fill Fill police when container is resized * @param anchor Ancho position when container is resized * @param weight_x Width expansion ratio when container is resized. 1 for 100% * @param weight_y Height expansion ratio when container is resized. 1 for 100% * @param top Gap with above components in points * @param left Gap with left components in points * @param bottom Gap with below components in points * @param right Gap with right components in points * @return void */ public static void addConstraint (Container container, Component component, int grid_x, int grid_y, int grid_width, int grid_height, int fill, int anchor, double weight_x, double weight_y, int top, int left, int bottom, int right)  GridBagConstraints c = new GridBagConstraints(); c.gridx = grid_x; c.gridy = grid_y; c.gridwidth = grid_width; c.gridheight = grid_height; c.fill = fill; c.anchor = anchor; c.weightx = weight_x; c.weighty = weight_y; c.insets = new Insets(top,left,bottom,right); ((GridBagLayout)container.getLayout()).setConstraints(component,c); container.add(component);  "}}}